# https://circleci.com/docs/2.0/language-python/
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.8
      - image: circleci/postgres:12.6
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: circleci/redis:5.0.9

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies and setup database
          command: |
            export DATABASE_URL=postgres://circleci:@localhost/circle_test
            python3 -m venv venv
            . venv/bin/activate
            pip install -U pip setuptools
            pip install -r requirements.txt
            python manage.py migrate --noinput
            python manage.py collectstatic

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            export DATABASE_URL=postgres://circleci:@localhost/circle_test
            export REDIS_URL=redis://localhost:6379
            python manage.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports
